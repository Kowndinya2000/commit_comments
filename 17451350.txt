    Remove fontconfig from dependencies
    Don't actually need itstool, xgettext is enough.
    Revert "Rework po generation a bit. This removes the dependency on itstool."
    
    This reverts commit e7181bf03304459693a8eac1a8f514de2448010a.
    Remove libzip from dependencies
    Rework po generation a bit. This removes the dependency on itstool.
    Fixed mission libsdl2-mixer-dev dep.
    Nightly Build -> Nightly Release
    Documented how to update PO files in the readme.
    
    Fixes #1190
    Added CI status badges
    added autoconf-archive to ubuntu install list
    Added itstool to ubuntu dependencies
    Update Readme.md
    Readme
    Update Readme.md
    
    During compilation, the configure process failed due to missing development libraries for fontconfig. Add libfontconfig-dev to Ubuntu apt install line.
    * changed Readme.md links to new wiki
    Update libpng dependency in Readme.md
    Improve dependency information.
    Added windows compilation information to redame.
    Added ubuntu dependencies to readme.
    Travis CI build on macOS
    Codeblock in readme.
    Readme updates.
    Markdown readme for github.
    Apparently, we do have a dependency on the README being called README. For consistency with other files I'll restore it as it was.
    Changed horribly obsolete readme to some more simple markdown.
    Fix data files not installing to $DESTDIR on "make install"
    
    Before this commit, the dat/ folder destined for /usr/share/naev would
    attempt to install there even when a DESTDIR was given to "make
    install". Other files obey DESTDIR as expected.
    Moved AUTHORS to dat/AUTHORS.
    Create dat/VERSION instead of VERSION.
    Fix install paths for icons and metadata
    Cleaned up makefiles to provide data target.
    Use data target with steam.
    Update names of desktop and appstream xml files.
    Fixed '\r' leaking into filenames with xargs.
    since it failed anyway, going with easier solution
    wits end
    Use itstool if available, if not, fall back to xgettext.
    PO changes required for Meson.
    
    - update-po.sh generates a combined POTFILES.in for Meson to consume, since Meson doesn't seem to have any performance issues that justify the extra complexity of two generation steps.
    - update-po.sh always puts XML files at the end of POTFILES*. This removes sorting as a point of variance between AutoTools and Meson.
    - update-po.sh takes the source root directory as a parameter (default cwd). This supports Meson's out of tree builds.
    - Moves `po/translation.its` into `po/its/`. This allows the use of an XML locator file required for Meson's combined code/XML gettext processing.
    - Adjusts AutoTools to produce file names relative to the source root in .po files. Aside from being cleaner, this matches Meson's behaviour making it easier to compare the output of the two systems.
    Support for mak einstall with ndata and can also run with installed ndata.
    Added new data files to CLEANFILES.
    Don't silence cp
    Copy license file and authors file to data.
    More $(top_srcdir)
    Generate po/POTFILES_XMl and read from that for xml files.
    Print order.
    Cleaned up variables.
    Removed GETTEXTDATADIRS
    Properly compile gettext stuff.
    Revert "Rework po generation a bit. This removes the dependency on itstool."
    
    This reverts commit e7181bf03304459693a8eac1a8f514de2448010a.
    Try to make pots properly.
    Remove libzip from dependencies
    Make dat/VERSION.
    I hate autotools. Got a horribly hacky translation thing "working"?
    Rework po generation a bit. This removes the dependency on itstool.
    Edited Makefile.am so that it distributes dat/, and removed ndata stuff.
    Build soundtrack using script from yaml.
    Added simple rules to make the soundtrack. Still have to change the order and include licensing information.
    Make building parts of the code conditional on having data.
    More robust checks for cross-compiling.
    Whitespace.
    Fixed the relative directory path of dat/LANGUAGES when generated to allow out of tree compilation.
    Use wildcard for xml files instead of hardcoded paths for OOT compilation.
    Don't show XMLPOT target when NLS is disabled.
    Made po subdirs conditional on HAVE_NLS.
    Made itstool check error out.
    Disable translation stuff when compiling without translations.
    Tweaked makefile dependencies.
    Added translation targets for ALL the xml.
    More translation thoughout the game.
    No need to add package line.
    Compile naev.pot
    Allow overriding default language.
    Initial internationalization support with partial Japanese support.
    Updated makefile documentation: ndata -> ndata.zip
    * Install appdata.
    Don't use redirection to create ndata
     - fixes bug where make ndata fails and an empty file is created
    Use "ndata.zip" instead of "ndata" for clarity
    zip up ndata with make install
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Mention dist-gzip too.
    * Condition VERSION file on src/config.h
    Handle odd characters when building pack's arg list.
    Hopefully solves shell arg length limits as well.
    Pack the update script into the ndata.
    Install the config migration script alongside the ndata, and also pack it into the source tarball.
    * Patch by Paul Wise to allow installing of ndata when shave is disabled.
    * More correctness.
    * mkspr should compile properly now.
    * Attempt two to build resource file on windows.
    * Use resource file when compiling on windows.
    * VERSION is not phony and make it always.
    Improved make install for packagers - now installs a .desktop and an icon.
    Improved make install for packagers - now installs a .desktop and an icon.
    * By popular demand aded extras/ to dist_doc_DATA.
    * By popular demand aded extras/ to dist_doc_DATA.
    * A cleaner way of doing the last commit.
    * Always update VERSION file.
    Use an m4 include directory instead of putting everything in aclocal.m4
    Build system bugfixes
    
    • don't try to build ndata by default
    • check the Git commit ID even when building from an external directory
    Don't use shave QUIET_ variables in Makefile.am
    
    They don't give any output when V=1, so it's better to always echo the
    shave-like version.
    Link “src/naev” to “naev” after building
    Use $(SED) instead of sed in Makefile.am
    Fixed installing docs and updated “make help”.
    Added checks for source tarball vs source from repo.
    Minor Makefile.am fixes.
    Added help target and uninstall hook in Makefile.am.
    Added support for making ndata from an external build directory.
    Add support for installing ndata on “make install”.
    Removed version from configure references to ndata.
    Fixed missing files when creating ndata.
    Added makefile rule for creating ndata.
    * Autotools support by Unavowed.
    Removed redundant and wrongly formatted entry (seems to be a leftover)
    CHANGELOG
    Made changelog not having period at the end consistent.
    Spacing.
    CHANGELOG
    CHANGELOG
    Mention aiming helper
    Removed CPU indication from the Info screen.
    
    It's not useful while out in space.
    Indiv. escort command note
    Mentioned slow mode in changelog
    Changelog
    Changelog
    added solar system map to CHANGELOG
    Added a mention of the shiplog to CHANGELOG
    Noted the system map
    Noted these changes
    CHANGELOG
    CHANGELOG
    CHANGELOG
    Noted NPC portraits on changelog.
    Changelog
    added warning for polygon length (and added new collision algo to changelog)
    Updated CHANGELOG
    Updated the changelog.
    Updated the changelog.
    Changelog
    Added more to the changelog
    Mention brushed GUI in CHANGELOG
    * Added changelog to keep track of major changes for when preparing releases.
    Remove fontconfig from dependencies
    apparently we had an nfile_dirname...
    fixed dirname check.
    Use dirname if possible to get the translation stuff.
    comment
    Scale back gettext version to support steam.
    Use itstool if available, if not, fall back to xgettext.
    Support for mak einstall with ndata and can also run with installed ndata.
    Removed old ndata stuff.
    Don't actually need itstool, xgettext is enough.
    Removed GETTEXTDATADIRS
    Properly compile gettext stuff.
    Revert "Rework po generation a bit. This removes the dependency on itstool."
    
    This reverts commit e7181bf03304459693a8eac1a8f514de2448010a.
    AM_PO_SUBDIRS not needed
    Need gettext 0.19.8
    Remove libzip from dependencies
    Use _putenv_s when possible and setenv is not available.
    Use putenv instead of setenv when setenv is not supported.
    Rework po generation a bit. This removes the dependency on itstool.
    Version bump to 0.8.0-beta3.
    Make building parts of the code conditional on having data.
    More robust checks for cross-compiling.
    Added -Werror to check for compiler flags so it works with clang.
    0.8.0-beta2
    revert
    wrong package
    perhaps this will help with opengl builds
    Properly check for shaders generation file when doing out of tree compiles.
    Made itstool check error out.
    Disable translation stuff when compiling without translations.
    Added translation targets for ALL the xml.
    More translation thoughout the game.
    check
    makevars not necessary
    Makevars
    configure
    properly define AC_INIT
    use -Wformat-truncation=0 only if supported.
    Tweaked cflags.
    Avoid += in configure.ac
    Made checks add x in configure.ac
    Seems like the custom CFLAG check has been broken for a while. Added back all the super warnings.
    properly add localedir
    Pass localedir as compilation flag.
    * Added gettext.h
    * Define LOCALEDIR in configuration file.
    * Bind to gettext using variables.
    gettext stuff should set the package name properly
    Remove comments.
    change to pkg check module
    
    properly reports if openal is available or not now.. I think.
    Don't distribute src/shaders_c_gen.c and only compile it if it exists.
    Version bump to 0.8.0-beta1.
    Fixed some checks.
    Check to see if stdalign.h is available and use it when possible.
    Link libdl, which glad expects
    Remove SDL1 compatibility -D CLAGS, and sed so they aren't used
    Remove SDL1 related code from configure.ac
    Port mkspr from SDL1 to SDL2
    
    I don't entirely understand what's going on here, but I copied the
    changes from the naev code.
    Print host triple as part of startup log
    Allow building without fontconfig
    Should build on travis and other systems now.
    Use macOS-specific user directories.
    Deploy to bintray
    
    This changes GIT_COMMIT to always be the short rev only. This is more
    consistent across shallow clones, which Travis does.
    Refer to macOS as 'macOS' everywhere
    Travis CI build on macOS
    Check for setlocale.
    Don't enforce minimum gettext.
    Allow older gettext (no idea what version should be allowed though...)
    Initial internationalization support with partial Japanese support.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Naev 0.7.0.
    Show sdl-mixer as no when compiling expcilitly without.
    Show if libzip is used after ./configure
    Make it possible to compile without libzip
    Make configure test for ldoc instead of luadoc
    * Version bump.
    Fix LUA_CFLAGS when using luajit
    
    This was creating a value of "-I/usr/include/luajit-2.0-DHAVE_LUAJIT"
    for LUA_CFLAGS, which did not work correctly. I noticed this after
    starting again from a clean build tree. I don't know how it managed to
    build before.
    Fix LUA_CFLAGS when using luajit
    
    This was creating a value of "-I/usr/include/luajit-2.0-DHAVE_LUAJIT"
    for LUA_CFLAGS, which did not work correctly. I noticed this after
    starting again from a clean build tree. I don't know how it managed to
    build before.
    Refer to LuaJIT as "LuaJIT" consistently
    Use luajit by default
    
    Luajit provides noticeably better performance with no real disadvantage.
    Add -Wformat, needed by -Wformat-security
    * Added -Wformat-security to CFLAGS by default.
    * Version bump to 0.6.0.
    * Version bump to 0.6.0-beta2.
    Use SDL2 by default
    * Put lua last just in case system has 5.3 by default.
    Convert Lua tests into a for loop
    Check for alternative Lua package name
    * naev 0.6.0-beta1 version bump.
    * Use SDL2_mixer with SDL2.
    Fix improper var name that was preventing mkspr from being built
    Correct configure documentation due to SDL 1.2 being default
    Remove pack. It is no longer used
    * -lz should be provided by libzip dep now.
    * Properly test for libzip.
    added nzip.c
    Bring back original autoconf check for OpenGL.
    Skip check for csparse headers if library not found.
    
    Previous behavior was to check for the system csparse header files
    regardless of whether the library was found or not. This led to a linker
    failure when a system header was present, even when `configure` tried to
    use the internal csparse library.
    Remove compiler flags for unnecessary GLU.
    * Don't actually need glu when compiling.
    Use default "not-found" behavior for pkg-config.
    
    By default, pkg-config will fail with a detailed error message if a
    package is not found; we do not need to specify our own handler.
    Use pkg-config to check for OpenGL and SDL_mixer.
    Check for sqrt(3), required for system csparse.
    * SDL2 should definately not be the default as it's pretty broken still it seems.
    * Added VORBS check to autotools.
    * Added -lm on linux as it seems necessary on arch.
    Fix automake forward-incompatibility.
    * Changed SDL_CONFIG to SDL2_CONFIG thus not needing to unset the cached variable (submitted bug report to SDL2 also).
    * Fixed no SDL2 but yes SDL not detecting SDL.
    * Also use SDL_image properly with SDL2 (although we don't really use it...)
    * Properly use SDL_mixer with SDL2.
    * Added sdl and sdl2 m4s.
    * Disable mkspr with SDL2.
    * Fixed some warnings due to behaviour changes with sdl2-config.
    * Added hackish SDL2 flags to configure script.
    * Initial work to get everything running on SDL2.
    * libbfd needs -lz.
    * Version bump to 0.6.0.
    * Naev 0.5.3.
    * Version bump.
    * Version bump.
    * XDG patch by aanderson.
    user data should go into $XDG_DATA_HOME (.local/share by default)
     - .naev/saves -> ~/.local/share/naev/saves
     - .naev/screenshots -> ~/.local/share/naev/screenshots
    
    user preferences should go into $XDG_CONFIG_HOME (.config by default)
     - .naev/conf.lua -> ~/.config/naev/conf.lua
     - .naev/conf.lua.backup -> ~/.config/naev/conf.lua.backup
    
    cached data should go to $XDG_CACHE_HOME (.cache by default)
     - .naev/gen -> ~/.cache/naev
    * Looks like -ldl is now needed...
    * Version bump to 0.5.0.
    * Coding before noon is now deemed illegal for bobbens.
    * Fixed issues with libraries doing strange stuff reported by /dev/random.
    * Version change to 0.5.0-beta2.
    Only generate lua/csparse Makefiles when they are being used.
    Fix the detection of external CSparse libraries
    Remove duplicate setting of LUA_CFLAGS/LUA_LIBS
    Also support distributions that version their lua pkgconfig files
    Do not recurse into the embedded csparse dir when using external version
    * Try to use shared csparse if available.
    * You can now either use internal, shared or luajit as implementations of Lua.
    * Changed wording in configure Lua stuff.
    * Warn when lua is disabled and luajit is unavailible.
    * Internal lua is enabled by default, can be disabled with --without-lua.
    * Use Lua JIT if it's available.
    * Try to fix the bloody credits mess.
    * Added -liberty, tell me if it breaks.
    * Create makefile for utils.
    * Pack should compile again.
    * Shut up some autogen.sh warnings.
    * More correctness.
    * Changed how the if is handled in configure.ac.
    * mkspr should compile properly now.
    * Removed unneeded stuff.
    * Patch by Noyga to compile properly on fedora.
    * Option to change preference direction (default ~/.naev) by Noyga.
    * Finally properly incorporated windres to the build system.
    * Use resource file when compiling on windows.
    * Version bump to 0.5.0-beta1 (not released yet, but we're getting there).
      It just makes more sense to show the version of target release instead of
      last release.
    * NAEV now also prints everything to it's internal console.
    * Added pretty pointless warning.
    * Added -Wredundant-decls and fixed all new warnings.
    * BFD should now work fully independent of debugging.
    * BFD is no longer a requirement for DEBUGGING.
    * No longer using SDL_image.
    * npng.c now handles PNG file loading and the likes.
    * Bumping version to 0.4.2.
    * Version bump to 0.4.1.
    Fix automatic rebuilding after a static library has changed
    * I don't think windows like -ansi.
    * -fstack-protector isn't available on all platforms.
    * Temporary hack until unavowed fixes the configure.ac.
    Don't use -O2 by default in debug mode
    Require bfd.h on GNU/Linux in debug mode
    Require libbfd on GNU/Linux in debug mode
    Moved OpenAL detection to a separate file
    Make opengl.m4 more consistent with other aclocal scripts
    Add better OpenGL detection
    Use an m4 include directory instead of putting everything in aclocal.m4
    Use “--tags” with “git describe”
    
    Or otherwise it will only consider annotated tags.
    Build system bugfixes
    
    • don't try to build ndata by default
    • check the Git commit ID even when building from an external directory
    Link “src/naev” to “naev” after building
    Define GIT_COMMIT when building from a Git repository
    * I think autoconf 2.61 should work (no need for 2.63). Need to confirm.
    Updated configure to check for SDL more strictly.
    Fixed util/pack CFLAGS/LIBS on Windows.
    Updated configure to link with wsock32 on Windows.
    Added -rdynamic to linker flags on GNU/Linux.
    Cleaned up saving and restoring CFLAGS/LIBS in configure.
    Use ov_read if ov_read_filter is not available.
    Fixed OpenAL detection on Windows and cleaned up configure.
    Fixed OpenGL detection on Windows.
    Fixed two minor bugs in configure.ac.
    Added checks for source tarball vs source from repo.
    Check for doxygen/luadoc before generating docs.
    Fixed building on Mac OS X.
    Made configure.ac more reliable when expanding variables.
    Modified configure.ac to use debug mode by default.
    Fixed missing feenableexcept linker errors.
    Fixed typo in configure.ac.
    Added debug mode to configure status output.
    Added support for making ndata from an external build directory.
    Add support for installing ndata on “make install”.
    Removed version from configure references to ndata.
    Added OS and ndata defines to configure.
    Added configure options for selecting sound backends.
    Fixed configure.ac reference to build/shave.in.
    Added shave to autotools for a cleaner output.
    * Autotools support by Unavowed.
    Minimalistic readme for package.
    Apparently, we do have a dependency on the README being called README. For consistency with other files I'll restore it as it was.
    Changed horribly obsolete readme to some more simple markdown.
    Make appstreamcli happy
    Add attributes.h for portable attribute macros
    Add .clang-format
    Remove fontconfig from dependencies
    No need to move AUTHORS/VERSION over anymore.
    Made workflows work with dat/VERSION.
    Cleaned up makefiles to provide data target.
    Use data target with steam.
    Have windows use itstool with github actions.
    Don't actually need itstool, xgettext is enough.
    Revert "Rework po generation a bit. This removes the dependency on itstool."
    
    This reverts commit e7181bf03304459693a8eac1a8f514de2448010a.
    Remove libzip from CI
    Rework po generation a bit. This removes the dependency on itstool.
    More POT -> pot
    Remove luajit from builds.
    I guess macos is different?
    change title
    Fix macos output
    Update releases
    remove references to win64.zip
    Remove 32bit runners and bundle data
    Named beta workflow pre-release instead of release.
    Have workflows look for semvar tags.
    Use semvar syntax (e.g., 0.8.0-beta.2 instead of 0.8.0-beta2)
    Update with Steam deployment step
    Update to only trigger on push tag event
    Missed unused step
    Picked a name that can allow for alphas etc.
    Configure workflows for prime-time.
    Allow test release to be created
    I'm not pushing to master..
    modify workflows to test them.
    Create automated release workflows.
    This will fail if attempted to be installed
    moved some deps around
    Configure schedule.
    Welp. I haven't crosscompiled in a while
    Add 32bit support to dpkg
    Added some missing deps.
    Added 32bit build test
    Added step as LANGUAGES was not being generated
    Update naev_nightly.yml
    
    Turns out that I accidentally left an extra variable in when uploading the release.
    
    The initial reason I added an additional check is so that forks don't create their own releases automatically.
    
    Since there is no push even when a release is created, nothing is done.
    moved distcheck to separate step
    Added distcheck and accompanying message
    Fixed syntax
    Fixed missing portion of filename
    Disable debug in Linux builds, bfd is problematic.
    Actually add scripting for generating the source.
    Add source bzip2 to nightly release.
    Missing quotes.
    Do not create release if repo is cloned
    Change to nightly schedule.
    fix macos artifacts
    Missing fontconfig dep for mingw
    temporary trigger to test.
    Add zipped releases for windows, and fix release
    Add additional dependency for mingw-ldd
    Update names, update run time
    Speak of the devil, this should be the final thing
    This better be the last commit related to this.
    Another change to paths
    fix path
    Collect Artifacts and deploy release.
    Add nightly flag
    Update artifact names.
    Choose basic names as they will be renamed later
    Remove checkout for repo.
    Going in with a fresh look.
    Fix path issues
    Revert
    Removed automatic tag creation, as this..
    
    Would make clobbering an issue.
    this should fix build issues, as I misused
    github.ref
    Fix formatting
    removed newline
    test another action for nightly updates
    Missing GLU
    tell linker to statically link
    enable static link
    meh not worth it
    Wrong host and build systems.
    Not building with debug enabled anyways.
    I sure hope I read that stackoverflow article righ
    t
    My hat lives for another day.
    temporary change so I can test changes.
    If it's this easy I'll eat my hat.
    Update timing and disabled static builds
    Adjusted test
    Just another test
    Just a test schedule time
    Initial version of basic nightly builds
    Do not use preinstalled MSYS2
    Reverted dependencies
    Added missing libxml2 dependency
    Might have something to do with the mingw versi...
    ...on of itstool
    Add msys2 Git
    Disable autocrlf
    Cleaned up MinGW deps (hopefully)
    Still not sure what I'm doing wrong..
    disable updates for sake of speed.
    Remove libxml2-devel
    Enable updates, something is causing libxml2 to
    
    ...not be found by itstool
    Was a bit overzealous on the removal of packages.
    Use already installed version of MSYS
    Install correct version of libxml2
    Disable MSYS updates
    Remove "Install Perl Dependencies" step
    This does not make me happy
    I think I am onto something.
    
    https://github.com/synfig/synfig/issues/794#issuecomment-479560192
    
    I think GitHub preinstalls perl in homebrew, which does not include XML::Parser by default.
    Remove duplicate package from i868 MSYS install
    Revert changes, not sure how to fix.
    Use older version of XCode
    Use Homebrew keg instead of system libxml2
    More xcode changes
    Use older version of xcode to fix perl issues.
    This may fix the Perl dependency issue.
    An attempt to speed things up.
    I think this is all of the missing deps.
    Commented out luadocs upload
    Added CI config for Github Actions
    Remove fontconfig from dependencies
    No need to move AUTHORS/VERSION over anymore.
    Made workflows work with dat/VERSION.
    Cleaned up makefiles to provide data target.
    Use data target with steam.
    Have windows use itstool with github actions.
    Don't actually need itstool, xgettext is enough.
    Revert "Rework po generation a bit. This removes the dependency on itstool."
    
    This reverts commit e7181bf03304459693a8eac1a8f514de2448010a.
    Remove libzip from CI
    Rework po generation a bit. This removes the dependency on itstool.
    More POT -> pot
    Remove luajit from builds.
    Remove testing stuff
    I guess macos is different?
    change title
    Fix macos output
    Fix path to soundtrack.zip
    test release
    Add make VERSION
    modify to run on ubuntu runner
    testing time
    Update releases
    remove references to win64.zip
    Remove 32bit runners and add Soundtrack
    Add additional soundtrack generation step.
    Have workflows look for semvar tags.
    Use semvar syntax (e.g., 0.8.0-beta.2 instead of 0.8.0-beta2)
    Update with Steam deployment step
    Update to only look for a push and tag event
    Missed unused step
    Configure workflows for prime-time.
    Allow test release to be created
    I'm not pushing to master..
    modify workflows to test them.
    Create automated release workflows.
    This will fail if attempted to be installed
    moved some deps around
    Configure schedule.
    Welp. I haven't crosscompiled in a while
    Add 32bit support to dpkg
    Added some missing deps.
    Added 32bit build test
    Added step as LANGUAGES was not being generated
    Update naev_nightly.yml
    
    Turns out that I accidentally left an extra variable in when uploading the release.
    
    The initial reason I added an additional check is so that forks don't create their own releases automatically.
    
    Since there is no push even when a release is created, nothing is done.
    moved distcheck to separate step
    Added distcheck and accompanying message
    Fixed syntax
    Fixed missing portion of filename
    Disable debug in Linux builds, bfd is problematic.
    Actually add scripting for generating the source.
    Add source bzip2 to nightly release.
    Missing quotes.
    Do not create release if repo is cloned
    Change to nightly schedule.
    fix macos artifacts
    Missing fontconfig dep for mingw
    temporary trigger to test.
    Add zipped releases for windows, and fix release
    Add additional dependency for mingw-ldd
    Update names, update run time
    Speak of the devil, this should be the final thing
    This better be the last commit related to this.
    Another change to paths
    fix path
    Collect Artifacts and deploy release.
    Add nightly flag
    Update artifact names.
    Choose basic names as they will be renamed later
    Remove checkout for repo.
    Going in with a fresh look.
    Fix path issues
    Revert
    Removed automatic tag creation, as this..
    
    Would make clobbering an issue.
    this should fix build issues, as I misused
    github.ref
    Fix formatting
    removed newline
    test another action for nightly updates
    Missing GLU
    tell linker to statically link
    enable static link
    meh not worth it
    Wrong host and build systems.
    Not building with debug enabled anyways.
    I sure hope I read that stackoverflow article righ
    t
    My hat lives for another day.
    temporary change so I can test changes.
    If it's this easy I'll eat my hat.
    Update timing and disabled static builds
    Adjusted test
    Just another test
    Just a test schedule time
    Initial version of basic nightly builds
    Do not use preinstalled MSYS2
    Reverted dependencies
    Added missing libxml2 dependency
    Might have something to do with the mingw versi...
    ...on of itstool
    Add msys2 Git
    Disable autocrlf
    Cleaned up MinGW deps (hopefully)
    Still not sure what I'm doing wrong..
    disable updates for sake of speed.
    Remove libxml2-devel
    Enable updates, something is causing libxml2 to
    
    ...not be found by itstool
    Was a bit overzealous on the removal of packages.
    Use already installed version of MSYS
    Install correct version of libxml2
    Disable MSYS updates
    Remove "Install Perl Dependencies" step
    This does not make me happy
    I think I am onto something.
    
    https://github.com/synfig/synfig/issues/794#issuecomment-479560192
    
    I think GitHub preinstalls perl in homebrew, which does not include XML::Parser by default.
    Remove duplicate package from i868 MSYS install
    Revert changes, not sure how to fix.
    Use older version of XCode
    Use Homebrew keg instead of system libxml2
    More xcode changes
    Use older version of xcode to fix perl issues.
    This may fix the Perl dependency issue.
    An attempt to speed things up.
    I think this is all of the missing deps.
    Commented out luadocs upload
    Added CI config for Github Actions
    Remove fontconfig from dependencies
    Have windows use itstool with github actions.
    Don't actually need itstool, xgettext is enough.
    Revert "Rework po generation a bit. This removes the dependency on itstool."
    
    This reverts commit e7181bf03304459693a8eac1a8f514de2448010a.
    Remove libzip from CI
    Rework po generation a bit. This removes the dependency on itstool.
    Adjust Lua Documentation Step
    Get rid of 32bit CI
    Fixed an extra unused step, and whitespace
    Remove configure flag as bfd isn't installed.
    disable debug, as cross compiling this is a pita
    Try and get bfd working with 32bit builds.
    moved some deps around
    fix configure flags.
    Add 32-bit linux build.
    Missing quotes.
    Do not attempt to update luadocs if repo is cloned
    Replace LDoc LuaRock with distro-packaged lua-ldoc
    Add missing build dependency for MinGW
    Revert changes, adjust order at beginning of file.
    Add additional OpenGL packages
    opengl static
    Try this flag
    enablt static
    disable shared
    Static build testing
    Consistent names
    Added missing build dependencies.
    Fix ldoc generation to make bobbens happy
    
    Title.
    Turns out you need to configure in order to make :P
    
    Also of note, ldoc should be included in the PATH.
    
    In the case of the runner VM; ldoc is installed locally, therefore the local install path is added to the PATH.
    Try using makefile instead of hardcoded paths that make bobbens cry.
    luadoc.sh -> ldoc.sh
    Actually upload luadoc artifacts
    Fix Job Names
    [WIP] Update CI with Lua Documentation Check.
    Port configure flags from Travis
    should fix issues running compiled binaries
    Do not use preinstalled MSYS2
    Reverted dependencies
    Added missing libxml2 dependency
    Might have something to do with the mingw versi...
    ...on of itstool
    Add msys2 Git
    Disable autocrlf
    Cleaned up MinGW deps (hopefully)
    Still not sure what I'm doing wrong..
    disable updates for sake of speed.
    Remove libxml2-devel
    Enable updates, something is causing libxml2 to
    
    ...not be found by itstool
    Was a bit overzealous on the removal of packages.
    Use already installed version of MSYS
    Install correct version of libxml2
    Disable MSYS updates
    Remove "Install Perl Dependencies" step
    This does not make me happy
    I think I am onto something.
    
    https://github.com/synfig/synfig/issues/794#issuecomment-479560192
    
    I think GitHub preinstalls perl in homebrew, which does not include XML::Parser by default.
    Remove duplicate package from i868 MSYS install
    Revert changes, not sure how to fix.
    Use older version of XCode
    Use Homebrew keg instead of system libxml2
    More xcode changes
    Use older version of xcode to fix perl issues.
    This may fix the Perl dependency issue.
    An attempt to speed things up.
    I think this is all of the missing deps.
    Commented out luadocs upload
    Added CI config for Github Actions
    Remove fontconfig from dependencies
    No need to move AUTHORS/VERSION over anymore.
    Made workflows work with dat/VERSION.
    Cleaned up makefiles to provide data target.
    Use data target with steam.
    Have windows use itstool with github actions.
    Don't actually need itstool, xgettext is enough.
    Revert "Rework po generation a bit. This removes the dependency on itstool."
    
    This reverts commit e7181bf03304459693a8eac1a8f514de2448010a.
    Remove libzip from CI
    Rework po generation a bit. This removes the dependency on itstool.
    pot not POT
    revert changes
    Try another way of doing this
    Add ability to manually trigger nightly workflow.
    Remove luajit from builds.
    I guess macos is different?
    Fix macos output
    Set correct trigger time
    Update releases
    Was off a level
    Missed it.
    Fixed it.
    Needs direct path
    Welp.
    I missed this.
    fix linux runner path
    Might fix the path?
    Change step name
    Should fix issue with SteamRuntime linux runner
    should fix issue with tar on linux runner
    bump
    test release output.
    remove references to win64.zip
    bundle data with releases.
    Finished changes to windows installer script
    Update paths, names, and stop building with libzip
    Adjust paths and remove 32bit jobs
    Use semvar syntax (e.g., 0.8.0-beta.2 instead of 0.8.0-beta2)
    Damni it, always miss one thing.
    
    Fixes failure to generate VERSION file.
    Reconfigued schedule
    Update with Steam deployment step
    Fix unused steps and whitespace
    Modify file order
    This will fail if attempted to be installed
    moved some deps around
    Configure schedule.
    Welp. I haven't crosscompiled in a while
    Add 32bit support to dpkg
    Added some missing deps.
    Added 32bit build test
    Added step as LANGUAGES was not being generated
    Update naev_nightly.yml
    
    Turns out that I accidentally left an extra variable in when uploading the release.
    
    The initial reason I added an additional check is so that forks don't create their own releases automatically.
    
    Since there is no push even when a release is created, nothing is done.
    moved distcheck to separate step
    Added distcheck and accompanying message
    Fixed syntax
    Fixed missing portion of filename
    Disable debug in Linux builds, bfd is problematic.
    Actually add scripting for generating the source.
    Add source bzip2 to nightly release.
    Missing quotes.
    Do not create release if repo is cloned
    Change to nightly schedule.
    fix macos artifacts
    Missing fontconfig dep for mingw
    temporary trigger to test.
    Add zipped releases for windows, and fix release
    Add additional dependency for mingw-ldd
    Update names, update run time
    Speak of the devil, this should be the final thing
    This better be the last commit related to this.
    Another change to paths
    fix path
    Collect Artifacts and deploy release.
    Add nightly flag
    Update artifact names.
    Choose basic names as they will be renamed later
    Remove checkout for repo.
    Going in with a fresh look.
    Fix path issues
    Revert
    Removed automatic tag creation, as this..
    
    Would make clobbering an issue.
    this should fix build issues, as I misused
    github.ref
    Fix formatting
    removed newline
    test another action for nightly updates
    Missing GLU
    tell linker to statically link
    enable static link
    meh not worth it
    Wrong host and build systems.
    Not building with debug enabled anyways.
    I sure hope I read that stackoverflow article righ
    t
    My hat lives for another day.
    temporary change so I can test changes.
    If it's this easy I'll eat my hat.
    Update timing and disabled static builds
    Adjusted test
    Just another test
    Just a test schedule time
    Initial version of basic nightly builds
    Do not use preinstalled MSYS2
    Reverted dependencies
    Added missing libxml2 dependency
    Might have something to do with the mingw versi...
    ...on of itstool
    Add msys2 Git
    Disable autocrlf
    Cleaned up MinGW deps (hopefully)
    Still not sure what I'm doing wrong..
    disable updates for sake of speed.
    Remove libxml2-devel
    Enable updates, something is causing libxml2 to
    
    ...not be found by itstool
    Was a bit overzealous on the removal of packages.
    Use already installed version of MSYS
    Install correct version of libxml2
    Disable MSYS updates
    Remove "Install Perl Dependencies" step
    This does not make me happy
    I think I am onto something.
    
    https://github.com/synfig/synfig/issues/794#issuecomment-479560192
    
    I think GitHub preinstalls perl in homebrew, which does not include XML::Parser by default.
    Remove duplicate package from i868 MSYS install
    Revert changes, not sure how to fix.
    Use older version of XCode
    Use Homebrew keg instead of system libxml2
    More xcode changes
    Use older version of xcode to fix perl issues.
    This may fix the Perl dependency issue.
    An attempt to speed things up.
    I think this is all of the missing deps.
    Commented out luadocs upload
    Added CI config for Github Actions
    Update data in windows resource script.
    * Updated resource.rc to 0.7.0
    * Updated Windows resource (it was only a few years out of date).
    * Windows installer script can now handle version suffixes.
    * Updated Windows file version resource.
    * More version voodoo.
    * Naev 0.5.3.
    * Update resource.rc to be relative to src/.
    * Updated windows resource file.
    * Increased naev version number in resource.rc.
    * Added file version number to Windows resource file
    * Rolled individual logo icons into a single, multi-icon icon file
    * Added macintosh icon file.
    * Added 256x256 logo image (Vista).
    * Updated Windows resource file.
    * Added windows resource file.
    * Added some auto tests for the lua (vec2 only atm).
    Remove libzip from dependencies
    Remove references to downloaded SDL2 Framework.
    
    Should clear up issues seen in https://travis-ci.org/github/naev/naev/jobs/698107289
    Remove headers from macOS app bundle
    Fix symlinks in macOS app bundle
    Travis CI build on macOS
    Consistent identifier on macOS
    Travis CI build on macOS
    Add codesign script, currently unused.
    Travis CI build on macOS
    Add missing naev.icns file
    Add codesign script, currently unused.
    should fix steam version
    Wait a minute for steam e-mail.
    Mistyped soundtrack build script name
    Remove ghost variable
    no need to have this written 3 times.
    Update paths
    unzip win64 binary and dlls directly to depot area
    Update SteamDeploy.sh with soundtrack/macos stuff
    Should fix SteamDeploy.sh
    un-overcomplicated this,
    Finish up the rest of the required stuff
    Add soundtrack deployment support.
    move stuff to the right place
    Add credits
    Add steam deployment scripts
    Finish up the rest of the required stuff
    Updated app build scripts to include new depot
    Remove references to 32bit depots.
    move stuff to the right place
    Add steam deployment scripts
    Updated app build scripts to include new depot
    Remove references to 32bit depots.
    move stuff to the right place
    Add steam deployment scripts
    rename
    add soundtrack steam app and depot build scripts
    move stuff to the right place
    Add steam deployment scripts
    Added macos depot build script
    move stuff to the right place
    Add steam deployment scripts
    add soundtrack steam app and depot build scripts
    move stuff to the right place
    Add steam deployment scripts
    move stuff to the right place
    Add steam deployment scripts
    move stuff to the right place
    Add steam deployment scripts
    move stuff to the right place
    Add steam deployment scripts
    Updated app build scripts to include new depot
    Remove references to 32bit depots.
    update build desc
    move stuff to the right place
    Add steam deployment scripts
    move stuff to the right place
    update comment
    Update comments.
    Initial version of 2FA email checker
    Fixed windows packaging script.
    simplify zip export
    Modify packageWindows.sh to bundle data
    modified outputs, adn removed inetc dependency
    Fix ndata link in Windows installer
    Have windows installers properly point to the semver versioning betas.
    move stuff to the right place
    Add credits
    Fixed missing part of the release tag name.
    This will cause the windows installer to fail to download ndata.
    Update to check for betas.
    Update collection of DLLs
    Fixed mingw32 builds
    fix nightly conditional checks
    Choose basic names as they will be renamed later
    Added nightly conf and fixed builds on mingw32
    Added Success Message
    Added dynamic versions for releases
    Initial version of Windows Installer generator
    This is a required file.
    fix data install and removal
    Should remove all references to downloading ndata
    Update inline comment to reflect semver
    Fix typo.
    Update installer script file to use a single file
    Fixes the issue with missing dlls
    Update the logo path.. not too happy with this
    Initial version of Windows Installer generator
    Reorganized windows utilities to one place.
    Comment out as these are passed via CLI.
    Enable Unicode installer, modify exec name.
    
    Additional Changes from NSISdl to inetc to allow for downloads via HTTPS
    Windows installer download link and version.
    Update URL, and update NDATA download URL
    * Updated NSIS script for 0.7.0
    * Updated ndata download size.
    * Updated installer version.
    * Remove mildly obnoxious line from Windows installer.
    * Windows installer script can now handle version suffixes.
    * Updated Windows file version resource.
    * Updated Windows installer for 0.6.0 beta.
    * Naev 0.5.3.
    Replaced tabs with spaces in the installer.
    Add a portable install option
    
    Signed-off-by: Sudarshan S <ssoxygen@users.sourceforge.net>
    Add an option to retry the download if it fails
    
    Signed-off-by: Sudarshan S <ssoxygen@users.sourceforge.net>
    Dont hardcode sf mirror
    
    Signed-off-by: Sudarshan S <ssoxygen@users.sourceforge.net>
    Remove desktop icon when uninstalling
    
    Signed-off-by: Sudarshan S <ssoxygen@users.sourceforge.net>
    Check for existing install before initializing new one
    
    Signed-off-by: Sudarshan S <ssoxygen@users.sourceforge.net>
    Change back name
    
    Signed-off-by: Sudarshan S <ssoxygen@users.sourceforge.net>
    Clean up installer
    
    Signed-off-by: Sudarshan S <ssoxygen@users.sourceforge.net>
    * Version bump.
    * Version bump.
    * Windows installer will prompt the user with an error on download failure.
    * Download ndata from appropriate subdir.
    * Windows installer script downloads ndata from SourceForge.
    * Use naev instead of Naev for installer file name.
    * Bumped installer script version to 0.5.0.
    Don't bother creating an uninstall shortcut with the Windows installer.
    Major update to the Windows installer, now works on non-admin accounts (among other things).
    * Windows uninstaller now removes desktop shortcut.
    * Windows uninstaller now offers to remove configurations and saved games.
    * Windows installer script now automatically names the output installer correctly.
    * Fixed syntax error in Windows installer.
    * Windows installer now always downloads the relevant ndata.
    * Use the Naev icon in the Windows installer.
    * Removed explicit file names in favor of wildcards.
    * Start Menu links will now be properly removed on Windows Vista and 7.
    * Updated version number to 0.4.2.
    * Added the Windows installer script
    Reorganized windows utilities to one place.
    * Added the Windows installer script
    * Removed the how to apply stuff from the license.
    branch:      naev
    added license / copyright
    Made the default logo 256 px.
    Improved make install for packagers - now installs a .desktop and an icon.
    Improved make install for packagers - now installs a .desktop and an icon.
    Added extras/ containing four logo renders.
    * Added Windows icon file.
    Added extras/ containing four logo renders.
    Added extras/ containing four logo renders.
    Added extras/ containing four logo renders.
    Made the default logo 256 px.
    Improved make install for packagers - now installs a .desktop and an icon.
    Improved make install for packagers - now installs a .desktop and an icon.
    Added extras/ containing four logo renders.
    update the rpm spec file: fix buildrequires
    * Renamed extras/spec to extras/rpm for clearity.
    using macro to be certain to use the right place in the desktop file
    using recommended macro for configure
    Add a spec file to build rpm packages of naev
    * Renamed extras/spec to extras/rpm for clearity.
    Add a spec file to build rpm packages of naev
    Repositioned the commodity multiplier text to make it look better
    Abstracted image array stuff to cell where it is possible to set alt text.
    More "NA" fixes.
    Made the main menu wider.
    Fixed the rest of the text colors.
    "credits/tonne" -> "credits"
    
    Prevents the text from wrapping so easily. ("credits/tonne" is long)
    Warnings.
    Removed the ugly uses of cDConsole as a color for headers.
    
    Replaced those all with black; headers don't need to be a different
    color and it honestly looks nicer without one.
    Fixed several strings and lack of gettext usage.
    Properly display the player money in some cases of the commodity window.
    Unified notation.
    Made player credits get abbreviated.
    Use some unicode now that we can.
    Added economy statistics and last purchase price, including saving of economy data
    Remove SDL1 compatibility -D CLAGS, and sed so they aren't used
    GNU gettext is able to recognize PRIu64
    More gettext.
    Removed executable file mode.
    Display Commodities Tab using images for commodities
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    gettext for nlua modules.
    [Docs] Replace '=' with '=='
    Comparison is done with the latter, not the former.
    Use new __RW system and nlua_register() everywhere
    Add types to lua api docs, and other documentation improvements
    Replace LuaColor with glColor
    Replace LuaTexture with glTexture**
    Make LuaFaction an int instead of struct
    Made standing text something defined in Lua.
    
    So now, different factions can have different terms for different amounts
    of standing, and these text representations can now be localized.
    Added setPlayerStanding Lua function (and a corresponding C function).
    
    Gets rid of having to mod the standing to -standing + whatever you
    want. You can now just set the standing straight to what you want.
    This is needed for my proposal to change how standing is handled,
    but even without that, it's useful in some places (e.g. for cheating,
    and for missions like flf_pre02 which either immediately make you an
    enemy or immediately make you not an enemy).
    
    Like modPlayerRaw, this function doesn't pass through any Lua code
    before setting the standing; it's just a direct modification.
    Renamed Lua isKnown methods to 'known', for consistency.
    faction known lua api
    appease the bobbens
    move faction header back into .c
    change // to /* */
    faction known lua api
    * Made all the colours constant as they should be.
    Minor fixes and dead code clean-up.
    Minor fixes and dead code clean-up.
    Suppress false-positive.
    Return faction standing as a double, not an int.
    * Change modPlayerRaw to modPlayerSIngle, added new modPlayerRaw.
    * Removed deprecated player.modFaction* and player.getFaction.
    * Optimalness is optimal.
    Use ints (factions) instead of LuaFactions where possible, added luaL_validfaction.
    Handle strings in the faction API module.
    * Factions can now use Lua to mess with actual faction hits.
    lua headers are system headers, include them that way
    * Luadoc.
    Luadoc fixes.
    Luadoc fixes.
    * Added functionality to get both the graphics and the colour assosciated to a faction.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Fixed bug with faction standing.
    * Made some nlua naming consistant.
    * More Lua hardening.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Should check for type, not userdata.
    * Added luaL_checkfaction.
    * Correctness patch.
    * Luadoc.
    * Some more safety checks.
    * Much more Lua API added.
    * Dvaered patrol missions now actually force you to kill hostiles.
    * Doxygen.
    * Added __tostring metatable functions.
    * More Lua stack balancing.
    * Even more doxygen.
    * Doxygen fixes.
    * Clean up and doxygen.
    * First commit of Camilo's luadoc generation script.
    * Revamp somewhat of the documentation build process.
    * Doxygen.
    * Automatically give backtraces in DEBUG mode.
    * Fixed broken release mode.
    * Fixed checks for DEBUG when they should be for NODEBUG.:
    * Minor tweaks.
    * Faction rating and combat rating are now continuous.
    * Added the faction metatable and stuff to use it.
    Random permutations are in.
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    Use new __RW system and nlua_register() everywhere
    Add types to lua api docs, and other documentation improvements
    Many, many typo fixes.
    lua headers are system headers, include them that way
    * More NAEV -> Naev.
    Luadoc fixes.
    Luadoc fixes.
    * Commentaries.
    * Better invalid parameter Lua checking.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Made some nlua naming consistant.
    * No longer segfault if mission is missing.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Luadoc.
    * Split rnd from nlua.
    * Luadoc.
    Add beam output to --devcsv
    Add launcher and ammo output to --devcsv
    Add modification output to devcsv
    * Forgot files.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    More gettext.
    * Wrapper for nsnprintf being used all over.
    * Added ability to add GUI outfits.
    * Correctness.
    * Make sure GUI is valid when debugging.
    * Removed unneeded check.
    * GUI get added as ships give them.
    * Basic GUI list implementation, never added though.
    * Exposed some default parameters for noise.
    * Made noise stuff public.
    * Added 1d noise stuff.
    * Added 1d simplex noise.
    * Attempt to fix BTAxis' line end problem.
    Revert "\r\n -> \n on three files"
    
    This reverts commit deeb0e8295cdff20375ec4099a3bca8b31780df0.
    \r\n -> \n on three files
    * dos2unix.
    * Nebulae is plural, changed it all to nebula.
    * Made savegame more robust when loading inexistant missions.
    * Interference is generated and renders wonderfully, needs internal mechanism first.
    * Code clean up.
    * Removed execution permissions on some source files.
    * Restructuring to prepare for nebulae puffs.
    * Moved some code from perlin.c to nebulae.c .
    * Almost working nebulae except for a major graphical glitch.
    * Some clean up.
    * Added nebulae generation code (not used atm).
    * Optimizations.
    * Some moving around in the perlin.[ch] files.
    * Big fancy new "cloud" generator in place, will need heavy tweaking.
    Unified some code.
    apparently we had an nfile_dirname...
    fixed dirname check.
    Use dirname if possible to get the translation stuff.
    Keep logging to stdout/stderr even when logging to a file or not in a console. This makes it a lot easier to grab Naev's output inside a test.
    
    Also, this removes the windows specific unbuffered console output by manually forcing line buffering.
    Moved nsetenv to src/env.c
    Detect AppImage environment and adjust paths
    snprintf -> nsnprintf
    fixed nsetenv
    better language handling.
    not defined, but value >_>
    define stuff
    Use _putenv_s when possible and setenv is not available.
    Use putenv instead of setenv when setenv is not supported.
    It seems like we are able to select the language now.
    gettext stuff should be working better, except it hates me.
    Trash Mac config file migration code.
    Apparently Linux isn't the only platform? Fix Mac build.
    ndata is dead! Long live ndata!
    Got rid of dat/unidiff.xml in favour of laid out representation in dat/unidiff/.
    Use semvar syntax (e.g., 0.8.0-beta.2 instead of 0.8.0-beta2)
    Switched to better local fonts and removed usage of system fonts.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Run the note about incompleteness with every version change.
    
    This also adds the version number to the message.
    
    The reason for using the version *string* is because it's hard to
    predict exactly what parts of the version we'll want to differentiate
    in the future and updates to the version number should be infrequent
    enough to not pose a problem.
    Changed that to at first run of the game.
    Simplified colors and modified image array selection colors.
    
    This gets rid of some variants of text coloring and defines them
    in a different way. The "dark" versions are removed; intending to
    replace that with outlines of some kind.
    Include locale.h when using NLS
    Allow disabling NLS.
    Allow using "en" for english in conf.language.
    Allow overriding default language.
    Comment
    Fixed loading with different languages of data.
    Initial add of system map
    Some missed cases
    Removed the ugly uses of cDConsole as a color for headers.
    
    Replaced those all with black; headers don't need to be a different
    color and it honestly looks nicer without one.
    * Added gettext.h
    * Define LOCALEDIR in configuration file.
    * Bind to gettext using variables.
    Use locale if possible.
    should be able to support older bfd versions (namely Ubuntu 16.04)
    Reduce shader boilerplate with a C program generating C code
    
    Ugly, I guess, but... less?
    Updated BFD API usage (should be backwards compatible).
    Shader based beam rendering
    Remove all C code meant to support SDL < 2.0.0
    Fixed a bad read with speed adjustment.
    Print host triple as part of startup log
    Show FPS as relative to player.p->ship->dt_default.
    
    Results in a cleaner look.
    Do not set the numeric to the user locale. Should fix #754.
    More gettext.
    Changed escape code for colors from '\e' to '\a' so xgettext plays well with it.
    Replace XDG migration code with macOS stuff
    
    This effectively removes the old migration code that moved files to XDG
    directories, which is a migration that took place 6 years ago.
    
    We reuse the old code to now do the macOS migration, where we move things to
    standard directories on macOS.
    More gettext.
    Can now use gettext with LOG, WARN, ERR, and DEBUG.
    Initial internationalization support with partial Japanese support.
    Minor default font tweaks. Not entirely sure how fontconfig finds stuff and how to set it up though :/
    Use defines for font paths.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Whitespace.
    Whitespace.
    Give cond its own nlua_env
    Have conf use global lua state
    Run music scripts in global lua state
    Prevent warnings of texture leak
    Use global lua state in cond.c
    WIP change to use one Lua state; does not yet compile
    
    Starting with ai.c
    Map decorators for Naev, with one as example
    Replace memcpy with struct assignment
    Update options menu when window is manually resized (Fixes #241)
    Set SDL_VIDEO_X11_WMCLASS to keep WM_CLASS consistent
    Ugly implementation of fullscreen toggle keybind
    Consistently resize the main menu elements
    Reset FPS position when resizing
    Automatically re-center windows when resolution changes
    Initial commit of resizing and fake fullscreen
    
    All of this is exclusive to SDL2.
    
    SDL_WINDOW_FULLSCREEN_DESKTOP allows Naev's window to be the size of
    the current screen without setting video mode (and thereby turning off
    other screens, messing up background window positioning, etc.), but to
    use it, we need to be able to resize the GL viewport on demand.
    
    The work required to allow that also permits dynamic resizing while
    playing, as long as a few other things are also reinitialized (a minor
    issue).
    Add cross-platform log redirection when not running from a terminal
    
    As --datapath and datapath.lua must be respected, output is initially
    copied into memory, and either flushed to disk or deleted once configs
    have been loaded.
    
    Redirection is only done is conf.redirect_file is enabled and Naev is
    not connected to a terminal.
    
    The files go into ${datapath}/std-{out,err}_YYYY-MM-DD_hh-mm-ss.txt,
    and the logs for a session are deleted if stderr is empty.
    * Properly display beta version in the load menu.
    Show PAUSED on screen when the player initiates pause
    Add WASD key bindings by default.
    
    The arrow key-centric bindings are still present, and if desired can be
    set through the options menu.
    * SDL_GL_SwapWindow is more adequate than SDL_RendererPresent.
    * Fixed some warnings due to behaviour changes with sdl2-config.
    * Almost there.
    * Initial work to get everything running on SDL2.
    Made comments gender neutral, for accuracy
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Add support for a user-created 'datapath.lua' in the binary's dir.
    Allows overriding of the user data location without run-time arguments.
    Fix two small typos
    
    Signed-off-by: Sudarshan S
    Added a CLI option to define a custom user data path.
    Fix two small typos
    
    Signed-off-by: Sudarshan S
    * Font sizes are now customizeable. User discretion advised to not break EVERYTHING.
    * Wrapper for nsnprintf being used all over.
    Faux-justify the text a little more.
    * Minor bobbensisms.
    Invoke the update script automatically if requested.
       Thoroughly tested, should be quite bulletproof.
    * #ifdef should be #if.
    * Fixed warning on non-unix.
    Warn players about migrating files from ~/.naev
    * XDG patch by aanderson.
    user data should go into $XDG_DATA_HOME (.local/share by default)
     - .naev/saves -> ~/.local/share/naev/saves
     - .naev/screenshots -> ~/.local/share/naev/screenshots
    
    user preferences should go into $XDG_CONFIG_HOME (.config by default)
     - .naev/conf.lua -> ~/.config/naev/conf.lua
     - .naev/conf.lua.backup -> ~/.config/naev/conf.lua.backup
    
    cached data should go to $XDG_CACHE_HOME (.cache by default)
     - .naev/gen -> ~/.cache/naev
    maps load data, also can be added without crashing.
    * Use shared monospace font.
    * Slots are now handled separately in xml.
    * Outsource damage types to XML.
    * Note: still buggy.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Many, many typo fixes.
    * Typos fix by c_korn.
    Fix unused variable global_time.
    * Seems like pulseaudio has a poor API design and therefore you shouldn't clean up especially if other libs are using it except at the end.
    * Fixed bug in version comparison.
    * Minimum physics FPS is now 30 instead of 50.
    * More proper clean up and such.
    * Should fix long updates being done when they shouldn't.
    * Play sound when messing with sound slider.
    Remove unused SDL_image header #includes
    * Moved the hook timer updates outside of the hook exclusion zone so inputs don't trigger in it.
    * Fixed segfault when jumping.
    * Initial revision of the hook voodoo.
    * pause_delay is no-op, removed.
    * Document how hooks are serious business.
    Signed-off-by: Edgar Simo <bobbens@gmail.com>
    * Fixed flickering with hooks.
    * Attempt to fix the memory issue with hooks in the tutorial.
    Signed-off-by: Edgar Simo <bobbens@gmail.com>
    * Fixed nonexistant memory leak.
    Got naev to compile on OS X.
    
    Adjusted header search paths for compatibility.
    Added a missing #ifdef CLOCK_MONOTONIC block in naev.c.
    Adapted libpaths.sh to work in both Release and Debug modes.
    Added missing files gui_omsg.h and gui_omsg.c to the project.
    Added some OS X/Xcode specific entries to .gitignore
    Made naev always look for resources in Contents/Resources on OS X.
    
    Signed-off-by: Scott McClaugherty <gamefreak4321@gmail.com>
    * Check for CLOCK_MONOTONIC define.
    * Warn if save version mismatches.
    * Version parsing code is now in naev.c.
    * Check ndata version against binary.
    * SDL_QUIT event should no longer no a non-saving quit.
    * When delta-tick is too large, split evenly instead of having small leftovers.
    * Enforce a minimum fps for the update of the rumble simulation.
    * Use real_dt when updating haptic devices not dt.
    * Cleaner code.
    * Comments.
    * usleep seems to be removed from POSIX.1-2008, we'll use nanosleep instead.
    * Use usleep with HAS_POSIX to try to make it smoother (shouldn't be noticeable).
    * Probably a bad idea, but using clock_gettime for POSIX platforms to calculate dt.
    * Split fps_elapsed into a seperate function.
    * Whitespace.
    * Moved loading stuff into load.c.
    * Added infrastructure for reading save information.
    * New time system. As seen on wiki.
    * Initialize SDL before threadpool.
    * Show the starting system in the background (with movement) at the main menu.
    * Centralized the game start information.
    * New player should have the system he'll start in as a background when writing name.
    Merged the threadpool and changed perlin to use the threadpool.
    * Mouse cursor will auto-hide after a bit and be available when flying around.
    * Time compression works with autonav now.
    * NAEV now also prints everything to it's internal console.
    * The overlay map seems to work OK, needs more features and a sane way to handle resolution.
    * You can now set the position of the fps stuff.
    * Much fancier camera model, much more in tune for doing fancy camera Lua API.
    * Initial commit of the camera model.
    * Changing entire reference system to bottom left based, should solve shit in the long run.
    * Support for script to set backgrounds.
    * Fixed harmless memory leak.
    * Split star background stuff from space stuff.
    * BFD is no longer a requirement for DEBUGGING.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Basic core for generating csv output done.
    * Fixed SDL_RWops leak.
    * More load up optimization related to png.
    * Optimizing loading a bit.
    * No longer using SDL_image.
    * npng.c now handles PNG file loading and the likes.
    * Console was never getting properly freed.
    * Clean up parser just in case.
    * Close bfd on exit.
    * Fixe more memory leakage on exit.
    * Removed obsolete mission/event specific timers in favour of the hook.timers.
    * Added timer hook to eventually replace the mission/event timers.
    * Simulate system for 15 seconds before player enters.
    * Loading bar should be sane again.
    * Actually load and free the tech stuff.
    * Fixed minor inoffensive memory leaks.
    * Added nfile_dirname as portable substitute for dirname.
    * Now look for scripts in binary path after looking locally.
    * Changed render order so that it shakes targetting reticles and comm messages.
    * Changed render order for reticles vs pilot overlay.
    * Added concept of pilot overlay render.
    * Added key repeat to toolkit (barely used).
    * At worst only skip every other frame.
    * Should fix a warning on 32 bits.
    * Added some event polling while loading to see if the "stuck alt key" still happens.
    * Should compile on windows again.
    Fixed missing feenableexcept linker errors.
    * Autotools support by Unavowed.
    Fixes bfd issues with executable not in current directory
    Fixes bfd issues with executable not in current directory
    * Whitespace.
    * Work even if bfd fails to do it's stuff.
    * Free the Icon.
    * Look for ndata under dirname of argv[0] on posix systems when all else fails.
    * More NULL protection.
    * Don't segfault if no loading screens found.
    * Icon seems to work.
    * Display no ndata message when no ndata is found.
    * Sped up equipment script by a bit.
    * Smarter resolution choosing.
    * Don't limit FPS with vsync enabled.
    * Minor optimization.
    * Changed zoom lingo to near/far.
    * Render planet targetting reticle with pilot target reticle.
    * Fixed warning on windows.
    * Using negative for revisions for VREV set beta status.
    Shows git HEAD if available
    printf -> DEBUG
    Improved stack trace on Linux
    * Was more harmful then good.
    * Still exit at SIGFPE.
    * Die more violently.
    * Only use FPU exceptions on non-windows.
    * Added FPU exceptions which are enabled by default (on debug builds).
    Now clearing the depth buffer as well.
    * Set starting zoom to max.
    * Enormous diff that basically points out that bobbens' punctuation sucks.
    * Fixed some fps control weirdness in the display.
    * Added the ability to do timed sound situation changes.
    * Code clean up.
    * Loading bar does not overlap anymore.
    * New loading graphics rendered by Deiz.
    * Loading graphics look sexier.
    * Display the mount point when selecting high energy slot.
    * Some more XML properness.
    * Seems like you need to xmlInitParser().
    * Added event updating.
    * Nebulae is plural, changed it all to nebula.
    * Made savegame more robust when loading inexistant missions.
    Insert call to conf_saveConfig, and add a filename parameter.
    * Rewrote conf framework to be much more robust and better overall.
    * Using dt for pilot thinking/rendering.
    * Zoom should be gradual.
    * Added the conditionaly subsystem to replace the mission checkCond stuff.
    * Events load and clean up.
    * Added very simple first event.
    * Default to 200 fps limit without displaying the fps.
    * Updated conf.example to show properly the defaults.
    * Removed the glBegin in the map.
    * More glBegin removal.
    * Changed conf to conf.lua so that windows people don't complain.
    * Moved FPS counter a bit to not get covered up.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Doesn't seem like mesa likes fpu exceptions.
    * Raise when fpe exceptions happen.
    * Inform if build is debug.
    * Fixes last patch which was atrociously bad.
    * Some font optimizations.
    * Removed some warnings.
    * Initial news implementation.
    * Removed a sort of silly SDL_Delay.  If user wants to cap FPS he can do so.
    * No longer using a toolkit global variable.
    * Make rumble half as strong on the GUI.
    * Moved fleet stuff out of pilot.[ch].
    * Small code clean up.
    * Much better OS compatibility macros now.
    * Ripped the GUI stuff out of player.c and put it in gui.c.
    * Some clean up.
    * Some stuff to start supporting SDL 1.3 ASAP.
    * Doxygen.
    * Lots and lots of doxygen.
    * More sanity checks.
    * Code clean up.
    * Removed unused and a bit buggy scrollbar (use fader instead).
    * Properly display fps when game speed is accelerated.
    * No longer need makefile when working in trunk, reads from directories directly.
    * Code clean up.
    * Doxygen.
    * Added flags to image creation to control transparency mapping.  Should speed up theloading some and reduce memory usage.
    * Even more doxygen.
    * Using Packcache now, loads _MUCH_ faster.
    * First large ndata patch.
    * Moved xml.h to nxml.h.
    * Added more complicated xml parse functions in nxml.c.
    * Changed misn_lua to nlua_misn for easier lua module detection.
    * Interference is generated and renders wonderfully, needs internal mechanism first.
    * Code clean up.
    * First patch to try to add a dynamic economy.  Economy is static atm.
    * Some code clean up.
    * Fixed a memory leak.
    * Support for FreeBSD by Dmitry Marakasov.
    * Init joysticks before sound.
    * Major rewrite to xml.h increasing sanity checks.
    * Gui can now handle overlays.
    * You can now set keybindings by key name.
    * Added toggle 2x speed keybind.
    * Reactivated warnings if ndata version is different to naev version.
    * Remove warning about differing ndata/naev versions.
    * Better warning if ndata not found.
    * If ndata isn't found, try to be a bit more robust in finding it.
    * Catch SIGTRAP too.
    * Automatically give backtraces in DEBUG mode.
    * Fixed broken release mode.
    * Fixed checks for DEBUG when they should be for NODEBUG.:
    * Minor tweaks.
    * Should fix a warning.
    * Moved loading screens into a new directory.
    * Nebulae now use the loading bar.
    * Added a loading bar.
    * Correctness tweak for rendering with dt.
    * Beam weapons now actually move when rendering (graphics need updating).
    * Reduced calls to xmlCleanupParser(), only one for all the loading now.
    * More proper unidiff cleaning up.
    * Unidiff no longer segfaults.
    * Spew warning if SDL major/minor version differ.
    * Added mission timers.
    * Improved sound system considerably, not used properly yet.
    * Preliminary doxygen support.
    * Now display compiled and linked SDL versions.
    * Redid entire sound system with SDL_mixer.
    * Added some error checking in nebulae subsystem to avoid infinite loop.
    * Fixed another memleak.
    * Fixed FPS limiting.
    * Cosmetic patch.
    * Added and implemented loading screens.
    * Split player rendering properly into GUI and player.
    * Now render particles when flying in nebulae.
    * Restructuring to prepare for nebulae puffs.
    * Fixed dt weirdness on low fps.
    * Added space_renderOverlay().
    * Nebulae are now drawn ingame.
    * Added nebu_density and nebu_volatility parameters to star systems.
    * Added naev_version() to get the version.
    * Initialize nebulae and use in menu.
    * Now will initialize nebulae.
    * Nebulae use a smaller more optimal format, reducing size.
    * New CFLAG: -Wshadow.
    * Fixed all new warnings.
    * Lowered threshold to skip frames (now under 4 FPS skips).
    * Cosmetic tweak.
    * Fixed possible buffer overflows with strncpy
    * "fixed" doxygen
    * Improved the dt system
    added Doxygen support to naev.c for testing
    music is now controlled by lua \o/
    now actually using a conf file in home directory
    get ready to... RUMBLE!  (added rumble for afterburning among others)
    misc fixes and prompt before overwriting pilot
    finally added opengl error checking in DEBUG builds
    save version in savegame
    added filesystem abstraction and path based stuff
    pause forced with toolkit, linux specific stuff for saving
    more tab removal, fixed up mission var stuff
    started :retabbing (spaces only) and fixed some xml issues
    missions loading now, now used yet
    some cleanup and changes in loading
    revert PID changes, changed headhunter to be "smart"
    added new simple toolkit_YesNo confirmation dialogue
    branch:      naev
    more error checking paranoia
    branch:      naev
    player gets all the ships he buys saved in a stack, just need to be able to change them
    branch:      naev
    Added preliminary game main menu
    branch:      naev
    basic commodity support added (not used yet)
    branch:      naev
    keyboard events work with list
    branch:      naev
    added some code to hopefully help prevent dt intervals that are too big
    branch:      naev
    added spawning, will need tweaking
    branch:      naev
    added explosions with a primitive special effect system
    branch:      naev
    some music playing sanity
    branch:      naev
    you can now disable sound in conf or by CLI
    more MELEMENT fixes
    branch:      naev
    forgot two files (new main.c and main.h)
    Load unidiff from most recent save to be able to show the planet properly (e.g. sindbad)
    * Properly display beta version in the load menu.
    add core outfits to ships from old saves.
    * More NAEV -> Naev.
    * Moved loading stuff into load.c.
    * Added infrastructure for reading save information.
    * Scripted temperature thresholds for afterburners.
    Added a discrete cooldown mode for pilots.
    * Some code for heat on afterburners. Todo:
    ** Show afterburner heat.
    ** Don't toggle afterburner when used via weapon group.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    * Removed DEBUGs that shouldn't be there.
    * Some more () around values.
    * Added functions to get outfit heat specifics, maybe we should move all the heat numbers somewhere else.
    * Changed accuracy model caused by heat.
    * Fixed implementation, feels totally wonky though.
    * Implemented accuracy and fire rate mods for heat.
    * Added the heat accuracy and fire rate functions.
    * Added the heat accuracy and fire rate functions.
    * Added all the heat framework.
    Remove some compat code. We're well past 0.5
    Detect AppImage environment and adjust paths
    Remove --nondata flag
    Switched to better local fonts and removed usage of system fonts.
    Run the note about incompleteness with every version change.
    
    This also adds the version number to the message.
    
    The reason for using the version *string* is because it's hard to
    predict exactly what parts of the version we'll want to differentiate
    in the future and updates to the version number should be infrequent
    enough to not pose a problem.
    Changed that to at first run of the game.
    Warnings.
    Allow using "en" for english in conf.language.
    Allow overriding default language.
    Fixed several strings and lack of gettext usage.
    keybind_info: terminate with NULL instead of "end"
    Remove fallback for not having VBO
    
    OpenGL without VBOs is deprecated. Presumably, any drivers that can
    handle shaders will be fine with VBOs.
    Remove SDL1 compatibility -D CLAGS, and sed so they aren't used
    * clearer explanation for devautosavemode
    Add support for joystick hats
    Lua string quotting should now support utf8.
    More gettext.
    Let the user define their own fonts if the prefer.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Added scaling factor as CLI option.
    Use new __RW system and nlua_register() everywhere
    Set __RW for each env
    Have conf use global lua state
    Strip trailing whitespace
    Don't unbind defaults when loading invalid keybinds
    Make minimize on focus loss configurable
    Initial commit of resizing and fake fullscreen
    
    All of this is exclusive to SDL2.
    
    SDL_WINDOW_FULLSCREEN_DESKTOP allows Naev's window to be the size of
    the current screen without setting video mode (and thereby turning off
    other screens, messing up background window positioning, etc.), but to
    use it, we need to be able to resize the GL viewport on demand.
    
    The work required to allow that also permits dynamic resizing while
    playing, as long as a few other things are also reinitialized (a minor
    issue).
    Add cross-platform log redirection when not running from a terminal
    
    As --datapath and datapath.lua must be respected, output is initially
    copied into memory, and either flushed to disk or deleted once configs
    have been loaded.
    
    Redirection is only done is conf.redirect_file is enabled and Naev is
    not connected to a terminal.
    
    The files go into ${datapath}/std-{out,err}_YYYY-MM-DD_hh-mm-ss.txt,
    and the logs for a session are deleted if stderr is empty.
    Remove save comment for removed option
    Show PAUSED on screen when the player initiates pause
    Load various Lua modules into the datapath Lua state
    
    This allows users to set a path depending on environment variables,
    like os.getenv("HOME")
    Avoid complaining about --datapath when doing the second option parse
    Removed the "pause instead of abort" option.
    
    This was clearly designed to use in conjunction with the old autonav
    abortion behavior. player_autonavAbort is still used in some places,
    but I don't think it's particularly useful to give the player the
    option to pause instead of abort in these places.
    
    Also includes a comment fix that I apparently forgot to merge previously.
    Add WASD key bindings by default.
    
    The arrow key-centric bindings are still present, and if desired can be
    set through the options menu.
    Implement basic double-click detection and use it for mouse targeting
    Remove fuel cost and make refueling wholly-automated
    
    This was discussed earlier in IRC. My feeling is that fuel costs add nothing,
    yet can potentially strand new players and render saves unusable.
    
    There were also several issues with fuel being zeroed when removing fuel pods
    and engines, leading to fuel loss while experimenting with loadouts.
    * You can now configure where to save stuff with the editor instead of hardcoded relative paths.
    Updated text in the options menu.
    * Added a check box to the galaxy editor for automatically saving changes.
    Typo fix
    Added option to pause game instead of disabling autonav when damage is taken
    * Made options menu a little more straightforward, using "OK" and "Cancel" buttons that do what you'd expect.
    * Faders no longer write to the config whenever they are used.
    * Default button no longer overwrites config, so pressing "Cancel" after "Default" does what you'd expect..
    getopt was automatically counting all options when optind was initialized to 1.
    GNU getopt workaround.
    Add support for a user-created 'datapath.lua' in the binary's dir.
    Allows overriding of the user data location without run-time arguments.
    Fix two small typos
    
    Signed-off-by: Sudarshan S
    Added a CLI option to define a custom user data path.
    Fix two small typos
    
    Signed-off-by: Sudarshan S
    * Font sizes are now customizeable. User discretion advised to not break EVERYTHING.
    * Wrapper for nsnprintf being used all over.
    * Devmode can be set in conf.
    * NPOT is off by default, what was I thinking!?!?
    Whitespace, typo and general style cleanup.
    Fix some minor nigh-impossible crashes; remove pointless initializations and such.
    Many, many typo fixes.
    * Fixed spelling.
    lua headers are system headers, include them that way
    * Bit fancier sound model, optionally force set to camera instead of track pilot.
    * Number of voices to use for sound is now a configuration option (to lower cpu usage if wanted).
    * Typo fixing patch by Paul Wise.
    Added configuration option for limiting maximum time multiplier.
    Added variable autonav exit conditions and a slider to control them.
    * Minor fixes and tweaks.
    Added an option to prevent mouse flying from controlling thrust.
    * Changed the way keybinds are handled so they use human readable names.
    * You can now set manual zoom control.
    * Split nstrnstr to nstring.c.
    * Autonav time compression velocity to compress to is now defineable in the conf.
    * Comment clean up.
    * Conserve sound/music levels when sound is disabled.
    * Removed unused variables.
    * Removed unused variables.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Removed usage of SDL_min.
    * Added more #includes that were missing.
    * Basic core for generating csv output done.
    * Fixed warnings.
    * You can now enable devmode, which does absolutely nothing \o/.
    * Added flags to disable ndata.
    * Fixed alignment in --help message.
    * You can now force disable NPOT textures.
    * Removed inexistant extern.
    * Better handling of modifier keys, merging lctrl/rctrl into ctrl and such.
    * Added key repeat to toolkit (barely used).
    * Added option to toggle amount of log lines you want.
    * Fixed unsetting keybinds.
    * Changed some CLI options to match what Deiz wants.
    * Watered down defaults a bit because of crap intel drivers.
    * Added possibility to disable interpolation.
    * Added option to disable savegame compression.
    * Added Gameplay options.
    * More properness.
    * Split audio defaults.
    * Smarter resolution choosing.
    * Split video stuff from rest of stuff.
    * Always just use nstrnstr instead of system specific.
    * Changed zoom lingo to near/far.
    Fix build for OSX.
            * strnstr is defined for all platforms, only linux lacks
              the symbol.
            * #ifdef the built in strnstr as LINUX
            * Switch the prototype to a valid one (src, dest, size)
            * Update callers to use proper prototype
    * Added option to disable engineglow.
    * If key isn't bound should save it as "none" so it doesn't overwrite.
    * Added option to disable conf autosaving.
    * Disabled FPU exceptions by default.
    * Added FPU exceptions which are enabled by default (on debug builds).
    * You can now modulate star zoom.
    * Added autorefuel option.
    * Conf was saving value as bool not int.
    * Nebulae is plural, changed it all to nebula.
    * Made savegame more robust when loading inexistant missions.
    * Sound levels being saved properly now.
    * Renamed conf.efx to conf.al_efx.
    * Also allow user to set OpenAL music buffer size.
    * Allow user to disable EFX if wanting.
    * Do not default to openal if not compiled with openal support.
    * Compiles with OpenAL backend.
    * Make compression optional and off by default.
    * Added compression extension support.
    * Cleaned up code for mipmaping some.
    * Support for user disabling mipmaps.
    Don't use SDL_GetKeyName for non-keyboard keybinds.
    Overwrite just a section instead of the entire config file.
    Take into account keys that SDL can't textually describe.
    * Key "5" no longer registers a keysym.
    Keybind saving.
    In conf_save*, do not concatenate the n parameter, but use the format string.
    Save joystick setting.
    Introduce conf_saveString, and code to save the ndata path.
    Save more configuration options (low hanging fruit)
    Match parameter name in conf_saveBool with conf_loadBool.
    Section off option saving code in conf_saveConfig, much like conf_loadConfig.
    Introduce conf_saveFloat, and code to save some more window settings.
    Introduce conf_saveBool and code to save the OpenGL settings.
    Introduce conf_saveInt and use it to save the resolution.
    Introduce conf_save* macros to tidy up the configuration saving code.
    Whitespace fixes
    Baseline for writing the configuration file.
    Insert call to conf_saveConfig, and add a filename parameter.
    * Allow disabling of VBOs.
    * Added ability to limit zoom speed change.
    * Put defaults to old defaults.
    * Rewrote conf framework to be much more robust and better overall.
    * Accidently broke bools in conf.
    * Use CLAMP.
    * Better boolean handling.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Removed casting.
    * Scalefactor included by popular request.
    * Accept "none" as a mod for keybindings.
    * Improved how conf is handled, much better error reporting.
    * Sensibility => Sensitivity.
    * Forgot to clean up temporary variable again.
    * Sorry afterburn patch was wrong.
    * Allow changing of afterburner sensibility.
    * Much better handling of joystick axes.
    * Doxygen.
    * Code clean up.
    * Fixed some Lua stack unbalanced issues.
    * First large ndata patch.
    * Improved the keybind loading system.
    * Removed extra lua_remove().
    * You can now set keybindings by key name.
    * Now changing volume levels actually works.
    * Added any modifier to always work.
    * Better keybinding loading.
    * Create .naev/conf if not found.  Left empty though.
    * Made --help message a bit more explicit.
    * If ndata isn't found, try to be a bit more robust in finding it.
    * Allow reading ndata-version by default.
    * Added support for FSAA.
    * Allow Lua booleans in conf booleans.
    * Use desktop resolution if fullscreen mode is set without specifying dimensions.
    * Balanced the Lua conf stack.
    * Added options for enabling vsync.
    * Support for mod keys in configuration file.
    * Added support for key modifiers.
    * More doxygen and code cleanup.
    * Redid entire sound system with SDL_mixer.
    * Verbosity++;
    * Should be fully fixed by now.
    * Added -G option to force nebulae generation.
    * Wrapping around luaL_newstate and luaopen_base.
    * --help was wrong about width and height setting.
    third sound patch, sound enabled by default again
    cleaned up some sound stuff, part one of fixing the sound system
    patch by Nicholas Niro <nik_89@neuroponic.com> for older gcc
    can now change dimensions from commandline, fixed plasma fractal issue
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    small change to -v, just displays version and quits
    branch:      naev
    typo in default resolution (800x600)
    branch:      naev
    added -S/--sound option to force sound, sound disabled by default
    branch:      naev
    to afterburn, you double tap accel instead of actually hitting a key
    branch:      naev
    you can now disable sound in conf or by CLI
    more MELEMENT fixes
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] you can now set the volume from CLI or conf file
    fixed possible segfault when switching musics
    branch:      naev
    [svn] Basic toolkit implementation done
    added gl_printMax and gl_printMid which was long overdue
    using flag system with gl_screen
    optional AA for primitives
    minor pause behaviour fix
    branch:      naev
    [svn] Basic toolkit implementation (but ugly)
    Basic landing
    Pause bugfixes
    branch:      naev
    [svn] added beginning frame for toolkit
    added ability to pause/resume game
    nerfed lasers armour damage
    branch:      naev
    [svn] pulled input out of player, file was getting too big
    more preperations for the toolkit
    branch:      naev
    [svn] removed simple outdated GUI
    cleaned up code (moved more stuff to conf.c)
    branch:      naev
    [svn] cleaned up main.c some
    split configuration processing into seperate file
    Whitespace.
    * New super flexible backend for sound with SDL_mixer implementation.
    Made OpenAL includes work again.
    fixed crosscompiling for openal binaries.
    * Autotools support by Unavowed.
    * Store sound length.
    * Share define for music fading with sdlmix and openal.
    * Have environment change in medium.
    * Sound fade out instead of stopping, should fix most of the popping.
    * Minor tweaks and changes.
    * Fixed possible race condition.
    * Compiles with OpenAL backend.
    * New super flexible backend for sound with SDL_mixer implementation.
    Fancy NPC get fancy icon.
    * Bar missions should work with naev.missionStart().
    * Update NPC when a hook is successfully run at the land window.
    * Event NPC stuff working now.
    * Fixed issue with hooks saving event hooks.
    * Added event land as start condition.
    * Morre corrections.
    * Added NPC bindings to events.
    * COMPILES AGAIN - and seems to work at least like before (NPC do).
    * Committed npc stuff just in case - DOES NOT COMPILE.
    ndata is dead! Long live ndata!
    Sprinkle in some array_create_size usage
    Don't crash when no unidiffs to save.
    Got rid of dat/unidiff.xml in favour of laid out representation in dat/unidiff/.
    Use array stuff for unidiffs.
    Rewrote so that unidiff now recalculates entire economy, but doesn't erase player knowledge.
    Fixed unidiff issue - applying a unidiff of any time would wipe the players economy history (including in any new saves)
    re-compute economy after each unidiff
    Warnings.
    More gettext.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Converted the "blackmarket" flag to a "blackmarket" service.
    
    This is cleaner, and it's an easy way to make adjusting this property
    in the editor possible. The "blackmarket" flag outside of the assets
    is still supported for compatibility.
    Fixed the segfault.
    Fixed a change I didn't mean to make.
    Switched to char representations to make the code easier to read.
    Added support for some faction unidiffs.
    
    The diffs are as follows:
    
    * Making a faction invisible or invisible (for factions that have
      been destroyed or created)
    
    * Changing faction alignments (e.g. making the Empire and the FLF
      enemies mid-game, or making the FLF and Dvaered neutral mid-game)
    
    Use of this to make the Collective invisible once it is defeated has
    been added.
    Replace memcpy with struct assignment
    Modify the economy updating model
    
    Galaxy-modifying functions (adding or removing planets, etc.) now only
    queue an economy update, with the caller being responsible for running
    the update via economy_execQueued.
    
    The main benefit is that diffs now only cause one economy update, when
    they prevously did an update for each jump or planet. Economy updates
    were the single largest time-sink when loading, particularly if a
    diff cleanup was necessary.
    * Additional warnings.
    * Missing break.
    Added a diff for making planets black and legal markets.
    
    The diffs are "blackmarket" and "legalmarket". Seems to work
    properly.
    * More paranoia in case universe changes with diffs.
    * More checks just in case.
    * You can change asset faction with unidiff now.
    * We don't need fleets for unidiffs anymore, obsoleted by faction presenc.
    * Fleetgroups are gone.
    * Horrible code duplication to get around the fact that jump point XML is only parsed when adding a jump.
    * Reworked the jump point unidiff format.
    ** All jump point parameters are now attributes, not subnodes, in keeping with the existing unidiff syntax.
    ** x and y parameters are optional, if omitted the jump point will be auto-positioned.
    ** hide parameter is optional.
    ** type parameter is optional and can be either "hidden" or "exitonly".
    * We're not going back to fleetgroups, so we won't need code for them.
    Prune presences as necessary when applying unidiffs.
    Update can_land when adding planets via unidiff.
    * New planets get a nonzero radius.
    * Update radius when updating gfx.
    * Moved various path defines into ndata.h.
    * Wrapper for nsnprintf being used all over.
    Silence a (tiny, infinitesimal) amount of gcc's -pedantic warnings.
    whitespace
    can unidiff jump points
    Whitespace, typo and general style cleanup.
    * Renamed planet -> asset in unidiff to match the new naming schemes.
    * Stricter parsing of the unidiff xml.
    * Refresh overlay map after applying a unidiff.
    * Clang.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Compiles.
    * Moving unidiff to new tech system.
    * Converted what should be warnings into actual warnings.
    * Removed almost all traces of fleetgroups.
    
    Unidiffs need to be edited before the enum can be edited.
    * Hopefully fixed compile error.
    * Removed fleetgroups.
    * Hopefully fixed compile errors.
    * Using new scheduler.
    
    Currently does not respect cap or spawn at start.
    * Fixing really minor possible segfaults and other misc issues detected with scan-build.
    * Should fix all strict ubuntu warnings now.
    * You can now set ship tech in the unidiff.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Constness.
    * Cleaned up some Lua code.
    * Implemented changing tech for outfits in unidiff.
    * Fixed issue with unidiffs not removing properly.
    * Should completely fix the unidiffs again.
    * Should fix unidiff broken since fleetgroups introduced.
    * Moved fleet stuff out of pilot.[ch].
    * More doxygen.
    * First large ndata patch.
    * Moved xml.h to nxml.h.
    * Added more complicated xml parse functions in nxml.c.
    * Replaced malloc.h with stdlib.h, as the former is deprecated
    * Clean up unidiffs when they fail to apply.
    * Fixed memory leak.
    * Some doxygen fixes.
    * Check and report failed hunks.
    * Removed some useless debugs.
    * Implemented fleet addition/removal.
    * More proper unidiff cleaning up.
    * Unidiff no longer segfaults.
    * First release of the unidiff system.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Fix some undefined behavior caught by ubsan
    gettext for pilot stuff.
    Make LuaPilot an int instead of a struct, simplifying things
    * Too many bugs in the code, should fix bugs with pilot hooks when using
    >1 parameter.
    * Hook param off by one.
    Made comments gender neutral, for accuracy
    * Include moving around.
    * Wrapper for nsnprintf being used all over.
    Many, many typo fixes.
    * Should fix pilot global hooks not clearing properly.
    * Fixed a memory issue in pilot hooks.
    * Fixed memory leak.
    * Move pilot hook stuff into pilot_hook.[ch].
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    gettext for nlua modules.
    Use new __RW system and nlua_register() everywhere
    Make background script use global lua state
    Put GUI in global lua state
    Add types to lua api docs, and other documentation improvements
    Replace LuaColor with glColor
    Replace LuaTexture with glTexture**
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Changed renderTexRaw API to how Scaatis probably thinks it should work :P.
    * Code cosmetics.
    * Luadoc.
    lua headers are system headers, include them that way
    Fixed minor Luadoc typo.
    * More NAEV -> Naev.
    * Luadoc.
    Luadoc fixes.
    Luadoc fixes.
    Fixed a minor bug that broke colours with gfx.renderTex()
    * Commentaries.
    * Changing entire reference system to bottom left based, should solve shit in the long run.
    * Fixed some copy and paste comments.
    * Luadoc.
    * Added gfx.renderTexRaw which is a direct binding to the gl_renderTexture.
    * Added function to get size of fonts and length of printing.
    * Translation not needed.
    * Luadoc.
    * Added functions to print text from Lua.
    * GFX module now autoloads tex and colour modules.
    * GFX module now uses colours.
    * Fixed segfault with renderRect (temporary solution).
    * Hacked in primitive support for a Lua GUI.
    * Some error correction.
    * Added Lua GFX module.
    Don't allow the ship computers to access info the player doesn't have
    
    Namely,
    1. AutoNav shouldn't disable until a hostile ship's identity is no longer hidden
    2. Targeting hostile ships shouldn't select ships who's identity is hidden.
    Make it impossible to target unknown or out of range objects
    Made required changes
    Revert to the simpler sensor range model.
    Sounds will be silenced if out of range of the camera's targeted pilot or position.
    optimization
    pilot detection and tracking uses relitivity.
    initial commit for hidden jump points.
    jump points can be discovered, and known state is saved
    * Weakened lead angle modulation.
    * Added concept of turret tracking and thus dynamic lead angle based on ewarfare.
    * Added heat to ewarfare.
    * Moved sensor and range code into the electronic warfare module.
    * More centralization of electronic warfare.
    * Started to centralize the pilot ewarfare stuff.
    Remove all C code meant to support SDL < 2.0.0
    More gettext.
    * SDL2_mixer seems to compile now.
    * Share define for music fading with sdlmix and openal.
    * Tweaked the fadein/fadeout parameters.
    * New super flexible backend for sound with SDL_mixer implementation.
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Warnings.
    Cleaning up extra line
    Remove all C code meant to support SDL < 2.0.0
    More gettext.
    Quiet GCC 7.1 fallthrough warning.
    Remove pack. It is no longer used
    * Almost there.
    * Initial work to get everything running on SDL2.
    Whitespace, typo and general style cleanup.
    Many, many typo fixes.
    Use logarithmic music and sound volume when using OpenAL.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * No chance of music thread blocking naev when exitting anymore.
    * Doxygen.
    * Fixing really minor possible segfaults and other misc issues detected with scan-build.
    Use ov_read if ov_read_filter is not available.
    * Might fix an issue with Mac OS X.
    * Whitespace.
    * Implemented replaygain.
    * Hack to fix segfault with ES missions.
    * Share define for music fading with sdlmix and openal.
    * Cosmetics.
    * Renamed conf.efx to conf.al_efx.
    * Also allow user to set OpenAL music buffer size.
    * Fadeout actually works now.
    * Fixed positional sound.
    * Tweaked the fadein/fadeout parameters.
    * Removed sound pop at start.
    * Implemented openal groups.
    * Tweaked API a bit.
    * Implemented fadein/fadeout.
    * Fixed outstanding issues with openal music.
    * Rechoose upon stopping.
    * Made pause/resume/stop/play blocking.
    * Better handling of music buffers.
    * Tighter mutex locks.
    * Fixed possible segfault and deadlocks.
    * Polished code a lot, still not working as expected.
    * Some more thread safety.
    * Have endianness declared in header.
    * More code properness.
    * Trying to rewrite load functions.
    * Better error handling.
    * Implemented seeking.
    * Compiles with OpenAL backend.
    * frob -> from
    Fixed header for strndup.
    strndup wrapper for non-posix platforms.
    Some doxygen documentation fixes
    * Fixed some warnings due to behaviour changes with sdl2-config.
    * Try to terminate stuff to compensate certain platforms.
    * Wrapper for nsnprintf being used all over.
    * Added wrapper for snprintf.
    * Changed wrappers from nstring to not call function if not necessary.
    Remove trailing spaces in src/
    * Use libc strcasestr if available, otherwise our slow one.
    * Using our horrible slow implementation of strcasestr.
    * Split nstrnstr to nstring.c.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Made outfit buying/selling window more independent.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Fancy NPC get fancy icon.
    Abstracted image array stuff to cell where it is possible to set alt text.
    Removed use of header for reward in mission screen; use string format
    Fixed the rest of the text colors.
    Changed the takeoff/land time change to be based on the pilot.
    
    nenau pointed out that making everyone takeoff/land faster or slower
    based on your ship could have real effects that might be undesirable,
    so I've tweaked it to base takeoff/land speed not on the player, but
    on the individual pilot. This also has a nice effect of making large
    ships take off more slowly (giving you more time to react).
    Modify landing/takeoff speed based on default dt multiplier.
    
    This has the effect of making sure that land and takeoff time is
    always the same between all speeds.
    Fixed up lots of style errors, removed travel log at least partly
    
    Please look over this, but I had a go at removing the travel logs.
    Didn't do any testing beyond making sure it compiles. I was exhausted
    by all the things I was compelled to fix and just had to stop. I
    *think* I removed the travel log stuff though.
    
    A note on style: you consistently get a lot of style wrong and it's
    a pain to correct. Please take a look at some of the fixes I've made
    here and make further adjustments following this.
    
    In addition to the kinds of style errors I fixed, I also noticed you
    using printf to print warnings. You should *not* do this; Naev has a
    macro specifically designed for warnings, the `WARN` macro. You should
    *always* use macros like this (`WARN`, `DEBUG`, or `ERR` depending
    on the situation) for a whole host of reasons, not least of which is
    that these macros do more than just print a message. You need to fix
    all of these uses of `printf`. It's never something you should be using
    in Naev code.
    
    🕵️
    Initial mission log work completed.
    Initial mission log work completed.
    Replaced all references to SCU/STP/STU to cycles/periods/seconds.
    
    This unifies the code with the in-game dialog and should hopefully
    prevent confusion regarding what terms to use.
    
    (Recap: these abbreviations were removed from in-game use long ago
    due to confusion that is likely to happen as a result of them looking
    similar.)
    Fixed issue with period not being read.
    Removed some externs.
    Fixed warnings.
    Removed the ugly uses of cDConsole as a color for headers.
    
    Replaced those all with black; headers don't need to be a different
    color and it honestly looks nicer without one.
    Typo
    Fixed several strings and lack of gettext usage.
    Added economy statistics and last purchase price, including saving of economy data
    Scale gfx_exterior if it is not the right size
    
    This makes it possible to use a higher resolution image, which looks
    better on a hiDPI display with scaling.
    
    This change itself does not replace any of the graphics, so it changes
    nothing.
    whitespace
    equipment_addAmmo -> pilot_fillAmmo
    
    This *might* solve a bad reference I saw once, but since I don't know how
    to reproduce it I can't be certain. Either way it's clear that
    pilot_fillAmmo should be used in the takeoff function rather than
    equipment_addAmmo.
    Refill on takeoff.
    Do not persist escorts on takeoff
    
    This was resulting in duplicated escorts.
    Removed ship location altogether.
    
    This was discussed on #719: ship swapping really doesn't add anything
    to the game, so this simply removes that feature. Ships no longer have
    a location, they just travel around the galaxy with you like outfits
    do.
    
    I believe this probably also fixes #719, though it's hard to tell
    for sure. The reason I think it might have fixed it is because that
    bug seemed to be most easily triggered by following a transport
    immediately with a swap. I suspect that somewhere the copying of the
    "loc" string of ships was going wrongly, so if that is indeed the
    case, the fact that that variable has been entirely removed should
    fix it. This is just speculation, though, and it's impossible to
    tell for sure.
    
    The NPC tip about having to transport ships has also been removed,
    since it is no longer true.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Make everything fuel related an int
    Tag everything related to fuel and using double with DELETETHIS_
    Changed escape code for colors from '\e' to '\a' so xgettext plays well with it.
    More gettext.
    More gettext.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Revert "Call getfenv in nlua_pcall() eliminating the need to pass the"
    
    This reverts commit 79e36c0c1bbca2aa5fa2922651dd303bc7b87882.
    Call getfenv in nlua_pcall() eliminating the need to pass the
    environment as an argument
    Use new __RW system and nlua_register() everywhere
    Set __RW for each env
    Use nlua_pcall() almost everywhere
    Make rescue script use global lua state
    Display Commodities Tab using images for commodities
    * Should fix #497, patch by dev-random.
    If you try to steal a ship from a planet with no bar (e.g. Zaren), game crashes after naming it.
    
    Event "neutral/news.lua" calls newsL_rm() which calls bar_regen() (if landing is finished, i.e. land_loaded is set).
    land_getWid(LAND_WINDOW_BAR) called by bar_regen() returns 0 (planet doesn't have bar), and this 0 is passed to bar_genList().
    bar_genList() calls strdup(window_getFocus(wid)) where wid is 0 and window_getFocus(wid) is NULL.
    strdup(NULL) segfaults.
    
    Normally, the call to bar_regen() is skipped because "neutral/news.lua" is called before landing finishes. In this mission, player_swapShip() calls land_genWindows() through gui_load() and prematurely finishes landing.
    Refresh map button after land hooks run
    Fixed "buy map" button not showing up until after land hooks.
    
    This didn't cause a problem, but it looked weird when you were given
    a dialog box at this time.
    Avoid regenerating the land tabs over top of themselves
    
    This was only occurring when hooks caused a GUI reload, which is
    somewhat unsafe, but this seems like a useful precaution to take.
    Turn player_missions in an array of pointers
    Add local map button on initial window generation
    Add a 'Buy Local Map' button on planets that offer refuel
    Lower the landing window after recreation
    Allow the rescue script to determine its own run conditions
    Implement a system for rescuing players that get stranded on load
    
    Since a large number of planets lack a shipyard and outfitter,
    renaming or removing core outfits is a dangerous proposition, as
    it has the potential to leave players unable to take off without
    resorting to save editing.
    
    This script aims to alleviate that. It's not entirely bulletproof, and
    it could skip a few cases, but it should reliably get most broken saves
    functional again rather painlessly.
    Make pilot_cargoAddRaw ignore free space
    
    This fixes an issue where the player's cargo could be lost on load. If
    a player had n tons of cargo and then reduced their capacity below n
    and quit, on next load they would lose any cargo over the limit, with
    mission cargo being handled no differently.
    
    As a side note, pilot_cargoAdd now takes a mission ID parameter, and
    most calls to pilot_cargoAddRaw have been replaced for safety.
    Properly restore the bar image array position
    
    This stops the news from flickering after approaching NPCs (was due to
    nested toolkit loops).
    Have enter and right click approach bar NPCs. Fixes issue 213.
    Unset the planet target when taking off (allows easier autonav)
    Remove fuel cost and make refueling wholly-automated
    
    This was discussed earlier in IRC. My feeling is that fuel costs add nothing,
    yet can potentially strand new players and render saves unusable.
    
    There were also several issues with fuel being zeroed when removing fuel pods
    and engines, leading to fuel loss while experimenting with loadouts.
    Reset stress on takeoff
    Enhance filtering in the land window's outfits and equipment tabs
    
    This is a fairly monstrous commit, and unfortunately due to some necessary
    toolkit changes, wasn't able to be broken up into smaller chunks.
    
    A semi-itemized list of changes is as follows:
    
       tabwin:
          Provide both old and new tab IDs when calling onChange functions
    
       imagearray:
          Add a simple struct and toolkit_saveImageArrayData to permit easy
          saving of selection and scroll position.
    
       player:
          player_getOutfits & co. now return Outfit** instead of char**
    
       equipment:
          Added incremental text search, change the embedded tabwin into a dummy
          that just regenerates a single image array instead of maintaining five
          separate ones.
    
       land_outfits:
          Added incremental text search, as well as tab-based filtering identical
          to the equipment tab's, with some minor cleanup along the way.
    Added the capability for "black market" planets.
    
    Quite simply, a "black market" planet ignores licenses: the player
    can buy anything from a black market planet, regardless of what
    licenses would normally be required. Black market planets are
    indicated by the <blackmarket/> XML tag.
    * Some buffer clean up and formatting.
    Removed constraints when adding outfits to a ship.
    
    Change has effected the equip scripts aswell, but that had no advarse
    effects.
    Made some refractoring in the process, name and comment changes.
    The way I build the report is the most lazy way I could think of
    without storing the checks in an array/data struct with the appropriate
    string, and without writing a custom string writing function.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Fixed crashes when planet has no commodities.
    * Keep player healed while landed so we don't get ugly stuff with core slot changes.
    removed bugs and added generic news event
    * Always update the news widget when updating the bar.
    Issues have been worked out, useable now
    Semi-finished
    First "working" but WIP news
    * Whitespace.
    Various small fixes: Set Focuse to keyboard useable widgets in the landing dialog. Saved cursor position in mission computer. Fixed possible access to unalocated memory.
    comments.
    Player must have all core outfit slots filled for takeoff.
    * Do not reset heat when initializing a system, but do reset heat when landing.
    * Wrapper for nsnprintf being used all over.
    Missions tab should be 'Missions', not 'Mission'
    Updated call-sites of buttons where soft-disable fall-through is desirable.
    Large revamp and unification of the various error-printing functions in the land window.
    Save and restore focus when destroying and re-creating image arrays in the land window.
    Gave hotkeys to a large chunk of the land window's buttons, as well as the YesNo dialogue.
    Fixed up the commodities tab a little bit.
    s/Takeoff/Take Off/ where appropriate.
    * Removed superfluous function in favour of previously existing one.
    * Missions can now trigger in space.
    * Moved "load" hooks to a place player.takeoff() will work (hacks ftw).
    * Tabwins can now have tabs at the top or at other crazy places.
    * Increased size of NPC portraits in the bar image array (50% original).
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    * Events get retriggered on load, good thing? bad thing? We'll let the cat decide.
    Whitespace, typo and general style cleanup.
    Update window_addList behavior
    
    All but one point that calls window_addlist with a selected item
    changed handler calls that handler immediately after.  Update this
    to be the default behavior if there's a default item passed in.
    
    The caller in the options window had to be slightly re-worked, but
    it turned out to be a cleaner solution.
    remove duplicated includes
    
    Signed-off-by: Nicolas Kaiser <nikai@nikai.net>
    land: slim conditional branches
    
    Signed-off-by: Nicolas Kaiser <nikai@nikai.net>
    Many, many typo fixes.
    * Fixed being able to sell commodities when you don't have them.
    * Update bar npc when adding mission/event from console.
    * Implicit size casting and shit for the win.
    * Try to fix the bloody credits mess.
    * Properly fixed the warning and unified player_sound nomenclature.
    Signed-off-by: Edgar Simo <bobbens@gmail.com>
    * Attempt to fix various issues like crash with menu_main.
    * Cleared up menu_main usage.
    * Allow takeoff to be forced at any moment.
    * Always run land hooks, not just once.
    * Added API to set the land window.
    * Added API to get price at a system (both C and Lua).
    Changed time displays to use hSTU - 1 hSTU is 1% of a STP.
    * Added hooks for buying and selling commodities.
    * New time system. As seen on wiki.
    * Fixed reload land windows when swapping ship.
    * Shields take 5 seconds to start recoving once armour got hit.
    Remove a bit of ambiguity from the mission tab.
    * Always open land tabe when landing.
    * Fixed warnings on some set ups.
    *  Added news image.
    * Separated the pilot cargo stuff into pilot_cargo.[ch].
    * Renamed some stuff to be more consistant.
    * Fixed asexual reproduction of the spaceport bar.
    Moved cargo-related API functions out of the player module and into the pilot module. They operate on any pilot now.
    * Minor correctness fix.
    * Whitespace.
    * Update NPC when a hook is successfully run at the land window.
    * How the hell didn't I see this before...
    * Much fancier camera model, much more in tune for doing fancy camera Lua API.
    * Should fix segfault with player.addOutfit() with land hooks.
    * Initial camera movement to expose bugs. It's pretty cool but the stars are wack.
    * Pretty hackish way to regenerate the land windows when changing GUI.
    * Try to keep focused same guy in bar after approach.
    * Fixed land render mod.
    * Fix full size pilot flash for a frame when landing.
    * Do not run event/mission hooks when game starts landed.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Instead of hardcoding 32 for credits2str buf length, added #define to make it much more sane.
    * Split outfits code from land.c.
    * Moved land button sizes to be global and not local to reduce copying.
    * Code clean up.
    * Code clean up.
    * Move shipyardstuff out of land.c in a first attempt to thin land.c.
    Added coloured backgrounds to the outfit store, text is now black or white depending on bg (for improved contrast).
    * Use non-modified target graphic variant for stores.
    * You can see outfit slot size in the outfit buy window.
    * Fixed wrong values for targetting graphics.
    * Implemented the basic advanced mission markers as per the proposal.
    * Fixed some bugs with images especially spaceport bar.
    * Start off landed.
    * Toolkit image widget now has dimensions parameter.
    * Hailing planets no longer has them take up more than the window.
    * Fixed issue not allowing NPC pilots to land.
    * Fixed many "static landing" issues where the distance from planet center was static.
    * Using planet radius now instead of graphic size for planet size assumptions.
    Fixed several more minor bugs. Error dialogue generator is fully functional, and all edge cases should be addressed.
    Fixed some minor bugs, moved licensing checks around.
    Moved several sanity checks into functions. Replicates old functionality 100%, but is a work-in-progress.
    Removed checks for NULL in places that call player_hasLicense.
    Cleaned up shipyard_trade somewhat.
    Cleaned up shipyard_trade somewhat.
    Moved equipment tab ship list updating into player.c (with sanity check).
    * Increased credits minimum buffer to 32. Fixed code to use 32 always.
    * Cleaned up externs and useless parameters for pilot_newShip().
    Added comments to shipyard_trade, fixed a few trailing spaces.
    Players can now trade their ships in when buying new ones.
    * Only generate bar NPC when there is a spaceport bar.
    * Only generate mission computer missions when there is a mission computer.
    * Removed hardcoded delays.
    * implemented land/takeoff without visual cue.
    * Fixed tech loading.
    * Fixed tech saving.
    * Added test tech.
    * Loading outfits from tech group now.
    * Tech stuff should load and write properly now.
    * Moved nav_hyperspace and nav_planet to pilot instead of player struct.
    * Major refactoring of the pilot. It is now all contained in a struct.
    Added shift/ctrl modifiers to commodity tab.
    * Ships you don't have licenses for are now marked as non-buyable.
    * Can not sell licenses.
    * Whitespace.
    * Fixed major flaws in the last credit patch.
    * Better money handling, credits shouldn't overflow anymore.
    * Recheck refuel in case player doesn't have autorefuel on.
    * Remove refuel info if you're full.
    * Should handle fuel better now.
    * Some changes to coloring for player messages.
    * Don't clear messages on take off.
    * Fixes typos in commentaries by rudi_s.
    * Fixes typos in commentaries by rudi_s.
    Changed the right mouse click API so that it won't pass the name anymore. It is seldom useful. and can be easily asked for.
    Add right-click-buy to outfits
    Add right-click-buy to shipyard
    Fixed a segfault that was caused by registering the right-click callback to the wrong widget.
    Added right-click callback to imagearray widget. Registered a
    right-click callback for the available outfit imagearray.
    * Services are more specifically defined now.
    * Handle player.takeoff() from NPCs.
    * Handle player.takeoff() from NPCs.
    * Indicate if a planet has no refueling services.
    * Planets with commodity exchange and no commodities shouldn't segfault anymore.
    * Fixed more potential bugs.
    * Stop sounds on takeoff.
    * Event NPC stuff working now.
    * Fixed issue with hooks saving event hooks.
    * Added event land as start condition.
    * Morre corrections.
    * COMPILES AGAIN - and seems to work at least like before (NPC do).
    * Committed npc stuff just in case - DOES NOT COMPILE.
    * Better focus handling in equipment window.
    * Fixed accuracy giving 2x the bonus/malus.
    * Stats are working again.
    * Corrected stat text placement.
    * Fixed placement of stats.
    * Actually display proper jump time for ship.
    * Properly loading ship stats.
    * Detect bad nodes in ship.
    * Fix minor marker bug.
    * Fixed mission computer after accepting not updating.
    * Campaigns should be continuous again.
    * Clear markers after running land hooks.
    * Display slot type in outfit shopping window.
    * Can't "sell" map anymore.
    * Formatting.
    * You can now specify default ship name.
    * When you buy a new ship you don't automatically change into it.
    * Should fix minor visual glitch.
    Tutorial modularized.
    * Shininess, by Deiz.
    * Custom widgets use userdata now.
    * Changed how equipment slots are rendered so it acts like another widget now.
    * Revamped info menu, not finished yet though.
    * Added more hooks and hook checks.
    * Make shipyard thingy more compact.
    * Oops, wrong sign.
    * Minor clean up.
    * Display all ship info at shipyard, tight fit.
    * Display free space at mission computer.
    * Better handling of mission end conditions.
    * Added cpu to shipyard information.
    * Fixed memory leaks.
    * Don't change text on checkbox for automatic refuel.
    * Update outfit quantities when changing window.
    * Fixed regression that caused small image arrays to not update on key events.
    * Text/colour tweaks by Deiz.
    * Land window is actually a window at or above 1024x768.
    * Added quantity to outfit window.
    * Fixed bug with mission tab not updating when expected.
    * Improved behaviour with fullscreen.
    * Implemented fullscreen windows.
    * Display a few more ship stats.
    * Split equipment stuff from land stuff to make it more understandable.
    * Clear messages on take off.
    * Fixed mistake in the printf.
    * Fixed bug in energy comparison.
    * Corrected text when driving stats negative.
    * Fixed the text on the slot overlay.
    * Where is usually longer then Transportation Price.
    * Display system name of ships player owns.
    * Make sure planet is valid for player ships.
    * Fixed segfault.
    * Improved fighter bay behaviour with equipment interface.
    * Changed outfit presentation a bit.
    * Tweaked messages a bit.
    * Should fix issues with removing outfits.
    * Enforce equipment limits.
    * Should no longer be able to drive stats negative with modifications.
    * equipment_addAmmo shouldn't segfault anymore.
    * Converted commodities back to int.
    * You can now equip only your current ship if there's outfitting and no shipyard.
    * Display ship mass at equipment menu.
    * Can now longer add a second afterburner.
    * Checkbox works for autorefuel \o/.
    * Added quantity to the tooltips in the equipment menu.
    * Fixes some segfaults when selling ships.
    * Moved the display thing in the equipment slots to the overlay.
    * Only display insufficient CPU when it makes sense.
    * Minor cosmetic fixes.
    * "Not enough" -> "Insufficient".
    * Don't reset ship direction when interacting.
    * You can only equip one afterburner now.
    * No warning on not enough CPU (for uniques).
    * Maps and licenses should work properly again.
    * You can buy more afterburners now.
    * Fixed land window not showing up properly.
    * Unequip regenerates outfit list.
    * Fixed segfaults with new games.
    * Automatically reload outfits.
    * Fighter bays work again.
    * Added outfit to Fighter Bays.
    * Automatically add ammo if available.
    * Remove ammo when removing outfits.
    * You can now equip ships that are not the one you are in.
    * You must specify modification cpu value as negative.
    * Fixed bug in displaying low outfit overlay.
    * Modified it so some things do display with one decimal.
    * Don't display decimals with outfits/ship stuff.
    * Fixed adding of outfits.
    * Improved handling of mass.
    * Changed commodities to doubles.
    * Properly display ship stats in the equipment window.
    * Add slot numbers to shipyard screen.
    * Using short descriptions for the outfit landing window.
    * Made the drawAltText code common.
    * More colour coding help.
    * If can't equip change text to red.
    * Warn if player doesn't have enough CPU to mount.
    * Added overlay.
    * Slots where the outfit fits change name colour.
    * Some code clean up.
    * Hint player how to remove/add outfits.
    * Displaying short outfit description.
    * Display the mount point when selecting high energy slot.
    * Make turn rate dependent on actual ship turn rate.
    * Fixed equipment buttons.
    * Render actual ship spinning around.
    * On mouseover it displays the name of each slot outfit.
    * Remove warnings.
    * Do not regenerate outfit list unless needed.
    * You can now actually add and remove outfits.
    * You can now select the equipment slots.
    * Added the CPU bar.
    * Custom widget is starting to take shape.
    * Minor cosmetic tweaks.
    * Fixed mission computer adding markers when not needed.
    * Update on tab change in landing menu.
    * Fixed minor bug with saving landing tab.
    * Implemented unequip.
    * Swapping ships works.
    * Fixed minor bug with saving landing tab.
    * Rough draft of equipment land tab, not done yet.
    * Fixed engine sounds getting stuck.
    * Should avoid segfaults.
    * Compiles cleanly - nothing works.
    * Fixed memory issues and memory leaks.
    * Fixed warning.
    * Fixed minor divergence in window sizes.
    * Fixed your shipyard again.
    * Make sure restored tab is valid.
    * Landing window remembers last tab you had open.
    * Fixed segfault.
    * Seems like mission accepting works.
    * Fixed formatting and adjustments.
    * Spaceport bar should work - missions need adapting.
    * Integrated news into spaceport bar.
    * Starting to add framework for new bar.
    * Made buttons same height.
    * Outfits follows shipyard example.
    * Changed names a bit.
    * Your shipyard matches normal shipyard.
    * Made shipyard look good again.
    * Some cosmetic fixes.
    * Changed close to takeoff.
    * Move to use tabs - not complete yet.
    * Stop plyer sounds on landing.
    * Events actually trigger now.
    * Do not allow changing ships when there are deployed ships.
    * Should fix all the issues with stranded fighters and multiple
      fighters.
    * Persistant escorts now are working.
    * Have escort automatically get removed when disabled from escort list.
    * Added a parameter to choose whether to add to list when creating escort.
    * Prune dead escorts on landing.
    * Removed ugly casts.
    * Added hook types.
    * Only add news if planet has basic landing stuff.
    * Cleaned up possible warning if NAEV is closed abruptly.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * More typo fixes by zid.
    * Display player credits above refuel button.
    * Made it so forced takeoffs by missions don't take time.
    * Fixed some issues with markers.
    * No longer have windows "ghost" when you exit at weird times.
    * Avoid possible segfault.
    * Mission computer now displays current date.
    * Mission computer now selects the system and routes to it when selecting a mission.
    * News is much fancier now.
    * News rewrite - not finished yet.
    * News looks prettier now.
    * Better cleaning up of landing.
    * News now generated when landing.
    * Initial news implementation.
    * Improved map zoom handling.
    * Custom widget mouse movement function now gives dimensions.
    added a map in 'mission' section
    * lstYourShips was actually an image array, talk about silly.
    * Moved more stuff out of toolkit.
    * Added new get function for image arrays.
    * New untested mission, probably needs debugging.
    * Make sure player can accept the active mission from C side code.
    * Use landing_sinister when landing on Eiroik for missions.
    * Game now backs up saves.
    * Code clean up.
    * Warn user if saving fails.
    * Added flags to image creation to control transparency mapping.  Should speed up theloading some and reduce memory usage.
    * More doxygen.
    * Even more doxygen.
    * Fixed possible double free due to uninitialised memory.
    * First patch to try to add a dynamic economy.  Economy is static atm.
    * Some code clean up.
    * Fixed a memory leak.
    * Fixed handling of outfit licenses.
    * First implementation of Licenses.
    * Major rewrite to xml.h increasing sanity checks.
    * Gui can now handle overlays.
    * Minor fix.
    * Missions destinations are now marked when selecting missions at mission computer.
    * Doing some checks about refuel button when player loses money in case he doesn't keep enough.
    * Added another price check for ships.
    * Refuel button should appear more often now.
    * Using unsigned int for prices instead of signed int.
    * Should fix the extremely rare case of segfault on accept mission.
    * Fixed your shipyard information getting cut off.
    * Fixed the disappearence of outfit prices.
    * Fixed shipyard text description dimensions.
    * Fixed ingame warning.
    * Major toolkit change to simplify things a lot, makes it more object oriented.
    * Tweaked obsolete transportationPrice to be more realistic with new masses.
    * Added commodity land mission checks.
    * Some doxygen for land.c.
    * Implemented outfits/shipyard/land missions.
    * More properly landing cleanup.
    * Fixed bug with exiting while landing and switching pilots causing space warping.
    * Your shipyard now follows same style as the normal shipyard.
    * Made toolkit_getList apply to Image Arrays too.
    * Use image arrays in shipyard.
    * Made outfit_getTech return outfits, not names.
    * New widget: Image Array.
    * Polished outfits to make use of new widget.
    * Seperated dialogues from toolkit.
    * Added faction logos.
    * Display faction logos on land.
    * outfit.c: Cleaned up some code.
    * You can now sell your ships.
    * Input dialogues can now be cancelled and return NULL.
    * Changed some syntax.
    * Added some doxygen.
    * More doxygen and code cleanup.
    * Planets with tech 0 should no longer segfault.
    * Can now handle outfit places without outfits.
    * Added planet_getClass().
    * Added punctuation to player_message()s.
    * Moved commodity text a bit lower.
    * You can no longer buy a map if you already know the area.
    * Load gfx_exterior for planets only on demand now.
    * New CFLAG: -Wshadow.
    * Fixed all new warnings.
    * Removed needless linebreaks from ship.xml descriptions.
    * outfit.xml: New outfit: Heavy Ion Turret.
    * outfit.xml: Fixed newlines in outfit descriptions.
    * land.c: Lowered descrpition text to compensate for no newlines.
    * gfx/outfit/store: New graphics for turrets in stores
    * Removed extra new lines from planet.xml descriptions and bar descriptions.
    music is now controlled by lua \o/
    new philosophy, when you swap ships your cargo stays with you, will fix issues
    cargo affects weight, fixed bug when changing ships
    cosmetic patch -> gl_screen.[wh] = SCREEN_[WH] in most places
    patch by Nicholas Niro <nik_89@neuroponic.com> for older gcc
    conserve hyperspace path when taking off
    major outfit add/rm cleanup and new outfits that play with cargo/weapon space
    mods can now add cargo, added cargo pod as an example, fixed rmOutfit bug
    you can now actually refuel
    save when taking off or quitting, instead of land (to save new ships boughten)
    zan is complaining again
    fixed the annoying as hell mission disappearing when no carge space
    fixed a couple of bugs with saving system
    big update to add another mission
    added time in the form of the galactic date
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    major commit, first fancy bar mission, alot of improvement
    introduced getListPos to get the position of the list, cleaned up mission stuff
    fixed silly bug with your shipyard, change disabled button
    improve land gui
    some cleanup to try to find the segfault fault
    fixed segfault, cosmetic patch
    fixed the toolkit module in lua, fixed accept bug, segfaults :)
    fixed segfault and proper hook cleanup
    cosmetic fixes to the shipyard windows
    you can now disable/enable buttons
    improved mission computer
    you can now view missions at the land screen
    game now tries to load up the missions properly, except lua needs more bindings :)
    give active missions ids and use ids for removing hooks
    renamed alert, YesNo dialogue_ instead of toolkit_.  added dialogue_input
    added new simple toolkit_YesNo confirmation dialogue
    changed everything to use player->credits instead of player_credits
    can now change ships once you've boughten them :)
    added alot of your ships stuff and cleaned up some code
    cleaned up land.c a bit more
    cleaned up land.c a bit
    branch:      naev
    added player_ships and player_getShip to manipulate player ships
    branch:      naev
    enforce minimum length of 3 for player and ship names
    branch:      naev
    player gets all the ships he buys saved in a stack, just need to be able to change them
    branch:      naev
    You can now name your ship too
    branch:      naev
    almost working player input, need to hack font up first
    branch:      naev
    can now see free space in commodity window (zan)
    branch:      naev
    changed buy/sell in outfit window around as zan suggested
    second font width sanity patch for land windows
    branch:      naev
    first fix to use the sane font width properly
    branch:      naev
    added afterburners
    branch:      naev
    added stare outfit graphics
    branch:      naev
    energy matters and is actively used now
    branch:      naev
    landing windows cosmetic patch
    branch:      naev
    can now buy/sell commodities, but they're all the same price
    branch:      naev
    can now buy/sell cargo, minor fixes
    branch:      naev
    planets now have commodities, but you can't do anything with them yet :)
    branch:      naev
    cleaned up silly commodity exchange message
    branch:      naev
    outfits and shipyard looked ugly, made as big as land window
    branch:      naev
    implemented special techs
    branch:      naev
    preliminary tech support (only raw, no special tech yet)
    branch:      naev
    you now need permission to land
    branch:      naev
    wasn't properly enforcing outfit selling/buying with limits
    branch:      naev
    custom mouse events for custom widgets
    branch:      naev
    map framework, changed systems name to systems_stack for coherency
    branch:      naev
    you can use shift/control to buy more outfits at a time
    branch:      naev
    make money selling stuff, and more buying stuff checking
    branch:      naev
    more weapon space for ships, space limit on outfits
    branch:      naev
    comestic outfit/shipyard changes
    branch:      naev
    changed some player variable names, immproved outfit buying/selling
    branch:      naev
    can now buy outfits
    branch:      naev
    split newShip from player_new so you can now buy ships free (for now)
    better support for 640x480
    branch:      naev
    improved  alot of things for shipyard, including shipyard
    branch:      naev
    You can now visualize the ship well, as well as get a description in the shipyard
    branch:      naev
    more list support, more shipyard features, allow NULL text in widget
    branch:      naev
    added rough outlines for shipyards and outfits
    branch:      naev
    click focus for lists
    branch:      naev
    now selected list stuff actually renders and you can focus it
    branch:      naev
    list widget renders, now just needs to work properly
    branch:      naev
    some music playing sanity
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] you can now set the volume from CLI or conf file
    fixed possible segfault when switching musics
    branch:      naev
    [svn] player heals when taking off
    branch:      naev
    [svn] Added basic music support to game
    OpenAL and VorbisFile are new deps
    branch:      naev
    [svn] prepared for the upcoming toolkit_list
    fixed some sanity around turning pilot functions, now in pilot_face
    added basic rough on the edges hyperspace implementation
    branch:      naev
    [svn] windows now get a name embedded
    added empty commodity exchange
    tried to sanitize secondary weapon/weapon shooting
    changed pilot stack and star stack to not lower memory allocation
    fixed landing/takeoff to actually affect the system
    branch:      naev
    [svn] added the spaceport bar (no missions or hirelings available yet)
    branch:      naev
    [svn] added fuel concept
    added News window
    branch:      naev
    [svn] game now uses planet services (they aren't implemented yet though)
    took out an accidental DEBUG i left in
    branch:      naev
    [svn] improved the font usade
    now you can print blocks of text
    added planet descriptions
    branch:      naev
    [svn] added support for images of planets
    cosmetic toolkit changes
    changed the gl_blit functions to work with doubles instead of Vector2d pointers
    took opportunity to clean up space.c xml (bringing it up to xml.h standard)
    cleaned up code
    branch:      naev
    [svn] moved colours out of opengl
    improved land graphics
    added more sane toolkit api
    branch:      naev
    [svn] Basic toolkit implementation done
    added gl_printMax and gl_printMid which was long overdue
    using flag system with gl_screen
    optional AA for primitives
    minor pause behaviour fix
    branch:      naev
    [svn] Basic toolkit implementation (but ugly)
    Basic landing
    Pause bugfixes
    Don't allow the ship computers to access info the player doesn't have
    
    Namely,
    1. AutoNav shouldn't disable until a hostile ship's identity is no longer hidden
    2. Targeting hostile ships shouldn't select ships who's identity is hidden.
    Now autonavs to on top of disabled or stationary moving targets to allow boarding easier
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Fixed friendly/hostile setting.
    
    The previous system was very hodge-podge and had a lot of duplicated
    checks, leading to some inconsistent behavior. I've consolidated all
    checks to the setHostile / setFriendly / isHostile / isFriendly
    functions.
    
    This fixes a bug where a pilot that was set as friendly but became
    hostile due to aggression was impossible to target with the "target
    nearest hostile" button.
    corrections on the autonav follow function
    made autonav follow ships
    Fixed a bad read with speed adjustment.
    Change the sound speed based on base time rate.
    
    Requested by bobbens: this makes it so that sound plays at 1x if
    you're at your ship's base time rate, etc.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Make everything fuel related an int
    Tag everything related to fuel and using double with DELETETHIS_
    More gettext.
    Changed escape code for colors from '\e' to '\a' so xgettext plays well with it.
    Fixed speed being reset due to presence of disabled and bribed ships.
    Improve autonav when approaching jumps from bad angles
    Reset time acceleration when dead
    Respect autonav_timer regardless of hostile presence
    Prevent one other case of player.autonav_timer clobbering
    * Don't reduce autonav timer if it was set to a longer duration when
    pausing autonav.
    Replace active cooldown key with autobrake
    
    This is another commit that ended up being larger than intended due to
    adjacent diffs. It can be broken down into three separate things:
    
    Autobrake is triggered by the same key that used to handle cooldown.
    On the first press, it triggers braking if moving, cooldown otherwise.
    If pressed while already braking, cooldown starts when braking ends.
    
    player_restoreControl is now the go-to function for aborting autonav,
    cooldown, and all other control-monopolizing states.
    
    Lastly, a number of VMOD(vel) < MIN_VEL_ERR calls have been replaced
    with a handy macro.
    Don't bother tracking hostiles beyond the current frame
    
    The bug that was at the root of this (pilots having 0 ew_evasion for
    one frame after creation) has been fixed, so it should no longer be
    an issue.
    Minor autonav cleanup
    Remove the remainder of the autopause logic.
    Always abort active cooldown when engaging autonav
    Removed the "pause instead of abort" option.
    
    This was clearly designed to use in conjunction with the old autonav
    abortion behavior. player_autonavAbort is still used in some places,
    but I don't think it's particularly useful to give the player the
    option to pause instead of abort in these places.
    
    Also includes a comment fix that I apparently forgot to merge previously.
    Remove unnecessary always-true bit of conditionals
    Improve autonav abort conditions and control handling while disabled
    If autonav speed gets reset, we aren't ramping down anymore.
    Only reset time compression once hostile pilot is identified, not when they are in
    fuzzy range.
    Some small improvements to autonav speed resetting.
    Added a fix for those times when ships are spotted for one frame.
    
    I think that is a result in a defect in spawning of ships. Anyway,
    I worked around it by requiring enemy presence for two frames in a
    row to trigger time reset. It works as it should. This makes the
    system much smoother.
    
    Also made it so the delay for speeding up time again is only used
    for damaged-based time resets.
    Require damage for slowdown when slider is below "enemy presence".
    
    I also added a 2-second delay after time is reset, before speeding
    up again, to give you time to react when you take damage. A minor
    side effect of this is those times when enemy presence is detected
    for one frame, which I think is incorrect (maybe due to the way ships
    spawn?), are going to be much more noticeable.
    
    Conflicts:
    
            src/player_autonav.c
    Fixed autonav time resetting to work with *all* hostiles.
    
    The previous method only worked for *enemies*, which meant that
    other hostiles (normally generated by mission scripts) were being
    ignored. The new method takes all hostiles into account.
    Don't ever make time slow down unless there are hostiles present.
    
    After all, what's the use of it? So now, the slider being lower than
    max doesn't mean that you have to wait for all your shields to come
    back before time will speed up when there aren't even any enemy ships
    around.
    Fixed nebula slowing you down.
    Changed the "lock" slowdown to simple enemy presence.
    Updated text in the options menu.
    Don't shout to the player when slowing down because of danger.
    
    Main reason: because of a recent commit, it would keep shouting
    "Shield below damage threshold!", and that would look weird. The
    messages aren't needed, anyway; the player can see what's going on
    just fine themselves.
    Fixed documentation comment for player_autonavShouldResetSpeed.
    Keep time slowed down until shield is above damage threshold.
    Changed abortion of Autonav when danger occurs to slowing down time.
    Added player_autonavResetSpeed function.
    Fixed some minor indentation problems.
    * More correctness and documentation for approachAutonav.
    Added option to pause game instead of disabling autonav when damage is taken
    * Fixed disabled ramp down.
    Autonav/cooldown should not be player-abortable while under manual control.
    Active outfits should be disabled and not toggleable when a ship is disabled.
    Fixed braking completion false-positive.
    Axed a bunch of duplicate braking code in favour of the generic function.
    Fixed up cooldown abort while braking.
    More unification and integration of the cooldown mechanic.
    Added a discrete cooldown mode for pilots.
    * Allow a compression limit of 1.
    Added player_autonavAbortJump, for allowing in-system autonav to persist despite hyperspace target wonkiness.
    Separated autonav-to-planet and autonav-to-position to enable fancier output and avoid ugly GOTO on the overlay.
    * Whitespace and code styling.
    Added autonav-to-planet and made some small polish tweaks to the autonav.
    Autonav will now use 2x speed as a floor if double speed is enabled.
    * Variable fuel consumption.
    * Minor corrections and voodoo.
    * Autonav kicks in to some extent when player is disabled.
    * Cosmetics.
    * Implemented instant jumping on new stats architecture.
    * tc_max shouldn't be negative.
    Fix some minor nigh-impossible crashes; remove pointless initializations and such.
    Remove trailing spaces in src/
    Put tc_max into the player struct instead of externing.
    Tweaked compression noise crossfade so it's also dependent on maximum compression.
    Improved the autonav exit conditions... again.
    0 == unlimited time accel.
    Added configuration option for limiting maximum time multiplier.
    General improvements to autonav exit behaviour.
    Autonav shouldn't auto-abort when taking nebula damage.
    Improved the autonav timer.
    Relax the autonav aobrt conditions if the player reinitializes autonav soon after a previous abort.
    Added variable autonav exit conditions and a slider to control them.
    Autonav key (or double-clicking a jump) will abort autonav if it's already enabled.
    * Don't display superfluous "preparing for hyperspace" messages (fixes issue 94)..
    * Whitespace.
    Added two new Lua API functions, for enabling or disabling the ability to jump or land for each pilot.
    * Autonav time compression velocity to compress to is now defineable in the conf.
    * Preliminary cinematics mode support.
    Autonav time compression takes real maxspeed into account.
    * Made the speed limit internal part of the runge-kutta function.
    * Fixed issues with minbrakedist.
    * Autonav time compression doesn't go up while paused.
    Retain doublespeed setting across autonav.
    * Fixed irrational hard limit behaviour in ramp up of time compression.
    * Fixed ramp down not getting triggered with autonav.
    * Code commentaries.
    * Changed how the velocity handling works with autonav ramp down so it doesn't start after jump in.
    * Jumping as also affected by ramp down.
    * Improved accuracy of the ramp down.
    * Increment depends on ship max speed.
    * Slowdown approximation, needs more work.
    * Improved how autonav is handled by unification of code.
    * Time compression level is based on ship speed now.
    * Time compression works with autonav now.
    * Split player autonav stuff from player.[ch].
    Fixed header for strndup.
    strndup wrapper for non-posix platforms.
    * Fixed some warnings due to behaviour changes with sdl2-config.
    * Whitespace.
    * Added wrapper for snprintf.
    * Changed wrappers from nstring to not call function if not necessary.
    * Using our horrible slow implementation of strcasestr.
    * Split nstrnstr to nstring.c.
    Don't think it makes much difference, but updated copyright year.
    Remove all C code meant to support SDL < 2.0.0
    Readme updates.
    Ugly implementation of fullscreen toggle keybind
    Initial commit of resizing and fake fullscreen
    
    All of this is exclusive to SDL2.
    
    SDL_WINDOW_FULLSCREEN_DESKTOP allows Naev's window to be the size of
    the current screen without setting video mode (and thereby turning off
    other screens, messing up background window positioning, etc.), but to
    use it, we need to be able to resize the GL viewport on demand.
    
    The work required to allow that also permits dynamic resizing while
    playing, as long as a few other things are also reinitialized (a minor
    issue).
    * Properly display beta version in the load menu.
    * More bobbens paranoia around long ints and saving and such.
    * More version voodoo.
    * Whitespace.
    Comment promised a sad panda but omitted one. Resolved the issue with a panda.
    * Fixed segfault when jumping.
    * Warn if save version mismatches.
    * Version parsing code is now in naev.c.
    * Naev not NAEV.
    * SDL_QUIT event should no longer no a non-saving quit.
    * Update copyright.
    * You can now set the position of the fps stuff.
    * Hack to work around lack of PRIu64 on some platforms, should probably be done with the autotools...
    * Simulate system for 15 seconds before player enters.
    * Updated copyright.
    * Cleaned up the horrible hack.
    
    I now fail slightly less at global variables.
    * Added per-faction presence view.
    * Should fix some warnings on windows and the likes.
    * Look for ndata under dirname of argv[0] on posix systems when all else fails.
    * Using negative for revisions for VREV set beta status.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Updated copyright date.
    * Patch should make NAEV more windows friendly.
    * Introduced the concept of FleetGroups.
    * Code clean up.
    * First large ndata patch.
    * Major rewrite to xml.h increasing sanity checks.
    * Gui can now handle overlays.
    * Increased PATH_MAX to posix minimum.
    * Allow reading ndata-version by default.
    * Added support for defining your own data path in the makefile.
    * Changed data file's name to ndata.
    * Preliminary doxygen support.
    * Added another silly define: FABS().
    * Added naev_version() to get the version.
    patch by Nicholas Niro <nik_89@neuroponic.com> for older gcc
    added M_PI to naev.h for the people with weird setups
    changed a few things to be power of two-y
    save version in savegame
    license update
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    added new simple toolkit_YesNo confirmation dialogue
    branch:      naev
    split boarding from player.c to board.c
    branch:      naev
    forgot two files (new main.c and main.h)
    Removing remaining uses of lightuserdata
    
    There two places are the only ones where it was being used.
    
    This fixes Naev with Luajit on aarch64:
    https://github.com/Kong/openresty-patches/pull/47/files
    added spfx utility containing sound play for now
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Removed logid from lua.  Logs now created/appended using the id string.
    Created nlua_shiplog, and moved log stuff out of nlua_mission.
    Updated example in shadowvigil.lua.
    Fixed up lots of style errors, removed travel log at least partly
    
    Please look over this, but I had a go at removing the travel logs.
    Didn't do any testing beyond making sure it compiles. I was exhausted
    by all the things I was compelled to fix and just had to stop. I
    *think* I removed the travel log stuff though.
    
    A note on style: you consistently get a lot of style wrong and it's
    a pain to correct. Please take a look at some of the fixes I've made
    here and make further adjustments following this.
    
    In addition to the kinds of style errors I fixed, I also noticed you
    using printf to print warnings. You should *not* do this; Naev has a
    macro specifically designed for warnings, the `WARN` macro. You should
    *always* use macros like this (`WARN`, `DEBUG`, or `ERR` depending
    on the situation) for a whole host of reasons, not least of which is
    that these macros do more than just print a message. You need to fix
    all of these uses of `printf`. It's never something you should be using
    in Naev code.
    
    🕵️
    added @usage tages to the lua
    Added a remove log functionality, so that unimportant logs can be automatically removed.  Also limited the journey log to the 6 previous journeys.
    Removed printf statement
    Ship log implemented and examples in some missions
    Ship log implemented and examples in some missions
    Removed unused leftover tutorial stuff.
    Fix mission "The Runaway"
    
    During the mission player gets to decide how to finish the mission:
    they can release or capture Cynthia.
    Player's choice is not saved and doesn't affect the outcome of the
    mission if the game is reloaded before the mission is finished.
    
    The fix is to check the text of the OSD item in the final part of the
    mission:
    
    * Implement misn.osdGetActiveItem
    * Check active OSD item to determine mission state
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    gettext for nlua modules.
    Fixed typo.
    Some luadoc stuff.
    You can now claim strings and not only systems.
    Set __env/__misn before each function call again
    
    I seem to have misunderstood how this was working. This should fix some crashes.
    Replace remaining uses of Lua globals with Lua environments.
    
    This fixes crashes in the tutorials (and probably other events).
    Revert "Call getfenv in nlua_pcall() eliminating the need to pass the"
    
    This reverts commit 79e36c0c1bbca2aa5fa2922651dd303bc7b87882.
    Call getfenv in nlua_pcall() eliminating the need to pass the
    environment as an argument
    Use new __RW system and nlua_register() everywhere
    Use nlua_pcall() almost everywhere
    Make rescue script use global lua state
    Run music scripts in global lua state
    Make background script use global lua state
    Use new nlua_register() API in nlua_loadCamera()
    Correction to my earlier library loading hack; use it in evt and misn
    
    I forgot about this...
    Clean up __evt_delete and __misn_delete
    Make sure misn_runEnd() is called
    Remove __evt and __misn globals after they are used
    Events using common lua state
    
    Still need to fix some things
    Create nlua_register() function
    Intial port of missions to single lua state
    
    Does not properly implement loading of all needed libraries, so somewhat
    broken for now.
    Add types to lua api docs, and other documentation improvements
    * Added a clarification to misn.cargoAdd documentation
    Replace memcpy with struct assignment
    Make LuaSystem an int instead of struct
    Make LuaFaction an int instead of struct
    Don't use a pointer to a pointer
    Turn player_missions in an array of pointers
    * Lua will error if mission is accepted twice.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Give write access to bkg module for events and missions.
    Luadoc fix.
    * Wrapper for nsnprintf being used all over.
    * Wider default width for message boxes.
    * Fixed example usage in luadoc.
    * Mention npc id.
    Fix some minor nigh-impossible crashes; remove pointless initializations and such.
    Many, many typo fixes.
    * More removal of lua_next for ordered lists.
    * Using macro for done.
    lua headers are system headers, include them that way
    * Mission Lua errors should produce stack traces now.
    * Fixed cases where the "__save" member of a table would cause segfaults.
    * Create warnings.
    * misn.claim() works with single systems and has more error checking.
    * More LLVM (scan-build) fixes
    * OSD messages get sorted by mission priority.
    * Lowered cargo mission priority.
    * Fixed mission crash.
    * Rewrote hooks to be a linked list (bit buggy still).
    * Implemented going back to main menu from Lua (from new tutorial module).
    * Fixed hooks not working.
    * Fixed segfault because when misn_accept is run the mission pointer can change.
    * MAJOR COMMIT - May bring breakage.
    * Removed global variables from nlua_misn.c, nlua_event.c and nlua_hook.c
    * Added tutorial button.
    * Do not auto create OSD (needs to modify missions to take this into account).
    * Shouldn't segfault anymore when adding blank OSD.
    * Do not allow OSD creation on non-accepted missions.
    * Added -Wredundant-decls and fixed all new warnings.
    * Fixed claim functions.
    * Added mission API to claim.
    * Made the Lua Systems metatables safe when adding new systems and causing the system array to realloc.
    * Added the background, camera and tex modules to missions and events.
    * Commentaries.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Luadoc.
    * No errors on misn.markerRm.
    * Fixed typo in Luadoc.
    * Luadoc and Doxygen.
    * Implemented the basic advanced mission markers as per the proposal.
    * Renamed misn.addCargo, misn.rmCargo and misn.jetCargo to misn.cargoAdd, misn.cargoRm and misn.cargoJet.
    * Fixed some memory corruption.
    * misn.setMarker with no parameter should properly clear the systems now.
    * Removed obsolete mission/event specific timers in favour of the hook.timers.
    * Luadoc.
    * Major refactoring of the pilot. It is now all contained in a struct.
    * Prevented segfault on bad cargo name.
    * Better error handling for missions and events especially within hooks.
    * Better Lua stack balancing when mission is spitting out errors.
    * Fixes OSD.
    * osdActive now uses Lua indexes instead of C indexes.
    * Fixing really minor possible segfaults and other misc issues detected with scan-build.
    * Set mission title by default to mission.xml name.
    * Updated documentation.
    * Move misn.takeoff() to player.takeoff() and updated usage.
    * Added sample event for random npcs.
    * Added npc API to missions.
    * Luadoc.
    * Better handling of mission end conditions.
    * Added function to forcibly unboard the player.
    * Implemented mission priority and order mission lists.
    * Fixed minor memleak detected by Deiz.
    * Luadoc.
    * Fixed obscure segfault.
    * More segfault safety.
    * More correctness in code.
    * Hooks should work with both events and missions now.
    * Made some nlua naming consistant.
    * Luadoc.
    * Spaceport bar should work - missions need adapting.
    * Integrated news into spaceport bar.
    * Added API to set mission priority.
    * Starting to add framework for new bar.
    * Fixed some memory issues.
    * Luadoc.
    * More correctness.
    * Automatically create OSD if not explicitly created.
    * Properly load OSD now.
    * OSD mission bindings.
    * Added the conditionaly subsystem to replace the mission checkCond stuff.
    * Constness.
    * Added CLI specific API for starting missions.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Added luaL_checksystem.
    * Constness.
    * Cleaned up some Lua code.
    * Properly detect types.
    * Fixed some issues with markers.
    * Added marker types to Lua API.
    * Mission now saves marker types.
    * Should compile again.
    * Luadoc.
    * Changed some of the naming.
    * Split player stuff from nlua_misn.
    * Removed hook stuff from nlua_misn.c
    * Removed diff module from nlua_misn.
    * Split variables from nlua_misn.
    * Small correctness patch.
    * Should fix warning.
    * Fixed some possible issues.
    * Put framework for distress signals handled in AI.
    * Fixed some ai functions.
    * New untested mission, probably needs debugging.
    * Should fix possible segfaults.
    * More Lua stack balancing.
    * Even more doxygen.
    * Moved xml.h to nxml.h.
    * Added more complicated xml parse functions in nxml.c.
    * Changed misn_lua to nlua_misn for easier lua module detection.
    * Fixed issue #4 ("Too many missions" without any active mission).
    * Some code clean up.
    * Some code clean up.
    * Major rewrite to xml.h increasing sanity checks.
    * Gui can now handle overlays.
    * Aborted missions should also drop cargo.
    * Now jet cargo when cargo mission fails.
    * Fixed regression, no longer delete mission if misn.finish() has no parameters.
    * Force missions to remove cargo properly.
    * Doxygen.
    * Sanitized dealing with mission cargo a bit.
    * Faction rating and combat rating are now continuous.
    * Added the faction metatable and stuff to use it.
    * Actually load the diff library in mission Lua now.
    * First release of the unidiff system.
    * Allow missions to interact with music subsystem.
    * Have missions use music.
    * Fixed bug with loading mission variables.
    * misn.timerStart() now uses milliseconds.
    * Added player.getPilot().
    * Added mission timers.
    * More functionality added.
    * Moved Lua pilot stuff into it's own file.
    * Pilots now use metatables.
    * Added pilot.clear() and pilot.togglespawn() to Lua api.
    * Added pilot "jump" hook.
    * Documented the pilot Lua bindings.
    * Documented hook lua bindings.
    * Documented the player Lua bindings.
    * Doxygen for misn_lua.c.
    * Attempting to document Lua bindings with doxygen modules.
    * Added faction_modPlayerRaw and the misn binding for it.
    * Fixed misn.sysMarker().
    * Can now override pilot AI in a fleet.
    * Made fleet_parse() more up to date with xml.h.
    * misn_condLibs() was missing space lib.
    * Fixed var.push().
    * Added more Lua parameter checking.
    * Cosmetic patch.
    * Added player.getRating().
    * Conditionalize the player Lua API.
    * Fixed lua stupid parameter stuff.
    * Added two new pilot hooks: board and disable.
    * Made lua debug macros more verbose.
    * Code cleanup.
    * ai.c: ai.dist() now accepts pilot ids as parameters.
    * misn_lua.c: pilot.add() can override fleet ai with second parameter.
    * ai/scout.lua: Added a new hard to kill ai that only tries to survives.
    * dat/missions/emp_scout00.lua: Scout uses new scout ai.
    * misn_lua.c: More debug magic.
    * dat/missions: All missions should be using setMarker now.
    * Missions can now mark systems.
    added more nazi flags: -Wmissing-prototypes -Winline -Wcast-align -Wmissing-declarations -fno-inline
    begin cleaning up lua code a bit
    new philosophy, when you swap ships your cargo stays with you, will fix issues
    patch by Nicholas Niro <nik_89@neuroponic.com> for older gcc
    misc fixes and you can now use lua as conditionals for missions
    pluto still refuses to cooperate, mission/hook save disabled atm
    missions increase/lower faction, fixed bug with factions
    minor misn lua cleanup and added pilot.rename()
    now completed missions and mission variables are also loaded, missing current missions
    save player variables
    fixed the annoying as hell mission disappearing when no carge space
    missions save code, global save function
    big update to add another mission
    missions can add fleets now
    implemented pilot hooks with the "death" hook as an example
    added first mission that uses time limits
    cargo missions now take into account freight distance
    improved hook behaviour, added more hooks to mission lua
    added time bindings to mission lua
    more tab removal, fixed up mission var stuff
    logs more verbose and added a variable stack to missions
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    implemented ability to figure out where a planet is located
    fixed major issues in how hooks worked, now they're hackishly sane
    unique missions are now actually unique :)
    fixed some introduced bugs
    now track cargo missions give you so they get cleaned up on abort
    pretend to be multilingual for easier future conversion
    major commit, first fancy bar mission, alot of improvement
    fixed bug
    introduced getListPos to get the position of the list, cleaned up mission stuff
    mission tracks cargo and makes sure you have it
    introduced the concept of mission cargo - not-tradeable
    improved space.getPlanet() mission lua
    improved lua api for missions by alot
    improve land gui
    fixed bugs so that missions actually work now :)
    fixed the toolkit module in lua, fixed accept bug, segfaults :)
    stupid copy paste coding
    more functions, fixed invalid memory free
    major improvement -> use ids for factions instead of pointers
    initial support for hooks
    first import of mission stuff
    * Reworked the jump point unidiff format.
    ** All jump point parameters are now attributes, not subnodes, in keeping with the existing unidiff syntax.
    ** x and y parameters are optional, if omitted the jump point will be auto-positioned.
    ** hide parameter is optional.
    ** type parameter is optional and can be either "hidden" or "exitonly".
    * Added basic system properties to the system edit dialog.
    * Renamed sysedit uniedit.
    * Added sysedit for actually editting the interior of the systems.
    * You can now open the editor even though it doesn't really do jack yet.
    * Added basic sysedit files.
    Fixed format strings being used with nfile_ stuff.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Don't allow the ship computers to access info the player doesn't have
    
    Namely,
    1. AutoNav shouldn't disable until a hostile ship's identity is no longer hidden
    2. Targeting hostile ships shouldn't select ships who's identity is hidden.
    Allow counting how many outfits of a type the player has including equipped ones.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Changed that to at first run of the game.
    Added a note on new game creation about the incompleteness of the game.
    
    This is just a message shown at the start of a new game letting the
    player know that the game is incomplete.
    Removed common showing outfit code and unified in src/land_outfits.c
    Temporary moved slottypes to ImageArrayCell.
    Abstracted image array stuff to cell where it is possible to set alt text.
    Increased the possible range for ship and player names.
    
    For some reason the game demanded at least 3 characters for ship
    names and at least 2 characters for player names. I've changed the
    requirement to at least 1 character, and also increased the limit
    from 20 to 60. Makes things more flexible.
    Removed faction logo / name from map for unknown factions.
    
    Part of #891
    Fixed ordering of dialogs.
    Made dogfight aiming helper per-ship rather than global for the player.
    
    This allows you to enable the dogfight aiming helper for some ships
    but not all. Seems to make it more reliable too. Useful if, say, you
    have some ships where you need it but some others only use turreted
    weapons.
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Made the dogfight helper easier to see / use.
    
    I added outlines (similar to the text outlines) to give it contrast,
    and I made the circle and cross always white so that dark / hard
    to see colors wouldn't be used for them, and made them bigger. It's
    much easier to use now.
    Fixed bracket placement.
    Changed the takeoff/land time change to be based on the pilot.
    
    nenau pointed out that making everyone takeoff/land faster or slower
    based on your ship could have real effects that might be undesirable,
    so I've tweaked it to base takeoff/land speed not on the player, but
    on the individual pilot. This also has a nice effect of making large
    ships take off more slowly (giving you more time to react).
    Modify landing/takeoff speed based on default dt multiplier.
    
    This has the effect of making sure that land and takeoff time is
    always the same between all speeds.
    Added a "slow mode" for accessibility.
    
    This was something we mused about before: the idea of adding a "slow
    mode" as an accessibility feature. Slow mode is pretty simple, it
    simply halves all speed in space compared to what it would normally
    be. This is helpful for people who have difficulty with motor control
    or otherwise have trouble running the game at normal speed (much like
    an easy mode).
    Log cleared for new game
    Working economy with list widget on map
    Replaced all references to SCU/STP/STU to cycles/periods/seconds.
    
    This unifies the code with the in-game dialog and should hopefully
    prevent confusion regarding what terms to use.
    
    (Recap: these abbreviations were removed from in-game use long ago
    due to confusion that is likely to happen as a result of them looking
    similar.)
    warnings
    Fixed crash when an empty commodities tag is present.
    
    The economy system specifically recognized a planet having no
    faction being a problem for the econ system, but only warned about
    it. This also prevents any attempt from being made to set price in
    that circumstance.
    Fixed friendly/hostile setting.
    
    The previous system was very hodge-podge and had a lot of duplicated
    checks, leading to some inconsistent behavior. I've consolidated all
    checks to the setHostile / setFriendly / isHostile / isFriendly
    functions.
    
    This fixes a bug where a pilot that was set as friendly but became
    hostile due to aggression was impossible to target with the "target
    nearest hostile" button.
    Removed unused leftover tutorial stuff.
    Fixed several strings and lack of gettext usage.
    Added player "pay" hook.
    Improved start-of-game tutorial, replacing the menu tutorial
    
    I decided to do this because the classic tutorial is quite long, and
    yet the intro text I had previously added is inadequate. This new
    tutorial is designed to be a nice middle-ground.
    
    As before, the tutorial is optional, offered to you at the start of
    the game. Unlike before, you go through an entire mission
    demonstrating all the important game mechanics, rather than just
    having a bunch of information thrown at you.
    
    This makes the tutorials (which I haven't recommended to anyone in
    years) obsolete, so the "Tutorial" button and old tutorial mission
    have been removed.
    Duplicate for noland string so that the memory doesn't get prematurely freed.
    update on the dogfight helper
    Added aiming lines to ease dogfight
    Fixed size problem.
    
    Thanks bobbens for telling me what was wrong; I was totally lost here.
    Fixed that
    Added text when hailed mentioning how to autohail.
    Removed legacy checks for really really old save games.
    made autonav follow ships
    Unnecessary declaration
    Reset faction flags when resetting their standing.
    
    This fixes a problem where starting a new game after having loaded
    a previous save (in the same session) leads to the "known" status
    of the previous save leaking into the new one. It should fix any
    other such problems with flags if they crop up again, too.
    Copy player target when swapping ships.
    
    Should fix a long-standing bug caused by swapping ships.
    Replaced dockslot with index int.
    Switched dockpilot to id based.
    player_dt_default make function
    Fixed the problem with escorts (I think).
    
    Not tested thoroughly yet, but I think this should fix the problem of
    escorts causing segfaults when their origin ship dies. A cursory test
    shows that this seems to work.
    
    This also causes pilot.setLeader to remove "deployed" status from the
    origin ship.
    Fixed the escort reloading system.
    
    My fault entirely on this one. I was up late at night and didn't
    really understand what the function was doing. (Actually I'm up late
    at nighe again now! xD But I understand what it does properly this
    time around.)
    
    I also removed that function's usage in player.teleport(), since
    it is unneeded (and indeed creates duplicate escorts).
    Modified the way escort launching is controlled so it can be monitored in real-time.
    
    The previous method was clunky and didn't allow monitoring changes
    to how many escorts you have deployed in real-time very well. So this
    is a HUGE overhaul in how that whole thing works. It solves a bug that
    prevented you from getting new fighters when your old fighters were
    destroyed, while still limiting how many you can launch at once.
    Removed ship location altogether.
    
    This was discussed on #719: ship swapping really doesn't add anything
    to the game, so this simply removes that feature. Ships no longer have
    a location, they just travel around the galaxy with you like outfits
    do.
    
    I believe this probably also fixes #719, though it's hard to tell
    for sure. The reason I think it might have fixed it is because that
    bug seemed to be most easily triggered by following a transport
    immediately with a swap. I suspect that somewhere the copying of the
    "loc" string of ships was going wrongly, so if that is indeed the
    case, the fact that that variable has been entirely removed should
    fix it. This is just speculation, though, and it's impossible to
    tell for sure.
    
    The NPC tip about having to transport ships has also been removed,
    since it is no longer true.
    Change the sound speed based on base time rate.
    
    Requested by bobbens: this makes it so that sound plays at 1x if
    you're at your ship's base time rate, etc.
    Modified player_land() so that you only need to push the land key once.
    
    Simple modification: in player_land(), if permission to land is
    granted, it calls itself a second time so that the actual landing
    procedure begins. Simple rationale: nothing is gained by making landing
    a two-step process, it just makes doing so take more effort needlessly.
    
    The tutorial has also been updated to reflect the change, of course.
    Fix some missed conversions and remove one unnecessary rounding
    Make everything fuel related an int
    Tag everything related to fuel and using double with DELETETHIS_
    Fixed the every-ship-warps-in-with-you bug.
    
    The code was treating every ship on the map as an escort, from the
    looks of it. An additional check stops this problem from occurring.
    Yay!
    strcpy suffices, suppresses warning on newer gcc.
    Add mechanism for persisting pilots on jump; use for escorts
    
    This has the advantage that damage is persisted, and the same mechanism
    can potentially be used for other purposes (enemy ships in a mission).
    modifications on asteroids
    misc update on mining
    made mining more user-friendly
    Have escorts use same jump gate as player
    More gettext.
    Changed escape code for colors from '\e' to '\a' so xgettext plays well with it.
    Make escort_command return 1 when nescorts=0
    Order escorts to jump when player jumps
    Remove unused SystemFleet
    Run player AI's control_manual() function to handle formations
    Do not persists escorts set through Lua
    Remove vectcpy(), and replace it with simple assignments
    Combine ai_extra.h into ai.h
    
    Use forward declaration of struct to deal with cyclical import.
    Regenerate the player's ship list when removing a ship
    Turn player_missions in an array of pointers
    Avoid crash when exiting after standing change
    Reset time acceleration when dead
    * Don't crash when using movement keys without a player.
    Move PlayerShip_t into player.h and expose the player stack
    Move PlayerOutfit_t into player.h and speed up player_getOutfits
    * Don't reduce autonav timer if it was set to a longer duration when
    pausing autonav.
    Replace active cooldown key with autobrake
    
    This is another commit that ended up being larger than intended due to
    adjacent diffs. It can be broken down into three separate things:
    
    Autobrake is triggered by the same key that used to handle cooldown.
    On the first press, it triggers braking if moving, cooldown otherwise.
    If pressed while already braking, cooldown starts when braking ends.
    
    player_restoreControl is now the go-to function for aborting autonav,
    cooldown, and all other control-monopolizing states.
    
    Lastly, a number of VMOD(vel) < MIN_VEL_ERR calls have been replaced
    with a handy macro.
    On hail, reset speed for 10 seconds.
    
    10 seconds should be enough time to react.
    Abort, not End, autonav when hailed.
    
    As long as we're doing it this way, we'd best be doing it properly.
    player_autonavEnd is not meant to be used to suddenly stop Autonav,
    and I don't know if it even works.
    Remove outdated secondary weapon behaviour
    
    This was broken anyhow (it only applied between one frame to the next)
    but I think it's better for primary and secondary weapons to behave in
    the same way - Fire when held, stop firing if not.
    Improved handling of saves with invalid locations
    Avoid memory leak when loading an invalid player ship
    Make pilot_cargoAddRaw ignore free space
    
    This fixes an issue where the player's cargo could be lost on load. If
    a player had n tons of cargo and then reduced their capacity below n
    and quit, on next load they would lose any cargo over the limit, with
    mission cargo being handled no differently.
    
    As a side note, pilot_cargoAdd now takes a mission ID parameter, and
    most calls to pilot_cargoAddRaw have been replaced for safety.
    Update player_nearestHostile to avoid targeting dead pilots, etc.
    Remove duplicate code from player_targetNearest
    Toggling mouse fly should only disable accel if mouse_thrust is set
    Revoke land authorization if reputation dips too low
    
    This is a minor exploit, and based on discussions on IRC, the landing model
    may end up being fully revamped in the future. Regardless, I think this fix
    is useful for the time being.
    Remove fuel cost and make refueling wholly-automated
    
    This was discussed earlier in IRC. My feeling is that fuel costs add nothing,
    yet can potentially strand new players and render saves unusable.
    
    There were also several issues with fuel being zeroed when removing fuel pods
    and engines, leading to fuel loss while experimenting with loadouts.
    Improve autonav abort conditions and control handling while disabled
    Cleaned up player_land and removed some cruft
    Enhance filtering in the land window's outfits and equipment tabs
    
    This is a fairly monstrous commit, and unfortunately due to some necessary
    toolkit changes, wasn't able to be broken up into smaller chunks.
    
    A semi-itemized list of changes is as follows:
    
       tabwin:
          Provide both old and new tab IDs when calling onChange functions
    
       imagearray:
          Add a simple struct and toolkit_saveImageArrayData to permit easy
          saving of selection and scroll position.
    
       player:
          player_getOutfits & co. now return Outfit** instead of char**
    
       equipment:
          Added incremental text search, change the embedded tabwin into a dummy
          that just regenerates a single image array instead of maintaining five
          separate ones.
    
       land_outfits:
          Added incremental text search, as well as tab-based filtering identical
          to the equipment tab's, with some minor cleanup along the way.
    Prevent reverse thrusters from interfering with mouse flying
    Use reverse thrusters for braking, if it makes sense to do so
    Prevent the hyperspace target from being changed mid-jump
    Close the map overlay when the player dies
    Stop autonav on death. This prevents time compression from reactivating.
    Actually end autonav on hail, instead of just pausing time compressions just to start it again.
    Fixed stats not being recalculated when outfits turned off.
    
    This was driving me nuts: the "emergency" shield booster worked
    while it was cooling down if you deactivated it early because of
    this, and worse, it kept draining your shield when deactivated while
    landing, making you stuck there if there wasn't an outfitter on the
    planet! It's fixed, now; there were a couple places where stats
    weren't being recalculated where they should have been.
    Autonav no longer aborts when hails are recieved or weapons fired.
    Properly prevent exit-only jumps from being targeted
    Removed constraints when adding outfits to a ship.
    
    Change has effected the equip scripts aswell, but that had no advarse
    effects.
    Made some refractoring in the process, name and comment changes.
    The way I build the report is the most lazy way I could think of
    without storing the checks in an array/data struct with the appropriate
    string, and without writing a custom string writing function.
    * Casing.
    * Whitespace.
    Made comments gender neutral, for accuracy
    * Fixed crashes when savegame contains invalid slot nodes.
    fixed autonav - reverse thruster bug
    fixed player couldn't reverse when facing enemy
    * Protect against segfault.
    * FIxed invalid memory read.
    * FIxed invalid memory read.
    * Whitespace.
    Added persistency for active weapon set and map overlay.
    Removed printfs & prettified code a little
    Fixed date issues. Added temporary headers
    First "working" but WIP news
    Improve core outfit adding.
    fixed a comment.
    remove default outfits when loading the players ships.
    add core outfits to ships from old saves.
    comments.
    Player must have all core outfit slots filled for takeoff.
    Prevent cooldown from interfering with manual control.
    Fixed up cooldown abort while braking.
    Refactored the afterburner patches a bit.
    More unification and integration of the cooldown mechanic.
    Moved the player cooldown messaging into the generic functionss.
       Lua-triggered cooldown will notify properly.
       Cooldown will cancel autonav (instead of temporarily preempting it).
    Don't require the player to slow down manually for cooldown.
    Avoid running cooldown when landing and taking off.
    Added a discrete cooldown mode for pilots.
    * Some code for heat on afterburners. Todo:
    ** Show afterburner heat.
    ** Don't toggle afterburner when used via weapon group.
    * Finished local map implementation.
    * Added local map.
    * Wrapper for nsnprintf being used all over.
    Don't prompt the player to name their starting ship if it has a default name.
    * XDG patch by aanderson.
    user data should go into $XDG_DATA_HOME (.local/share by default)
     - .naev/saves -> ~/.local/share/naev/saves
     - .naev/screenshots -> ~/.local/share/naev/screenshots
    
    user preferences should go into $XDG_CONFIG_HOME (.config by default)
     - .naev/conf.lua -> ~/.config/naev/conf.lua
     - .naev/conf.lua.backup -> ~/.config/naev/conf.lua.backup
    
    cached data should go to $XDG_CACHE_HOME (.cache by default)
     - .naev/gen -> ~/.cache/naev
    outfits are turned off when landing.
    afterburners actualy burn when activated by weapon group.
    abstracted player_afterburn for all pilots
    afterburners actualy burn when activated by weapon group.
    abstracted player_afterburn for all pilots
    The 'target nearest' key will target nearby disabled ships as well.
    * Code compiles again.
    * Remove player outfits in planet tutorial.
    That'll teach me to commit without testing.
    Added "all" support to player.rmOutfit(), for tutorial purposes.
    * Fixed potential segfault.
    * Afterburners work, double-tap seems broken again.
    Have the jump and planet target cycling keys loop from highest to lowest valid, instead of from highest to invalid.
    Set hyperspacePreempt based on id validity, not blindly.
    Remove forgotten DEBUG() message.
    * Ignore key repeats for weapon groups.
    Also close the overlay when cleaning up.
    Created a planet_setFlag wrapper to avoid marking virtual assets as known.
    Axed player_valid* sanity check functions.
    
    One was just a clunky wrapper around jp_isKnown(), and it turns out a non-real asset will never be marked known in the first place.
    Doxygen
    * Formtting.
    Skip over unknown jumps to avoid getting stuck. Added generic known/inrange wrapper function for consistency.
    Added autonav-to-planet and made some small polish tweaks to the autonav.
    better faction saving
    save factions known status.
    can target out of range planets
    can target out of range planets
    better faction saving
    save factions known status.
    * Clear up time compression when player blows up.
    * Reset time compression when loading or creating a new player.
    * No longer segfault when trying to hail a planet.
    adjust functions to use the new map type
    * Removed superfluous function in favour of previously existing one.
    * Missions can now trigger in space.
    checks if planet is in range when landing
    * Moving to new weapon set type things, halfway there.
    * Fixed crash.
    * Conserve ship facing when doing player_swapShip.
    * Variable fuel consumption.
    * Clean up and refactorization.
    * Added option to get filtered outfits from the player.
    * Moving equipment stuff to allow multiple outfit lists.
    * Properly fixed reverse so it makes sound and doesn't block other motion.
    * Stop reverse thrusting when the reverse key is not pressed down.
    * Added reverse thrusters outfit.
    * Use the ship outfit slot as a reference and do not duplicate data.
    * Moved getting price of ship to pilot_worth.
    * Fixed possible bug with credits_t.
    * Cosmetics.
    * Cosmetics.
    * Improved memory allocation for player outfits.
    * Fixed secondary weapon behaviour.
    * Added planet.getLandable().
    * Refactored code.
    * Cleaned up code.
    * Proper way of setting default for players in range weapon set parameter.
    * Do not set the fire in range check box by default.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    * Lua can now force allow the player to land.
    * Using pilot_setTarget abstraction instead of setting the pilot directly.
    Whitespace, typo and general style cleanup.
    * Improved handling of stuff - like them tricksy planet landing colours and such.
    * Basic implementation works, probably quirky all over.
    Many, many typo fixes.
    Remove trailing spaces in src/
    * Hooks should save their arguments properl and also remove them when hooks get removed.
    Created another player sound group for non-GUI sounds (just hyperspace noises for now).
    * Player GUI sounds should not pitch shift.
    * More documentation.
    * Changed sound to be relative to the camera (and facing up) - makes me die a bit inside.
    * Play sound when messing with sound slider.
    Use proper coords (factoring in camera, etc.) for mouse flying.
    Revoke landing authorization when switching planet targets.
    player_autonavAbort adds its own punctutation.
    Improved the autonav timer.
    * Fixed compile.
    Forgot to commit player.c update (for modified player_thinkAutonav)
    * Cleaned up Deiz' inrange stuff.
    inrange works independently of autoweap.
    * Fixed minor bug.
    * On load of player ships, set weapon set to default one.
    * Save weapon group inrange status.
    * Properly list GUI as owned in outfit pane.
    * Pilots should no longer "jump dance".
    * Fixed new game have extra message.
    * More CLANG fixes.
    * Fixing misc issues.
    * Try to fix the bloody credits mess.
    * Credits are 64 bits for everyone.
    Added options window checkbox for toggling mouse-based thrust control.
    Added an option to prevent mouse flying from controlling thrust.
    Preliminary mouse flying implementation.
    * Comment.
    * More error checking when loading pilot.
    * Fixed crash if you change landing target while landing.
    * Don't display superfluous "preparing for hyperspace" messages (fixes issue 94)..
    Added two new Lua API functions, for enabling or disabling the ability to jump or land for each pilot.
    * Whitespace.
    * Fixed segfault when jumping.
    * Trying to move stuff out of the update itself.
    * Properly fixed the warning and unified player_sound nomenclature.
    Signed-off-by: Edgar Simo <bobbens@gmail.com>
    * Fixed warning on startup.
    * Attempt to fix various issues like crash with menu_main.
    * Cleared up menu_main usage.
    * Allow takeoff to be forced at any moment.
    * Added player.swapShip().
    * Changed API slightly for player.newShip().
    * Can enable or disable keybindings.
    * Fixed corner case that a mission can exit to main menu and an event still runs.
    * Implemented going back to main menu from Lua (from new tutorial module).
    * Fixed that last patch.
    * Added start position to tutorial node in start.xml.
    * MAJOR COMMIT - May bring breakage.
    * Removed global variables from nlua_misn.c, nlua_event.c and nlua_hook.c
    * Added tutorial button.
    * Clear omsg on player cleanup.
    * Events load properly on new game.
    * You can define starting event, tutorial can get it's own event/mission.
    * No need for check if autonav, indicate hail is being recieved.
    * abort autoNav if hail received
    * If no time information reset to start.
    * Saner, more precise and safer way of saving dates.
    * If afterburner is less effective, rumble will be less.
    * Player time should be ULONG not UINT.
    * Do not render player when invisible.
    * New time system. As seen on wiki.
    * Removed unneeded debugging stuff.
    * Using more sane drag function.
    * Improved code style.
    Added click-based actions to the mouse input handler.
    * Implemented mass limit for afterburners.
    Afterburner wil transition to regular engines when out of energy.
    * Clean all pilots when creating new game background.
    * If player has no ships when loading, try to give starting ship.
    * Centralized the game start information.
    * New player should have the system he'll start in as a background when writing name.
    * Can't select planet target while landing anymore (used to be able through map overlay).
    * Fixed quirk and segfault with planet targetting.
    * You can now select planets and jumps from the overlay map.
    * Removed duplicate code with player setting target.
    * Fixed minor memory leak when created new player after having one loaded.
    * Player should now properly load the player AI so that manual control doesn't go crazy on us.
    * Using naev_version instead of manual printing for better handling of -beta1.
    * Changed mission error handling for billionth time, should be sane (tm).
    * Time compression works with autonav now.
    * Split player autonav stuff from player.[ch].
    * Strict checking of start.xml.
    * Changed how the "find planet when player planet is invalid" algorithm works so it finds usable planets.
    * Indentation.
    * You can now set the disallow landing message.
    * Added API to disallow or allow player to land.
    * Changed how we handle the bloody return parameter and friends so it should bloody work (mission_start and mission_init).
    * Fixed autonav with jumping.
    * Autonav to a position works.
    * Renamed startAutonav and abortAutonav to autonavStart and autonavAbort.
    * Game should no longer segfault when loading a game where pilot is in an inexistant ship with ships available.
    * Dangerous commit - changes how mission_start and mission_init work to allow claims to be passed on from event to mission.
    * Fixed Clang report.
    * Don't allow weapon set keypress when toolkit is open.
    * Fixed Clang report.
    * Fixed Clang report.
    * Clang report fix.
    * Separated the pilot cargo stuff into pilot_cargo.[ch].
    * Renamed some stuff to be more consistant.
    * You can now hold fire groups and they will shoot.
    * Added ability to add GUI outfits.
    * Weapon sets should not be nameless.
    * Weapon sets should not be nameless.
    * More checks.
    * Weapon sets are both saved and loaded properly.
    * Cleaned up all secondary stuff, moved to different secondary weapon system.
    * Removed player references to secondary weapons.
    * You can now activate or switch weapon sets.
    * Visual indication of weapn slots.
    * Save autoweapon information.
    * Code clean up, added concept of autoweap.
    Moved cargo-related API functions out of the player module and into the pilot module. They operate on any pilot now.
    Update the GUI when player_jump selects a jump point.
    * Fixed new game segfault.
    * Some clean up and the likes.
    * Actually save GUIs.
    * GUI get added as ships give them.
    * Correctness.
    GUI can now be set through the equipment screen.
    * Moved gui_load out of src/pilot.c because it's ugly and a hack that barely works.
    * Some clean up to try to move to the new weapon set system.
    * More autonav blocking stuff.
    * DIsable some stuff when under manual control.
    * Player can now be manually controlled.
    * Added global simple API to enable/clear/reset claims.
    * Much fancier camera model, much more in tune for doing fancy camera Lua API.
    * Initial camera movement to expose bugs. It's pretty cool but the stars are wack.
    * Zoom moved into camera stuff.
    * Initial commit of the camera model.
    * Fixed ammo going poof.
    * Fixed bug with AUTOFACE with planet facing not working.
    Fixed planet/hyperspace targeting preemption.
    * Load new GUI when swapping ships.
    Systems slot renamed to Utility.
    * Try to not crash when player is in a ship that doesn't exist in this version.
    * Added "hooks" for target and nav computer changing in the GUI lua stuff.
    fixed a bug in player.c that made naev crash when pressing backspace while jumping, and changed the behaviour of find in map so that it behaves a little more sane.
    * Removed 0.3.x savegame compatibility layer (you just lose outfits).
    * Added backwards compatibility with 0.4.x saves.
    Maximum zoom conf option is actually respected now. Zoom is now 1x when moving slowly.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    Migrating from High, Medium, Low + Heavy, Standard, Light to Weapon, Systems, Structure + Heavy, Medium, Light
    player_addOutfit updates the image arrays as necessary. outfits_updateEquipmentOutfits simplifies updating by hard-coding the wid names.
    * Outfits equipped on old ships must match the new criteria.
    * Use non-modified target graphic variant for stores.
    * Do not save nor load static faction values.
    * Reset faction values on new game or game load.
    * Clear player hail timer/counter on player_cleanup.
    * Don't detect fuzzy hostiles.
    * Start off landed.
    * Force blink on when changing targets.
    * Added  "load" event trigger. This allows events to be triggered when a new game is created or an old game is loaded.
    * Fixed issue not allowing NPC pilots to land.
    * Fixed many "static landing" issues where the distance from planet center was static.
    * Using planet radius now instead of graphic size for planet size assumptions.
    * Clear hails when player hails and has no hailing target left.
    * Clear hails when player hails and has no hailing target left.
    * Free old graphics before loading new ones to avoid memory spikes.
    * Load planet graphics on demand.
    Fixed several more minor bugs. Error dialogue generator is fully functional, and all edge cases should be addressed.
    Changed player_hasLicense to render call-site null checks unnecessary.
    Moved equipment tab ship list updating into player.c (with sanity check).
    * Cleaned up externs and useless parameters for pilot_newShip().
    Players can now trade their ships in when buying new ones.
    Removed a few restrictions that aren't necessary due to bug fixes. Can now target planets when landing without repercussions.
    Clear the map when unsetting hyperspace target.
    Forgot to add preemption to player_land.
    Added preemption to the autoface and untarget functions.
    Updated targeting to allow simultaneous planet and hyperspace targets, modified HUD and fixed player.teleport() bug.
    * Can't afterburn while landing.
    * Stop player when he starts landing.
    * Fixed segfaults when changing nav target while landing.
    * Don't allow land start when taking off.
    * Do not allow player to restart landing while landing.
    * Fixed some segfaults.
    * Removed hardcoded delays.
    * implemented land/takeoff without visual cue.
    * Changed how flags are handled so we can easily add more of them.
    * Yet more stat calculations.
    * Compiles.
    * Removed unused player code due to having ai jump exactly like the player now.
    * Fixed bug with NPC ships jumping in facing weird directions.
    * Jump command tries to target jump or use it if no jump route is selected.
    * Autonav seems to work again.
    * Should properly target a planet when you have it selected now.
    * First attempt at new autopilot.
    * NPC pilots now jump in from jump points.
    * Tweaked it so the player enters at the appropriate jump point.
    * Fixed minor bug with planet targetting after having hyperspace jump targetted.
    * Moved nav_hyperspace and nav_planet to pilot instead of player struct.
    * More explicit memory setting.
    * Major refactoring of the pilot. It is now all contained in a struct.
    * Using new jump point system, behaves exactly the same as the old system.
    * Should fix some cases when the game erroneously reports launchers as ammoless when loading.
    * Minor code polish.
    * Fixed free refuel when loading with 0 fuel.
    Autonav button added to map, map rendering issue fixed.
    Switched new game language, no longer assumes player knows what a Llama is.
    * Hitting secondary weapon but not shooting anything will not disable autonav.
    * Using "thyperspace" will update map even if not open.
    * Dead/disabled/left pilots reduce the used presence.
    * Should fix warning with compiling on 32 bits.
    * Hail sound works.
    * Better money handling, credits shouldn't overflow anymore.
    * Renamed planet to asset.
    
    "Unreal" assets are allowed. An asset is "unreal" if it has no <pos> tag.
    planet.xml has been renamed to asset.xml
    Checks are in place to ensure that "unreal" assets are not used where only "real" assets should be.
    * Hopefully moved the refuel to the right spot.
    * Added fuel check when swapping ships.
    * Implemented autohail.
    * Some changes to coloring for player messages.
    * More formatting.
    * Formatting.
    * Fixed autonav to current system bug.
    * Better land colouring.
    * Services are more specifically defined now.
    * Some player_message colouring.
    * No longer segfault when loading non-existant commodity.
    * Split the hook.jump into hook.jumout and hook.jumpin.
    * Added jump hook.
    * Fixed more potential bugs.
    * Sort ships in equipment by name if they have the same price so they don't switch orders.
    * More bugs detected with scan-build.
    * Fixing really minor possible segfaults and other misc issues detected with scan-build.
    * Should fix the last of the warnings.
    * Should fix all strict ubuntu warnings now.
    * Patch for making custom jump routes by Barry.
    * Sound fix sounds sounding on reload.
    * Handle inexistant planet.
    * Display ship stats as alt.
    * Patch by IshariComix to fix segfault when planet not found when loading.
    * Patch by IsharaComix to fix planet missing segfault.
    * Limit player names to 2 characters minimum.
    * Fixed cornercase where player would name ship same as current ship.
    * Don't mark event/mission if done if it's already marked.
    * Fixed minor typo detected by BTAxis.
    * I think far/near are keywords in windows.
    * Changed zoom lingo to near/far.
    * Should fix escort miscount issue.
    * Zoom should no longer zoom in.
    * Give player money at start of game.
    * Fix segfault with new game.
    * Compiles.
    Re-rendered, added proper target. Fixed minor dialogue issue.
    * Shouldn't fail so epicly when save doesn't have ship.
    Saves player_credits
    * Fixed not being able to use two different secondaries.
    * You can now specify default ship name.
    * When you buy a new ship you don't automatically change into it.
    * Do not reset hyperspace target.
    * Fixed nebula zoom.
    * Can't zoom out a lot in nebula anymore.
    * Should have fixed more escort issues.
    * Minor text updates by Deiz.
    * Afterburners are only relative now.
    * Do not allow player to name two ships with same name.
    * Raw outfit functions no longer call calcStats.
    * Combat rating standings change by Deiz.
    * Added keybind to clear target by popular demand (read BTAxis).
    * Playe's first ship comes with outfits, rest don't.
    * Start player on random planet if planet not found.
    * Added sanity checks for both debugging and player loading.
    * Cleaned up code a bit.
    * More checks in pilot_addOutfit and pilot_rmOutfit.
    * Fixed engine sounds playing when player is dead.
    * Made choosing secondary weapon a bit smarter.
    * Fixed segfault.
    * Fixed reading from invalid memory.
    * Check to make sure all of player's ships have positive CPU.
    * Add player outfits ignoring CPU.
    * Render target reticles above player.
    * Properly set licenses/maps as owned.
    * License and maps now reduce money.
    * Improved physics model.
    * Using setTurn and setThrust abstractions for pilots.
    * Use normal distribution for hyperspace time delays.
    * Changed how jump delay work, display them to player.
    * Use qsort() to sort shipyard ships.
    * Sort player ships by price inversely.
    * Changed subtype to typename.
    * Also sort the player's equipment outfits.
    * Display system name of ships player owns.
    * Make sure planet is valid for player ships.
    * Fixed segfault.
    * Improved fighter bay behaviour with equipment interface.
    * Clear messages on player cleanup.
    * Converted commodities back to int.
    * Cosmetic patch.
    * Added legacy layer for loading old saves.
    * Maps and licenses should work properly again.
    * Save/load ammo now.
    * Automatically reload outfits.
    * Fighter bays work again.
    * Secondary weapons work again.
    * Fixed adding of outfits.
    * Improved handling of mass.
    * Changed commodities to doubles.
    * Properly display ship stats in the equipment window.
    * Display the mount point when selecting high energy slot.
    * You can now actually add and remove outfits.
    * Fixed buying more then one outfit.
    * Fixed saving and loading of player outfits.
    * Rough draft of equipment land tab, not done yet.
    * Minor correctness.
    * Fixed engine sounds getting stuck.
    * Fixed more segfaults.
    * Compiles cleanly - nothing works.
    * Minor autoface tweak.
    * Added hyperspace sounds.
    * Events can be unique.
    * Fancy new event system seems to work now.
    * Nebulae is plural, changed it all to nebula.
    * Made savegame more robust when loading inexistant missions.
    * Implemented openal groups.
    * Tweaked API a bit.
    * Removed deprecated reserve channel function.
    * Removed some hacks.
    * Fixed segfault with invalid sound backend.
    * Code clean up.
    * New super flexible backend for sound with SDL_mixer implementation.
    * Player engines should always make sound.
    * Small fix for uninitialized data usage.
    * Stop sounds on death.
    * Should fix issue with keys getting stuck when player dies sometimes.
    * Cleaned up some poor implementation.
    * Should fix all engine sound issues for once and for all.
    * Update player sound/zoom with new update function.
    * Properly reset player rating on new game.
    * Copy position over when swapping ships to avoid border cursors jumping.
    * Some code clean up.
    * Left in DEBUG.
    * Added ability to limit zoom speed change.
    * When no target base zoom off velocity.
    * Rewrote conf framework to be much more robust and better overall.
    * Zoom out faster then you zoom in.
    * Use "real" time not "game" time to control the zoom fading.
    * Using dt for pilot thinking/rendering.
    * Zoom should be gradual.
    * Some clean up.
    * Rough dynamic zoom implemented.
    * Events actually trigger now.
    * Allow player to have a one character name.
    * Should fix all the issues with stranded fighters and multiple
      fighters.
    * Fixed memory issues with escorts.
    * Now properly track the deployment.
    * Persistant escorts now are working.
    * Save/load escorts.
    * Added function to prune dead escorts.
    * Make escort structure more advanced.
    * Pilots now deploy properly, still needs persistance.
    * Added hook types.
    * Removed gui_xoff/yoff externs.
    * Cleaned up camera stuff.
    * Code clean up.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * More sanity checks for angles.
    * Radar also has stuff dissappear if out of range.
    * Sanitized all the sensor ranges, it should always be applied now.
    * Some more correctness.
    * Improved player_screenshot with the new API stuff.
    * Made it so forced takeoffs by missions don't take time.
    * Clean up map when switching players.
    * Removed some warnings.
    * Implemented planet bribing.
    * Stupid typo, should fix issue 7.
    * New keybindings to cycle through hostiles (forwards and backwards).
    * Some clean up.
    * Minor formatting.
    * Formatting.
    * Put fabricator in front of ship name when getting new ship.
    * Stop playing intro song when done with intro.
    * Timers clear properly now.
    * No longer able to do weird things while dying.
    * No longer using a toolkit global variable.
    * Patch by Nik_89 to address money not staying consistant.
    * Should fix a double free().
    * Fixed issue with unidiffs not removing properly.
    * Interference now affects targetting and communication.
    * Added concept of distress signals.
       * Ships under attack generate distress signals.
       * If someone gets the signal, and player is attacking player loses faction.
       * Limited by interference.
    * Fixed rare and elusive segfault bug in ai.
    * New firemodes, allows ships to shoot only turrets, forward mounts or both with primary weapons.
    * Move ai to use firemodes.
    * Improve bomber code.
    * Autonav aborts when out of fuel.
    * More robust checking of ship hostileness.
    * Missions now enforce hostile/friendly status in some missions.
    * Added keybindings for targetting escorts.
    * You can now define different text/music using the intro code.
    * Cleaned up code some.
    * Introduced idea of system_getIndex().
    * Ripped the GUI stuff out of player.c and put it in gui.c.
    * Code clean up.
    * Removed more non-dt dependent timers.
    * Better music handling.
    * Have player keep track of hostiles it has in system.
    * Much better handling of joystick axes.
    * Doxygen.
    * Code clean up.
    * Fixed possible segfault.
    * Some code clean up.
    * Doxygen.
    * More code clean up.
    * Minor optimization.
    * Added keybinding to cycle through secondary weapons backwards.
    * Applying skwurp's patch to improve accel sound handling when paused and hyperspacing.
    * Small doxygen fix.
    * Slightly cleaner implementation of channel pause/resume, fixes segfault with no sound.
    * Ugly hack to make sure engine sounds sound when toolkit is open, proper fix
       would involve fixing SDL_mixer...
    * Reset interference on player load/creation.
    * Should fix the thrust/afterburn sound get stuck when you land.
    * AUTONAV now should try to face away from system center if too close.
    * Mountpoints implemented for turrets.
    * Added flags to image creation to control transparency mapping.  Should speed up theloading some and reduce memory usage.
    * Incorrect check.
    * More doxygen.
    * Added interference.
    * First large ndata patch.
    * Moved xml.h to nxml.h.
    * Added more complicated xml parse functions in nxml.c.
    * Removed all non-dt timers from stuff that should be dt based.
    * Converted the outfit timers to the dt system.
    * Changed misn_lua to nlua_misn for easier lua module detection.
    * Interference is generated and renders wonderfully, needs internal mechanism first.
    * Code clean up.
    * First patch to try to add a dynamic economy.  Economy is static atm.
    * Some code clean up.
    * Fixed a memory leak.
    * Replaced malloc.h with stdlib.h, as the former is deprecated
    * Added license menu.
    * First implementation of Licenses.
    * Fixed broken handling of health textures.
    * Major rewrite to xml.h increasing sanity checks.
    * Gui can now handle overlays.
    * Changed gui.xml to a cleaner format.
    * Added toggle 2x speed keybind.
    * Fixed segfault on main menu.
    * Changed some colours around.
    * Fixed stupidity in physics.h
    * Added the line thing for planets also.
    * Give reason behind autonav abort.
    * Better handling of player_flags and sounds when exiting game.
    * Make a mark if targetted ship is outside radar range.
    * Fixed typo.
    * Fixed mission cargo not properly moving when changing ships.
    * Remove mission cargo if it doesn't make sense.
    * Try to deal with missions not cleaning up properly.
    * If ndata isn't found, try to be a bit more robust in finding it.
    * Allow reading ndata-version by default.
    * Sanitized dealing with mission cargo a bit.
    * Removed unused "jump" hook for player that collided with pilot hook.
    * Reset some GUI variables when creating a new game.
    * You can now define a start mission in start.xml.
    * Added tutorial skeleton.
    * Added introductory text.
    * Implemented bribing.
    * Added ai.isbribed().
    * Fixed major outstanding bugs in flag usage.
    * Fixed major outstanding bugs in weapon_hit stuff.
    * Fixed bug in displaying weapon system name.
    * Corrected selecting hyperspace in map not updating window.
    * Fixed some valgrind errors.
    * Added target_prev keybind.
    * Added communication framework.
    * Tweaked entire hyperspace distance system to be more sane.
    * Fixed segfault when trying to land in a system with no planets.
    * Map will now always close on new/load game.
    * Can now use 'h' key in map window.
    * Cannot open map while dead.
    * Faction rating and combat rating are now continuous.
    * Escorts work, sort of.
    * Removed useless target parameters.
    * Moving to target on pilot structure.
    * Autonav now makes engine noises.
    * Polished autonav system a bit more.
    * Implemented volatility damage.
    * New System.
    * Fixed spelling mistake.
    * Introduced autonav.
    * Use memset for pilot initialization.
    * Reduced calls to xmlCleanupParser(), only one for all the loading now.
    * Fixed new player inheriting last loaded player's faction standings.
    * Fixed diffs getting wiped when loading.
    * Fixed pausing game when player is hyperspacing.
    * More proper unidiff cleaning up.
    * Unidiff no longer segfaults.
    * Major rewrite and clean up in space.c.  Hopefully won't introduce bugs.
    * Stop firing before starting to jump.
    * Also grey out secondary weapon when out of ammo.
    * Your secondary weapon greys out when you can't use it again yet.
    * More fine tuning for missions.
    * Fixed Operation Black Trinity.
    * Some doxygen for land.c.
    * Implemented outfits/shipyard/land missions.
    * More properly landing cleanup.
    * Fixed bug with exiting while landing and switching pilots causing space warping.
    * Your shipyard now follows same style as the normal shipyard.
    * Player can now abort jump sequence.
    * Once in hyperspace mode, NAV comp is always green.
    * Seperated dialogues from toolkit.
    * Fixed some long-term snprintf mistakes.
    * Don't play the "enter hyperspace range" sound when already jumping.
    * You can now sell your ships.
    * You can cancel beams as secondary weapon instead of having to hold shift.
    * First patch to bring more control to beam weapons.
    * Input dialogues can now be cancelled and return NULL.
    * Fixed some doxygen mistakes.
    * More doxygen stuff.
    * GUI sound update.
    * More doxygen and code cleanup.
    * Wee bit more doxygen.
    * Audible noise when player enters jump-safe zone.
    * More doxygen.
    * Targetting sounds implemented.
    * input.c is doxygenized.
    * pilot.c is doxygenized partially.
    * Split engine sounds and GUI sounds for player.
    * player.c has more doxygen now.
    * Fixed some issues in sound.c.
    * sound.c is now fully doxygenized.
    * player.c is now partially doxygenized.
    * Added primitive positional sound.
    * Missiles now play their proper sound.
    * Fixed segfault when running loading a player after another with sound.
    * Redid entire sound system with SDL_mixer.
    * Added punctuation to player_message()s.
    * Unified colouring schemes.
    * All factions you are enemies with will appear as hostile too.
    * Messages now fade away nicely.
    * Uninhabited planets now show up as so on radar.
    * Afterburn now breaks when you run out of energy.
    * Render player ontop of targetting graphic.
    * No longer segfault if outfit not found.
    * No longer segfault if a mission not found in stack when saving.
    * Split player rendering properly into GUI and player.
    * Now render particles when flying in nebulae.
    * Fixed bug with changing hyperspace path after selecting a route.
    * Player gets message when a missile locks onto him.
    * Player no longer "hardcoded" into pilot_stack[0].
    * Fixed fuel not loading properly.
    * Renamed pilots and mpilots to pilot_nstack and pilot_mstack.
    * src/pilot.c: binary search works on ints near max.
    * New CFLAG: -Wshadow.
    * Fixed all new warnings.
    * Cleaned up code a bit.
    * Coded "ingame" viewer for targets.
    * Fixed segfault when switching pilots.
    * Fuel is now also saved.
    * Code uses flags for systems now to allow missions to mark them.
    * Major upgrade, you don't already know all systems location.
    * Fixed up new player stuff cleaning stuff.
    * Fixed problems with system with one unlandable planet.
    added more nazi flags: -Wmissing-prototypes -Winline -Wcast-align -Wmissing-declarations -fno-inline
    added alut as a dep, kill me but it does load sound awesomely
    big assorted patch, adds afterburner noise
    new philosophy, when you swap ships your cargo stays with you, will fix issues
    type spotted by ahuillet
    cosmetic patch -> gl_screen.[wh] = SCREEN_[WH] in most places
    fixed segfault when trying to land on a system with no planets, thanks zan!
    added PLAYER_CREATING flag to finally fix all creation/death issues
    no longer segfaults when overwriting a pilot
    some code cleanup, and made map more sane (and colour coded!)
    conserve hyperspace path when taking off
    missions are now loaded! still need to load hooks for them to work
    rumble of the afterburners is now in outfit.xml
    hack until active missions are saved
    fixed bug with no death menu appearing
    split cinematics mode to spfx
    player faction standings are now saved and loaded
    get ready to... RUMBLE!  (added rumble for afterburning among others)
    now completed missions and mission variables are also loaded, missing current missions
    fixed segfault with map
    fuel used ingame now
    misc fixes and prompt before overwriting pilot
    added filesystem abstraction and path based stuff
    fixed brown paper bag bug
    you can sort of load games, still need to fix issues though
    save the completed missions
    cosmet gui fixes
    misc bugfixes
    fixed a couple of bugs with saving system
    first add of save stuff
    improved xml #define magic
    big update to add another mission
    big time map improvements, you can visually see the A* now :)
    added time in the form of the galactic date
    more tab removal, fixed up mission var stuff
    started :retabbing (spaces only) and fixed some xml issues
    unique missions are now actually unique :)
    gui fix, no longer see the 0 in weightless cargo
    now track cargo missions give you so they get cleaned up on abort
    mission cargo gets a special marker in gui
    introduced the concept of mission cargo - not-tradeable
    improve land gui
    fixed bugs so that missions actually work now :)
    major improvement -> use ids for factions instead of pointers
    some cleanup and changes in loading
    renamed alert, YesNo dialogue_ instead of toolkit_.  added dialogue_input
    changed everything to use player->credits instead of player_credits
    can now change ships once you've boughten them :)
    added player_getLoc and don't allow player to repeat ship names
    you can specify default fptr for windows now
    branch:      naev
    added player_ships and player_getShip to manipulate player ships
    branch:      naev
    enforce minimum length of 3 for player and ship names
    branch:      naev
    player gets all the ships he buys saved in a stack, just need to be able to change them
    branch:      naev
    You can now name your ship too
    branch:      naev
    missed a free
    branch:      naev
    almost working player input, need to hack font up first
    branch:      naev
    changed landing permission message (ahuillet)
    branch:      naev
    stop pilot turning/acceling when dying
    branch:      naev
    land's autotarget only targets landable planets
    branch:      naev
    no longer segfaults if you quit immediately
    branch:      naev
    first fix to use the sane font width properly
    branch:      naev
    lengthened empty space when dead
    branch:      naev
    player death implemented
    branch:      naev
    made limit_speed to act abruptly, much nicer when afterburning now
    branch:      naev
    added afterburners
    branch:      naev
    modifications actually work now :)
    branch:      naev
    sanitized message order
    branch:      naev
    can now buy/sell commodities, but they're all the same price
    branch:      naev
    can now buy/sell cargo, minor fixes
    branch:      naev
    using 'face' with no ship target and a planet target will face the planet
    branch:      naev
    big update, ai now controls ship's credits/loot, more API, pilot cargo stuff
    branch:      naev
    allow menu when hyperspacing (cancel fancy hyperspace effects when paused)
    branch:      naev
    added possibility to deny landing, updated TODO a bit
    branch:      naev
    assorted hyperspace cosmetic fixes
    branch:      naev
    cosmetic gui patch
    branch:      naev
    planet colours now based on standing
    branch:      naev
    you now need permission to land
    branch:      naev
    map improvements
    branch:      naev
    fixed typo causing segfault when selecting hyperspace target
    branch:      naev
    map framework, changed systems name to systems_stack for coherency
    cleaner version of last patch
    branch:      naev
    will now display 0 properly if you sell all your ammo
    branch:      naev
    make money selling stuff, and more buying stuff checking
    branch:      naev
    changing radar resolution gives a message now
    branch:      naev
    changed some player variable names, immproved outfit buying/selling
    branch:      naev
    split newShip from player_new so you can now buy ships free (for now)
    branch:      naev
    improved  alot of things for shipyard, including shipyard
    branch:      naev
    added turrets
    branch:      naev
    seems like zoom in/out of minimap has been broken for a while
    seperated speed limiting into physics
    branch:      naev
    enemy pilots can now die
    branch:      naev
    split the credit functions and improved boarding
    branch:      naev
    split boarding from player.c to board.c
    branch:      naev
    you can now take up to 128 screenshots without overwriting
    branch:      naev
    perfected hyperspace visuals
    branch:      naev
    remode unused variable and improved hyperspace transition
    branch:      naev
    added fade to white when hyperspacing, still needs sound though
    branch:      naev
    C correctiveness patch
    branch:      naev
    added player_name
    added combat rating which is based on mass of pilots killed
    branch:      naev
    merchant vessles now go hyperspace
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] rough sound seems to be working now without flaws
    branch:      naev
    [svn] added sound support base, for some reason seems to crash the game alot
    not in usage
    branch:      naev
    [svn] added more sounds
    sound engine should be working ,but isn't tuned enough yet
    branch:      naev
    [svn] Added basic music support to game
    OpenAL and VorbisFile are new deps
    branch:      naev
    [svn] removed hard forcing of player speed and instead it uses incremental slowdown
    fixed bug where pausing while hyperspacing gave instant travel
    branch:      naev
    [svn] prepared for the upcoming toolkit_list
    fixed some sanity around turning pilot functions, now in pilot_face
    added basic rough on the edges hyperspace implementation
    branch:      naev
    [svn] added window_get to get windows based on their name
    added a small boarding menu
    branch:      naev
    [svn] windows now get a name embedded
    added empty commodity exchange
    tried to sanitize secondary weapon/weapon shooting
    changed pilot stack and star stack to not lower memory allocation
    fixed landing/takeoff to actually affect the system
    branch:      naev
    [svn] did some sanity to allow for example secondary bolt weapons
    branch:      naev
    [svn] game now uses planet services (they aren't implemented yet though)
    took out an accidental DEBUG i left in
    branch:      naev
    [svn] small fix to avoid reversing while stopped
    branch:      naev
    [svn] added reverse command
    branch:      naev
    [svn] new target graphics!
    new hyena graphic!
    split more colour stuff from player.c to colour.c
    minor gui tweak
    branch:      naev
    [svn] improved the font usade
    now you can print blocks of text
    added planet descriptions
    branch:      naev
    [svn] split font stuff from more pure opengl stuff
    branch:      naev
    [svn] planet target is now rendered behind ships and weapons
    branch:      naev
    [svn] added support for images of planets
    cosmetic toolkit changes
    changed the gl_blit functions to work with doubles instead of Vector2d pointers
    took opportunity to clean up space.c xml (bringing it up to xml.h standard)
    cleaned up code
    branch:      naev
    [svn] Basic toolkit implementation done
    added gl_printMax and gl_printMid which was long overdue
    using flag system with gl_screen
    optional AA for primitives
    minor pause behaviour fix
    branch:      naev
    [svn] major syntax rewrite, big "what the hell was I thinking" in player.c
    made opengl.h struct names more intuitive
    branch:      naev
    [svn] for some reason landing dist was based on velocity not position
    branch:      naev
    [svn] Basic toolkit implementation (but ugly)
    Basic landing
    Pause bugfixes
    branch:      naev
    [svn] pulled input out of player, file was getting too big
    more preperations for the toolkit
    branch:      naev
    [svn] Added planet targetting and landing framework
    split update / render completely into two different functions (for toolkit)
    branch:      naev
    [svn] cosmetic patch to the secondary weapon display
    nerfed missiles a bit
    branch:      naev
    [svn] switched to commonwealth spelling (armor -> armour)
    implemented seeker missiles and ammo
    implemented secondary weapons
    branch:      naev
    [svn] added player command face
    branch:      naev
    [svn] rudimentary screenshot taking
    put some data info in start.xml
    branch:      naev
    [svn] forgot to define the starting position and make it work :)
    branch:      naev
    [svn] Cleaned up some funky old code
    Added possibility to disable ships (no death yet)
    New data specific file start that allows the player's starting pos and such to be defined
    branch:      naev
    [svn] More cosmetic patches!
    branch:      naev
    [svn] GUI's NAV and WEAPON monitors are now used, just need to add MISC
    branch:      naev
    [svn] Brought render script up to date
    added new ship (still needs target image)
    GUI API should be complete
    branch:      naev
    [svn] combined xmlness in single header file
    rewrote player.c to use new xml syntax
    branch:      naev
    [svn] targetting graphic now displays color based on the targetted pilot
    branch:      naev
    [svn] added new GUI by default
    branch:      naev
    [svn] GUI are now saved in XML datafile
    this allows multiple guis
    each ship can have it's own GUI too :)
    branch:      naev
    [svn] More input error checking and safety
    branch:      naev
    [svn] fixed bug with configuration files
    branch:      naev
    [svn] multiple enemies now supported
    bug fixes
    you can get other ship's health now from AI
    branch:      naev
    [svn] some cosmetic changes
    misc minor fixes
    branch:      naev
    [svn] enemies are now properly parsed
    added possibility of pirate
    buffer overflow in ai fixed
    branch:      naev
    [svn] control_rate no applies properly
    targetted pilot will appear over others
    branch:      naev
    [svn] faction system almost fully implemented
    fleets almost fully implemented (just need randomized start positions)
    major bugfix in weapon.c
    branch:      naev
    [svn] much more error checking in the xml
    fleets are built in - just need to do something with them
    minor tweaks and fixes
    branch:      naev
    [svn] added faction support
    documentation tweaks
    branch:      naev
    [svn] added planet to minimap
    branch:      naev
    [svn] added message system
    fixed spinning laser bug
    branch:      naev
    [svn] targetting added
    fancy UI fixes
    branch:      naev
    [svn] more interface improvements
    branch:      naev
    [svn] added basic gui framework
    branch:      naev
    [svn] some new pack features (list files)
    radial collision detection
    proper adding of the shooting system all about
    branch:      naev
    [svn] missing weapon.c/weapon.h
    more pilot modularity
    layers work properly
    branch:      naev
    [svn] rudimentary shooting system, needs work
    branch:      naev
    [svn] outfit loading, not properly used yet
    branch:      naev
    [svn] more ai api
    minor code changes
    more AI concepts
    branch:      naev
    [svn] improved ai API
    fixed minor memory leaks
    cleaned up a bit
    branch:      naev
    [svn] added star system support/loading
    added planets
    more minor tweaks and fixes
    general happiness
    branch:      naev
    [svn] moved everything to directories
    cleaned up Makefile
    improved AI
    branch:      naev
    [svn] basics of the AI implemented
    branch:      naev
    [svn] removed python dir
    Vector2d now uses polar coordinates
    minor tweaks
    branch:      naev
    [svn] minor fixes
    dynamic keybind loading from configuration file
    sample configuration file added
    branch:      naev
    [svn] cosmetic changes, minor fixes
    branch:      naev
    [svn] small handling fixes
    branch:      naev
    [svn] minor tweaks
    creation of start of AI infrastructure
    branch:      naev
    [svn] more files yay
    branch:      naev
    [svn] just uploading working copy
    Add a CSV containing ship names and their stats to devcsv
    * You can now generate ship csv too.
    Some Lua error stuff.
    We were still adding an include() function for some reason that seemed to break things.
    Support N_ instead of gettext_noop in both Lua and C.
    Added gettext.gettext_noop to Lua.
    Implemented a travel log event.
    
    This also fixes some more problems, including one that prevented
    the shiplog system from being used outside of missions and one that
    prevented compilation from being successful.
    Removed some unused variables.
    Use #define to determine the name of the Load table.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Similar to require, use '_LOADED' table for include.
    Have include() add '.lua' extension if necessary.
    Remove old Lua 5.0 compatibility.
    Lua v5.2 and LuaJIT v2.1 no longer have the Lua 5.0 compatibility defines.
    Added gettext.ngettext for lua.
    Directly add gettext as "_".
    gettext for nlua modules.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Remove __NLUA_RW, using __NLUA_CURENV instead
    Replace remaining uses of Lua globals with Lua environments.
    
    This fixes crashes in the tutorials (and probably other events).
    Do not create __DELETED variable anymore
    Revert "Call getfenv in nlua_pcall() eliminating the need to pass the"
    
    This reverts commit 79e36c0c1bbca2aa5fa2922651dd303bc7b87882.
    Messaging API; still semi-broken
    Call getfenv in nlua_pcall() eliminating the need to pass the
    environment as an argument
    Remove some functions from Lua blacklist
    
    I don't think these are an issue except with intentionally malicious
    code, which Naev probably doesn't protect well against anyway.
    Renamed __RW to __NLUA_RW to be more obvious what it is.
    Add nlua_pushenv() function
    
    Use in various cases where the full environment table is pushed to the
    stack.
    Make include() return the chunk's return value, like standard require()
    Document new functions in nlua.c
    
    I should really break my habit of delaying documenting code...
    Use new __RW system and nlua_register() everywhere
    Fix __RW handling and use it for pilot API
    Set __RW for each env
    Do not define nlua_errTrace() in header, since it is now used only in nlua.c
    Move definition of "top" to inside "#if DEBUGGING"
    Use nlua_pcall() in a couple more places, and make it more robust
    Write nlua_pcall() and NLUA_CHECKRW()
    Remove wrappers around code needed for creating lua states
    Have conf use global lua state
    Run music scripts in global lua state
    Put GUI in global lua state
    Create nlua_register() function
    Load standard library RW
    Fix bugs
    
    Seems to be working now, but needs testing, and implementing for
    everything other than AI scripts
    Compiles now; runtime errors (and still  only ai.c)
    Add nlua_setenv and nlua_getenv function
    
    They behave like getglobal and setglobal, but use a sandboxed
    environment instead of gloal state
    WIP change to use one Lua state; does not yet compile
    
    Starting with ai.c
    * Minor Lua properness and such.
    * sizeof(char) is always 1. No need to keep it around.
    * Added cli_warn to all Lua bits.
    * Fixed many minor memory leaks.
    * Added and using ndata_exists for lua voodoo.
    * Minor fixes so it compiles hunky-dory.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added WIP Lua and saving/loading
    * Comments and formatting.
    Correct documentation a bit, and actually load the commodity module.
    * Initial implementation of landing lua. Not actually used yet.
    Many, many typo fixes.
    * Handle __done__ and don't spawn an error.
    lua headers are system headers, include them that way
    * Documentation.
    * Added function to get stacktrace from Lua.
    Include the outfit Lua API module by default.
    * Use Lua JIT if it's available.
    * More NAEV -> Naev.
    * NAEV now also prints everything to it's internal console.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Enable setmetatable again.
    * Multiple include() in Lua script won't affect performance.
    * Made some nlua naming consistant.
    * Load the basic Lua libraries with loadStandard.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Constness.
    * Cleaned up some Lua code.
    * Should compile again.
    * Some nlua sanitizing.
    * Split tk from nlua.
    * Luadoc.
    * Split rnd from nlua.
    * Luadoc.
    * Split naev module from nlua.
    * Luadoc.
    * Split nlua_time from nlua.
    * Better handling of errors on include() in Lua.
    * Do not use vnprintf for Lua stuff (avoids possible segfaults).
    * More Lua API.
    * New random mission.
    * More music improvements.
    * New song.
    * Doxygen.
    * First large ndata patch.
    * Doxygen.
    * Added math lib to basic nlua.
    * Added ai.shipmass()
    * ai.shipclass now can take a pilot id as parameter.
    * Bribe amount is stored in mem.bribe in pilot's ai.
    * First 2d vector support for Lua.
    * Doxygenization.
    * Seperated dialogues from toolkit.
    * More doxygen and code cleanup.
    * Step one of updating lua api to use metatables.
    * Added planet_getClass().
    * Fixed space.faction to allow to check easily for certain factions.
    * Added space.faction to get the faction of a Star System.
    * Sanitized lua bindings.
    * Check for errors when using "include".
    * No longer calling luaopen directly.
    * Removed unsafe functions from mission lua envs.
    * Added include function to load other lua files.
    * Wrapping around luaL_newstate and luaopen_base.
    * New CFLAG: -Wshadow.
    * Fixed all new warnings.
    * map.c: Fixed segfault when landing.
    * New Outfit: Star Map.
    * Moved A* jump pathfinding from space.c to map.c.
    begin cleaning up lua code a bit
    Use new __RW system and nlua_register() everywhere
    Use new nlua_register() API in nlua_loadCamera()
    lua headers are system headers, include them that way
    * Added Lua camera module basics.
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    * Due to the hidden continues I can't use do { } while(0) for the xmlr_* functions so using addition { } instead.
    * Put a do { } while(0) around all the xmlw_* routines to ensure they are sane and not messing with my ifs.
    Remove trailing spaces in src/
    * Whitespace.
    * Might fix some issues, but still needs better support.
    * Should handle 64 bit unsigned int values properly (for example population tags).
    * Strict error checking for ship stats (including for mod outfits).
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Fixed issue with planet saving.
    * Automagically adding autopos tag to all jump points.
    * Automagicalyl adding radius tag to all systems.
    * Added function for saving star systems.
    * Better money handling, credits shouldn't overflow anymore.
    * Improved nxml onlyNodes API.
    * Events also check for unknown nodes.
    * Properly loading ship stats.
    * Detect bad nodes in ship.
    * Make sure strdup doesn't crush data.
    * Added flags to image creation to control transparency mapping.  Should speed up theloading some and reduce memory usage.
    * Moved xml.h to nxml.h.
    * Added more complicated xml parse functions in nxml.c.
    * Major rewrite to xml.h increasing sanity checks.
    * Gui can now handle overlays.
    added pluto library, added base64 encode/decode routines, saving lua active mission states
    preparing for adding fuel into game
    you can sort of load games, still need to fix issues though
    fixed a couple of bugs with saving system
    first add of save stuff
    improved xml #define magic
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    started :retabbing (spaces only) and fixed some xml issues
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] Basic toolkit implementation (but ugly)
    Basic landing
    Pause bugfixes
    branch:      naev
    [svn] fixed AI landing (still too loose for my tast though)
    cleaned up some code
    more xml macros
    branch:      naev
    [svn] combined xmlness in single header file
    rewrote player.c to use new xml syntax
    Get rid of some uninitialized warnings.
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Fixed a bug that caused ship log entries to get truncated when viewed
    
    Was caused by using a buffer that was only 256 bytes, too small for
    long messages. I upped it to 5000, which should be high enough to
    avoid any problems.
    Fixed spacing and other code style issues.
    added ability to add manual shiplog entries
    Added symbols for faction text on the map screen, and for ship stats
    
    This is an accessibility feature for those who are colorblind. You
    no longer need color vision to see this information.
    
    Based on the idea we had before to use emojis, but using ASCII instead.
    The biggest advantage of this is that it can just be directly inserted
    into the text rather than having to worry about positioning the symbols
    manually.
    tidied up code
    Fixed bracket placement.
    Removed logid from lua.  Logs now created/appended using the id string.
    Changed createLog() to accept nil as unlimited max length.
    Added max length to save/load.
    Pruning mechanic added
    Consistency change
    Added a log identifier for creating logs - so that logs can be shared between relevant missions.
    removed printf statements
    Fixed up lots of style errors, removed travel log at least partly
    
    Please look over this, but I had a go at removing the travel logs.
    Didn't do any testing beyond making sure it compiles. I was exhausted
    by all the things I was compelled to fix and just had to stop. I
    *think* I removed the travel log stuff though.
    
    A note on style: you consistently get a lot of style wrong and it's
    a pain to correct. Please take a look at some of the fixes I've made
    here and make further adjustments following this.
    
    In addition to the kinds of style errors I fixed, I also noticed you
    using printf to print warnings. You should *not* do this; Naev has a
    macro specifically designed for warnings, the `WARN` macro. You should
    *always* use macros like this (`WARN`, `DEBUG`, or `ERR` depending
    on the situation) for a whole host of reasons, not least of which is
    that these macros do more than just print a message. You need to fix
    all of these uses of `printf`. It's never something you should be using
    in Naev code.
    
    🕵️
    Added a remove log functionality, so that unimportant logs can be automatically removed.  Also limited the journey log to the 6 previous journeys.
    Ship log implemented and examples in some missions
    Initial mission log work completed.
    Ship log implemented and examples in some missions
    Initial mission log work completed.
    Implemented ammo_capacity ship stat.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Fixed the method of ammo refilling.
    * Used define for great justice (removed repetitive code).
    Removed constraints when adding outfits to a ship.
    
    Change has effected the equip scripts aswell, but that had no advarse
    effects.
    Made some refractoring in the process, name and comment changes.
    The way I build the report is the most lazy way I could think of
    without storing the checks in an array/data struct with the appropriate
    string, and without writing a custom string writing function.
    * Code clean up and polish.
    Ammo can now be looted from ships when boarding (only takes what you can carry and what's compatible).
    Fixed a crash when boarding ships with cargo.
    * Added pilot_healLanded().
    * Doxygen.
    * Added missile arcs.
    * Minor code optimization.
    * Lockon should be implemented.
    Minor fixes and dead code clean-up.
    Minor fixes and dead code clean-up.
    * Code clean up.
    * Clean up and code moving.
    * Made header define match file name.
    * Cleaned up headers a bit.
    * Split up pilot files a bit.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Missed variables
    Removed unused leftover tutorial stuff.
    More gettext.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Do not include md5.h where it is not used
    Remove pack. It is no longer used
    * Cleaned up unneeded macro.
    * Minor memleak fix.
    * Cosmetics.
    * New planets get a nonzero radius.
    * Update radius when updating gfx.
    * Moved various path defines into ndata.h.
    Don't prompt the player to name their starting ship if it has a default name.
    * Seems like pulseaudio has a poor API design and therefore you shouldn't clean up especially if other libs are using it except at the end.
    Remove trailing spaces in src/
    "Teh" ain't no word I ever heard of.
    * Fixed minor memleak.
    * Added start position to tutorial node in start.xml.
    * Events load properly on new game.
    * You can define starting event, tutorial can get it's own event/mission.
    * New time system. As seen on wiki.
    * Centralized the game start information.
    * New player should have the system he'll start in as a background when writing name.
    Fixed some of the clipping going on in the slot widget.
    Render exclusive/restrictedness on the slot indicator for ships in the shipyard.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Outfits use rarity images too.
    Simplified rarity image selection logic.
    Added ship rarity field.
    Made ship store graphics square to be able to share overlays with outfits.
    Ships can also use graphics overlay now.
    Abstracted image array stuff to cell where it is possible to set alt text.
    More "NA" fixes.
    Don't translate W U S (they can't be translated)
    Don't translate W U S (they can't be translated)
    Fixed the rest of the text colors.
    Added translation targets for ALL the xml.
    More translation thoughout the game.
    ship bought and sold hooks
    Removed the ugly uses of cDConsole as a color for headers.
    
    Replaced those all with black; headers don't need to be a different
    color and it honestly looks nicer without one.
    Fixed several strings and lack of gettext usage.
    Extended some heights to make missing texts show up.
    Time Rate -> Time Dilation
    Added "time rate" to ship info.
    Make everything fuel related an int
    Tag everything related to fuel and using double with DELETETHIS_
    More gettext.
    Converted the "blackmarket" flag to a "blackmarket" service.
    
    This is cleaner, and it's an easy way to make adjusting this property
    in the editor possible. The "blackmarket" flag outside of the assets
    is still supported for compatibility.
    Keep var declaration and assignment separate
    Remove Yoda condition
    Avoid regenerating the land tabs over top of themselves
    
    This was only occurring when hooks caused a GUI reload, which is
    somewhat unsafe, but this seems like a useful precaution to take.
    Prevent null ship from being bought or traded for.
    Remove fuel cost and make refueling wholly-automated
    
    This was discussed earlier in IRC. My feeling is that fuel costs add nothing,
    yet can potentially strand new players and render saves unusable.
    
    There were also several issues with fuel being zeroed when removing fuel pods
    and engines, leading to fuel loss while experimenting with loadouts.
    Colourize prices based on affordability in several places
    Reverted armor stats to the units it was using before.
    
    I think these measurements look silly, but whatever.
    Reverted the removal of ship info.
    
    I've decided that I'm not in favor of removing this. Naev doesn't
    use it, but Naev's engine is very flexible and I think it would be
    nice for the engine to be used for other similar games; for this,
    having the ability to give specific ships extra stuff can be useful.
    Replaced fuel_consumption stat with fuel_consumption characteristic.
    
    fuel_consumption is a flat variable, but ship stats are clearly
    meant to be midifiers. This resulted in the game telling the player
    that fuel_consumption was a modifier. It's now a (mandatory)
    characteristic of the ship instead. This also avoids the problem of
    the arbitrary 100 fuel default consumption.
    
    Ships haven't been updated yet. That will be done next commit.
    
    I also removed a bunch of ship info from the shipyard that is
    outdated (i.e. characteristics that are no longer used, and that are
    now determined by outfits and ship stats).
    Changed "black market" to a flag, not a variable.
    
    To conform with the rest of the code.
    Added the capability for "black market" planets.
    
    Quite simply, a "black market" planet ignores licenses: the player
    can buy anything from a black market planet, regardless of what
    licenses would normally be required. Black market planets are
    indicated by the <blackmarket/> XML tag.
    * Explanation of patch.
    Bug#217 alternate fix
    BUGFIX: text boxes were overflowing into each other in the shipyard menu.
    (Temporary?) fix for the misplaced ship info on the bying screen.
    * Removed jump delay as it should only depend on ship stats and that's displayed elsewhere.
    Various small fixes: Set Focuse to keyboard useable widgets in the landing dialog. Saved cursor position in mission computer. Fixed possible access to unalocated memory.
    Added search shortcut to outfitter and shipyard.
    * Wrapper for nsnprintf being used all over.
    Updated call-sites of buttons where soft-disable fall-through is desirable.
    Large revamp and unification of the various error-printing functions in the land window.
    Gave hotkeys to a large chunk of the land window's buttons, as well as the YesNo dialogue.
    s/Takeoff/Take Off/ where appropriate.
    * Made all the colours constant as they should be.
    * Ships take into account the default outfits they can have when buying (for price).
    * Implemented maximum engine limits for ships.
    * Better handling of stats, not entirely working yet.
    Fixed low-resolution issues with the outfitter and shipyard.
    Many, many typo fixes.
     * Fixed new gcc -Wunused-but-set-variable warning.
    * Try to fix the bloody credits mess.
    * Added player.swapShip().
    * Changed API slightly for player.newShip().
    * Fixed warnings when landing on planet with no ships in shipyard.
    * Fixed warning when shipyard has no ships.
    * More proper display of ship info in the land window.
    * Display damage absorption at shipyard instead of ship slots.
    * Fixed shipyard.
    Systems slot renamed to Utility.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    Migrating from High, Medium, Low + Heavy, Standard, Light to Weapon, Systems, Structure + Heavy, Medium, Light
    * Added caption and made a bit fancier.
    * Simple initial implementation of slot size visualization in the shipyard.
    * Instead of hardcoding 32 for credits2str buf length, added #define to make it much more sane.
    * Code clean up, making internal functions static.
    * Doxygen.
    * Moved land button sizes to be global and not local to reduce copying.
    * Move shipyardstuff out of land.c in a first attempt to thin land.c.
    Minor whitespace and fixes and s/\t/   /g
    removed the another memory leak
    removed date_to_remove
    added news.bind()
    Added date_to_add & date_to_rm args to news.add()
    Better lua cmds
    Fixed date issues. Added temporary headers
    Fixed some lua
    Added WIP Lua and saving/loading
    First "working" but WIP news
    * Doxygen.
    * News is much fancier now.
    * News rewrite - not finished yet.
    * Initial news implementation.
    Reduce shader boilerplate with a C program generating C code
    
    Ugly, I guess, but... less?
    Shader based beam rendering
    Avoid coercing const to non-const
    Changed the inrange computation method
    Fixed headers that misspelled their include guards with two underscores.
    * Outsource damage types to XML.
    * Note: still buggy.
    Minor fixes and dead code clean-up.
    Minor fixes and dead code clean-up.
    * Made beam ids unsigned to make the population happy.
    * Fixed implementation, feels totally wonky though.
    * Implemented accuracy and fire rate mods for heat.
    * Implemented accuracy stats.
    * Fixed beam weapons.
    * New keybind to toggle weapon safety vs allies.
    * Mountpoints implemented for turrets.
    * Correctness tweak for rendering with dt.
    * Beam weapons now actually move when rendering (graphics need updating).
    * Added explosions.  Currently only used on pilot deaths.
    * First patch to bring more control to beam weapons.
    * Code quality improvements.
    * Switched weapon timer method to something more sane.
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    branch:      naev
    added some code to hopefully help prevent dt intervals that are too big
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] windows now get a name embedded
    added empty commodity exchange
    tried to sanitize secondary weapon/weapon shooting
    changed pilot stack and star stack to not lower memory allocation
    fixed landing/takeoff to actually affect the system
    branch:      naev
    [svn] did some sanity to allow for example secondary bolt weapons
    branch:      naev
    [svn] added beginning frame for toolkit
    added ability to pause/resume game
    nerfed lasers armour damage
    branch:      naev
    [svn] Added planet targetting and landing framework
    split update / render completely into two different functions (for toolkit)
    branch:      naev
    [svn] switched to commonwealth spelling (armor -> armour)
    implemented seeker missiles and ammo
    implemented secondary weapons
    branch:      naev
    [svn] some new pack features (list files)
    radial collision detection
    proper adding of the shooting system all about
    branch:      naev
    [svn] lasers fade out
    minor tweaks
    fixed all memleaks
    just need some collision detection now
    branch:      naev
    [svn] missing weapon.c/weapon.h
    more pilot modularity
    layers work properly
    Got rid of dat/unidiff.xml in favour of laid out representation in dat/unidiff/.
    * Constness.
    * Cleaned up some Lua code.
    * First release of the unidiff system.
    warnings
    Added aiming lines to ease dogfight
    Reduce shader boilerplate with a C program generating C code
    
    Ugly, I guess, but... less?
    Remove gl_drawCircleInRect()
    
    It doesn't really seem to be needed, and gl_clipRect() can serve the
    same role.
    Shader based beam rendering
    Create a "smooth" shader, to replace some of the remaining code
    Use shader to draw smooth circles
    Update gui.c to use shaders and static VBOs
    Use gl_blitTextureInterpolate() to render the nebula
    Use shader to draw filled circles
    Replace circle generator with a simpler algorithm
    
    Also re-enable the per-pixel gl_drawCircleEmpty and use it on Intel
    hardware, as it produces nicer results.
    Added a function for drawing circles with line loops
    
    This ought to produce nicer results than gl_drawCircleEmpty, which
    I've #if 0'd for the time being, as it's now unused but may be of some
    use in the future.
    * Added function to translate screen coords to game coords.
    * Split the cross rendering stuff into a gl_render function.
    * Initial commit of the camera model.
    * toolkit_clip -> gl_clipRect.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Player lands and takes off with an animation.
    * Added generate coordinate translation function.
    * Render side bar when scrolling up in log.
    * gl_blitTexture is now global
    * Added function to blit sprites scaling.
    * Added rendering with interpolation functions.
    * Rough dynamic zoom implemented.
    * Added mipmap support.
    * Added ability to draw filled circles.
    * Removed immediate mode from circle drawing.
    * Converted more glBegin to VBO.
    * Added gl_renderRect.
    * Removed more glBegin and friends.
    * Cleaned up camera stuff.
    * OpenGL code is now becomming modular!
    * Split drawing functions from opengl.c.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Fixed crashing when critical files not found.
    Fixed error messages referring to wrong file when not found.
    Made it so that even if critical files are not found, the game tries to load.
    Replaced dockslot with index int.
    Switched dockpilot to id based.
    Fixed the problem with escorts (I think).
    
    Not tested thoroughly yet, but I think this should fix the problem of
    escorts causing segfaults when their origin ship dies. A cursory test
    shows that this seems to work.
    
    This also causes pilot.setLeader to remove "deployed" status from the
    origin ship.
    Modified the way escort launching is controlled so it can be monitored in real-time.
    
    The previous method was clunky and didn't allow monitoring changes
    to how many escorts you have deployed in real-time very well. So this
    is a HUGE overhaul in how that whole thing works. It solves a bug that
    prevented you from getting new fighters when your old fighters were
    destroyed, while still limiting how many you can launch at once.
    Using ngettext for plurals.
    More gettext.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Remove unused SystemFleet
    * New planets get a nonzero radius.
    * Update radius when updating gfx.
    * Moved various path defines into ndata.h.
    * Wrapper for nsnprintf being used all over.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Whitespace, typo and general style cleanup.
    Remove nonfunctional, unused function.
    Many, many typo fixes.
    Warn when loading fleets with invalid AIs.
    * Strict checking of xml for fleets.
    * Removed obsolete guard flag.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Changed how flags are handled so we can easily add more of them.
    * Removed legacy fleet strength.
    * NPC pilots now jump in from jump points.
    * Fixed strength warning spam.
    * Added a suggestion to the fleet strength warning.
    * Changed "could not find a fleet" message to be more intelligible.
    * Allowance for not spamming of non-warnings.
    
    If a fleet has negative strength, there won't be a warning shown.
    * Removed pilot chance.
    * Added fleet minimum strength checking.
    * Removed fleetgroups.
    * Dead/disabled/left pilots reduce the used presence.
    * Removed remnants of old security system.
    
    Lua sys:security() function is now marked obsolete. It, for now, returns friendly / all presence.
    * Fixed macro usage
    * Fleet ratings are read in from XML
    * More checks in fleet xml.
    * Made security dependent on mass.
    * Sped up security calculations.
    * Rerun security calculations in when doing unidiffs.
    * Added flags to fleets.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Constness.
    * Cleaned up some Lua code.
    * You can now add/remove outfits from pilots with Lua.
    * Made the hyena fight easier in the tutorial.
    * Added fleet pilot creation abstraction.
    * Changed fleet.xml format to something more sane to define outfits in.
    * Some code clean up.
    * Fixed tiny memleak.
    * Introduced the concept of FleetGroups.
    * Moved fleet stuff out of pilot.[ch].
    Increased minimum list panel width.
    
    Prevents button overflow and loss of header text.
    Mistake
    
    I think this was something I was experimenting with and forgot to
    change back. Sorry!
    Fixed button
    Increased yes/no button size.
    Increase button sizes for find dialogs.
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Fixed the rest of the text colors.
    Removed the ugly uses of cDConsole as a color for headers.
    
    Replaced those all with black; headers don't need to be a different
    color and it honestly looks nicer without one.
    Another case of no ngettext
    Changed fabs to FABS throughout the code.
    Remove all C code meant to support SDL < 2.0.0
    Do not segfault on tk.msg with non-existent image
    More gettext.
    * Actually have the height/width parameter of the imgMsg do something.
    Added popup with Text + Image
    Implemented a test usage in Start Event
    To test, just start a new character
    Minor whitespace and fixes and s/\t/   /g
    Handle resize in the secondary dialogue loop and intro
    Another attempt at better dialogue scaling.
    Improve the dialogue width scaling logic.
    fixed plural in dialogue_inputRaw. was reversed
    * Wrapper for nsnprintf being used all over.
    Gave hotkeys to a large chunk of the land window's buttons, as well as the YesNo dialogue.
    * Wider default width for message boxes.
    * Fixed example usage in luadoc.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Dialogue Fixup
    
    Move where we cleanup our callback function and variables.  This
    fixes a crash I introduced where searching for an outfit then a
    ship would cause badness.
    Fix Static Callback
    
    This makes our callback wrapper (correctly) static
    Properly cleanup InputDialogue
    
    This cleans up our InputDialogue object when we're done with it
    Doxygen cleanups
    
    Fix missing doxygen statements
    Reorder calls in dialogue_listPanelRaw
    
    This fixes an out of order issue in calling the callback before
    the widgets have been added
    [v2] add dialogue_listPanel/dialogueListPanelRaw
    
    This creates 2 new dialogue types, specifically for popping up a
    dialogue_list with more information than what is contained in the
    actual list.
    dialog_listRaw param typo
    
    dialog_listRaw does not accept a printf formatted string.
    Many, many typo fixes.
    * Always use smallfont for dialogues. Closes issue #126.
    Remove trailing spaces in src/
    * More LLVM errors and misc cleanup.
    * Fixed various issues with dialogues and the toolkit in general.
    * Fixed flickering with hooks.
    * Attempt to fix the memory issue with hooks in the tutorial.
    Signed-off-by: Edgar Simo <bobbens@gmail.com>
    * @TODO on why the dialogue secondary loop is broken.
    * tk.choice() should no longer segfault.
    * Fixed segfaults and other unpleasantness with yesno dialogues.
    * Removed more globals from dialogues, should bea ble to theoretically nest most dialogues now.
    * SDL_QUIT event should no longer no a non-saving quit.
    * Removed need of globals for yesno dialogues.
    * List dialogue tweaks.
    * Added list dialogue.
    * Doxygen.
    * Removed unused variables.
    * Removed unused variables.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Removed usage of SDL_min.
    * Added more #includes that were missing.
    * Input widget can now specify font.
    * Console input is in mono by default.
    * Formatting.
    * Precautions that must be taken.
    * Patch by Barry for adding choice boxes to the Lua API.
    * Someone claims I confuse then/than, lies I say!
    * Expand dialogues if title is too long.
    * Hack to fix segfault with ES missions.
    * Check to make sure game doesn't get deleted after opening load game menu.
    * Allow player to have a one character name.
    * Added gl_printHeightRaw - should avoid some segfaults with formatted strings from Lua.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Input widgets can now filter input.
    * Have dialogues filter out '/'.
    * No longer using a toolkit global variable.
    * Do not use vnprintf for Lua stuff (avoids possible segfaults).
    * Changed vsprintf to vsnprintf to be safe.
    * More doxygen.
    * Even more doxygen.
    * Doxygen fixes.
    * Fixed minor flag bug.
    * Small menu should no longer open over dialogues.
    * Finally think I fixed the segfault bug.  The issue was that the dialogue was
       being called when the weapons were being updated (hook on death) and the
       main_loop was being handled before the loop was destroyed.  So another
       iteration of weapon_update was being run in the middle of the first one,
       causing a double weapon_destroy to be triggered.  Moving the main_loop() in
       secondary_loop to the top so that the loop condition is run right after
       the event handling will solve this as an iteration won't be run in between
       dialogues.
    * Tweaked dialogue behaviour a bit.
    * Minor clean up.
    * Major toolkit change to simplify things a lot, makes it more object oriented.
    * Doxygenized dialogue.c.
    * Seperated dialogues from toolkit.
    Move the map_find_t typedef into map_find.h
    Added search shortcut to outfitter and shipyard.
    * Starting to look ok.
    * Split map find functionality to expand soonish.
    * Using fancy damage struct to prepare for generic disabling implementation.
    * Using fancy damage struct to prepare for generic disabling implementation.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    * Implemented damage absorption, not set however.
    * Implemented accuracy stats.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Minor explosion optimization.
    * Doxygen fixes.
    * Doxygen.
    * Added explosions.  Currently only used on pilot deaths.
    Console should properly chop up lines, however, colour will not be necessarily continuous.
    Some Lua error stuff.
    Switched to better local fonts and removed usage of system fonts.
    added spfx utility containing sound play for now
    Fixed the rest of the text colors.
    Simplified colors and modified image array selection colors.
    
    This gets rid of some variants of text coloring and defines them
    in a different way. The "dark" versions are removed; intending to
    replace that with outlines of some kind.
    removed tabs
    Remove SDL1 compatibility -D CLAGS, and sed so they aren't used
    Fixed warning/error messages.
    Changed escape code for colors from '\e' to '\a' so xgettext plays well with it.
    More gettext.
    Use defines for font paths.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Replace remaining uses of Lua globals with Lua environments.
    
    This fixes crashes in the tutorials (and probably other events).
    Revert "Call getfenv in nlua_pcall() eliminating the need to pass the"
    
    This reverts commit 79e36c0c1bbca2aa5fa2922651dd303bc7b87882.
    Fix cli_script()
    Basic tab completion for the Lua console
    Small console fix
    Call getfenv in nlua_pcall() eliminating the need to pass the
    environment as an argument
    Implement scrolling in the console with pageup/pagedown
    strndup wrapper for non-posix platforms.
    Add nlua_pushenv() function
    
    Use in various cases where the full environment table is pushed to the
    stack.
    Make print() render \n, and scroll as text is added to console
    Use new __RW system and nlua_register() everywhere
    Fix bug in console
    
    I caused this issue a while ago
    Fix __RW handling and use it for pilot API
    Set __RW for each env
    Add __RW handling to console code
    Make rescue script use global lua state
    Run music scripts in global lua state
    Have nlua_loadCli() use new env API
    Make background script use global lua state
    Use new nlua_register() API in nlua_loadCamera()
    Run console in global lua state
    Use resizable instead of fixed-size array for console
    
    This also uses escape codes for color, instead of testing the
    start of the string.
    Console should now properly display text from the start. Fixes #583.
    Strip trailing whitespace
    Fix small console issue
    Initial commit of resizing and fake fullscreen
    
    All of this is exclusive to SDL2.
    
    SDL_WINDOW_FULLSCREEN_DESKTOP allows Naev's window to be the size of
    the current screen without setting video mode (and thereby turning off
    other screens, messing up background window positioning, etc.), but to
    use it, we need to be able to resize the GL viewport on demand.
    
    The work required to allow that also permits dynamic resizing while
    playing, as long as a few other things are also reinitialized (a minor
    issue).
    * Added cli_warn to all Lua bits.
    * Lua scripts may now use warn() to print to console and stderr.
    * pilot.rmOutfit() can now remove all core outfits if passed "cores" as its argument.
    * Added a helper script for quickly equipping a pilot's cores.
    * Reorganized tech.xml a bit, no functional change.
    * Font sizes are now customizeable. User discretion advised to not break EVERYTHING.
    * Wrapper for nsnprintf being used all over.
    Avoid printing garbage.
    * Made all the colours constant as they should be.
    * Use shared monospace font.
    * Any problem can be solved by throwing more bytes at it.
    * strncpy paranoia.
    Whitespace, typo and general style cleanup.
    * Spelling isn't bobbens' fortee.
    lua headers are system headers, include them that way
    * Load music module in console.
    * Update bar npc when adding mission/event from console.
    * Stuff should print from Lua to both console and terminal, except pure console stuff.
    * Do not open console at main menu.
    * NAEV now also prints everything to it's internal console.
    * Improved the camera flying around model.
    * Added camera to console.
    * Fixed Lua Console.
    * Added more modules to console.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Removed usage of SDL_min.
    * Added more #includes that were missing.
    * Fixed minor quirk in console where up key wasn't working as expected.
    * Input widget can now specify font.
    * Console input is in mono by default.
    * Should fix warning.
    * Added nfile_dirname as portable substitute for dirname.
    * Now look for scripts in binary path after looking locally.
    * Fixed off by one bug in the console display.
    * Fixed console buffer overflowing.
    * Fixed issues found by the reenabling of the warnings.
    * Added toolkit to available console API.
    * Enter is always newline in console.
    * Correctness.
    * Console doesn't crash like crazy anymore.
    * Custom widgets use userdata now.
    * Changed how equipment slots are rendered so it acts like another widget now.
    * Whitespace.
    * Minor tweaks.
    * Removed unneeded load.
    * Do not allow opening console over an open console.
    * Constness.
    * Added CLI specific API for starting missions.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Made console grow as your screen grows.
    * You can now execute scripts from console.
    * Added crude up/down arrow to move through console history.
    * Fixed printing in console.
    * Console now uses it's own "print" function.
    * Errors are now red.
    * Console has a monospace font.
    * Console has some colours now.
    * Multiple lines work.
    * Viewport changes in console.
    * Console seems to work sort of.
    * First draft of the console, not working yet.
    Removed executable file mode.
    Display Commodities Tab using images for commodities
    * Proper header.
    * Added a check box to the galaxy editor for automatically saving changes.
    * Reworked the jump point unidiff format.
    ** All jump point parameters are now attributes, not subnodes, in keeping with the existing unidiff syntax.
    ** x and y parameters are optional, if omitted the jump point will be auto-positioned.
    ** hide parameter is optional.
    ** type parameter is optional and can be either "hidden" or "exitonly".
    Properly recalculate presences and update the uniedit sidebar.
    Fixed some renaming bugs and reduced duplicate code.
    * Renamed sysedit uniedit.
    * Added sysedit for actually editting the interior of the systems.
    Give cond its own nlua_env
    Use global lua state in cond.c
    * Added the conditionaly subsystem to replace the mission checkCond stuff.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Don't allow the ship computers to access info the player doesn't have
    
    Namely,
    1. AutoNav shouldn't disable until a hostile ship's identity is no longer hidden
    2. Targeting hostile ships shouldn't select ships who's identity is hidden.
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Removed the broken "fade" effect for messages.
    Made it so that overlay text is always partially transparent.
    
    This prevents the text from having outlines. A temporary fix for a
    problem where the outlines were obscuring other parts of the overlay
    map, but ultimately the overlay map should be redesigned so it doesn't
    have text clobbering together all over the place. I'm not sure what
    the solution is right now though, so fixing it this way for now.
    Make it impossible to target unknown or out of range objects
    Reapplied interference.
    Warnings.
    Fixed friendly/hostile setting.
    
    The previous system was very hodge-podge and had a lot of duplicated
    checks, leading to some inconsistent behavior. I've consolidated all
    checks to the setHostile / setFriendly / isHostile / isFriendly
    functions.
    
    This fixes a bug where a pilot that was set as friendly but became
    hostile due to aggression was impossible to target with the "target
    nearest hostile" button.
    Subtract viewport position for mouse events in the GUI.
    
    This causes mouse positions to be identical to graphical positions
    from a Lua perspective.
    update on the dogfight helper
    Use circles for out of range assets
    Reduce shader boilerplate with a C program generating C code
    
    Ugly, I guess, but... less?
    Remove now unused functions related to fixed-function OpenGL
    Remove some calls to gl_vboDeactivate() and glShadeModel()
    
    These don't do anything, now that the relevant code uses shaders
    Update gui.c to use shaders and static VBOs
    Added support for exclusion zones.
    
    I also had to clean up some code (magic numbers in particular, replaced
    with an enum). There is an example exclusion zone in Lapis.
    For now, update both legacy and new matrix
    Use gl_renderRectEmpty() in gui_renderBorder()
    Fix rendering of radar
    Fix out of bounds read in gui_renderJumpPoint()
    
    Found with AddressSanitizer
    made mining more user-friendly
    Add button to set formation, when player has followers
    
    The button handling code is copied from the brushed gui.
    Uniformized the "Out of Memory" message variants.
    Changed escape code for colors from '\e' to '\a' so xgettext plays well with it.
    More gettext.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Fixed viewport getting smaller and smaller issue.
    Partially fixed scaling factor.
    added management of non-convex fields
    Made required changes
    corrected a crash, added radar display of asteroids and display on map editor
    Revert "Call getfenv in nlua_pcall() eliminating the need to pass the"
    
    This reverts commit 79e36c0c1bbca2aa5fa2922651dd303bc7b87882.
    Call getfenv in nlua_pcall() eliminating the need to pass the
    environment as an argument
    Use new __RW system and nlua_register() everywhere
    Set __RW for each env
    Use nlua_pcall() almost everywhere
    Put GUI in global lua state
    Lower the landing window after recreation
    Initial commit of resizing and fake fullscreen
    
    All of this is exclusive to SDL2.
    
    SDL_WINDOW_FULLSCREEN_DESKTOP allows Naev's window to be the size of
    the current screen without setting video mode (and thereby turning off
    other screens, messing up background window positioning, etc.), but to
    use it, we need to be able to resize the GL viewport on demand.
    
    The work required to allow that also permits dynamic resizing while
    playing, as long as a few other things are also reinitialized (a minor
    issue).
    Fix GUI blink only displaying in the lower left
    
    This is a bit of a hack, radar coordinates are centered on 0 in the
    -SCREEN_W/2, -SCREEN_H/2 to SCREEN_W/2, SCREEN_H/2 range, whereas
    overlay coordinates are 0, 0 to SCREEN_W, SCREEN_H.
    
    Thus, in radar-centric functions that divide w and h by 2 to get
    maximum extents, we need to multiply by two to counteract that.
    Manually translate overlay coordinates
    
    It seems that doing the translation via OpenGL results in text mangling
    at certain resolutions, so it makes more sense to do it manually.
    Remove unused extern
    Place planet target indicators at the actual corners of the image
    Properly prevent exit-only jumps from being targeted
    Made comments gender neutral, for accuracy
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Hidden jump points can now be detected by ships that have the "hidden jump detect" ship stat.
    * Added a hidden jump scanner (activated) that provides said stat.
    Should check for NULL, not not-NULL.
    Seconds remaining are more useful than the initial total.
    Added a discrete cooldown mode for pilots.
    * Bit more strict on what events the GUI gets.
    * Bit more strict on what events the GUI gets.
    * New planets get a nonzero radius.
    * Update radius when updating gfx.
    * Moved various path defines into ndata.h.
    * Wrapper for nsnprintf being used all over.
    * Fixed garbage usage - clang.
    Comments.
    border indicators are always visible for known assets and jumps.
    are never visible for exit only jumps.
    * Made all the colours constant as they should be.
    fixed crash when jumping
    we were giving pilot_inRangePlanet() a jump point as an argument.
    changed to pilot_inRangeJump()
    initial commit for hidden jump points.
    jump points can be discovered, and known state is saved
    planets are now remembered
    * More LLVM fixes.
    * Start out with ship at full health and such so gui doesn't look ugly on load.
    * Fixed gui click when catching events.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    * Using pilot_setTarget abstraction instead of setting the pilot directly.
    Whitespace, typo and general style cleanup.
    Run a GUI function when faction relationships change. Reduced the number of API calls the Slim GUI makes each frame.
    Removed duplicate pilot colour determination code.
    * Improved handling of stuff - like them tricksy planet landing colours and such.
    gui: slim conditional branches
    
    Signed-off-by: Nicolas Kaiser <nikai@nikai.net>
    Many, many typo fixes.
    Counteracted apparent dyslexia.
    * Spelling isn't bobbens' fortee.
    * Fixed with a horrible hack a minor cosmetic problem in console.
    * Stack trace for GUI Lua.
    Created another player sound group for non-GUI sounds (just hyperspace noises for now).
    bobbens changes signs and doesn't afraid of anything
    * Fixed new gcc -Wunused-but-set-variable warnings.
    * Removed duplicate rect when jumping.
    "Teh" ain't no word I ever heard of.
    GUI timers (for messages, pilot/planet blink) should tick at a constant rate, regardless of dt.
    * Doxygen.
    Also supply the GUI render function with dt_mod.
    * Fixed scrollbar for the message box being out of place.
    * More LLVM (scan-build) fixes
    Added a helper function, made sure appropriate Lua functions are called when ship mass changes.
    Broke off some GUI code into separate functions, implemented mouse targeting for border indicators (pilots only for now).
    Initial implementation of mouse targeting for the radar.
    * Properly fixed the warning and unified player_sound nomenclature.
    Signed-off-by: Edgar Simo <bobbens@gmail.com>
    * Colour can go across lines in gui messages or omsg.
    * Default omsg position higher up.
    * Reset omsg on clean up.
    * Fixed assorted bugs, seems to work more or less ok now.
    * Update in render (all render based).
    * Initial revision of omsg, needs Lua API and rendering.
    * Always show message background.
    * Standardized the black background hilight.
    * Added black background hilight to OSD.
    * Preliminary cinematics mode support.
    * Fixed reload land windows when swapping ship.
    Added 50% alpha background to the border indicator area.
    Hard-code the alpha of planet and jump point border indicators.
    * Remove cinematic mode in the main menu.
    * Render cinematic mode on main menu always.
    * Overlay static objects do not vary alpha.
    * Can't select planet target while landing anymore (used to be able through map overlay).
    * Fixed bug that caused mouse clicks to not work.
    * Changed it so stuff starts with the blink marker.
    * GUI can now catch mouse events if so inclined.
    * Doxygen.
    * Split the cross rendering stuff into a gl_render function.
    * Display "You" next to your icon on the overlay map.
    * Don't display unknown jump names.
    * Display name next to hilighted ships.
    * Implemented hilighting of pilots.
    * Optimized blend func a bit.
    * Overlay map now doesn't center on player, but shows everything always.
    * Display names on the overlay.
    * Split the player radar render code into a function.
    * Made the internal gui radar rendering stuff accessible.
    * Removed dependency on gui_radar for the render stuff bits.
    * Fixed Clang report.
    * Fixed Clang report.
    * Fixe Clang report.
    * Shut up Clang.
    Fixed the rectangular radar's off-radar indicators.
    Fixed target indicators as used by the rectangular radar.
    Rugosity should scale with radar size.
    * Reset FPS counter when player is pwned.
    GUI can now be set through the equipment screen.
    Fuzzy pilots shouldn't have their status revealed on the map (or the edge indicators).
    * Should fix interference on rectangular radar.
    * Initial commit of the camera model.
    * Rectangle radar now clips and draws out of range lines well.
    * Merged code to increase simplicity and maintenance.
    * GUI Lua is here to stay.
    * Pretty hackish way to regenerate the land windows when changing GUI.
    * Only regenerate overlay when it makes sense (minor optimization).
    * Regenerate overlay when using gui.viewport.
    * It was right all along.
    * Fixed radar.
    * Fixed border rendering somewhat.
    * Changing entire reference system to bottom left based, should solve shit in the long run.
    * More or less working, however there's issues with custom widgets.
    * More gui viewport code, nearly working.
    * Added functions to deal with the viewport.
    * Doxygen.
    * Removed more implemented stuff.
    * Run update_system in the gui when changing systems.
    * Made radar bottom left coordinate.
    * "Fixed" the hyperspace flash (discussion aside).
    * Play hyperspace sound when getting near a jump point with it selected.
    * Removed some warnings.
    * Run update_ship function when ship changes equipment.
    * Pass deltatick to render function in GUI.
    * Fixed segfault on death.
    * Load the GUI by name.
    * Changed all ship GUI to default.
    * Added gui hook when player cargo changes.
    * You can now define the message position from Lua.
    * Allow setting of planet/pilot targetting reticles through the Lua GUI module.
    * Hacked in basic Lua GUI module functionality.
    * Hackfully removed lots of stuff, it's still a horrible mess.
    * Reenable various stuff so it looks much better now.
    * Added "hooks" for target and nav computer changing in the GUI lua stuff.
    * If GUI Lua fails to load, don't run anyway.
    * GFX module now autoloads tex and colour modules.
    * Disable rendering old GUI while testing new one.
    * Hacked in primitive support for a Lua GUI.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    Migrating from High, Medium, Low + Heavy, Standard, Light to Weapon, Systems, Structure + Heavy, Medium, Light
    * Default matrix mode is now GL_PROJECTION. No longer need to always change.
    * Instead of hardcoding 32 for credits2str buf length, added #define to make it much more sane.
    * Removed obsolete defines.
    * Fixed minor text cutting off in player messages.
    * Separate faction real name and shortname. This is to differenciate what to display and what is real.
    * Force blink on when changing targets.
    * Default minimap zoom is now 50% not 40%.
    * Tweaked default planet radius, it's now 80% of (w+h)/2., however targetting looks like normal.
    * Using planet radius now instead of graphic size for planet size assumptions.
    * Display unknown for unknown selected ships.
    * Increased credits minimum buffer to 32. Fixed code to use 32 always.
    Enabled rendering of both planet and jump point reticles simultaneously.
    Updated targeting to allow simultaneous planet and hyperspace targets, modified HUD and fixed player.teleport() bug.
    * Don't spam player with messages when simulating system.
    * Better handling of virtual/real assets, especially when saving asset.xml.
    * Compiles.
    * Fixed segfault when entering certain systems.
    * Jump points are now rendered on the GUI border.
    * Partially fixed the render bug planet on minimap bug, needs more polish to be good.
    * Displaying triangles correctly for jump points.
    * Renders jump points as planets for now on the minimap.
    * Splitting code from gui_renderPlanet for usage with gui_renderJumpPoint.
    * Moved nav_hyperspace and nav_planet to pilot instead of player struct.
    * Major refactoring of the pilot. It is now all contained in a struct.
    * Using new jump point system, behaves exactly the same as the old system.
    * Doxygen.
    * Renamed planet to asset.
    
    "Unreal" assets are allowed. An asset is "unreal" if it has no <pos> tag.
    planet.xml has been renamed to asset.xml
    Checks are in place to ensure that "unreal" assets are not used where only "real" assets should be.
    * Changed render order so that it shakes targetting reticles and comm messages.
    * Changed render order for reticles vs pilot overlay.
    * Properly using intercept algorithm now.
    * Some changes to coloring for player messages.
    * Buffer overflow protection.
    * Fixed cutting off last char in comms bug.
    * Should solve bug spotted by Infiltrator.
    * Fixed buffer overwriting bug in comms
    
    Fixed a bug where a shorter string overwriting a longer string in the buffer wouldn't have the '\0' appended.
    * Line wrap for comm.
    * Fade out by default after 15 seconds.
    * Fancy border will appear around log with page up.
    * Render side bar when scrolling up in log.
    * Added option to toggle amount of log lines you want.
    * Comm messages don't time out anymore.
    * Implemented scrolling up/down.
    * Viewpoint moves like it should.
    * Using circle buffer for communication.
    * Fixed message fading alpha.
    * Implemented pilots hailing player.
    * Services are more specifically defined now.
    * Removed pointless variables.
    * The border icons are now properly aligned to the viewport.
    * Fixed more potential bugs.
    * Fixing really minor possible segfaults and other misc issues detected with scan-build.
    * Use tiny logo for GUI.
    * Implemented UI LOGO for HUD.
    * Targetting reticles "rumble".
    * Render planet targetting reticle with pilot target reticle.
    * Added gl_matrixMode API to substitute glMatrixMode.
    * Display armour when under 5% shield.
    * Render target reticles above player.
    * Clear messages on player cleanup.
    * Converted commodities back to int.
    * Hack to fix segfault with ES missions.
    * Pool the ammo when a launcher is secondary weapon.
    * Automatically reload outfits.
    * Fighter bays work again.
    * Changed how ammo is handled.
    * OSD now handles multiline.
    * More OSD tweaks.
    * Initial OSD revision.
    * If name is too long shrink to smaller font.
    * Limit name and shield text.
    * Use mipmaps for stuff that is scaling now.
    * Small text fix.
    * GUI borders now take zoom into account.
    * The border icons also fade with interference.
    * Fixed interference.
    * Added mipmap support.
    * Added ability to draw filled circles.
    * Removed immediate mode from circle drawing.
    * Made warning messages more sane.
    * Using diamonds now for planets on radar.
    * Removed all traces of glBegin from the gui.
    * Almost got rid of all the glBegin in the gui.
    * More VBO stuff.
    * More VBO stuff.
    * Some code clean up.
    * VBOs added to some GUI stuff.
    * Moved most of the matrix stuff into opengl_matrix.
    * Removed another glBegin.
    * Converted more glBegin to VBO.
    * No longer draw bars at 0, should avoid visual bug with fuel bar.
    * Removed gui_xoff/yoff externs.
    * Fixed linear aproximation for energy bar.
    * Added player_messageRaw to try to reduce segfaults in Lua player.msg().
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Forgot to apply last patch to planets also.
    * Fixed off by sqrt(2) bug.
    * Changed how the icons behave.
    * Radar also has stuff dissappear if out of range.
    * Sanitized all the sensor ranges, it should always be applied now.
    * Added dead border around screen for new icons.
    * Tweaked icon movement.
    * Shrunk minimal gui by 30 pixels.
    * Render icons when ships/planets out of screen.
    * Fixed planet target blinking stuff going off radar.
    * Made planets on radar more similar to pilots on radar.
    * Patch by skwurp that greatly improves targets on radar.
    * Trying to make target on minimap more noticeable.
    * Minor doxygen.
    * Fixed linear aproximation for gui health bars in case triangle is above.
    * GUI now aproximates graphical health bars with least squares linear aproximation.
    * Added nmath to handle more math aspects of naev.
    * You can now define parts of the GUI as semi-transparent.
    * More robust checking of ship hostileness.
    * Missions now enforce hostile/friendly status in some missions.
    * Cleaned up code some.
    * Introduced idea of system_getIndex().
    * Ripped the GUI stuff out of player.c and put it in gui.c.
    kilo prefix should be lowercase.
    added lua function to create gatherable object and hook for gathering
    Changed all credit shortening suffixes to SI symbols.
    
    B -> G, Q -> P, Qt -> E
    
    This makes the suffixes consistent ("K" is an SI symbol), and also
    less English-centric. (SI symbols are an international standard, but
    "B", "Q", and "Qt" are representations of the English words "billion",
    "quadrillion", and "quintillion". Changing to SI should make the
    suffixes more universally understood: G for giga, P for peta, E for
    exo. M and T happen to be unchanged, but now stand for Mega and Tera
    rather than Million and Trillion.)
    Added a "Qt" marker for quintillions in credits2str
    Fixed bracket placement.
    Removed whitespace, changed economy map colour scheme
    Fixed multi-calculation of price.
    
    This was causing price differences to be wildly exaggerated. Of
    course making it so that prices are generated once would fix this
    but why not just make it so that it's not a problem? So I did that.
    It now resets the price to base before modding it.
    Some more adjustments
    Fixed warnings.
    Split economy into economy and commodity.
    added lua function to create gatherable object and hook for gathering
    Replaced all references to SCU/STP/STU to cycles/periods/seconds.
    
    This unifies the code with the in-game dialog and should hopefully
    prevent confusion regarding what terms to use.
    
    (Recap: these abbreviations were removed from in-game use long ago
    due to confusion that is likely to happen as a result of them looking
    similar.)
    ship bought and sold hooks
    Lua API for player "pay" hook.
    Add two hooks fired when the player buys and sells an outfit
    
    Hooks
            src/nlua_hook.c
    
    Outifts trade panel
            src/land_outfits.c
    
    Add sample event for testing new hooks
            dat/scripts/debug/debug.lua
            dat/events/_test/test_landed.lua
            dat/event.xml
    Add two hooks fired when the player buys and sells an outfit
    
    Hooks
            src/nlua_hook.c
    
    Outifts trade panel
            src/land_outfits.c
    
    Add sample event for testing new hooks
            dat/scripts/debug/debug.lua
            dat/events/_test/test_landed.lua
            dat/event.xml
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    gettext for nlua modules.
    Make sure hookL_getarg pushes something to the stack
    Have hook_env() handle non-existant misn/env
    Replace remaining uses of Lua globals with Lua environments.
    
    This fixes crashes in the tutorials (and probably other events).
    Use new __RW system and nlua_register() everywhere
    Events using common lua state
    
    Still need to fix some things
    Add types to lua api docs, and other documentation improvements
    Make LuaPilot an int instead of a struct, simplifying things
    Fix invalid HTML in Luadoc
    Fix invalid HTML in Luadoc
    * Keep "board" with the old behaviour and introduce "boarding" with the
    new one.
    Turn player_missions in an array of pointers
    Luadoc for hook.pilot()
    * Better error message for hook failure due to usage outside missions or events.
    Did a ton of HTML clean-up in src/ and the Luadoc templates to be 100% standards-compliant.
    Henceforth, bobbens is banned from editing HTML.
    * Wrapper for nsnprintf being used all over.
    * Added discover hook.
    * Luadoc.
    * Added "load" hook.
    * Added missile lockon hook.
    * Added pilot undisable hook.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    * Added faction standing change hook.
    Many, many typo fixes.
    * Spelling isn't bobbens' fortee.
    * Hooks should save their arguments properl and also remove them when hooks get removed.
    lua headers are system headers, include them that way
    * Updating message.
    Revert "* Save all tables, no need for __save anymore."
    
    This reverts commit 218c97173d71600231af2d20842a5de276ac8a1c.
    * Save all tables, no need for __save anymore.
    Added an 'exploded' pilot hook, which triggers as the final death explosion begins.
    * Compiles again.
    * Added "safe" hook to allow stuff like player.teleport() without too many hacks.
    * More verbose error message for invalid parameter.
    Signed-off-by: Edgar Simo <bobbens@gmail.com>
    * Fixed hook linked lists.
    * Luadoc.
    * Luadoc.
    * Added hook for mouse.
    * Added input hook.
    * MAJOR COMMIT - May bring breakage.
    * Removed global variables from nlua_misn.c, nlua_event.c and nlua_hook.c
    * Added tutorial button.
    * Luadoc.
    * Added hooks for buying and selling commodities.
    * Fixed bug causing date hooks to jump every frame.
    * Initial addition of the date hook. Untested as of this commit.
    * Inquiry about missing misn.accept() when setting hooks.
    * Commentaries.
    * Pilot disable and death hooks also pass the aggressor as a parameter.
    * Documentation formatting.
    * Attacked hook passes attacker as a parameter.
    * Pilot attacked hook now works outside of manual control.
    * Better invalid parameter Lua checking.
    * None is python, nil is Lua.
    * You can now set pilot global hooks.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Removed hook.time. Use hook.enter until furthur notice.
    * No need to save subtables, parent saves children automatically.
    * Added timer hook to eventually replace the mission/event timers.
    * Fixed hook brokenness.
    * Try to save argument tables (however not subtables).
    * Hooks restore ids properly now.
    * Hooks can have arguments now.
    * Error on invalid pilot hook.
    * All pilot hooks pass the pilot triggering as a parameter.
    * Added hook infrastructure for returning parameters.
    * Added generic "board" and "hail" hooks.
    * NPC pilots now land.
    * Added pilot landing hook.
    * Luadoc.
    * Actually return hook ids from hook Lua API.
    * Added function to remove hooks.
    * Should fix the pilot hook issue - brown paper bag bug...
    * Luadoc.
    * Pilots now have idle and attacked hook when under manual control.
    * Luadoc.
    * Split the hook.jump into hook.jumout and hook.jumpin.
    * Added jump hook.
    * You can now hook pilots being hailed.
    * Added more hooks and hook checks.
    * Hooks should work with both events and missions now.
    * Made some nlua naming consistant.
    * Added hook types.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Fixed mistake in Lua documentation.
    * Added luaL_checkpilot.
    * Constness.
    * Cleaned up some Lua code.
    * Luadoc.
    * Luadoc.
    * Removed hook stuff from nlua_misn.c
    map decorator: picture -> image
    Declaration in head.
    Map decorators for Naev, with one as example
    Optimize the map by skipping out-of-bounds names and systems
    Substantially rework the map's rendering
    
    The map is now rendered through more passes, so that e.g. faction disks
    don't partially obscure jump routes.
    
    Indicators for the current and destination system pulsate every second,
    as does the entire player jump path (albeit more gently).
    Add jump path length to player.autonavDest()
    * Sanitized hidden jump point handling.
    * jumpDist and adjacentSystems now by default IGNORES hidden jump points, if
      you want to actually handle them, there is a new hidden parameter that lets
      you change the behaviour to how it was beforeish, except it now is
      consistant.
    * Finished local map implementation.
    * Added local map.
    maps load data, also can be added without crashing.
    adjust functions to use the new map type
    * Added binding to get player's long term hyperspace destination.
    * You can now see selected systems in the editor.
    * Fixed segfault in the editor related to system removal.
    * The editor has colours and the likes now.
    * More refactoring and splitting of the map rendering code.
    * Patch for making custom jump routes by Barry.
    * Removed the glBegin in the map.
    * Constness.
    * Cleaned up some Lua code.
    * Clean up map when switching players.
    * Mission computer now selects the system and routes to it when selecting a mission.
    * Improved map zoom handling.
    * Custom widget mouse movement function now gives dimensions.
    added a map in 'mission' section
    * Map will now always close on new/load game.
    * Can now use 'h' key in map window.
    * Cannot open map while dead.
    * You can no longer buy a map if you already know the area.
    * map.c: Fixed segfault when landing.
    * New Outfit: Star Map.
    * Moved A* jump pathfinding from space.c to map.c.
    big time map improvements, you can visually see the A* now :)
    branch:      naev
    added basic map support, added gl_drawCircle, added cYellow
    Removed claimed system flag when removing claim.
    More gettext.
    Fixed crash.
    Fixed segfaults.
    You can now claim strings and not only systems.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Minor fixes and dead code clean-up.
    Minor fixes and dead code clean-up.
    * Should fix claim segfaults.
    * Claimed hooks should always run first before non-claimed hooks.
    * Activate claim when loading.
    * Added functionality to save/load claims from xml.
    * Added global simple API to enable/clear/reset claims.
    * Added infrastructure to set system claims.
    Replace jump_getTarget() with JumpPoint.returnJump where appropriate.
    
    Hurray for less looping!
    added lua function to create gatherable object and hook for gathering
    Removed recommendations to use `_` as a variable.
    
    `_` is used by gettext, so using `_` as a throwaway variable name
    can mess things up. Instead something like "i" should be used.
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Removed the checking for correct number of args in some Lua functions.
    
    The functions should error out (and therefore give the scripter a
    chance to solve the error), rather than printing a vague warning and
    ignoring it. This also fixes a typo (by way of not having the text
    the typo was in at all).
    adaptations and corrections in lua scripts and nlua doc
    More reliable way of picking new asteroids in the event of a bad pick.
    Fixed up the AI. I *think* this is good.
    added the miners faction
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    gettext for nlua modules.
    [Docs] Replace '=' with '=='
    Comparison is done with the latter, not the former.
    Added Lua API to compute shortest "known" distance to a system.
    Use new __RW system and nlua_register() everywhere
    Add types to lua api docs, and other documentation improvements
    Fix various param issues LDoc (appropriately) warns about
    Make LuaSystem an int instead of struct
    Make LuaFaction an int instead of struct
    Make LuaPlanet an int instead of struct
    Use Vector2d instead of LuaVector
    Update outfits list when planet/etc. known status is changed via Lua
    
    The main trigger for this was bar NPCs giving tips about jumps, etc.
    
    In the future it may be a good idea to cache the currently-displayed
    outfits, and just iterate over the maps specifically, and update the
    quantities instead of rebuilding everything from scratch.
    Expose map pathfinder through the Lua API
    Hide non-positive presences from Lua
    Add function giving Lua access to the system stack
    Minor style fix
    * Fixed system.adjacentsytems(). Hidden and exit-only jumps broke the Lua stack.
    * Sanitized hidden jump point handling.
    * jumpDist and adjacentSystems now by default IGNORES hidden jump points, if
      you want to actually handle them, there is a new hidden parameter that lets
      you change the behaviour to how it was beforeish, except it now is
      consistant.
    * system.adjacentSystems() should not return systems whose jumps are hidden or exit-only.
    * Corrected an insubstantial redundant data retrieval.
    system.presence() should fall back to factions always, provided the string isn't a predefined command.
    Support faction names in system.presence()
    Singular, not plural.
    * Unused variable.
    Refactored the system module a bit. Removed old system.faction(), replaced with a simpler function that makes better use of the name. Axed system.hasPresence() in favour of non-boolean system.presences()
    Yet another needless multiply-by-one.
    Added system.jumps(), which returns the jumps a system has (and optionally omits exit-only ones).
    Remove system.jumpPos(). Superceded by jump.pos().
    Renamed Lua isKnown methods to 'known', for consistency.
    Created a planet_setFlag wrapper to avoid marking virtual assets as known.
    Update a number of the luaL_valid* functions to support strings in addition to their native data types.
    ... should work with sys instead of cur_system
    Allow system.setKnown() to optionally recurse over jumps and planets, hiding or revealing them.
    * Luadoc linebreaks.
    * system.get() is also obsolete.
    Remove trailing spaces in src/
    lua headers are system headers, include them that way
    * Luadoc.
    * Added API to set known satte of a system.
    * Luadoc.
    * Added Lua bindings for overlay map markers.
    * Fixed typo.
    * Changed how adjacentSystems work since metatables suck as keys.
    * Added system.jumpPos to fill the void left by the API change.
    * Added API to get if a system is known or not.
    * Increased lua system robustness.
    * Made the planet Lua stuff also much more robust vs addition of planets.
    * Made the Lua Systems metatables safe when adding new systems and causing the system array to realloc.
    * Luadoc.
    * Better invalid parameter Lua checking.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Added API to get system radius.
    * Use names as keys, factions can not be used in keys for sys:factions().
    * Fixed misisons to use that.
    * adjacentSystems now returns jump position.
    * hasPresence uses presence instead of fleets as it should.
    * Removed system security and changed faction API to return presence instead of booleans.
    * Using new jump point system, behaves exactly the same as the old system.
    * Luadoc.
    * Prevented segfault on bad system name.
    * Removed remnants of old security system.
    
    Lua sys:security() function is now marked obsolete. It, for now, returns friendly / all presence.
    * Using new scheduler.
    
    Currently does not respect cap or spawn at start.
    * Using new presence struct, and related changes.
    
    faction_nstack is no longer externed in space.c.
    Using faction_isFaction() call instead.
    Added public system_getPresence() function, which returns the presence for a faction in a system.
    * Luadoc.
    * Fixed up minor issues with Infiltrators patches.
    * Forgot to remove a bracket.
    * Updated Lua sys:presence to use strcmp.
    
    As per bobbens' request, it now checks the full word. No more shorthand. :(
    * Lua sys:planets no longer gets unreal assets.
    * Fix for warning.
    * Added Lua sys:presence() method.
    * Luadoc.
    * Patch for making custom jump routes by Barry.
    * Show percent, not per one in sys:security().
    * Added binding to get system security.
    * Added planet.cur() and system.cur() to phase out the .get() variants with no parameters.
    * Fixed typo.
    * Made some nlua naming consistant.
    * Nebulae is plural, changed it all to nebula.
    * Made savegame more robust when loading inexistant missions.
    * Added way to iterate over system's planets.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Added system.hasPresence() function.
    * Added luaL_checksystem.
    * Constness.
    * Cleaned up some Lua code.
    * Luadoc.
    * Split space into planet and system.
    Invincible enemies are not proper enemy targets anymore.
    zigzag AI
    Give pilots access to space
    Replace jump_getTarget() with JumpPoint.returnJump where appropriate.
    
    Hurray for less looping!
    Don't allow the ship computers to access info the player doesn't have
    
    Namely,
    1. AutoNav shouldn't disable until a hostile ship's identity is no longer hidden
    2. Targeting hostile ships shouldn't select ships who's identity is hidden.
    You can now equip unique outfits infinitely (only one per ship).
    Unique outfits once obtained always have a quantity of 1.
    Implemented ammo_capacity ship stat.
    Added API to get how many of a specific outfit a pilot has.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Fixed implementation of pilot_modCredits (with a comment explaining)
    this nodisable and nodeath should be OK
    Made nodisable and nodeath compatible
    fixed pilot.setNoDeath
    Made dogfight aiming helper per-ship rather than global for the player.
    
    This allows you to enable the dogfight aiming helper for some ships
    but not all. Seems to make it more reliable too. Useful if, say, you
    have some ships where you need it but some others only use turreted
    weapons.
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Fixed bracket placement.
    Changed the takeoff/land time change to be based on the pilot.
    
    nenau pointed out that making everyone takeoff/land faster or slower
    based on your ship could have real effects that might be undesirable,
    so I've tweaked it to base takeoff/land speed not on the player, but
    on the individual pilot. This also has a nice effect of making large
    ships take off more slowly (giving you more time to react).
    Modify landing/takeoff speed based on default dt multiplier.
    
    This has the effect of making sure that land and takeoff time is
    always the same between all speeds.
    remove the ugly mass hack in bomber ai
    removed tabs
    Replaced all references to SCU/STP/STU to cycles/periods/seconds.
    
    This unifies the code with the in-game dialog and should hopefully
    prevent confusion regarding what terms to use.
    
    (Recap: these abbreviations were removed from in-game use long ago
    due to confusion that is likely to happen as a result of them looking
    similar.)
    warnings
    More music fix
    Fixed broken music
    Fixed friendly/hostile setting.
    
    The previous system was very hodge-podge and had a lot of duplicated
    checks, leading to some inconsistent behavior. I've consolidated all
    checks to the setHostile / setFriendly / isHostile / isFriendly
    functions.
    
    This fixes a bug where a pilot that was set as friendly but became
    hostile due to aggression was impossible to target with the "target
    nearest hostile" button.
    Changed fabs to FABS throughout the code.
    had forgotten 1 file...
    Swap pilots when reordering pilot stack during cleanup. Should avoid leak issues.
    Part I forgot to commit
    Fixed the music so it plays combat music correctly.
    
    There were a few parts to this. In a nutshell:
    
    1. Fixed the way enemies are counted so that disabled pilots are properly
       accounted for (previously a disabled and then destroyed enemy would
       decrease the enemy counter twice, for instance).
    
    2. Removed the unnecessary requirement for the enemy becoming hostile
       to be the first enemy before setting combat music. (Lua already takes
       care of this, so the check in C was redundant.)
    
    3. Fixed choose_combat Lua function so that if it finds that it's already
       playing, it still marks itself as the last music played (important because
       otherwise "ambient" is always set to "last" when jumping in, and music for
       missions ends up getting set before "idle" plays but after "ambient";
       if previous system had been playing combat music it would catch this and
       then not record itself as the "last" type, leading to ambient being "last"
       even though combat really was).
    
    TL;DR: combat music now plays correctly, 100% of the time. No strange cases
    of ambient music when you're fighting a gigantic horde of pirates.
    Fixed up the Brushed GUI to show weapsets properly.
    
    A few things are a part of this:
    
    1. The Lua API didn't support grabbing the current weapset ID (only the
       name), so I added this to the Lua API.
    
    2. There was a bug in the weapset value of activated outfits caused by
       a variable not being initialized at the start, which led to unassigned
       activated outfits being listed as an arbitrary slot (1 in all cases
       that I saw but it seems that value isn't a guarantee in any way). Fixed
       that by initializing the weapset variable of structurals and utilities
       when pilots are created.
    
    3. Activated outfits in weapset 10 now show up as "0" instead of "10" (matching
       the key it is assigned to by default).
    
    4. The ID of the current weapon set is shown next to the radar; weapon set 10
       is shown as "0" for the same reason as for activated outfits.
    
    5. Only weapons in the current weapon sets are shown now.
    Removed unnecessary loop in destruction of pilots
    Replaced dockslot with index int.
    Switched dockpilot to id based.
    Include assert.h
    Fixed the problem with escorts (I think).
    
    Not tested thoroughly yet, but I think this should fix the problem of
    escorts causing segfaults when their origin ship dies. A cursory test
    shows that this seems to work.
    
    This also causes pilot.setLeader to remove "deployed" status from the
    origin ship.
    Some small fixes.
    Fix read of uninitialized variable in pilot_getBoss()
    Apply restriction on accumulating timer time to missiles too.
    Don't start refill countdown until a ship is dead.
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Modified the way escort launching is controlled so it can be monitored in real-time.
    
    The previous method was clunky and didn't allow monitoring changes
    to how many escorts you have deployed in real-time very well. So this
    is a HUGE overhaul in how that whole thing works. It solves a bug that
    prevented you from getting new fighters when your old fighters were
    destroyed, while still limiting how many you can launch at once.
    Fixed the method of ammo refilling.
    Refill ammo when Active Cooldown is completed.
    
    Just the start here. :)
    Do not persist escorts on takeoff
    
    This was resulting in duplicated escorts.
    Change the sound speed based on base time rate.
    
    Requested by bobbens: this makes it so that sound plays at 1x if
    you're at your ship's base time rate, etc.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Reverted to all-at-once refuelling behavior from eons ago.
    
    The recent conversion of fuel from floats to ints broke the progressive
    refuelling system (with one pilot refuelling another). This may not
    look quite as nice, but at least it works.
    Fix some missed conversions and remove one unnecessary rounding
    Make everything fuel related an int
    Tag everything related to fuel and using double with DELETETHIS_
    Add mechanism for persisting pilots on jump; use for escorts
    
    This has the advantage that damage is persisted, and the same mechanism
    can potentially be used for other purposes (enemy ships in a mission).
    correction
    changed the way pirates and FLF spawn
    changed the way spawn position is chosen
    made mining more user-friendly
    Fixed minor mistakes so it compiles again.
    gettext for pilot stuff.
    Changed escape code for colors from '\e' to '\a' so xgettext plays well with it.
    Destroyable asteroids
    fixed -Wshadow warnings
    Use standard library bsearch() for binary search
    
    This seems to perform better
    Remove pilot from escort list on deletion instead of destruction
    Remove lua_gettable call that I meant to remove earlier
    Remove unused SystemFleet
    Use messaging API to command escorts
    Try to start merging leader concept into escort system
    
    Remove p->leader, and set p->parent and p->escorts
    Remove comm handlers for now
    
    This wasn't a very clean way of doing thinks, and is separable from the
    other messaging code. This can be done later.
    Replace pilot.handleMsg() with ai.messages()
    Add optional "cond" argument to commRegister()
    Implement pilot.commRegister()
    Fix incorrent index in Lua call
    Messaging API; still semi-broken
    * Cleaned up reldp / relhp a bit.
    * Made it so pilot_getBoss does not rely on the player pilot existing (using pilot itself as a reference).
    got the traders to do convoys
    corrected a small bug in ai
    Replace memcpy with struct assignment
    Remove vectcpy(), and replace it with simple assignments
    Make LuaPilot an int instead of a struct, simplifying things
    correction in reldps and use of it in missile ai
    Remove unefficient features
    Add the careful_face function
    Made the AI handle the afterburner
    Combine ai_extra.h into ai.h
    
    Use forward declaration of struct to deal with cyclical import.
    Strip trailing whitespace
    Simplify copying of pilot flags when creating pilot
    Prevent escorts from jumping away
    Pass asset or jump to pilot hooks
    Add crude position interception for pilots
    
    This seems to be a woefully suboptimal method, but it works well
    enough to solve two autonav issues: Instant jump ships no longer get
    stuck orbiting jumps when they approach at a bad angle, and all other
    ships no longer brake-accel-brake when pushed off a jump by attackers.
    
    Braking distance is self-explanatory, and it's potentially useful in a
    number of places.
    Clear hyperspace flags when disabled (fixes #237)
    Don't play the power up sound when the ship has instant jump
    Replace active cooldown key with autobrake
    
    This is another commit that ended up being larger than intended due to
    adjacent diffs. It can be broken down into three separate things:
    
    Autobrake is triggered by the same key that used to handle cooldown.
    On the first press, it triggers braking if moving, cooldown otherwise.
    If pressed while already braking, cooldown starts when braking ends.
    
    player_restoreControl is now the go-to function for aborting autonav,
    cooldown, and all other control-monopolizing states.
    
    Lastly, a number of VMOD(vel) < MIN_VEL_ERR calls have been replaced
    with a handy macro.
    Make pilot_cargoAddRaw ignore free space
    
    This fixes an issue where the player's cargo could be lost on load. If
    a player had n tons of cargo and then reduced their capacity below n
    and quit, on next load they would lose any cargo over the limit, with
    mission cargo being handled no differently.
    
    As a side note, pilot_cargoAdd now takes a mission ID parameter, and
    most calls to pilot_cargoAddRaw have been replaced for safety.
    Clamp outfit and ship heat to 250K in several places
    Round fuel up to the nearest jump when refueling, if needed.
    Rework and optimize distress
    
    This was meant to be two commits, but the changed lines were adjacent.
    The main gameplay change here is that pilots will notice attacks that
    happen near them and react appropriately, regardless of whether the
    victim has broadcast a distress yet. This should make player piracy in
    inhabited systems significantly more difficult.
    
    The second part of this is a few small optimizations to pilot_distress,
    only running several of the checks if the player is the attacker.
    Explicitly track refueling progress to avoid dt error
    Replace ship mass with ship plus core outfit mass in most places
    
    The only notable exception is transport cost, because that would allow
    players to alter the cost by de-equipping their ship.
    
    As a side effect, this also encourages appropriate equipping, as ships
    with overly-light core outfits will overheat more quickly.
    Remove all traces of the vestigial non-shipstat nebu_absorb_shield
    Make pilot_validTarget externally-accessible
    Allow damage types to associate themselves with arbitrary ship stats
    
    For the time being, these must be non-absolute doubles.
    Prevent nebula damage from resetting shield timers
    Add a stress dissipation ship stat
    Simplify and better explain distress mechanic
    Use reverse thrusters for braking, if it makes sense to do so
    Don't let the player jump with afterburner active.
    It causes bugs and is probably not desirable
    Reverted the change where attacking ships doesn't affect allies.
    Made attacking ships only affect that ship's faction's standing with you.
    Changed the "lock" slowdown to simple enemy presence.
    Changed abortion of Autonav when danger occurs to slowing down time.
    Set fuel to max again, as ship stats may modify it
    more cleanups
    cleanup some whitespaces
    refactor the lua call for limiting a ships maximum speed
    add a lua call to limit a pilots speed
    Added nebu_absorb_shield shipstat
    
    Added nebu_absorb_shield shipstat, as well as a prototype outfit, nebula_shielding0,
    that uses it.  If a ship has nebu_absorb_shield, it will be applied to nebula damage
    in the same way that dmg_absorb is applied to normal damage.  Removed nebula_dmg_shield,
    nebula_dmg_armor, since they were presumably meant to do the same thing, but didn't
    have any real code attached to them in the damage calcs.  The Thurion Integrity will
    need to be updated, since it uses the old values, and since they didn't do anything,
    I have no way of knowing what -80 and -97 were supposed to mean in that context.
    I also added a nebu_absorb_armor shipstat as a placeholder, but it doesn't do anything
    yet.
    Removed constraints when adding outfits to a ship.
    
    Change has effected the equip scripts aswell, but that had no advarse
    effects.
    Made some refractoring in the process, name and comment changes.
    The way I build the report is the most lazy way I could think of
    without storing the checks in an array/data struct with the appropriate
    string, and without writing a custom string writing function.
    Made comments gender neutral, for accuracy
    * Fixed disabled ramp down.
    Replace pilot equality checks with pilot_isPlayer() macro.
    It's a good idea to recalculate pilot stats when disabling outfits.
    Active outfits should be disabled and not toggleable when a ship is disabled.
    * Fixed afterburner engine glow.
    Fixed braking completion false-positive.
    Axed a bunch of duplicate braking code in favour of the generic function.
    Fixed up cooldown abort while braking.
    Cooldown will automatically brake before starting.
    Refactored the afterburner patches a bit.
    More unification and integration of the cooldown mechanic.
    Moved the player cooldown messaging into the generic functionss.
       Lua-triggered cooldown will notify properly.
       Cooldown will cancel autonav (instead of temporarily preempting it).
    Tweaked the cooldown values a bit.
    Obsessive optimization disorder (OOD) is a serious condition.
    Fewer braces and useless assignments save kittens. Do you part, save a kitten today.
    Regular heat uses ship mass, not 'real' mass, so cooldown will too.
    * Scripted temperature thresholds for afterburners.
    Added a discrete cooldown mode for pilots.
    * Some code for heat on afterburners. Todo:
    ** Show afterburner heat.
    ** Don't toggle afterburner when used via weapon group.
    * Pilots should be blocked at low level from using exit only jumps and warn like there's no tomorrow.
    Disabling damage leaks through shields.
    Fixed up some hit-while-disabled logic so it actually works.
    * Merge master into slots, part deux.
    Initialize heat properly for non-player pilots.
    * Whitespace and logic.
    * Reordering of includes.
    * Wrapper for nsnprintf being used all over.
    * Player's outfits should properly turn off when jumping.
    Sending distress signals to awaiting-deletion pilots is a bad idea.
    reset speed_max after hyperspace.
    afterburners are more closely integrated with active outfits.
    moved outfit off code into functions
    afterburner always turns off when there isn't enough energy.
    afterburners actualy burn when activated by weapon group.
    abstracted player_afterburn for all pilots
    afterburners actualy burn when activated by weapon group.
    abstracted player_afterburn for all pilots
    * Comments were wrong.
    * Afterburners work, double-tap seems broken again.
    INFINITY is ill-suited to representing angles.
    Use INFINITY constant instead of fixed value.
    * When pilot runs out of energy all outfits that are on will switch to cooldown.
    * Jammers now work.
    Change distress behaviour. It's broadcast, not unicast, so any ship within a set radius should get the signal, as do any ships that are in comm range outside that radius.
    Removed obsolete TODO.
    * Made all the colours constant as they should be.
    * More explicit parenthesis.
    Don't send a distress to a pilot that would fail the Lua pilot.exists() function.
    * Reset disable timer when pilot gets hit.
    * Better clearing of pilot timers.
    * OK, so outfits *seem* to work, but there's shit that still needs to get ironed out.
    * Moving to new weapon set type things, halfway there.
    * Variable fuel consumption.
    * Actually better to heal elsewhere.
    * Actually add default outfit outfits to slots by default.
    * Use the ship outfit slot as a reference and do not duplicate data.
    * Colouring of slots somewhat.
    * Moved getting price of ship to pilot_worth.
    * Fixed possible bug with credits_t.
    * Added dtimer accumulator.
    * Player now stresses.
    * Unhardcoded disable timer.
    * Added pilot undisable hook.
    * Avoid nan temperature, modification outfits to not add to global heat.
    * Fixed broke hyperspace jumping for NPC.
    * Implemented instant jumping on new stats architecture.
    * Vulgar implementation of jump delay.
    * Allow the pilot to get boarded once per disable.
    * Shared code for targetting enemies and pilots. This should fix lots of shit with invalid targets creating ai warnings.
    * Fixed colour change on explosion for ships, reported by Angelo.
    * Minor cosmetics.
    * Fixed disable damage.
    * Outsource damage types to XML.
    * Note: still buggy.
    * Rough implementation of disable recovery.
    * Cosmetics.
    * Split disable code into a new function, prepare for disable recovery.
    * pilot.setHealth() now handles stress damage as an optional parameter.
    * Stress never exceeds armour, by design.
    * Handle partial armour hit for stress reduction.
    * Reduce stress when armour is damaged, as per spec.
    * Implemented ship stress.
    * Using fancy damage struct to prepare for generic disabling implementation.
    * Rough implementation of disable recovery.
    * Cosmetics.
    * Split disable code into a new function, prepare for disable recovery.
    * pilot.setHealth() now handles stress damage as an optional parameter.
    * Stress never exceeds armour, by design.
    * Handle partial armour hit for stress reduction.
    * Reduce stress when armour is damaged, as per spec.
    * Implemented ship stress.
    * Using fancy damage struct to prepare for generic disabling implementation.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    * Added missile arcs.
    * Minor code optimization.
    * Lockon should be implemented.
    * Using pilot_setTarget abstraction instead of setting the pilot directly.
    Whitespace, typo and general style cleanup.
    Yet more whitespace fixes.
    Removed duplicate pilot colour determination code.
    Assorted whitespace fixes.
    * Factions can now use Lua to mess with actual faction hits.
    Many, many typo fixes.
    * Added pilot flag so it never dies, but does take damage.
    Remove trailing spaces in src/
    Grammar fix
    It's its not it's
    * Fixed new gcc -Wunused-but-set-variable warnings.
    * Removed unneeded line.
    * Minor clean up.
    * Don't have pilot without ai think.
    * Fixed fugly code.
    Allow separate nebula damage modifiers for shield and armour.
    General improvements to autonav exit behaviour.
    Autonav shouldn't auto-abort when taking nebula damage.
    Improved the autonav timer.
    Added variable autonav exit conditions and a slider to control them.
    * If you stray to far from the jump point before the jump engines go online, it will abort.
    * Pilots should no longer "jump dance".
    * Handle "jump range bonus" when drifting too far.
    * Try to fix the bloody credits mess.
    * Credits are 64 bits for everyone.
    Added an 'exploded' pilot hook, which triggers as the final death explosion begins.
    When setting pilot explosion timer, use a sane value for very strong ships.
    Return distance when getting nearest pilot by distance or angle.
    Broke off some GUI code into separate functions, implemented mouse targeting for border indicators (pilots only for now).
    * Fixed issue in AI where player would lose it's memory.
    * Trying to move stuff out of the update itself.
    * Initial revision of the hook voodoo.
    * Think then update pilots, not both at the same time.
    * Properly fixed the warning and unified player_sound nomenclature.
    Signed-off-by: Edgar Simo <bobbens@gmail.com>
    * Implemented more ship stats.
    * Jump delay ship stat works again.
    * Standardized the black background hilight.
    * Added black background hilight to OSD.
    * Give pilot spam text a black background so it's always visible.
    * Moved sensor and range code into the electronic warfare module.
    * More centralization of electronic warfare.
    * Started to centralize the pilot ewarfare stuff.
    Bugswatted. It turns out that getdamage and getdelay are not safe with
    a potential null reference. A check for a null fixed this.
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Avoid a divide by 0 error
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Heuristic targeting for size and HP. Damage still has an error.
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    * New time system. As seen on wiki.
    * Changed retarded stupid behaviour.
    * Invincible or invisible ships take no damage evar!
    * Using different solid update techniques for different objects.
    * physics.h provides a max speed function.
    * Lower the runge-kutta step when working with high speeds.
    * Made the speed limit internal part of the runge-kutta function.
    * Fixed issues with minbrakedist.
    * Set the HYP end flag when jumping.
    * Using more sane drag function.
    Shields get a 200% regeneration boost when they come back online. Drops linearly to 0% over 3 seconds.
    Shields take 3 seconds to come back up.
    * Shields take 5 seconds to start recoving once armour got hit.
    * Fixed afterburner issues.
    * Implemented mass limit for afterburners.
    Add in heuristic targeting functions and energy management
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    here is my boarding android mod, right now, there are 2 models the mk I nad the mk2, which give you 20% and 35% more crew to increase your chance of success when boarding a ship.
    I'm still using the cargo_pod gfx, because i dont have any better graphics :X
    
    here is a summary of what i changed:
            modified:   dat/outfit.xml, added outfits Boarding Androids Mk I and II (tanks Deiz for the hillarious descriptions)
            modified:   dat/tech.xml,   added the Boarding AndroidsI&II to: High Tech Upgrades, Low Tech Upgrades; added Boarding Android Mk I to Basic Outfits 2.
            modified:   src/board.c,    changed board_tryStel(...) to use the modified crew value of the pilot and not the static one f the ship
            modified:   src/info.c,     changed ship_update(...) to use the modified crew value of the pilot.
            modified:   src/outfit.c,   added functionality to load <crew_rel> xml nodes .
            modified:   src/outfit.h    added variable double crew_rel to pilot.u.mod
            modified:   src/pilot.c     changed init to init the initial crew.
            modified:   src/pilot.h     added variable double crew to struct Pilot.
            modified:   src/pilot_outfit.c changed Pilot_calcStats stats to change pilot->crew acording to temp->u.mod.crew_rel
    Adds functionality for discriminating targets by size
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    * Seems to fix the menu issue.
    * Made player not get stuck moving when he blows up.
    * Implemented damage absorption, not set however.
    * You can now target escorts with mouse click.
    * Improved and tweaked the pilot_getNearestPos function to handle all situations better.
    * Added function to get closest pilot to a pilot from a position.
    * Fixed player landing with manual control.
    * Renamed startAutonav and abortAutonav to autonavStart and autonavAbort.
    * Added support for overriding ewarfare visibility.
    * Fixed some weapons like turrets not venting heat properly.
    * Seem to have fixed the fire rate bug.
    * Fixed memory leak.
    * Implemented accuracy and fire rate mods for heat.
    * Added all the heat framework.
    * Fixed memory leak.
    * Move pilot hook stuff into pilot_hook.[ch].
    * Separated the pilot cargo stuff into pilot_cargo.[ch].
    * Renamed some stuff to be more consistant.
    * You can now hold fire groups and they will shoot.
    * Weapon sets are both saved and loaded properly.
    * Cleaned up all secondary stuff, moved to different secondary weapon system.
    Update cargo list when jettisoning mission cargo.
    * Code clean up, added concept of autoweap.
    Moved cargo-related API functions out of the player module and into the pilot module. They operate on any pilot now.
    Update cargo list when jettisoning mission cargo.
    * Added -Wredundant-decls and fixed all new warnings.
    * Moved gui_load out of src/pilot.c because it's ugly and a hack that barely works.
    * Split up pilot files a bit.
    * Activate claims at diverse areas to recheck sanity and the likes.
    * Fixed ammo going poof.
    * Changing entire reference system to bottom left based, should solve shit in the long run.
    * Fix full size pilot flash for a frame when landing.
    * Do not run event/mission hooks when game starts landed.
    * Added gui hook when player cargo changes.
    Systems slot renamed to Utility.
    * Pilot disable and death hooks also pass the aggressor as a parameter.
    * Fixed minor memleak.
    * Attacked hook passes attacker as a parameter.
    * Moved to more flexible hook parameter framework.
    * Fixed segfault with global hooks.
    * Better invalid parameter Lua checking.
    * Fixed even more segfaults due to pilot global hooks.
    * Fix segfaults assosciated to pilot global hooks.
    * You can now set pilot global hooks.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    Migrating from High, Medium, Low + Heavy, Standard, Light to Weapon, Systems, Structure + Heavy, Medium, Light
    Updating credits during land hooks causes a segfault. Removing until land run order is sane.
    Fixed a crash related to hard-coding credit and outfit update behaviour
    Accidentally left DEBUG() in.
    Hack to update credits. Obsolete once the bottom bar is implemented.
    * Simple initial implementation of slot size visualization in the shipyard.
    * EMP weapons can no longer kill evar.
    * Added graphical indicator of slot size and warning.
    * You can only equip outfits that fit slot size now, however there is no slot size indication.
    * More checking in getNearestEnemy.
    * Cosmetics.
    * Cleaned up pilot_getNearestEnemy to avoid nesting as much.
    * Fixed memory access issues with pilot.clear().
    * Fixed ship stats not displaying cloaking and detectino properly.
    * Fixed display glitch showing -100% detection and cloaking when it should be 0%.
    * All pilot hooks pass the pilot triggering as a parameter.
    * Added ship stats for ew_detect and ew_hide.
    * Implemented weapon lockon and evasion.
    * Tweaked electronic warfare mass and movement modifiers.
    * First simple implementation of electronic warfare.
    * Make sure players don't flash full size when landing.
    Moved several sanity checks into functions. Replicates old functionality 100%, but is a work-in-progress.
    * Minor correctness fix.
    Removed a few restrictions that aren't necessary due to bug fixes. Can now target planets when landing without repercussions.
    NPCs now take damage in volatible systems. Player no longer takes 15 seconds of damage when entering such systems.
    * Fixed target nearest being broken.
    * Fixed landing not reducing presence as it should.
    * Simulate system for 15 seconds before player enters.
    * You can now create pilots taking off.
    * AI now handles taking off.
    * Trader ai uses generic as base.
    * Generic ai template now has distress function.
    * Generic ai template has minimum aggro distance.
    * Updated all AIs to use create_post() which handles some creation stuff.
    * NPC pilots now land.
    * Added pilot landing hook.
    * Player lands and takes off with an animation.
    * implemented land/takeoff without visual cue.
    * Changed how flags are handled so we can easily add more of them.
    * Pilots now lose presence when disabled or deleted.
    * Changed how the pilots are returned internally from spawn script.
    * Set per pilot faction presence.
    * NPC pilots should jump out from the proper direction now.
    * If you stray far from the jump point, the jump now aborts.
    * Moved nav_hyperspace and nav_planet to pilot instead of player struct.
    * Major refactoring of the pilot. It is now all contained in a struct.
    * Fixed not being able to remove turn upgrades in very specific cases.
    * Fixed not being able to remove turn upgrades in very specific cases.
    * Hitting secondary weapon but not shooting anything will not disable autonav.
    * Philosophy with hooks is that they're run right after the action that triggers them happens.
    * Added API to clear pilot hooks.
    * Should fix the pilot hook issue - brown paper bag bug...
    * Fixed pilots not having systemFleet updated.
    * Dead/disabled/left pilots reduce the used presence.
    * Minor correctness involving mission cargo ids, if it breaks something blame infiltrator.
    * (Hopefully) fixed typos in pilots_rmHook().
    * Pilots should get their hooks removed properly now.
    * More verbose hook failure messages.
    * Screwed up max/min in pilot memory allocation.
    * Faster memory allocation algorithms.
    * Fixed major flaws in the last credit patch.
    * Better money handling, credits shouldn't overflow anymore.
    * Better positioning of hail graphic.
    * Should fix pilots finding player as an enemy when he's dead.
    * Should handle fuel better now.
    * Pilot text should only be visible if the player sees it.
    * Comm text above pilots fades out nicely now.
    * Lowered time text appears above pilot.
    * Added concept of pilot overlay render.
    * Added generate coordinate translation function.
    * Pilots now have text over their ships.
    * CHanged hail icon positioning a bit.
    * Fixes typos in commentaries by rudi_s.
    * Fixes typos in commentaries by rudi_s.
    * Implemented pilots hailing player.
    * Services are more specifically defined now.
    * Some player_message colouring.
    * Implemented escape codes for text.
    * Added manual control for AI.
    * Fixed some long standing bugs in AI.
    * Decreased code footprint in nlua_pilot.c
    * Misc fixes.
    * Should fix an issue where the pilot hail hook changes pilot stuff and isn't represented in the comm window.
    * You can now make it so pilots don't get disabled.
    * Armour bonuses are now relative not absolute.
    * Fixed more potential bugs.
    * Don't "get" DELETEd pilots.
    * Only modulate firerate based on positive bonuses.
    * Diminishing return on jammers and firerate modifiers.
    * Increased allocation values to try to make game more fluid with higher numbers of pilots.
    * Implemented energy usage modifiers for turrets/forward.
    * Fire rate now works.
    * Keep as positive for displaying reasons.
    * Prepared the ground for more stats.
    * We use spread not accuracy.
    * Implemented accuracy stats.
    * Properly use ship stats to calculate pilot stats.
    * Stats are working again.
    * Properly loading ship stats.
    * Detect bad nodes in ship.
    * Thinker weapons require targets.
    * Simplified launchers and ammo.
    * Should have fixed EMP in a sane way.
    * Lowered knockback a bit.
    * Weapons with same delay take turns firing.
    * Fixed some divide by zeros.
    * Do not warn if outfit can't be added through p:addOutfit().
    * Added equipment script to equip pilots.
    * Fixed bug with gaining faction when ship distresses instead of losing it.
    * Someone claims I confuse then/than, lies I say!
    * Fixed dead ships counting twice as player enemy kills.
    * Multiple fighter bays work now.
    * Afterburners are only relative now.
    * Minor corrections.
    * Raw outfit functions no longer call calcStats.
    * Disable % is based on ship base armour.
    * Added sanity checks for both debugging and player loading.
    * Cleaned up code a bit.
    * More checks in pilot_addOutfit and pilot_rmOutfit.
    * Simultaneously update shield and armour
    * Should finally fix the weapon fire rates.
    * Add player outfits ignoring CPU.
    * Improves handling of low ammo on groups of launchers.
    * Fixed some ships not properly stopping for hyperspace.
    * Turn rate should properly sync with mass changes.
    * Mass properly changes your turning realtime (as you release cargo and such).
    * Mass affects turning.
    * Improved physics model.
    * Using setTurn and setThrust abstractions for pilots.
    * Use normal distribution for hyperspace time delays.
    * Changed how jump delay work, display them to player.
    * Launchers can work as primary weapons.
    * Ammo adds mass.
    * Escorts now add properly when docking.
    * Fixed segfault.
    * Improved fighter bay behaviour with equipment interface.
    * Fixed segfault when fighters dock.
    * Should fix cpu_max decreasing and not increasing.
    * Converted commodities back to int.
    * Outfits that add cpu should add to max now.
    * Now beam weapons stop properly if you have more then one.
    * Beam weapons fire simultaneously.
    * Made movement upgrades somewhat relative.
    * Added relative mass.
    * Tweaked armour values.
    * Fixed shooting delays.
    * Fix shooting algorithm.
    * You can only equip one afterburner now.
    * No warning on not enough CPU (for uniques).
    * Maps and licenses should work properly again.
    * When shooting weapons they stagger themselves like before.
    * NPC use secondary weapons again.
    * Give non-players ammo for launchers/bays automatically.
    * Automatically reload outfits.
    * Fighter bays work again.
    * Added outfit to Fighter Bays.
    * Automatically add ammo if available.
    * Changed how ammo is handled.
    * Fixed beam weapons.
    * Fixed adding of outfits.
    * Improved handling of mass.
    * Fixed bug with shooting too many shots first shot.
    * Changed commodities to doubles.
    * Properly display ship stats in the equipment window.
    * Display the mount point when selecting high energy slot.
    * You can now actually add and remove outfits.
    * Added the CPU bar.
    * Should make it so that when the onjump pilot hook is activated it won't
       detect the pilot activating it as an existing pilot.
    * Fixed more segfaults.
    * Should avoid segfaults.
    * Compiles cleanly - nothing works.
    * Fixed shooting.
    * Added hyperspace sounds.
    * Comment to make sure I don't forget.
    * Fixed bug causing combat song to play when it shouldn't.
    * Small correctness patch.
    * Fixed some transitions to combat music that were never done.
    * New super flexible backend for sound with SDL_mixer implementation.
    * Player engines should always make sound.
    * Engine glow degrades when disabled.
    * Should fix some ship engine glow corruption.
    * Properly implement engine glow.
    * Mipmaps for engine glow sprites.
    * Rough engine glow implementation.
    * Update player sound/zoom with new update function.
    * Fix so that emp doesn't heal in corner cases.
    * Should fix banshees/emps healing the player at low armour.
    * AI should use average range, not max.
    * Allow targetting disabled escorts.
    * Normal target commands no longer select escorts.
    * Using dt for pilot thinking/rendering.
    * Zoom should be gradual.
    * Should fix bribed pilots refueling when you have escorts out.
    * You can always know where planets are - was fake difficulty.
    * Fixed stupid memory issue.
    * Fixed stupid memory issue.
    * Do not allow changing ships when there are deployed ships.
    * You can now recover disabled fighters from your fighter bay.
    * Fixed the possibility of ships getting "hung" when you sell the bay
      with the ships outside.
    * Should fix a buffer overrun spotted by zid.
    * Should fix issues with AI not detecting player hostility properly.
    Clean up remove outfit logic.
    
    Convert a massive if() inside a while() to a continue, dropping about 50
    lines by 1 level of nesting.
    * Fixed memory issues with escorts.
    * Now properly track the deployment.
    * Persistant escorts now are working.
    * Have escort automatically get removed when disabled from escort list.
    * Added a parameter to choose whether to add to list when creating escort.
    * Save/load escorts.
    * Added function to prune dead escorts.
    * Make escort structure more advanced.
    * Pilots now deploy properly, still needs persistance.
    * Hook is unsigned int not int.
    * Added hook types.
    * Added deployed counter and put beamid in union.
    * Doubled damage from explosions to compensate health increase.
    * New explosion damage algorithm by Deiz.
    * Pilot explosions working again.
    * Should fix some segfaults.
    * Now using RC circuit loading for energy.
    * Allow the pilot Lua API to ignore interference.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * More sanity checks for angles.
    * Make sure tsx and tsy are sane at pilot_init.
    * Radar also has stuff dissappear if out of range.
    * Sanitized all the sensor ranges, it should always be applied now.
    * Have shots fired take into account turning of pilot.
    * Constness.
    * Cleaned up some Lua code.
    * Debris implemented.
    * Allow Lua API to change pilot AI.
    * Fixed segfault when recalling multiple pilots.
    * Pilot hooks are no longer hardcoded.
    * Fixes a long standing bug with changing ships in the middle of cargo missions.
    * Greatly cleaned up the hit code.
    * Pilots should properly react better in combat.
    * Pilots can refuel you now if you ask for it.
    * Should fix a segfault when selling bulk outfits.
    * No longer can sell mission cargo.
    * Combat rating was not incremented anymore.
    * Brown paper bag bug.  Seems like i wrote code while sleep deprived again.
    * Minor code clean up and optimization.
    * rmCargo does now remove mission cargo, so be careful.
    * More memleak paranoia.
    * Minor code optimization.
    * New keybindings to cycle through hostiles (forwards and backwards).
    * Should fix the memleaks.
    * Fixed occasional warning.
    * Implemented boarding for AI pilots.
    * Timers clear properly now.
    * No longer able to do weird things while dying.
    * More faction tweaks.
      * Fixed bug with static factions getting modified.
      * Improved distribution of ally/enemy faction modifications.
      * Made faction hits affect allies and enemies more.
    * Pilots should now help each other more.
    * Implemented distress.
    * Fixed some possible issues.
    * Put framework for distress signals handled in AI.
    * Fixed some ai functions.
    * Moved disabling code to pilot_hit.
    * Added combat rating boost to disabling and not killing.
    * Decreased sensor range in interference.
    * Improved conditions to lose faction from distress signal.
    * Interference now affects targetting and communication.
    * Added concept of distress signals.
       * Ships under attack generate distress signals.
       * If someone gets the signal, and player is attacking player loses faction.
       * Limited by interference.
    * Fixed rare and elusive segfault bug in ai.
    * Tweaked faction loss some.
    * Should fix overflow damage from shield to armour.
    * New firemodes, allows ships to shoot only turrets, forward mounts or both with primary weapons.
    * Move ai to use firemodes.
    * Improve bomber code.
    * Lower faction faster when killing ships.
    * New keybind to toggle weapon safety vs allies.
    * Fixes pilots teleporting away when dead.
    * Moved fleet stuff out of pilot.[ch].
    * Should make pilot hostile turning a bit less fps dependent.
    * Should sanitize some how pilots react to taking damage.
    * More robust checking of ship hostileness.
    * Missions now enforce hostile/friendly status in some missions.
    * Added keybindings for targetting escorts.
    * Using combat music now.
    * Added pilot_rmHostile.
    * music_choose now accepts NULL as a parameter.
    * Have player keep track of hostiles it has in system.
    * More FreeBSD fixes.
    * More FreeBSD fixes.
    * Patch by AMDmi3 to address realloc not freeing with 0 size on freebsd.  Still needed in other places.
    * Should eliminate the possibility of pilots getting destroyed by a hook while being updated.
    * Minor code clean up.
    * Doxygen.
    * More code clean up.
    * Code clean up.
    * Code clean up.
    * Made pilot_copy much more proper.
    * Fixed major memory issues.
    * Fixed memory leak.
    * Don't abort autonav is damage is from volatile system.
    * Take into account ship size for the explosion.
    * Made function static for minor optimization.
    * Faster comparison in pilot_rmOutfit.
    * rmOutfits should be now mount aware.
    * Fixed segfault with new mount system.
    * Mountpoints implemented for turrets.
    * Player should only rumble if he's hit by the explosion of a ship.
    * Fixed segfault in volatile nebulae.
    * Tweaked entire rumble system.
    * Pilot death explosions now give knockback and rumble as expected.
    * Even more doxygen.
    * Removed all (improper) usage of strcat/strncat.
    * First large ndata patch.
    * Moved xml.h to nxml.h.
    * Added more complicated xml parse functions in nxml.c.
    * Removed all non-dt timers from stuff that should be dt based.
    * Converted the outfit timers to the dt system.
    * Autonav should no longer be interrupted once you start your hyperspace drive.
    * More optimizations and code clean up.
    * Some clean up.
    * Make sure AI doesn't run when entering hyperspace.
    * First implementation of Licenses.
    * Major rewrite to xml.h increasing sanity checks.
    * Gui can now handle overlays.
    * Fixed mission cargo id possible collision.
    * Now jet cargo when cargo mission fails.
    * Give reason behind autonav abort.
    * Fixed mission cargo not properly moving when changing ships.
    * Fixed buffer overrun.
    * Fixed bug with free cargo space going crazy when buying outfits.
    * Remove warning when selling current secondary weapon.
    * Fixed possible segfault.
    * Fixed bug with cargo getting reset when trying to change ship.
    * Sanitized dealing with mission cargo a bit.
    * Tweaked faction gain.
    * Clean up pilot hooks when freeing pilot.
    * Implemented bribing.
    * Added ai.isbribed().
    * Fixed major outstanding bugs in flag usage.
    * Fixed major outstanding bugs in weapon_hit stuff.
    * Improved outfit loading some.
    * Have FighterBays and Launchers actually link to their ammo (prevents realloc after loading though).
    * Removed unused variable.
    * Added target_prev keybind.
    * Tweaked entire hyperspace distance system to be more sane.
    * Faction rating and combat rating are now continuous.
    * Put some minimum docking requirements.
    * Fixed some escort ai issues.
    * Escorts can now return to ship.
    * Escorts and fighter bays start to work well.
    * Escorts work, sort of.
    * Added much more escort stuff.
    * Removed useless target parameters.
    * Moving to target on pilot structure.
    * Allow passing parameters to pilot ai on creation.
    * Implemented volatility damage.
    * Minor comment.
    * Implemented pilot memory tables.
    * Introduced autonav.
    * Use memset for pilot initialization.
    * Reduced calls to xmlCleanupParser(), only one for all the loading now.
    * Stop firing before starting to jump.
    * Your secondary weapon greys out when you can't use it again yet.
    * Added explosions.  Currently only used on pilot deaths.
    * Fixed Pilot boarding hooks.
    * Pilots can now have up to 4 hooks at one time.
    * Added pilot "jump" hook.
    * Major AI rehaul, split into generic stuff.
    * Added bomber attack routines.
    * Fixed bug with AI forgetting about you if another enemy attacks.
    * Added pilot_getAmmo.
    * Remove the outfit when you run out of ammo.
    * Player can now abort jump sequence.
    * Fixed some obscure bugs like not being able to shoot secondary weapons right away.
    * First patch to bring more control to beam weapons.
    * Added sounds to beam weapons.  Sound system needs overhaul for it to be better.
    * Beams use energy properly now.
    * Added outfit states.
    * Added beam hit function - not working properly yet.
    * More doxygen.
    * Improved some of the shooting handling.
    * Added a lot of doxygen.
    * More doxygen and code cleanup.
    * More doxygen.
    * Added pilot death explosions.
    * input.c is doxygenized.
    * pilot.c is doxygenized partially.
    * Split engine sounds and GUI sounds for player.
    * player.c has more doxygen now.
    * Fixed some issues in sound.c.
    * Fixed bug where you couldn't shoot seekers or smart seekers.
    * Dvaereds get mace rockets.
    * AI now uses more weapon types and more wisely.
    * New Outfit: Mace Rocket.
    * Implemented dumb missiles.
    * Tweaked the rumble even more.
    * Improves enemy ai: they hit a lot now.
    * Improves turret ai: should also hit a lot now.
    * Improved the global attack() ai.
    * Updated TODO.
    * Can now override pilot AI in a fleet.
    * Made fleet_parse() more up to date with xml.h.
    * Tweaked faction hits to be more useful.
    * Made it easier to lose faction then to gain it.
    * Unified colouring schemes.
    * All factions you are enemies with will appear as hostile too.
    * Made rating/faction gain not linear.
    * Clear player lockons when running space_init().
    * Added TODO.
    * Jammers implemented.
    * No longer can you buy extra outfits.
    * Afterburn now breaks when you run out of energy.
    * Sanitized the pilot_get*.
    * Player can target nearest pilot with 't'.
    * Pilots lose their cargo when they die.
    * Forgot to initialize lockons.
    * Added two new pilot hooks: board and disable.
    * Made lua debug macros more verbose.
    * Code cleanup.
    * Knockback now dependent on DamageType.
    * Player no longer "hardcoded" into pilot_stack[0].
    * Missed another /2 in binary pilot search.
    * pilot_free now uses memmove.
    * Minor cosmetic patch.
    * Switched l+(h-l)/2 to (h+l) >> 1 in the binary search.
    * Renamed pilots and mpilots to pilot_nstack and pilot_mstack.
    * src/pilot.c: binary search works on ints near max.
    * map.c: Fixed segfault when landing.
    * New Outfit: Star Map.
    * Fixed up new player stuff cleaning stuff.
    more comments, fixed potential issues with reallocs
    switched from damage_armour and friends to just damage and damagetype
    new philosophy, when you swap ships your cargo stays with you, will fix issues
    cargo affects weight, fixed bug when changing ships
    fixed finally the weapon rack and cargo pod
    have pilots recalculate cargo load when calculating stats
    some code cleanup, and made map more sane (and colour coded!)
    fixed bug with no death menu appearing
    yes, you can lose faction now, fixed ai to set you as hostile
    you will now start rumbling if you take armour damage
    parametize chunks to realloc grow pilot and weapon stack
    get ready to... RUMBLE!  (added rumble for afterburning among others)
    major outfit add/rm cleanup and new outfits that play with cargo/weapon space
    mods can now add cargo, added cargo pod as an example, fixed rmOutfit bug
    preparing for adding fuel into game
    fixed brown paper bag bug
    you can sort of load games, still need to fix issues though
    cleaned up some xml parsing stuff
    missions can add fleets now
    implemented pilot hooks with the "death" hook as an example
    fixed rare pseudo-bug where player is blowing up while hyperspacing
    started :retabbing (spaces only) and fixed some xml issues
    mission tracks cargo and makes sure you have it
    introduced the concept of mission cargo - not-tradeable
    nailed the memory leak and fixeud a stupid error
    more functions, fixed invalid memory free
    major improvement -> use ids for factions instead of pointers
    added alot of your ships stuff and cleaned up some code
    fixed segfault
    branch:      naev
    player gets all the ships he buys saved in a stack, just need to be able to change them
    branch:      naev
    added pilot_copy function
    branch:      naev
    death explosion fixes
    branch:      naev
    prevention in case of pilot_stack reallocation
    branch:      naev
    player death implemented
    branch:      naev
    made limit_speed to act abruptly, much nicer when afterburning now
    branch:      naev
    added afterburners
    branch:      naev
    modifications actually work now :)
    branch:      naev
    energy matters and is actively used now
    branch:      naev
    can now buy/sell cargo, minor fixes
    branch:      naev
    big update, ai now controls ship's credits/loot, more API, pilot cargo stuff
    branch:      naev
    assorted hyperspace cosmetic fixes
    branch:      naev
    added militia faction, changed mr.test to militia, added ai_create
    branch:      naev
    wasn't properly enforcing outfit selling/buying with limits
    branch:      naev
    make money selling stuff, and more buying stuff checking
    branch:      naev
    changed some player variable names, immproved outfit buying/selling
    branch:      naev
    can now buy outfits
    branch:      naev
    some code optimization, pilots now use temporary sprite values
    branch:      naev
    added mule ship to actually use turrets :)
    branch:      naev
    added turrets
    seperated speed limiting into physics
    branch:      naev
    standardization patch
    branch:      naev
    enemy pilots can now die
    branch:      naev
    capitalized loading debug
    branch:      naev
    now compiles with -std=c99, also fixed major union alignment issue
    branch:      naev
    weakened the knockback effect
    branch:      naev
    added player_name
    added combat rating which is based on mass of pilots killed
    branch:      naev
    target hostile no longer picks up disabled ships
    branch:      naev
    added pushback effect for weapons
    branch:      naev
    merchant vessles now go hyperspace
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] rough sound seems to be working now without flaws
    branch:      naev
    [svn] added sound support base, for some reason seems to crash the game alot
    not in usage
    branch:      naev
    [svn] added more sounds
    sound engine should be working ,but isn't tuned enough yet
    branch:      naev
    [svn] removed hard forcing of player speed and instead it uses incremental slowdown
    fixed bug where pausing while hyperspacing gave instant travel
    branch:      naev
    [svn] hyperspace now behaves like in EV
    branch:      naev
    [svn] prepared for the upcoming toolkit_list
    fixed some sanity around turning pilot functions, now in pilot_face
    added basic rough on the edges hyperspace implementation
    branch:      naev
    [svn] bug fixes:
       @ shooting primary weapon segfault
            @ menu not pausing game
    branch:      naev
    [svn] windows now get a name embedded
    added empty commodity exchange
    tried to sanitize secondary weapon/weapon shooting
    changed pilot stack and star stack to not lower memory allocation
    fixed landing/takeoff to actually affect the system
    branch:      naev
    [svn] did some sanity to allow for example secondary bolt weapons
    branch:      naev
    [svn] added support for images of planets
    cosmetic toolkit changes
    changed the gl_blit functions to work with doubles instead of Vector2d pointers
    took opportunity to clean up space.c xml (bringing it up to xml.h standard)
    cleaned up code
    branch:      naev
    [svn] added beginning frame for toolkit
    added ability to pause/resume game
    nerfed lasers armour damage
    branch:      naev
    [svn] Added planet targetting and landing framework
    split update / render completely into two different functions (for toolkit)
    branch:      naev
    [svn] switched to commonwealth spelling (armor -> armour)
    implemented seeker missiles and ammo
    implemented secondary weapons
    branch:      naev
    [svn] Cleaned up some funky old code
    Added possibility to disable ships (no death yet)
    New data specific file start that allows the player's starting pos and such to be defined
    branch:      naev
    [svn] fixed AI landing (still too loose for my tast though)
    cleaned up some code
    more xml macros
    branch:      naev
    [svn] combined xmlness in single header file
    rewrote player.c to use new xml syntax
    branch:      naev
    [svn] targetting graphic now displays color based on the targetted pilot
    branch:      naev
    [svn] GUI are now saved in XML datafile
    this allows multiple guis
    each ship can have it's own GUI too :)
    branch:      naev
    [svn] more ai functions
    some ai tweaks
    more ai protection
    branch:      naev
    [svn] multiple enemies now supported
    bug fixes
    you can get other ship's health now from AI
    branch:      naev
    [svn] some cosmetic changes
    misc minor fixes
    branch:      naev
    [svn] enemies are now properly parsed
    added possibility of pirate
    buffer overflow in ai fixed
    branch:      naev
    [svn] control_rate no applies properly
    targetted pilot will appear over others
    branch:      naev
    [svn] bug fixes
    support for different AI Profiles
    branch:      naev
    [svn] more ai API
    ai now responds on being attacked
    branch:      naev
    [svn] bug fixes
    fleet improvements
    per pixel collision
    branch:      naev
    [svn] fixed graphics bug with small hack
    cleaned up and improved the now AI functions
    branch:      naev
    [svn] faction system almost fully implemented
    fleets almost fully implemented (just need randomized start positions)
    major bugfix in weapon.c
    branch:      naev
    [svn] much more error checking in the xml
    fleets are built in - just need to do something with them
    minor tweaks and fixes
    branch:      naev
    [svn] targetting added
    fancy UI fixes
    branch:      naev
    [svn] added basic gui framework
    branch:      naev
    [svn] some new pack features (list files)
    radial collision detection
    proper adding of the shooting system all about
    branch:      naev
    [svn] fixed potential bug
    branch:      naev
    [svn] lasers fade out
    minor tweaks
    fixed all memleaks
    just need some collision detection now
    branch:      naev
    [svn] missing weapon.c/weapon.h
    more pilot modularity
    layers work properly
    branch:      naev
    [svn] rudimentary shooting system, needs work
    branch:      naev
    [svn] outfit loading, not properly used yet
    branch:      naev
    [svn] improved ai API
    fixed minor memory leaks
    cleaned up a bit
    branch:      naev
    [svn] added star system support/loading
    added planets
    more minor tweaks and fixes
    general happiness
    branch:      naev
    [svn] moved everything to directories
    cleaned up Makefile
    improved AI
    branch:      naev
    [svn] temporary commit before playing with cpio
    branch:      naev
    [svn] basics of the AI implemented
    branch:      naev
    [svn] removed python dir
    Vector2d now uses polar coordinates
    minor tweaks
    branch:      naev
    [svn] few comments
    few optimizations
    branch:      naev
    [svn] minor fixes
    dynamic keybind loading from configuration file
    sample configuration file added
    branch:      naev
    [svn] moving background
    improved opengl workings
    minor tweaks
    branch:      naev
    [svn] cosmetic changes, minor fixes
    branch:      naev
    [svn] small handling fixes
    branch:      naev
    [svn] minor tweaks
    creation of start of AI infrastructure
    branch:      naev
    [svn] more files yay
    branch:      naev
    [svn] just uploading working copy
    branch:      naev
    [svn] working libxml at ship.c
    fixed all memory leakage
    branch:      naev
    [svn] good blitting system, pilot/ship outline
    More gettext.
    Use new __RW system and nlua_register() everywhere
    Give cond its own nlua_env
    Use global lua state in cond.c
    Some doxygen documentation fixes
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Conditional errors should be more verbose now.
    * More correctness.
    * Should fix a possible stack leak in cond_check.
    * No need for lazy loading.
    * Added the conditionaly subsystem to replace the mission checkCond stuff.
    Remove leading underscore
    Prefix array sentinel to avoid future conflicts
    Add ability to create array with initial capacity
    * Wrapper for nsnprintf being used all over.
    0-sized array stub in dynamic array conatiner.
    * Added assert again with >= 0 check.
    * Removed restriction on resizing to 0 size.
    Added array_erase() and array_push_back()
    * Changed according to bobbens review.
    
    * Used DEBUGGING instead of DEBUG
    * Fixed warning on 64-bit platforms
    * Fixed bug when shrinking an array with no elements.
    * Added a sentinel for better testing.
    * Added the array library.
    Added note on getting the player's ship.
    Allow counting how many outfits of a type the player has including equipped ones.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Convert to credits_t first before clamping.
    Clamp the credits passed by player.pay().
    
    This prevents positive numbers from being treated as negative numbers.
    Fixed several strings and lack of gettext usage.
    Fixed a bad read with speed adjustment.
    Fixed the escort reloading system.
    
    My fault entirely on this one. I was up late at night and didn't
    really understand what the function was doing. (Actually I'm up late
    at nighe again now! xD But I understand what it does properly this
    time around.)
    
    I also removed that function's usage in player.teleport(), since
    it is unneeded (and indeed creates duplicate escorts).
    Removed player_getRating and all uses of it.
    
    Inspired by something @bobbens said in #832 that I agree with
    ("I don't think anybody would miss it if removed").  I didn't go
    all-out and remove the combat rating mechanic because I don't think
    its existence alone is a problem as long as it's just cosmetic (and
    it might even be a nice little nod to EV and a way to sort of get
    a feel for how much combat you've done this game), just actual use
    by Lua code, which was rare.
    
    Missions that previously modified their difficulty based on this no
    longer do so. In particular:
    
    * emp_hcvl now always gives you an "easy" ship.
    * trader_escort now always gives you the full range of options for convoy size.
    
    Also worth noting that dat/missions/common.lua has been removed both
    because no Lua code was actually using it, and because everything
    there seems to be centered around the combat rating mechanic.
    hitman3's Lua file has also been removed because it is no longer in
    use (due to being obsolete) and doesn't really have anything that
    needs to be saved. (Both of these decisions were a response to the
    use of player_getRating() in these files.)
    
    Of course, all events and missions that had <cond> attributes with
    getRating() have had those getRating() calls removed.
    Change the sound speed based on base time rate.
    
    Requested by bobbens: this makes it so that sound plays at 1x if
    you're at your ship's base time rate, etc.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Make everything fuel related an int
    Tag everything related to fuel and using double with DELETETHIS_
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    gettext for nlua modules.
    Use new __RW system and nlua_register() everywhere
    Add types to lua api docs, and other documentation improvements
    Remove vectcpy(), and replace it with simple assignments
    Make LuaSystem an int instead of struct
    Replace LuaOutfit with Outfit*
    Use Vector2d instead of LuaVector
    Make LuaPilot an int instead of a struct, simplifying things
    Strip trailing whitespace
    Luadoc fix.
    Add player.ships() and player.shipOutfits() to the Lua API
    Expose the player's outfits via the Lua API
    Move PlayerOutfit_t into player.h and speed up player_getOutfits
    Add player.jumps() for convenience in missions, etc.
    Add jump path length to player.autonavDest()
    Enhance filtering in the land window's outfits and equipment tabs
    
    This is a fairly monstrous commit, and unfortunately due to some necessary
    toolkit changes, wasn't able to be broken up into smaller chunks.
    
    A semi-itemized list of changes is as follows:
    
       tabwin:
          Provide both old and new tab IDs when calling onChange functions
    
       imagearray:
          Add a simple struct and toolkit_saveImageArrayData to permit easy
          saving of selection and scroll position.
    
       player:
          player_getOutfits & co. now return Outfit** instead of char**
    
       equipment:
          Added incremental text search, change the embedded tabwin into a dummy
          that just regenerates a single image array instead of maintaining five
          separate ones.
    
       land_outfits:
          Added incremental text search, as well as tab-based filtering identical
          to the equipment tab's, with some minor cleanup along the way.
    Made comments gender neutral, for accuracy
    * Luadoc.
    Did a ton of HTML clean-up in src/ and the Luadoc templates to be 100% standards-compliant.
    Henceforth, bobbens is banned from editing HTML.
    * Wrapper for nsnprintf being used all over.
    * Luadoc.
    * Lua command for turning off player saving.
    * The only good memleak is a dead memleak.
    More evidence that testing is good.
    Added a sanity check to avoid removing "None".
    Added "all" support to player.rmOutfit(), for tutorial purposes.
    * Added player.numOutfit and player.rmOutfit.
    A fix for the fix - it all needs to be done before space_init
    Fixed invalid read that lead to segfault.
    player.cinematics() will also close the overlay.
    Fix up player.cinematics()
    * Typos patch by thilo.
    * Removed superfluous function in favour of previously existing one.
    * Missions can now trigger in space.
    * Corrected example usage case.
    * Improved behaviour as per the documentation of player.swapShip and player.newShip.
    * Fixed bug in player.fuel().
    * player.fuel() returns amount needed per jump too.
    * Comments and Luadoc.
    * Allow teleporting to planets with player.teleport().
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    * Change modPlayerRaw to modPlayerSIngle, added new modPlayerRaw.
    * Removed deprecated player.modFaction* and player.getFaction.
    * Factions can now use Lua to mess with actual faction hits.
    remove duplicated includes
    
    Signed-off-by: Nicolas Kaiser <nikai@nikai.net>
    Many, many typo fixes.
    Remove trailing spaces in src/
    lua headers are system headers, include them that way
    * Remove player double speed when entering cinematics mode.
    * Typo fixing patch by Paul Wise.
    * Pilots should no longer "jump dance".
    * Fixed more uninitialized things.
    * More LLVM (scan-build) fixes
    * Fixing misc issues.
    * Try to fix the bloody credits mess.
    * Do not let the player be teleported while landed, boarded nor hailing.
    * Do not allow teleporting the player while landed.
    Signed-off-by: Edgar Simo <bobbens@gmail.com>
    * Luadoc.
    Signed-off-by: Edgar Simo <bobbens@gmail.com>
    * Attempt to fix various issues like crash with menu_main.
    * Cleared up menu_main usage.
    * Allow takeoff to be forced at any moment.
    * Added paremetr to have player.swapShip remove the current ship.
    * Added player.swapShip().
    * Changed API slightly for player.newShip().
    * Check for landedness with landWindow().
    * Luadoc.
    * Added API to set the land window.
    * Added API to clear the player's message buffer.
    * omsgChange responds to 0. as INFINITY too.
    * Duration of 0 for player.omsgAdd is infinite.
    * Setting omsg font size works.
    * Flexible font sizing.
    * Added omsg API to player module.
    * Fixed breakage of Lua API.
    * Added API to see if a mission or event is active.
    * Preliminary cinematics mode support.
    * Can't select planet target while landing anymore (used to be able through map overlay).
    * You can now set the disallow landing message.
    * Added API to disallow or allow player to land.
    * cppcheck doesn't understand longjumps.
    Luadoc fixes.
    Moved cargo-related API functions out of the player module and into the pilot module. They operate on any pilot now.
    Luadoc fixes.
    * Added -Wredundant-decls and fixed all new warnings.
    Update the GUI when teleporting.
    * Made the Lua Systems metatables safe when adding new systems and causing the system array to realloc.
    * Commentaries.
    * Update outfits list when player gets an outfit through Lua API.
    * Added binding to get player's long term hyperspace destination.
    * Added API to immediately close a comm window after it opens (for use with hail hooks).
    * Added binding to get autonav status of the player.
    * player.cargoList() is a safe function.
    * Added player.cargoList().
    * player.credits() now can return human-readable form.
    * Make some stuff readonly that should be readonly in the player module.
    * Make some stuff readonly that should be readonly in the player module.
    * Better invalid parameter Lua checking.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Give player.addShip() the ship name if name parameter is ommitted.
    * player.teleport() should no longer segfault with invalid parameters.
    * Luadoc.
    * Renamed function playerfreeCargo() => player.cargoFree().
    
    Signed-off-by: Edgar Simo <bobbens@gmail.com>
    * Fixed player.cargoHas().
    
    Signed-off-by: Edgar Simo <bobbens@gmail.com>
    * Added Lua API to manipulate regular cargo.
    
    Signed-off-by: Edgar Simo <bobbens@gmail.com>
    * Luadoc.
    * You can now use player.telport with a string indicating system name.
    * Free old graphics before loading new ones to avoid memory spikes.
    * Load planet graphics on demand.
    * Should fix misndone and evtdone Lua API in player module.
    * Cleaned up externs and useless parameters for pilot_newShip().
    Updated targeting to allow simultaneous planet and hyperspace targets, modified HUD and fixed player.teleport() bug.
    * Fixed some segfaults.
    * Only player.addShip while landed, avoid not giving ship due to name collision.
    * Conditional player module missing .fuel() and .credits().
    * Conditional player module missing .fuel() and .credits().
    * Major refactoring of the pilot. It is now all contained in a struct.
    * player.teleport() should now behave exactly like jumping.
    * Comments.
    * Teleporting now triggers hooks.
    
    Teleporting will now trigger the "jumpin", "jumpout", and "enter" hooks.
    * Better money handling, credits shouldn't overflow anymore.
    * Fixed warning.
    * Luadoc.
    * You can now teleport the player around.
    * Handle player.takeoff() from NPCs.
    * Handle player.takeoff() from NPCs.
    * Move misn.takeoff() to player.takeoff() and updated usage.
    * Added API to check if player finished an event or mission.
    * Luadoc.
    * Added API to give player an outfit or ship.
    * Changed naming scheme.
    * Enormous diff that basically points out that bobbens' punctuation sucks.
    * Added function to forcibly unboard the player.
    * Made some nlua naming consistant.
    * Luadoc.
    * Added API to check and add the player's fuel.
    * Added API to get player's credits.
    * Added player_messageRaw to try to reduce segfaults in Lua player.msg().
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Constness.
    * Cleaned up some Lua code.
    * Fixed documentation mistake.
    * Luadoc.
    * Luadoc.
    * Split vec2 from nlua_space.
    * Luadoc.
    * Split player stuff from nlua_misn.
    Update options menu when window is manually resized (Fixes #241)
    * Added tabs to option window.
    * Faders and Audio options by Camilo.
    * First commit of the options menu (does nothing yet).
    * Fixed segfault when abandoning a mission in the middle of a mission dialogue.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    zigzag AI
    Don't allow the ship computers to access info the player doesn't have
    
    Namely,
    1. AutoNav shouldn't disable until a hostile ship's identity is no longer hidden
    2. Targeting hostile ships shouldn't select ships who's identity is hidden.
    Remove outdated comment about lightuserdata
    Don't crash if no AI profiles exist.
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Fixed bracket placement.
    Changed the takeoff/land time change to be based on the pilot.
    
    nenau pointed out that making everyone takeoff/land faster or slower
    based on your ship could have real effects that might be undesirable,
    so I've tweaked it to base takeoff/land speed not on the player, but
    on the individual pilot. This also has a nice effect of making large
    ships take off more slowly (giving you more time to react).
    Modify landing/takeoff speed based on default dt multiplier.
    
    This has the effect of making sure that land and takeoff time is
    always the same between all speeds.
    remove the ugly mass hack in bomber ai
    Fixed warnings.
    Fixed friendly/hostile setting.
    
    The previous system was very hodge-podge and had a lot of duplicated
    checks, leading to some inconsistent behavior. I've consolidated all
    checks to the setHostile / setFriendly / isHostile / isFriendly
    functions.
    
    This fixes a bug where a pilot that was set as friendly but became
    hostile due to aggression was impossible to target with the "target
    nearest hostile" button.
    Changed fabs to FABS throughout the code.
    Added aiming lines to ease dogfight
    Cleaned up code.
    First pass at putting jam functionality into scramblers.
    
    It doesn't work right. The numbers are wrong. Need some help on that.
    Fixed up the AI. I *think* this is good.
    ai_think(): test pilot->ai instead of cur_pilot->ai
    
    cur_pilot hasn't been set yet
    Modified the way escort launching is controlled so it can be monitored in real-time.
    
    The previous method was clunky and didn't allow monitoring changes
    to how many escorts you have deployed in real-time very well. So this
    is a HUGE overhaul in how that whole thing works. It solves a bug that
    prevented you from getting new fighters when your old fighters were
    destroyed, while still limiting how many you can launch at once.
    added the miners faction
    Make everything fuel related an int
    Tag everything related to fuel and using double with DELETETHIS_
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    Using ngettext for plurals.
    More gettext.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    fleeing ships use planets if they are closer
    Correct ai_refuel
    Fix typo in lua doc
    removed unused variable j.
    Luadoc correction
    In AI API, separate  setting hyper target from selecting near/random
    
    This allows a leader to instruct followers to use a specific jump point.
    Use nil to indicate no task, instead of "none"
    For player not under manual control, ai_think should only run
    control_manual
    Run player AI's control_manual() function to handle formations
    Use messaging API to command escorts
    Use pilot.leader() instead of create() argument for escort leader
    Add control_manual to command fleet when under manual control
    Fix pilot.follow()
    Replace remaining uses of Lua globals with Lua environments.
    
    This fixes crashes in the tutorials (and probably other events).
    Revert "Call getfenv in nlua_pcall() eliminating the need to pass the"
    
    This reverts commit 79e36c0c1bbca2aa5fa2922651dd303bc7b87882.
    Replace pilot.handleMsg() with ai.messages()
    Messaging API; still semi-broken
    Call getfenv in nlua_pcall() eliminating the need to pass the
    environment as an argument
    Add nlua_pushenv() function
    
    Use in various cases where the full environment table is pushed to the
    stack.
    Remove TaskData, now that everything is in one Lua state
    Use new __RW system and nlua_register() everywhere
    Set __RW for each env
    Do not define nlua_errTrace() in header, since it is now used only in nlua.c
    Use nlua_pcall() in a couple more places, and make it more robust
    Write nlua_pcall() and NLUA_CHECKRW()
    Run equip scripts in global lua state
    Fix bugs
    
    Seems to be working now, but needs testing, and implementing for
    everything other than AI scripts
    Compiles now; runtime errors (and still  only ai.c)
    Add nlua_setenv and nlua_getenv function
    
    They behave like getglobal and setglobal, but use a sandboxed
    environment instead of gloal state
    WIP change to use one Lua state; does not yet compile
    
    Starting with ai.c
    got the traders to do convoys
    Whitespace and minor optimizations.
    added a min dist for the careful face function
    Add types to lua api docs, and other documentation improvements
    Fix various param issues LDoc (appropriately) warns about
    Remove vectcpy(), and replace it with simple assignments
    Use lua registry to make push(sub)task support data of any type
    Make LuaPlanet an int instead of struct
    Use Vector2d instead of LuaVector
    Make LuaPilot an int instead of a struct, simplifying things
    Remove ai.incombat() and add combat to pilot.flags()
    Make ai.brake() return bool rather than int
    Add/fix ai.c luadocs
    Correct luadoc
    Build documentation for ai module
    Bugfix : AI trying to use Reverse thrust resulted in ship never braking
    simplification
    Remove unefficient features
    Add the careful_face function
    Made the AI wider use missiles
    Use weapset instead of activate
    Made the AI handle the afterburner
    tried to explain better the effect of the parameters
    Wider use of compiled functions
    Changed the inrange computation method
    bugfix
    changed the aim method
    Combine ai_extra.h into ai.h
    
    Use forward declaration of struct to deal with cyclical import.
    Replace ai.pshield() and ai.parmour() with pilot:health()
    Remove ai.shield() and ai.armour()
    
    Currently unused; can be replaced by pilot.stats()
    Replace ai.pcurenergy() with pilot.energy()
    Remove lightuserdata code from ai.dist() and ai.flyby_dist()
    
    I think this was only needed because ai.pos() returned a lightuserdata
    Make planet related ai functions return planet object instead of id
    Replace some ai functions with pilot.flags()
    Remove unnecessary calls to nlua_loadRnd() and nlua_loadVector() in ai.c
    Replace ai.getPlayer() with player.pilot()
    
    I also removed code in ai.c defining a 'player' constant. It was unused
    and interfered with access to the player module
    Rename ai.getPilot() to ai.pilot()
    Replace ai.comm() and ai.broadcast() with pilot module
    Replace ai.setcargo() and ai.exists() with use of pilot module
    Replace more ai methods with the standard ones
    Replace ai.sysradius() with system.cur():radius()
    Remove a couple ai methods duplicated in pilot module
    
    pilot.vel() is roughly equivalent to ai.speed()
    Fix refuel
    Make ai code deal with pilot objects instead of ids
    Strip trailing whitespace
    Fix segfault when compiled with luajit
    * Give also damage done by the attacker in the hook.
    * Missing ;.
    * Clean up.
    Pass asset or jump to pilot hooks
    Make pilot_cargoAddRaw ignore free space
    
    This fixes an issue where the player's cargo could be lost on load. If
    a player had n tons of cargo and then reduced their capacity below n
    and quit, on next load they would lose any cargo over the limit, with
    mission cargo being handled no differently.
    
    As a side note, pilot_cargoAdd now takes a mission ID parameter, and
    most calls to pilot_cargoAddRaw have been replaced for safety.
    Rework and optimize distress
    
    This was meant to be two commits, but the changed lines were adjacent.
    The main gameplay change here is that pilots will notice attacks that
    happen near them and react appropriately, regardless of whether the
    victim has broadcast a distress yet. This should make player piracy in
    inhabited systems significantly more difficult.
    
    The second part of this is a few small optimizations to pilot_distress,
    only running several of the checks if the player is the attacker.
    make ai speed aware
    * Remove baffling functionality.
    * Fix the breakage that was the previous fix.
    * Fixed aiL_accel to do what it says on the tin.
    * sizeof(char) is always 1. No need to keep it around.
    * Heal pilots after equipping (core outfits can cause damage).
    * Equip function should generate errors properly now.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Prevent the AI from shooting during cooldown.
    Remove a few pilot flags and replace them with counters in the pilot struct.
    Fixed braking completion false-positive.
    Axed a bunch of duplicate braking code in favour of the generic function.
    Fixed the AI's re-equip conditional.
    Non-player ships were always being re-equipped.
    * Wrapper for nsnprintf being used all over.
    * AI will only see non hidden/exit only jump points.
    Began modernizing ai.c - Added ai.getPilot(), load full API, and start using pilots instead of pilot IDs.
    Use faction-specific equip scripts, if they exist. Fall back to generic otherwise.
    * Moving to new weapon set type things, halfway there.
    * Variable fuel consumption.
    * LLVM.
    * Fixed Lua stack imbalance when failing to call AI Lua.
    * Shared code for targetting enemies and pilots. This should fix lots of shit with invalid targets creating ai warnings.
    * Whitespace.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    * Using pilot_setTarget abstraction instead of setting the pilot directly.
    Fixed an AI edge case - Actually reachable (and can cause crashes) because the API function takes raw pilot IDs.
    More whitespace and documentation fixes.
    Low-hanging fruit typo commit!
    ai: slim conditional branches
    
    Signed-off-by: Nicolas Kaiser <nikai@nikai.net>
    Many, many typo fixes.
    * Spelling isn't bobbens' fortee.
    * Removed unused firemode.
    * Fixed idle hook handling.
    * Whitespace.
    Remove trailing spaces in src/
    lua headers are system headers, include them that way
    * Print stack traces in ai when erroring.
    * Using garbage collector for tasks.
    * Correctness.
    It's its not it's
    * Fixed new gcc -Wunused-but-set-variable warnings.
    * Minor optimization.
    * Fixed pilot.memory.
    * Added pilot.memoryCheck.
    Added emergency fallback to avoid crashing while loading invalid AI.
    * Minor fixes and tweaks.
    * More LLVM errors and misc cleanup.
    * Do not crash with no jumps.
    Added two new Lua API functions, for enabling or disabling the ability to jump or land for each pilot.
    * Try not to segfault if pilot has no ai.
    * Fixed issue in AI where player would lose it's memory.
    * Cosmetics and minor optimizations in ai Lua C code.
    * Whitespace.
    * Use defines for flexibility.
    * Documentation, removed heuristic warnings.
    Bugswatted. It turns out that getdamage and getdelay are not safe with
    a potential null reference. A check for a null fixed this.
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Heuristic targeting for size and HP. Damage still has an error.
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    * Made the speed limit internal part of the runge-kutta function.
    * Fixed issues with minbrakedist.
    Add in heuristic targeting functions and energy management
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    added a routine to allow the pilot to examine its energy reserves
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Added relative size, DPS, and HP functions for the AI
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add in the HP and mass functions. DPS will take some more work.
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Adding the lua wrapper functions and documentation cleanup
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Function headers and documentation headers for the 0-1 map for target identification
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Fix compile errors
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add resources for finding the nearest pilot of any kind in lua
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Adds functionality for discriminating targets by size
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Adds flyby distance calculations for the AI
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add the drift_facing function. This returns the angular difference between the
    direction of travel and the pilot's facing
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Adds the iface routine, used to determing facing to intercept a target without turning the pilot.
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add ai.dir function:
    
    Looks at facing offset without turning the pilot.
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    * More optimal AI loading, should fix issues  on win64.
    * Luadoc.
    * Improved aim code (with UV decomposition) and intercept code by HatlessAtlas.
    * Player should not have equipment script run on him.
    * Player should now properly load the player AI so that manual control doesn't go crazy on us.
    * Don't go crazy when an ai has improper syntax, just discard the ai.
    * Doxygen/Luadoc typo.
    * Doxygen/Luadoc.
    * FIxed Clang report.
    * Separated the pilot cargo stuff into pilot_cargo.[ch].
    * Renamed some stuff to be more consistant.
    * Cleaned up all secondary stuff, moved to different secondary weapon system.
    * Fixed memory leak.
    * Moved AI profiles to the array system.
    * Changed how weapon range works.
    * Weapon sets are somewhat working for NPC now.
    * Some clean up and the likes.
    * Some clean up to try to move to the new weapon set system.
    * Style changes.
    * Attacked hook passes attacker as a parameter.
    * Pilot attacked hook now works outside of manual control.
    * Better invalid parameter Lua checking.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Removed usage of SDL_min.
    * Added more #includes that were missing.
    * Cosmetics.
    * By default pilot.goto() is now precise.
    * By default pilot.goto() is now precise.
    * Added ability to disable velocity compensation in pilot.goto().
    * Added ability to disable velocity compensation in pilot.goto().
    * Added parameter to only landy at friendly planets for the ai.
    * Do not crash due to invalid ai.
    * More gain = more fun.
    * Goto without braking should compensate velocity somewhat.
    * Fixed issue not allowing NPC pilots to land.
    * Fixed many "static landing" issues where the distance from planet center was static.
    * Using planet radius now instead of graphic size for planet size assumptions.
    * AI can now get system radius also.
    * Added land to manual control.
    * You can now create pilots taking off.
    * AI now handles taking off.
    * Trader ai uses generic as base.
    * Generic ai template now has distress function.
    * Generic ai template has minimum aggro distance.
    * Updated all AIs to use create_post() which handles some creation stuff.
    * NPC pilots now land.
    * Added pilot landing hook.
    * More AI verbosity and debugging information.
    * Fleeing enemies now choose the closest jump.
    * NPC jumping is no longer perfect.
    * AI now jumps properly.
    * Appropriately run subtasks instead of main tasks when needed.
    * Fixed segfault.
    * ai.pushtask() no longer has a pos argument.
    * Added subtasks with similar api to normal tasks.
     * Subtasks are tied to their task and allow mini state machines.
    * Added function to get random hyperspace target.
    * 64 bit credits for everyone \o/.
    * Fixed harmless memory leak.
    * Services are more specifically defined now.
    * Have manual controlled ships ignore distress signals.
    * Should fixed the attacked pilot hook.
    * Pilots now have idle and attacked hook when under manual control.
    * Added manual control for AI.
    * Fixed some long standing bugs in AI.
    * Decreased code footprint in nlua_pilot.c
    * Misc fixes.
    * Only run equip.lua once per pilot.
    * Don't error out on recreate, just ignore cargo/credits stuff.
    * Sped up equipment script by a bit.
    * Simplified launchers and ammo.
    * Added equipment script to equip pilots.
    * Using setTurn and setThrust abstractions for pilots.
    * NPC use secondary weapons again.
    * Changed how ammo is handled.
    * Fixed segfault.
    * Should avoid segfaults.
    * Compiles cleanly - nothing works.
    * Made some nlua naming consistant.
    * AI configuration is now stored on a per-pilot basis instead of globally.
    * Using dt for pilot thinking/rendering.
    * Zoom should be gradual.
    * You can now recover disabled fighters from your fighter bay.
    * Should fix issues with AI not detecting player hostility properly.
    * Better handling of pilot parameter.
    * ai.hostile() should work better vs escorts.
    * Allow the pilot Lua API to ignore interference.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * More sanity checks for angles.
    * Should fix some warnings with the ai since a few commits ago.
    * Cleaned up AI code.
    * Should remove a warning.
    * Constness.
    * Cleaned up some Lua code.
    * We're using double precision.
    * Rerun create function on AI change, do not allow create only stuff though.
    * Allow Lua API to change pilot AI.
    * Some nlua sanitizing.
    * Split vec2 from nlua_space.
    * Greatly cleaned up the hit code.
    * Pilots should properly react better in combat.
    * AI does refuel deals based on your standing with their faction.
    * Pilots can refuel you now if you ask for it.
    * Code clean up.
    * Traders should run when they get lockon.
    * When running should only shoot when in range.
    * getweapdist() now uses boolean instead of number.
    * Better handling of secondary weapon in the case of dumb turrets.
    * Implemented boarding for AI pilots.
    * Pilots should now help each other more.
    * Implemented distress.
    * Fixed some possible issues.
    * Put framework for distress signals handled in AI.
    * Fixed some ai functions.
    * Interference now affects targetting and communication.
    * Added concept of distress signals.
       * Ships under attack generate distress signals.
       * If someone gets the signal, and player is attacking player loses faction.
       * Limited by interference.
    * Fixed rare and elusive segfault bug in ai.
    * Should fix the fact some pilots have 0 cargo but it counts as cargo.
    * Fixed bug with enemies and turrets.
    * New firemodes, allows ships to shoot only turrets, forward mounts or both with primary weapons.
    * Move ai to use firemodes.
    * Improve bomber code.
    * Have player keep track of hostiles it has in system.
    * Code clean up.
    * Checked for stack leak again.
    * Better handling of secondary weapons.
    * Fixed minor memory leak.
    * Avoid possible out of bounds memory access.
    * No longer need makefile when working in trunk, reads from directories directly.
    * Code clean up.
    * Doxygen.
    * Fixed some Lua stack unbalanced issues.
    * Even more doxygen.
    * More doxygen.
    * Doxygen fixes.
    * Using Packcache now, loads _MUCH_ faster.
    * First large ndata patch.
    * Removed all non-dt timers from stuff that should be dt based.
    * Properly fixed the valgrind issue without causing more issues.
    * A bit more strict in ai.face().
    * Avoid possible usage of uninitialized data.
    * Doxygen.
    * Automatically give backtraces in DEBUG mode.
    * Fixed broken release mode.
    * Fixed checks for DEBUG when they should be for NODEBUG.:
    * Minor tweaks.
    * Gave AI customizeable bribe messages.
    * Added math lib to basic nlua.
    * Added ai.shipmass()
    * ai.shipclass now can take a pilot id as parameter.
    * Bribe amount is stored in mem.bribe in pilot's ai.
    * Implemented bribing.
    * Added ai.isbribed().
    * Fixed major outstanding bugs in flag usage.
    * Fixed major outstanding bugs in weapon_hit stuff.
    * Fixed ai.velrel().
    * Improved AI secondary weapon handling.
    * AI now takes into account relative velocities.
    * Removed the horrible, horrible TYPE_PTR from ai.
    * Added escort control ai Lua bindings.
    * Fixed some escort ai issues.
    * Escorts can now return to ship.
    * Removed useless target parameters.
    * Moving to target on pilot structure.
    * Fixed segfaults with new ai system.
    * Allow passing parameters to pilot ai on creation.
    * More documentation.
    * Added ai.shipclass().
    * Gave AI some memory.
    * Fixed many AI issues.
    * Implemented pilot memory tables.
    * Major rewrite and clean up in space.c.  Hopefully won't introduce bugs.
    * Stop firing before starting to jump.
    * Fixed long term bug with pshield().
    * Added function to get the player for usage in mission ai stuff.
    * Typo fix.
    * Major AI rehaul, split into generic stuff.
    * Added bomber attack routines.
    * Fixed bug with AI forgetting about you if another enemy attacks.
    * Improved ai.secondary to actually take into account ammo.
    * control_rate is now defined as a float.
    * Cleaned up some AI stuff.
    * More doxygen and code cleanup.
    * Preliminary doxygen support.
    * Dvaereds get mace rockets.
    * AI now uses more weapon types and more wisely.
    * Fixed bugs introduced by assert in WARN/ERR change.
    * Fixed segfault when popping a task without next task.
    * Fixed ai.brake().
    * Improves enemy ai: they hit a lot now.
    * Improves turret ai: should also hit a lot now.
    * Improved the global attack() ai.
    * Updated TODO.
    * Minor sanity checks.
    * ai.exists() is more lenient with bad parameters.
    * Improved sanity on some ai functions.
    * ai.exists() returns false if pilot is dead.
    * Sanitized the pilot_get*.
    * Player can target nearest pilot with 't'.
    * Do not load ai/include/* as AI profiles.
    * More planet functions for ai: ai.getrndplanet() and ai.getlandplanet().
    * Implemented ai.haslockon() to check for locked on missiles.
    * ai.c: ai.dist() now accepts pilot ids as parameters.
    * misn_lua.c: pilot.add() can override fleet ai with second parameter.
    * ai/scout.lua: Added a new hard to kill ai that only tries to survives.
    * dat/missions/emp_scout00.lua: Scout uses new scout ai.
    * AI now calculates optimal distance when shooting.
    * Renamed pilots and mpilots to pilot_nstack and pilot_mstack.
    * src/pilot.c: binary search works on ints near max.
    * Now load the basic lua stuff.
    * Check for errors when running "attacked".
    * Wrapping around luaL_newstate and luaopen_base.
    * New CFLAG: -Wshadow.
    * Fixed all new warnings.
    * Make ships appear to enter from hyperspace. Not totally satisfied yet.
    added more nazi flags: -Wmissing-prototypes -Winline -Wcast-align -Wmissing-declarations -fno-inline
    cleaned up the ai lua a bit, but needs a lot more work
    new philosophy, when you swap ships your cargo stays with you, will fix issues
    patch by Nicholas Niro <nik_89@neuroponic.com> for older gcc
    added a couple more commodities
    make ai more lax when checking for error, make accel speed dependent, not thrust
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    branch:      naev
    fixed an uninitialized code error
    branch:      naev
    militia sort of scans now, more ai api
    branch:      naev
    made limit_speed to act abruptly, much nicer when afterburning now
    branch:      naev
    major content addition: 1 new system, 5 new outfits, more data checking
    branch:      naev
    modifications actually work now :)
    branch:      naev
    added ai.cargofree() to lua
    branch:      naev
    more verbose ai logging and assorted ai fixes (more moneys)
    branch:      naev
    finally some better lua error checking
    branch:      naev
    big update, ai now controls ship's credits/loot, more API, pilot cargo stuff
    branch:      naev
    improved the chase ai_face function quite a bit with customizable velocity weight
    branch:      naev
    added militia faction, changed mr.test to militia, added ai_create
    branch:      naev
    randomized planet landing a bit, fixed something wierd
    branch:      naev
    added mule ship to actually use turrets :)
    branch:      naev
    made ai/toolkit compileable under C99 (naev isn't completely though)
    branch:      naev
    merchant vessles now go hyperspace
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] cosmetic changes
    got rid of bzero and strndup
    branch:      naev
    [svn] sanitized lua ai api
    branch:      naev
    [svn] prepared for the upcoming toolkit_list
    fixed some sanity around turning pilot functions, now in pilot_face
    added basic rough on the edges hyperspace implementation
    branch:      naev
    [svn] Basic toolkit implementation (but ugly)
    Basic landing
    Pause bugfixes
    branch:      naev
    [svn] AI can now use secondary weapons
    branch:      naev
    [svn] improved docs
    added purge command to Makefile to clean up all data
    fixed warning on 64 bit systems
    branch:      naev
    [svn] switched to commonwealth spelling (armor -> armour)
    implemented seeker missiles and ammo
    implemented secondary weapons
    branch:      naev
    [svn] fixed AI landing (still too loose for my tast though)
    cleaned up some code
    more xml macros
    branch:      naev
    [svn] more ai functions
    some ai tweaks
    more ai protection
    branch:      naev
    [svn] multiple enemies now supported
    bug fixes
    you can get other ship's health now from AI
    branch:      naev
    [svn] some cosmetic changes
    misc minor fixes
    branch:      naev
    [svn] enemies are now properly parsed
    added possibility of pirate
    buffer overflow in ai fixed
    branch:      naev
    [svn] added timer support for the AI
    fixed major buffer overflow in AI
    branch:      naev
    [svn] control_rate no applies properly
    targetted pilot will appear over others
    branch:      naev
    [svn] bug fixes
    support for different AI Profiles
    branch:      naev
    [svn] more ai API
    ai now responds on being attacked
    branch:      naev
    [svn] bug fixes
    fleet improvements
    per pixel collision
    branch:      naev
    [svn] fixed graphics bug with small hack
    cleaned up and improved the now AI functions
    branch:      naev
    [svn] added a few AI API functions that need tweaking
    branch:      naev
    [svn] added rng function to ai API
    branch:      naev
    [svn] much more error checking in the xml
    fleets are built in - just need to do something with them
    minor tweaks and fixes
    branch:      naev
    [svn] added message system
    fixed spinning laser bug
    branch:      naev
    [svn] some new pack features (list files)
    radial collision detection
    proper adding of the shooting system all about
    branch:      naev
    [svn] rudimentary shooting system, needs work
    branch:      naev
    [svn] outfit loading, not properly used yet
    branch:      naev
    [svn] more ai api
    minor code changes
    more AI concepts
    branch:      naev
    [svn] improved ai API
    fixed minor memory leaks
    cleaned up a bit
    branch:      naev
    [svn] added star system support/loading
    added planets
    more minor tweaks and fixes
    general happiness
    branch:      naev
    [svn] ai now loaded from datafile
    branch:      naev
    [svn] moved everything to directories
    cleaned up Makefile
    improved AI
    branch:      naev
    [svn] temporary commit before playing with cpio
    branch:      naev
    [svn] basics of the AI implemented
    branch:      naev
    [svn] few comments
    few optimizations
    branch:      naev
    [svn] minor tweaks
    creation of start of AI infrastructure
    * Slots are now handled separately in xml.
    Enhanced disabling of unfinished economy code
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Removed an incorrect check
    Fixed bracket placement.
    Rewrote so that unidiff now recalculates entire economy, but doesn't erase player knowledge.
    Fixed unidiff issue - applying a unidiff of any time would wipe the players economy history (including in any new saves)
    Added a bit to make sure prices are always above zero.
    
    A price of 1 is tiny, but a price of zero is literally nothing and
    we shouldn't have that in any circumstance.
    Fixed multi-calculation of price.
    
    This was causing price differences to be wildly exaggerated. Of
    course making it so that prices are generated once would fix this
    but why not just make it so that it's not a problem? So I did that.
    It now resets the price to base before modding it.
    Whitespace
    Replaced all references to SCU/STP/STU to cycles/periods/seconds.
    
    This unifies the code with the in-game dialog and should hopefully
    prevent confusion regarding what terms to use.
    
    (Recap: these abbreviations were removed from in-game use long ago
    due to confusion that is likely to happen as a result of them looking
    similar.)
    Warnings.
    Fixed warnings.
    Fixed issue with period not being read.
    Removed some externs.
    Fixed warnings.
    Split economy into economy and commodity.
    whitespace
    Removed tabs!
    Fixed crash when an empty commodities tag is present.
    
    The economy system specifically recognized a planet having no
    faction being a problem for the econ system, but only warned about
    it. This also prevents any attempt from being made to set price in
    that circumstance.
    support for standard commodities
    Added economy information to the map
    Added npc person to give economy information, which then gets added to the player's knowledge.
    Working on adding a person in the bar to give economy information
    Removed printf.
    Removed print statements
    Added economy statistics and last purchase price, including saving of economy data
    Tidied up functions
    whitespace
    variable p is used.
    Using static functions
    Made economy.c not depend on value of NT_STU_DIV.
    Added cleaning up of new economy memory
    Removed tabs, replaced with 3 spaces
    Added extra spaces
    reworked economy so that it becomes configurable from xml
    Further tidying up ready for pull request into main branch
    Cleaned up code, and refactored the sinusoidal economy part
    Initial economy now compiling and working
    Adding simusoidal economy parameters
    Increased gather distance a bit.
    Removed the requirement to be moving slow to gather ore.
    
    All that did was make the process annoying. You can now collect ore
    at any speed as long as you get close enough.
    avoid crash with non-valid gatherable id
    Have gatherable_getClosest return -1 when none are found, should fix #873.
    added the miners faction
    Distinguish between singular / plural.
    misc update on mining
    made mining more user-friendly
    just forgot a '<<<<<<<HEAD'
    Changed commodity xml to have name as a tag not attribute.
    Uniformized the "Out of Memory" message variants.
    Using ngettext for plurals.
    Changed escape code for colors from '\e' to '\a' so xgettext plays well with it.
    More gettext.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Enabled mining and added variety to the fields
    Destroyable asteroids
    Only complain about commodity graphics if they have a price.
    Add gfx_store field to commodity object
    Modify the economy updating model
    
    Galaxy-modifying functions (adding or removing planets, etc.) now only
    queue an economy update, with the caller being responsible for running
    the update via economy_execQueued.
    
    The main benefit is that diffs now only cause one economy update, when
    they prevously did an update for each jump or planet. Economy updates
    were the single largest time-sink when loading, particularly if a
    diff cleanup was necessary.
    Colourize prices based on affordability in several places
    * Todo.
    * Economy should actually be properly solving (using QR factorization).
    * New planets get a nonzero radius.
    * Update radius when updating gfx.
    * Moved various path defines into ndata.h.
    * Wrapper for nsnprintf being used all over.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Prune trailing whitespace.
    Whitespace, typo and general style cleanup.
    Many, many typo fixes.
    * Whitespace and correctness.
    * Use newer xml api.
    Fix the detection of external CSparse libraries
    cs.h is a system header, include it that way
    * A bit more properness.
    * Try to fix the bloody credits mess.
    * Reduced code by grouping the tech search for items stuff.
    * Added ability to search for comodities.
    * Stricter parsing of the commodity xml.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Instead of hardcoding 32 for credits2str buf length, added #define to make it much more sane.
    * Increased credits minimum buffer to 32. Fixed code to use 32 always.
    * Removed prodfactor and disabled "dynamic" economy for now.
    * Initial commit of tech stuff.
    * Using new jump point system, behaves exactly the same as the old system.
    * 64 bit credits for everyone \o/.
    * Should fix 32 bit warning.
    * Whitespace.
    * Better support for big numbers of credits (couple quintillion).
    * Better money handling, credits shouldn't overflow anymore.
    * Services are more specifically defined now.
    * Minor corectness patch.
    * Fixed unused variable.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Little more economy paranoia.
    * Double check initialization in economy init/destroy.
    * Small formatting and correctness patch.
    * Using confidence intervals from macrso now.
    * Doxygen fixes.
    * First large ndata patch.
    * Moved xml.h to nxml.h.
    * Added more complicated xml parse functions in nxml.c.
    * Economy now dynamically fluctuates a bit.
    * Tweaked some values.
    * Removed warning.
    * Removed some more debugging stuff.
    * First patch to try to add a dynamic economy.  Economy is static atm.
    * Some code clean up.
    * Fixed a memory leak.
    * Major rewrite to xml.h increasing sanity checks.
    * Gui can now handle overlays.
    * Now jet cargo when cargo mission fails.
    * Reduced calls to xmlCleanupParser(), only one for all the loading now.
    * More doxygen.
    * commodity_Jettison takes into account pilot velocity now.
    * New nice fancy cargo graphic for when jettisoning cargo.
    started :retabbing (spaces only) and fixed some xml issues
    major commit, first fancy bar mission, alot of improvement
    branch:      naev
    can now buy/sell commodities, but they're all the same price
    branch:      naev
    planets now have commodities, but you can't do anything with them yet :)
    branch:      naev
    basic commodity support added (not used yet)
    branch:      naev
    changed some player variable names, immproved outfit buying/selling
    branch:      naev
    improved  alot of things for shipyard, including shipyard
    branch:      naev
    split the credit functions and improved boarding
    You can now equip unique outfits infinitely (only one per ship).
    Unique outfits once obtained always have a quantity of 1.
    Fixed some alt text not displaying properly.
    Implemented launcher damage ship stat.
    Launcher fire rate should be implemented now.
    You can only buy 1 of a unique outfit.
    You can not sell unique outfits.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Added ship rarity field.
    Made ship store graphics square to be able to share overlays with outfits.
    Ships can also use graphics overlay now.
    Removed common showing outfit code and unified in src/land_outfits.c
    Temporary moved slottypes to ImageArrayCell.
    Moved quantity into the imagearraycell.
    Abstracted image array stuff to cell where it is possible to set alt text.
    Increased the possible range for ship and player names.
    
    For some reason the game demanded at least 3 characters for ship
    names and at least 2 characters for player names. I've changed the
    requirement to at least 1 character, and also increased the limit
    from 20 to 60. Makes things more flexible.
    Added crew stat to the equipment screen.
    Fixed up uses of "NA" -> "N/A"
    Added more space to the Equipment screen.
    Use fuel_max instead of fuel (so numbers aren't reported as 0)
    More space for ships/outfits headers in Equip screen
    Added symbols for faction text on the map screen, and for ship stats
    
    This is an accessibility feature for those who are colorblind. You
    no longer need color vision to see this information.
    
    Based on the idea we had before to use emojis, but using ASCII instead.
    The biggest advantage of this is that it can just be directly inserted
    into the text rather than having to worry about positioning the symbols
    manually.
    Added some color saturation
    Flattened and darkened all of the tk stuff.
    
    Looks very nice now!
    Fixed the rest of the text colors.
    Simplified colors and modified image array selection colors.
    
    This gets rid of some variants of text coloring and defines them
    in a different way. The "dark" versions are removed; intending to
    replace that with outlines of some kind.
    Added some more ngettext, simplified econ map description.
    Added translation targets for ALL the xml.
    More translation thoughout the game.
    More warnings.
    Made it so that right-click cannot select a new target.
    
    This fixes an annoyance introduced by the ship-following before: it
    usually just gets in the way of autonav since you aren't concerned
    about the the pilots all around the planet you're trying to land on.
    This fixes that: in order to select a pilot you must first
    left-click it to indicate your intention to target it (after which
    it has priority over planets for the right mouse button).
    ship bought and sold hooks
    Removed the useless notes on the equipment screen about low ammo
    Removed the ugly uses of cDConsole as a color for headers.
    
    Replaced those all with black; headers don't need to be a different
    color and it honestly looks nicer without one.
    Fixed several strings and lack of gettext usage.
    Use gl_renderCross() in equipment_renderShip()
    Fixed that code (mistake), plus also added to equipment tab.
    Fixed the method of ammo refilling.
    Auto add / remove missiles, plus set missile costs to 0
    
    Just the start of the work here. This causes it to be unnecessary
    to buy missiles. They remain in the shop at cost 0 for the time
    being (and do nothing). Next up is removing those missiles from the
    shops, and consolidating the info about missiles and their launchers
    into the launchers themselves. Missiles will stay separate outfits,
    so I'm thinking of just adding a button to the launcher to view the
    missile's info, or otherwise I might just programmatically paste the
    missile info into the launcher somehow. Undecided.
    Removed ship location altogether.
    
    This was discussed on #719: ship swapping really doesn't add anything
    to the game, so this simply removes that feature. Ships no longer have
    a location, they just travel around the galaxy with you like outfits
    do.
    
    I believe this probably also fixes #719, though it's hard to tell
    for sure. The reason I think it might have fixed it is because that
    bug seemed to be most easily triggered by following a transport
    immediately with a swap. I suspect that somewhere the copying of the
    "loc" string of ships was going wrongly, so if that is indeed the
    case, the fact that that variable has been entirely removed should
    fix it. This is just speculation, though, and it's impossible to
    tell for sure.
    
    The NPC tip about having to transport ships has also been removed,
    since it is no longer true.
    Time Rate -> Time Dilation
    Added "time rate" to ship info.
    Fixed a bug that allowed you to buy maps with no new information.
    
    The bug was caused when there were destroyed assets within the map.
    Whether or not the asset actually existed was not being checked,
    so you could always buy the map again and again, wasting your
    credits. Fixed by considering any planet that either doesn't exist
    or is outside of the planetname_stack to be "known". This fixes the
    problem and doesn't seem to have any unintended side-effects.
    
    Big thanks to both bobbens and BTAxis for helping me navigate the
    code on this one.
    Fixed a bug that allowed you to buy maps with no new information.
    
    The bug was caused when there were destroyed assets within the map.
    Whether or not the asset actually existed was not being checked,
    so you could always buy the map again and again, wasting your
    credits. Fixed by considering any planet that either doesn't exist
    or is outside of the planetname_stack to be "known". This fixes the
    problem and doesn't seem to have any unintended side-effects.
    
    Big thanks to both bobbens and BTAxis for helping me navigate the
    code on this one.
    Make everything fuel related an int
    Tag everything related to fuel and using double with DELETETHIS_
    Changed escape code for colors from '\e' to '\a' so xgettext plays well with it.
    More gettext.
    If is always true.
    Replace memcpy with struct assignment
    Strip trailing whitespace
    Fixed a segfault when one of your ships is on a non-existent planet.
    Avoid regenerating the land tabs over top of themselves
    
    This was only occurring when hooks caused a GUI reload, which is
    somewhat unsafe, but this seems like a useful precaution to take.
    Skip tests when adding outfits in the equipment tab
    Factor beams into displayed ship DPS
    Preserve outfit image array data when recreating the land window
    Display absorption in the equipment and info windows
    Focus the ship image array by default
    Factor ammo information into launcher descs and DPS calculations
    Fix a memory leak
    Remove fuel cost and make refueling wholly-automated
    
    This was discussed earlier in IRC. My feeling is that fuel costs add nothing,
    yet can potentially strand new players and render saves unusable.
    
    There were also several issues with fuel being zeroed when removing fuel pods
    and engines, leading to fuel loss while experimenting with loadouts.
    Enhance filtering in the land window's outfits and equipment tabs
    
    This is a fairly monstrous commit, and unfortunately due to some necessary
    toolkit changes, wasn't able to be broken up into smaller chunks.
    
    A semi-itemized list of changes is as follows:
    
       tabwin:
          Provide both old and new tab IDs when calling onChange functions
    
       imagearray:
          Add a simple struct and toolkit_saveImageArrayData to permit easy
          saving of selection and scroll position.
    
       player:
          player_getOutfits & co. now return Outfit** instead of char**
    
       equipment:
          Added incremental text search, change the embedded tabwin into a dummy
          that just regenerates a single image array instead of maintaining five
          separate ones.
    
       land_outfits:
          Added incremental text search, as well as tab-based filtering identical
          to the equipment tab's, with some minor cleanup along the way.
    Fixed equipment_transportPrice
    
    Returned huge prices for ships that were in the same system due to map_getJumpPath not generating a path for them.
    Put the All filter first in the equipment tab's outfit list
    Modify equipment tab labels
    Remove functionless code (nested focus is currently broken)
    Add a prompt before unequipping a ship
    Add incremental outfit search to the equipment tab
    Only show core outfits in the Core filter tab
    Colourize prices based on affordability in several places
    Include a mass limit bar on the equipment screen, rotate the CPU bar
    Use the correct icon when an outfit doesn't fit a slot
    Scale the yes/no icons used in the equipment screen, if needed
    
    The GL_NEAREST scaling looks wretched, but it's less objectionable than
    having a giant icon overlapping each slot when the slots are scaled
    down.
    Double the ship tooltip's size due to increased use of ship stats
    Change pilot->cpu to an int.
    This avoids the player being told they have -0 CPU and can't fly their ship.
    Don't clobber the selected outfit when updating image arrays
    Added icons showing whether an outfit fits a given slot
    Update the selected outfit when changing tabs in the equipment screen
    Prevent the CPU bar from showing negative CPU
    * Some buffer clean up and formatting.
    Removed constraints when adding outfits to a ship.
    
    Change has effected the equip scripts aswell, but that had no advarse
    effects.
    Made some refractoring in the process, name and comment changes.
    The way I build the report is the most lazy way I could think of
    without storing the checks in an array/data struct with the appropriate
    string, and without writing a custom string writing function.
    * Sanitized hidden jump point handling.
    * jumpDist and adjacentSystems now by default IGNORES hidden jump points, if
      you want to actually handle them, there is a new hidden parameter that lets
      you change the behaviour to how it was beforeish, except it now is
      consistant.
    Made comments gender neutral, for accuracy
    * Fixed some crashes with player.swapShip(...) and the likes with no shipyard.
    * sizeof(char) is always 1. No need to keep it around.
    * FIxed sometimes not being able to equip shit.
    * Code clean up and polish.
    * Try to formalize being able to equip crap better.
    * Fixed multiple prints and such in equipment alt stuff.
    * Fixed invalid memory read when changing ships and reequipping stuff.
    * Keep player healed while landed so we don't get ugly stuff with core slot changes.
    Various small fixes: Set Focuse to keyboard useable widgets in the landing dialog. Saved cursor position in mission computer. Fixed possible access to unalocated memory.
    Made the ship transport cost depend on distance, lowered cost overall.
    * Custom widgets must not bend down to the all encompassing "mouse functions return 1 if event is blocked".
    * Sanitized more toolkit return parameter for function pointers.
    * Merge master into slots, part deux.
    * Wrapper for nsnprintf being used all over.
    Put the GUI-setting functions into the info window.
    Updated internal button name.
    Replaced the equipment screen's seldom-used "Set GUI" button with a rename ship one.
    Updated call-sites of buttons where soft-disable fall-through is desirable.
    Large revamp and unification of the various error-printing functions in the land window.
    Save and restore focus when destroying and re-creating image arrays in the land window.
    Gave hotkeys to a large chunk of the land window's buttons, as well as the YesNo dialogue.
    s/Takeoff/Take Off/ where appropriate.
    * Made all the colours constant as they should be.
    * Only change groups set non-0 level for weapon sets.
    * Change types properly.
    * More work in the path of getting it all working.
    * Fix _ALL_ the segfaults! _o/
    * Fixed crash.
    * Implemented jammers as per BTAxis wishes.
    * Use shared monospace font.
    * Changed proportions and stuff.
    * Minor equipment window tweaks.
    * LLVM.
    * Minor fixes and such.
    * Tabbed window inside a tabbed window renders, but doesn't seem to handle events.
    * Clean up and refactorization.
    * Added option to get filtered outfits from the player.
    * Moving equipment stuff to allow multiple outfit lists.
    * Code restructure.
    * Paranoia.
    * Slots are now handled separately in xml.
    * Display overlay on slots.
    * Use the ship outfit slot as a reference and do not duplicate data.
    * Colouring of slots somewhat.
    * Print slot property.
    * Reworked equipment_shipStats a bit.
    * Use proper length limiter.
    * Code refactorization.
    * Render active outfits as blue.
    * Seems to work.
    * Better handling of stats, not entirely working yet.
    * Initial commit of ship stats, doesn't really do anything new yet.
    * Using fancy damage struct to prepare for generic disabling implementation.
    * Using fancy damage struct to prepare for generic disabling implementation.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Whitespace, typo and general style cleanup.
    Fix some minor nigh-impossible crashes; remove pointless initializations and such.
    Removed superfluous GUI override checkbox, made equipment tab work better at low resolutions.
    Hard-coded the equipment slot column label width so they never get truncated.
    remove duplicated includes
    
    Signed-off-by: Nicolas Kaiser <nikai@nikai.net>
    Many, many typo fixes.
    s/Where/Location/
    * Fixed new gcc -Wunused-but-set-variable warnings.
    * When you remove an outfit your weapon list gets sanitized.
    * Fixed some uninitialized stuff.
    * Fixing misc issues.
    * More NAEV -> Naev.
    * Fixed minor memory leak.
    More time changes. Pretty time should always display two decimal places of precision with no zero-padding of STP.
    * Fix right click on "None" outfit generating warning.
    * New time system. As seen on wiki.
    * Display actual maximum velocity.
    * Should have corrected units and capitalization now.
    * Fixed turn not being displayed in deg.
    * Changed internal representation of direction velocity and turn from deg/s to rad/s.
    * Fat ships aren't necessarily bad unless they're slow.
    * Ship stats are now colour coded in the equipment view based on how modified they are.
    * Doxygen.
    * Fixed cppcheck report.
    * Fixed Clang report.
    * Fixed Clang report.
    * You can no longer unequip your ship when you have too much cargo or deployed fighters.
    * Autoweap auto-disables when you modify the weapon sets.
    * Simplified code.
    * You can now modify your weapon set.
    * Fixed potential bug.
    * Visual indication of weapn slots.
    * FIxed segfaults.
    * Autoweapo more.
    * Select currently active GUI by default.
    * Avoid possible usage of freed memory.
    * Actually use the list of GUIs.
    * Actually manage memory and not use stuff that gets freed.
    GUI selection is a non-functional list now.
    * Whitespace.
    GUI can now be set through the equipment screen.
    * Patch to use GLshort instead of GLint for compatibility with OpenGL ES by rookie1.
    * Fixed ammo going poof.
    * Fixed equipment.
    * Fixed minor memory invalid write (by deiz *cough*).
    * Run update_ship function when ship changes equipment.
    Systems slot renamed to Utility.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    Migrating from High, Medium, Low + Heavy, Standard, Light to Weapon, Systems, Structure + Heavy, Medium, Light
    Fixed a bunch of off-by-ones... on Nvidia drivers anyhow. Bloody OpenGL.
    Slot types are now represented in image arrays. Fixed a bunch of off-by-ones along the way.
    * Instead of hardcoding 32 for credits2str buf length, added #define to make it much more sane.
    * Move shipyardstuff out of land.c in a first attempt to thin land.c.
    Minor cleanup.
    Removed useless edge case for transporting ships.
    Added a colour blending function.
    * Slot sizes now indicated in the equipment window for outfits.
    Changed slot size colour scheme, minor usability fixes.
    * Sexier slot size view in equipment menu.
    Fixed off-by-ones in the slot outline.
    * Use non-modified target graphic variant for stores.
    * Slot sizes are more visual now.
    * Added graphical indicator of slot size and warning.
    * You can only equip outfits that fit slot size now, however there is no slot size indication.
    * Initial implementation of slot size types.
    Fixed several more minor bugs. Error dialogue generator is fully functional, and all edge cases should be addressed.
    * Increased credits minimum buffer to 32. Fixed code to use 32 always.
    * Should fix the issues with outfit mass not updating properly ship totals.
    * Major refactoring of the pilot. It is now all contained in a struct.
    * Fixed equipment window not properly updating sometimes.
    * Better money handling, credits shouldn't overflow anymore.
    * Fuel is no longer downscaled when removing fuel pods.
    * Fuel thingy should be fixed.
    * Should handle fuel better now.
    Changed some comments to be more descriptive
    Changed the right mouse click API so that it won't pass the name anymore. It is seldom useful. and can be easily asked for.
    * Void casting no longer needed.
    Changed whitespace to suit bobbens' aesthetic preferences.
    Fixed a segfault that was caused by registering the right-click callback to the wrong widget.
    * Got rid of warning.
    Implemented equipping outfits on right-click.
    Changed the imagearray right click callback to provide name, not array index
    Added right-click callback to imagearray widget. Registered a
    right-click callback for the available outfit imagearray.
    * More bugs detected with scan-build.
    * Fixed resorting ships selecting different one.
    * Fixed fire rate in FPS calculation.
    * Fancier ship alts.
    * Better focus handling in equipment window.
    * Fixed accuracy giving 2x the bonus/malus.
    * Fixed some display glitches related to stats.
    * Generate stats of pilot based off of pilot.
    * Make ship stats desc rendering a bit more sane.
    * Remove unneeded newline if mod has no mass.
    * Display ship stats as alt.
    * Fixed some off-by-ones.
    * Put above when needed.
    * Display equipment stuff on top so it doesn't get overlapped.
    * Fixed very tricky bug where player could sell ship without selling it for infinite money.
    * Indicate what slot type outfit is even though slots are full.
    * Fixed unequip ship segfault.
    * Don't lose ammo when unequipping.
    * Just remake it, works better.
    * More Deiz nitpicking.
    * Fixed some stuff that was driving Deiz mad.
    Updated Quicksilver, minor equipment.c change.
    * Should fix a segfault.
    Fixed typo in Sinclair, added fuel (in jumps) to equipment view.
    * Fixed segfault.
    * Shininess, by Deiz.
    * Minor selection fix.
    * Fixed rendering glitch regression.
    * Equipment screen looks sexy again.
    * Info is starting to take shape.
    * Custom widgets use userdata now.
    * Changed how equipment slots are rendered so it acts like another widget now.
    * Fighter bays get different messages.
    * Raw outfit functions no longer call calcStats.
    * Fixed some missing text in big resolutions.
    * Added confirmation dialogue to transport.
    * Fixed unequip all.
    * Minor correction.
    * Cleaned up code a bit.
    * More checks in pilot_addOutfit and pilot_rmOutfit.
    * Text/colour tweaks by Deiz.
    * Can't remove stuff when low on energy/shield/armour.
    * Display quantity in equipment window.
    * Added cargo sanity checks.
    * Improved behaviour with fullscreen.
    * Transport price depends on ship mass to avoid unequipping for price reduction.
    * Use normal distribution for hyperspace time delays.
    * Changed how jump delay work, display them to player.
    * Split equipment stuff from land stuff to make it more understandable.
    zigzag AI
    Give pilots access to space
    Added API to get how many of a specific outfit a pilot has.
    Made dogfight aiming helper per-ship rather than global for the player.
    
    This allows you to enable the dogfight aiming helper for some ships
    but not all. Seems to make it more reliable too. Useful if, say, you
    have some ships where you need it but some others only use turreted
    weapons.
    Changed the takeoff/land time change to be based on the pilot.
    
    nenau pointed out that making everyone takeoff/land faster or slower
    based on your ship could have real effects that might be undesirable,
    so I've tweaked it to base takeoff/land speed not on the player, but
    on the individual pilot. This also has a nice effect of making large
    ships take off more slowly (giving you more time to react).
    remove the ugly mass hack in bomber ai
    Fixed issue with period not being read.
    Removed some externs.
    Fixed warnings.
    Added aiming lines to ease dogfight
    First pass at putting jam functionality into scramblers.
    
    It doesn't work right. The numbers are wrong. Need some help on that.
    Replaced dockslot with index int.
    Switched dockpilot to id based.
    Fixed the problem with escorts (I think).
    
    Not tested thoroughly yet, but I think this should fix the problem of
    escorts causing segfaults when their origin ship dies. A cursory test
    shows that this seems to work.
    
    This also causes pilot.setLeader to remove "deployed" status from the
    origin ship.
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Modified the way escort launching is controlled so it can be monitored in real-time.
    
    The previous method was clunky and didn't allow monitoring changes
    to how many escorts you have deployed in real-time very well. So this
    is a HUGE overhaul in how that whole thing works. It solves a bug that
    prevented you from getting new fighters when your old fighters were
    destroyed, while still limiting how many you can launch at once.
    Do not persist escorts on takeoff
    
    This was resulting in duplicated escorts.
    Reverted to all-at-once refuelling behavior from eons ago.
    
    The recent conversion of fuel from floats to ints broke the progressive
    refuelling system (with one pilot refuelling another). This may not
    look quite as nice, but at least it works.
    Make everything fuel related an int
    Tag everything related to fuel and using double with DELETETHIS_
    Add mechanism for persisting pilots on jump; use for escorts
    
    This has the advantage that damage is persisted, and the same mechanism
    can potentially be used for other purposes (enemy ships in a mission).
    changed the way pirates and FLF spawn
    changed the way spawn position is chosen
    made mining more user-friendly
    Refuel for 101. units not 100., which should fix possible round off errors (closes issue #739).
    Made required changes
    Remove unused SystemFleet
    Use messaging API to command escorts
    Do not persists escorts set through Lua
    Remove PILOT_ESCORT flag
    
    Not used; can just test ->parent against 0
    Try to start merging leader concept into escort system
    
    Remove p->leader, and set p->parent and p->escorts
    Remove comm handlers for now
    
    This wasn't a very clean way of doing thinks, and is separable from the
    other messaging code. This can be done later.
    Replace pilot.handleMsg() with ai.messages()
    Implement pilot.setLeader() pilot.leader() and pilot.followers()
    
    This, plus the messaging API, should be just enough to allow fleet AI.
    Add optional "cond" argument to commRegister()
    Implement pilot.commRegister()
    Messaging API; still semi-broken
    got the traders to do convoys
    Made the AI handle the afterburner
    Simplify copying of pilot flags when creating pilot
    * Keep "board" with the old behaviour and introduce "boarding" with the
    new one.
    Add crude position interception for pilots
    
    This seems to be a woefully suboptimal method, but it works well
    enough to solve two autonav issues: Instant jump ships no longer get
    stuck orbiting jumps when they approach at a bad angle, and all other
    ships no longer brake-accel-brake when pushed off a jump by attackers.
    
    Braking distance is self-explanatory, and it's potentially useful in a
    number of places.
    Replace active cooldown key with autobrake
    
    This is another commit that ended up being larger than intended due to
    adjacent diffs. It can be broken down into three separate things:
    
    Autobrake is triggered by the same key that used to handle cooldown.
    On the first press, it triggers braking if moving, cooldown otherwise.
    If pressed while already braking, cooldown starts when braking ends.
    
    player_restoreControl is now the go-to function for aborting autonav,
    cooldown, and all other control-monopolizing states.
    
    Lastly, a number of VMOD(vel) < MIN_VEL_ERR calls have been replaced
    with a handy macro.
    Rework and optimize distress
    
    This was meant to be two commits, but the changed lines were adjacent.
    The main gameplay change here is that pilots will notice attacks that
    happen near them and react appropriately, regardless of whether the
    victim has broadcast a distress yet. This should make player piracy in
    inhabited systems significantly more difficult.
    
    The second part of this is a few small optimizations to pilot_distress,
    only running several of the checks if the player is the attacker.
    Explicitly track refueling progress to avoid dt error
    Replace ship mass with ship plus core outfit mass in most places
    
    The only notable exception is transport cost, because that would allow
    players to alter the cost by de-equipping their ship.
    
    As a side effect, this also encourages appropriate equipping, as ships
    with overly-light core outfits will overheat more quickly.
    Remove all traces of the vestigial non-shipstat nebu_absorb_shield
    Make pilot_validTarget externally-accessible
    Use XML-sourced weapon group in autoweap
    
    The lowest weapon group that an outfit appears in is cached, as it will be
    returned through Lua for use by the GUI
    Prevent nebula damage from resetting shield timers
    Use reverse thrusters for braking, if it makes sense to do so
    Change pilot->cpu to an int.
    This avoids the player being told they have -0 CPU and can't fly their ship.
    refactor the lua call for limiting a ships maximum speed
    add a lua call to limit a pilots speed
    Added nebu_absorb_shield shipstat
    
    Added nebu_absorb_shield shipstat, as well as a prototype outfit, nebula_shielding0,
    that uses it.  If a ship has nebu_absorb_shield, it will be applied to nebula damage
    in the same way that dmg_absorb is applied to normal damage.  Removed nebula_dmg_shield,
    nebula_dmg_armor, since they were presumably meant to do the same thing, but didn't
    have any real code attached to them in the damage calcs.  The Thurion Integrity will
    need to be updated, since it uses the old values, and since they didn't do anything,
    I have no way of knowing what -80 and -97 were supposed to mean in that context.
    I also added a nebu_absorb_armor shipstat as a placeholder, but it doesn't do anything
    yet.
    Made comments gender neutral, for accuracy
    * Cargo space should make sense (tm).
    Top-level comments should be outside the enums.
    Let's go more than a little enum-crazy.
    Replaced the pilot flag #defines with an enum.
    Remove a few pilot flags and replace them with counters in the pilot struct.
    Cooldown will automatically brake before starting.
    More unification and integration of the cooldown mechanic.
    Added a discrete cooldown mode for pilots.
    * Use camelcase for shipstat as to be expected.
    Revert to the simpler sensor range model.
    moved outfit off code into functions
    pilot detection and tracking uses relitivity.
    afterburners actualy burn when activated by weapon group.
    abstracted player_afterburn for all pilots
    afterburners actualy burn when activated by weapon group.
    abstracted player_afterburn for all pilots
    * Merge thingy.
    Silence a (tiny, infinitesimal) amount of gcc's -pedantic warnings.
    * Jammers now work.
    Fix some lies.
    * Made all the colours constant as they should be.
    * The path of consecutive numbering is mightier.
    In which we learn why assigning two flags to the same bit is a bad idea!
    more jump stuff
    * Added flag to make pilot invincible to the player's shots.
    * Moving to new weapon set type things, halfway there.
    * Added missile lockon hook.
    * Removed pointless legacy obsolete quantity from outfit slots (it was always 1 anyway).
    * Implemented jammers as per BTAxis wishes.
    * Variable fuel consumption.
    * Changed how stuff is handled and implemented.
    * Relative bonuses are applied after absolute ones.
    * Use the ship outfit slot as a reference and do not duplicate data.
    * Colouring of slots somewhat.
    * Moved getting price of ship to pilot_worth.
    * Fixed possible bug with credits_t.
    * Added dtimer accumulator.
    * No longer need hardcoded disable armour define.
    * Added pilot undisable hook.
    * Shared code for targetting enemies and pilots. This should fix lots of shit with invalid targets creating ai warnings.
    * Rough implementation of disable recovery.
    * Split disable code into a new function, prepare for disable recovery.
    * pilot.setHealth() now handles stress damage as an optional parameter.
    * Implemented ship stress.
    * Using fancy damage struct to prepare for generic disabling implementation.
    * Rough implementation of disable recovery.
    * Split disable code into a new function, prepare for disable recovery.
    * pilot.setHealth() now handles stress damage as an optional parameter.
    * Implemented ship stress.
    * Using fancy damage struct to prepare for generic disabling implementation.
    * Added API to get whether or not a missile is in an arc.
    * Using pilot_setTarget abstraction instead of setting the pilot directly.
    * Removed old missile lockon.
    * Cosmetics.
    Yet more whitespace fixes.
    Removed duplicate pilot colour determination code.
    remove duplicated includes
    
    Signed-off-by: Nicolas Kaiser <nikai@nikai.net>
    Many, many typo fixes.
    * Added pilot flag so it never dies, but does take damage.
    Remove trailing spaces in src/
    * Weapons only shoot when in range by default.
    * Pilots should no longer "jump dance".
    * Try to fix the bloody credits mess.
    * Credits are 64 bits for everyone.
    Added an 'exploded' pilot hook, which triggers as the final death explosion begins.
    Return distance when getting nearest pilot by distance or angle.
    Broke off some GUI code into separate functions, implemented mouse targeting for border indicators (pilots only for now).
    Forgot to commit new pilot flags for NoJump/NoLand.
    * Fixed pilot flags.
    Added pilot.setActiveBoard(), allowing a ship to be boarded while not disabled; minor Luadoc clean up.
    * Moved sensor and range code into the electronic warfare module.
    * Started to centralize the pilot ewarfare stuff.
    Heuristic targeting for size and HP. Damage still has an error.
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    * New time system. As seen on wiki.
    * Changed retarded stupid behaviour.
    * Changed internal representation of direction velocity and turn from deg/s to rad/s.
    Shields get a 200% regeneration boost when they come back online. Drops linearly to 0% over 3 seconds.
    * Shields take 5 seconds to start recoving once armour got hit.
    * Polished up the relative crew stuff.
    Add in heuristic targeting functions and energy management
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    here is my boarding android mod, right now, there are 2 models the mk I nad the mk2, which give you 20% and 35% more crew to increase your chance of success when boarding a ship.
    I'm still using the cargo_pod gfx, because i dont have any better graphics :X
    
    here is a summary of what i changed:
            modified:   dat/outfit.xml, added outfits Boarding Androids Mk I and II (tanks Deiz for the hillarious descriptions)
            modified:   dat/tech.xml,   added the Boarding AndroidsI&II to: High Tech Upgrades, Low Tech Upgrades; added Boarding Android Mk I to Basic Outfits 2.
            modified:   src/board.c,    changed board_tryStel(...) to use the modified crew value of the pilot and not the static one f the ship
            modified:   src/info.c,     changed ship_update(...) to use the modified crew value of the pilot.
            modified:   src/outfit.c,   added functionality to load <crew_rel> xml nodes .
            modified:   src/outfit.h    added variable double crew_rel to pilot.u.mod
            modified:   src/pilot.c     changed init to init the initial crew.
            modified:   src/pilot.h     added variable double crew to struct Pilot.
            modified:   src/pilot_outfit.c changed Pilot_calcStats stats to change pilot->crew acording to temp->u.mod.crew_rel
    Adds functionality for discriminating targets by size
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    * Implemented damage absorption, not set however.
    * Improved and tweaked the pilot_getNearestPos function to handle all situations better.
    * Added function to get closest pilot to a pilot from a position.
    * Made beam ids unsigned to make the population happy.
    * Implemented hilighting of pilots.
    * Optimized blend func a bit.
    * Added support for overriding ewarfare visibility.
    * Removed some unused cruft.
    * Seem to have fixed the fire rate bug.
    * Added all the heat framework.
    * Header for Heat stuff.
    * No idea what's going on.
    * Move pilot hook stuff into pilot_hook.[ch].
    * Separated the pilot cargo stuff into pilot_cargo.[ch].
    * Renamed some stuff to be more consistant.
    * You can now hold fire groups and they will shoot.
    * Added functionality to get all the onboard weapons.
    * Weapon sets are both saved and loaded properly.
    * Cleaned up all secondary stuff, moved to different secondary weapon system.
    * Fixed stupid bug.
    * Weapon sets can have names now.
    * Calculate weapon set ranges.
    * Code clean up, added concept of autoweap.
    Moved cargo-related API functions out of the player module and into the pilot module. They operate on any pilot now.
    * Start to create function to auto set the weapon sets.
    * Implemented weapon levels and fixed shootStop.
    * Added basic weapon set manipulation stuff.
    * Cleaned up headers a bit.
    * Split up pilot files a bit.
    Systems slot renamed to Utility.
    * You can now set pilot global hooks.
    Migrating from High, Medium, Low + Heavy, Standard, Light to Weapon, Systems, Structure + Heavy, Medium, Light
    * You can only equip outfits that fit slot size now, however there is no slot size indication.
    * Fixed memory access issues with pilot.clear().
    * Goto without braking should compensate velocity somewhat.
    * First simple implementation of electronic warfare.
    * Simulate system for 15 seconds before player enters.
    * NPC pilots now land.
    * Added pilot landing hook.
    * Removed hardcoded delays.
    * Changed how flags are handled so we can easily add more of them.
    * Pilots now lose presence when disabled or deleted.
    * Changed how the pilots are returned internally from spawn script.
    * Set per pilot faction presence.
    * Star length is now 250 like star buf.
    * Stars streak shorter, but faster
    * Tweaked it so the player enters at the appropriate jump point.
    * Moved nav_hyperspace and nav_planet to pilot instead of player struct.
    * Major refactoring of the pilot. It is now all contained in a struct.
    * Hitting secondary weapon but not shooting anything will not disable autonav.
    * Added API to clear pilot hooks.
    * Fixed pilots not having systemFleet updated.
    * Dead/disabled/left pilots reduce the used presence.
    * Fixed typo in comment.
    * Pilots should get their hooks removed properly now.
    * 64 bit credits for everyone \o/.
    * Better money handling, credits shouldn't overflow anymore.
    * Added concept of pilot overlay render.
    * Pilots now have text over their ships.
    * Fixes typos in commentaries by rudi_s.
    * Fixes typos in commentaries by rudi_s.
    * Implemented pilots hailing player.
    * Some player_message colouring.
    * Pilots now have idle and attacked hook when under manual control.
    * Added manual control for AI.
    * Fixed some long standing bugs in AI.
    * Decreased code footprint in nlua_pilot.c
    * Misc fixes.
    * Should fix an issue where the pilot hail hook changes pilot stuff and isn't represented in the comm window.
    * You can now make it so pilots don't get disabled.
    * Doxygen.
    * Implemented accuracy stats.
    * Stats are working again.
    * Do not warn if outfit can't be added through p:addOutfit().
    * You can now hook pilots being hailed.
    * Added invincibility status to pilots.
    * Added API to set pilot health or set noboard state.
    * Added sanity checks for both debugging and player loading.
    * Cleaned up code a bit.
    * More checks in pilot_addOutfit and pilot_rmOutfit.
    * Add player outfits ignoring CPU.
    * Turn rate should properly sync with mass changes.
    * Using setTurn and setThrust abstractions for pilots.
    * Use normal distribution for hyperspace time delays.
    * Changed how jump delay work, display them to player.
    * Converted commodities back to int.
    * Automatically reload outfits.
    * Fighter bays work again.
    * Changed how ammo is handled.
    * Fixed beam weapons.
    * Fixed adding of outfits.
    * Improved handling of mass.
    * Changed commodities to doubles.
    * Properly display ship stats in the equipment window.
    * Upping star deformation to 3 seconds to compensate faster stars.
    * Should avoid segfaults.
    * Compiles cleanly - nothing works.
    * Rough engine glow implementation.
    * Update player sound/zoom with new update function.
    * Using dt for pilot thinking/rendering.
    * Zoom should be gradual.
    * Do not allow changing ships when there are deployed ships.
    * You can now recover disabled fighters from your fighter bay.
    * Make escort structure more advanced.
    * Hook is unsigned int not int.
    * Added deployed counter and put beamid in union.
    * Now using RC circuit loading for energy.
    * Allow the pilot Lua API to ignore interference.
    * Radar also has stuff dissappear if out of range.
    * Sanitized all the sensor ranges, it should always be applied now.
    * Constness.
    * Cleaned up some Lua code.
    * Allow Lua API to change pilot AI.
    * Pilot hooks are no longer hardcoded.
    * Greatly cleaned up the hit code.
    * Pilots should properly react better in combat.
    * Pilots can refuel you now if you ask for it.
    * New keybindings to cycle through hostiles (forwards and backwards).
    * Implemented boarding for AI pilots.
    * Timers clear properly now.
    * No longer able to do weird things while dying.
    * Pilots should now help each other more.
    * Interference now affects targetting and communication.
    * Added concept of distress signals.
       * Ships under attack generate distress signals.
       * If someone gets the signal, and player is attacking player loses faction.
       * Limited by interference.
    * Fixed rare and elusive segfault bug in ai.
    * New firemodes, allows ships to shoot only turrets, forward mounts or both with primary weapons.
    * Move ai to use firemodes.
    * Improve bomber code.
    * Moved fleet stuff out of pilot.[ch].
    * Should sanitize some how pilots react to taking damage.
    * More robust checking of ship hostileness.
    * Missions now enforce hostile/friendly status in some missions.
    * Added pilot_rmHostile.
    * music_choose now accepts NULL as a parameter.
    * Have player keep track of hostiles it has in system.
    * Made function static for minor optimization.
    * Mountpoints implemented for turrets.
    * Removed all non-dt timers from stuff that should be dt based.
    * Converted the outfit timers to the dt system.
    * Some clean up.
    * Make sure AI doesn't run when entering hyperspace.
    * Now jet cargo when cargo mission fails.
    * Fixed mission cargo not properly moving when changing ships.
    * Using unsigned int for prices instead of signed int.
    * Fixed flag overlap typo.
    * Implemented bribing.
    * Added ai.isbribed().
    * Fixed major outstanding bugs in flag usage.
    * Fixed major outstanding bugs in weapon_hit stuff.
    * Added target_prev keybind.
    * Tweaked entire hyperspace distance system to be more sane.
    * Fixed some escort ai issues.
    * Escorts can now return to ship.
    * Added much more escort stuff.
    * Removed useless target parameters.
    * Moving to target on pilot structure.
    * Allow passing parameters to pilot ai on creation.
    * Small correction tweaks.
    * Your secondary weapon greys out when you can't use it again yet.
    * Added explosions.  Currently only used on pilot deaths.
    * Fixed Pilot boarding hooks.
    * Pilots can now have up to 4 hooks at one time.
    * Added pilot "jump" hook.
    * Added pilot_getAmmo.
    * Player can now abort jump sequence.
    * First patch to bring more control to beam weapons.
    * Beams use energy properly now.
    * Added outfit states.
    * Added beam hit function - not working properly yet.
    * More doxygen.
    * Improved some of the shooting handling.
    * Added a lot of doxygen.
    * More doxygen and code cleanup.
    * More doxygen.
    * More doxygen.
    * Added pilot death explosions.
    * Improves enemy ai: they hit a lot now.
    * Improves turret ai: should also hit a lot now.
    * Improved the global attack() ai.
    * Updated TODO.
    * Can now override pilot AI in a fleet.
    * Made fleet_parse() more up to date with xml.h.
    * Unified colouring schemes.
    * All factions you are enemies with will appear as hostile too.
    * Jammers implemented.
    * Sanitized the pilot_get*.
    * Player can target nearest pilot with 't'.
    * Cargo window works, can jettison cargo now.
    * Pilots now keep track of how many weapons are locked onto them.
    * Added two new pilot hooks: board and disable.
    * Made lua debug macros more verbose.
    * Code cleanup.
    * Fixed up new player stuff cleaning stuff.
    more comments, fixed potential issues with reallocs
    switched from damage_armour and friends to just damage and damagetype
    new philosophy, when you swap ships your cargo stays with you, will fix issues
    TODO update and added title parameter to pilot for future compatibility
    some code cleanup, and made map more sane (and colour coded!)
    fuel used ingame now
    preparing for adding fuel into game
    you can sort of load games, still need to fix issues though
    implemented pilot hooks with the "death" hook as an example
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    mission tracks cargo and makes sure you have it
    introduced the concept of mission cargo - not-tradeable
    more functions, fixed invalid memory free
    major improvement -> use ids for factions instead of pointers
    added alot of your ships stuff and cleaned up some code
    branch:      naev
    player gets all the ships he buys saved in a stack, just need to be able to change them
    branch:      naev
    added pilot_copy function
    branch:      naev
    pilots get disabled at 30% not 20% (easier to board)
    branch:      naev
    added afterburners
    branch:      naev
    modifications actually work now :)
    branch:      naev
    can now buy/sell cargo, minor fixes
    branch:      naev
    big update, ai now controls ship's credits/loot, more API, pilot cargo stuff
    branch:      naev
    assorted hyperspace cosmetic fixes
    branch:      naev
    tweaked the star deformation while hyperspacing
    branch:      naev
    no longer can get negative outfit quantity
    branch:      naev
    make money selling stuff, and more buying stuff checking
    branch:      naev
    changed some player variable names, immproved outfit buying/selling
    branch:      naev
    can now buy outfits
    branch:      naev
    some code optimization, pilots now use temporary sprite values
    branch:      naev
    added mule ship to actually use turrets :)
    branch:      naev
    enemy pilots can now die
    branch:      naev
    can only board once, can steal credits :)
    branch:      naev
    spoke too fast, star deformation length now defined
    branch:      naev
    perfected hyperspace visuals
    branch:      naev
    C correctiveness patch
    branch:      naev
    added player_name
    added combat rating which is based on mass of pilots killed
    branch:      naev
    added pushback effect for weapons
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] rough sound seems to be working now without flaws
    branch:      naev
    [svn] added sound support base, for some reason seems to crash the game alot
    not in usage
    branch:      naev
    [svn] added more sounds
    sound engine should be working ,but isn't tuned enough yet
    branch:      naev
    [svn] prepared for the upcoming toolkit_list
    fixed some sanity around turning pilot functions, now in pilot_face
    added basic rough on the edges hyperspace implementation
    branch:      naev
    [svn] windows now get a name embedded
    added empty commodity exchange
    tried to sanitize secondary weapon/weapon shooting
    changed pilot stack and star stack to not lower memory allocation
    fixed landing/takeoff to actually affect the system
    branch:      naev
    [svn] added fuel concept
    added News window
    branch:      naev
    [svn] Added planet targetting and landing framework
    split update / render completely into two different functions (for toolkit)
    branch:      naev
    [svn] switched to commonwealth spelling (armor -> armour)
    implemented seeker missiles and ammo
    implemented secondary weapons
    branch:      naev
    [svn] Cleaned up some funky old code
    Added possibility to disable ships (no death yet)
    New data specific file start that allows the player's starting pos and such to be defined
    branch:      naev
    [svn] more ai functions
    some ai tweaks
    more ai protection
    branch:      naev
    [svn] multiple enemies now supported
    bug fixes
    you can get other ship's health now from AI
    branch:      naev
    [svn] fixed silly hostility bug
    branch:      naev
    [svn] some cosmetic changes
    misc minor fixes
    branch:      naev
    [svn] added timer support for the AI
    fixed major buffer overflow in AI
    branch:      naev
    [svn] control_rate no applies properly
    targetted pilot will appear over others
    branch:      naev
    [svn] bug fixes
    support for different AI Profiles
    branch:      naev
    [svn] more ai API
    ai now responds on being attacked
    branch:      naev
    [svn] faction system almost fully implemented
    fleets almost fully implemented (just need randomized start positions)
    major bugfix in weapon.c
    branch:      naev
    [svn] much more error checking in the xml
    fleets are built in - just need to do something with them
    minor tweaks and fixes
    branch:      naev
    [svn] targetting added
    fancy UI fixes
    branch:      naev
    [svn] added basic gui framework
    branch:      naev
    [svn] some new pack features (list files)
    radial collision detection
    proper adding of the shooting system all about
    branch:      naev
    [svn] missing weapon.c/weapon.h
    more pilot modularity
    layers work properly
    branch:      naev
    [svn] rudimentary shooting system, needs work
    branch:      naev
    [svn] outfit loading, not properly used yet
    branch:      naev
    [svn] improved ai API
    fixed minor memory leaks
    cleaned up a bit
    branch:      naev
    [svn] added star system support/loading
    added planets
    more minor tweaks and fixes
    general happiness
    branch:      naev
    [svn] moved everything to directories
    cleaned up Makefile
    improved AI
    branch:      naev
    [svn] temporary commit before playing with cpio
    branch:      naev
    [svn] minor fixes
    dynamic keybind loading from configuration file
    sample configuration file added
    branch:      naev
    [svn] cosmetic changes, minor fixes
    branch:      naev
    [svn] minor tweaks
    creation of start of AI infrastructure
    branch:      naev
    [svn] more files yay
    branch:      naev
    [svn] just uploading working copy
    branch:      naev
    [svn] working libxml at ship.c
    fixed all memory leakage
    branch:      naev
    [svn] good blitting system, pilot/ship outline
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    Use new __RW system and nlua_register() everywhere
    Make background script use global lua state
    Correction to my earlier library loading hack; use it in evt and misn
    
    I forgot about this...
    Run console in global lua state
    Add types to lua api docs, and other documentation improvements
    Replace LuaColor with glColor
    Replace LuaTexture with glTexture**
    Remove trailing spaces in src/
    lua headers are system headers, include them that way
    * Made it so there's two background layers, front and back. This is just position relative to stars.
    * Backgrounds push an id (not usable... yet!).
    Luadoc fixes.
    Luadoc fixes.
    * Commentaries.
    * Fixed colour tinting for background images.
    * Luadoc.
    * Added lua bindings for background functions.
    Don't allow the ship computers to access info the player doesn't have
    
    Namely,
    1. AutoNav shouldn't disable until a hostile ship's identity is no longer hidden
    2. Targeting hostile ships shouldn't select ships who's identity is hidden.
    Added an individual escort orders menu (suggested in #1051).
    Added a special conditional for the player's escorts being hailed.
    
    Right now it just prevents the escorts from being hailed. In the
    future, as has been mentioned, this should probably instead open
    a dialog for issuing individual orders.
    
    Fixes #1051
    Get rid of some uninitialized warnings.
    Don't show faction logo in comm channel for unknown factions.
    Changed comm name color from black to white.
    
    Fixes #1098.
    Removed the ugly uses of cDConsole as a color for headers.
    
    Replaced those all with black; headers don't need to be a different
    color and it honestly looks nicer without one.
    Fixed friendly/hostile setting.
    
    The previous system was very hodge-podge and had a lot of duplicated
    checks, leading to some inconsistent behavior. I've consolidated all
    checks to the setHostile / setFriendly / isHostile / isFriendly
    functions.
    
    This fixes a bug where a pilot that was set as friendly but became
    hostile due to aggression was impossible to target with the "target
    nearest hostile" button.
    Make everything fuel related an int
    Tag everything related to fuel and using double with DELETETHIS_
    Fix refuel message
    GNU gettext is able to recognize PRIu64
    More gettext fixes and translations.
    Changed escape code for colors from '\e' to '\a' so xgettext plays well with it.
    More gettext.
    Remove comm handlers for now
    
    This wasn't a very clean way of doing thinks, and is separable from the
    other messaging code. This can be done later.
    Remove i++
    Add optional "cond" argument to commRegister()
    Handle return value of nlua_pcall
    Implement pilot.commRegister()
    Compiles now; runtime errors (and still  only ai.c)
    Make LuaPilot an int instead of a struct, simplifying things
    Moved checks for alliance or hostility to player into Lua code.
    
    This makes it much more flexible, and also allows translations.
    Currently, the actual behavior is unchanged.
    Combine ai_extra.h into ai.h
    
    Use forward declaration of struct to deal with cyclical import.
    Strip trailing whitespace
    Fix a few issues discovered by Clang
    * Try to not segfault if ship is lacking comm graphics.
    * More comm shouldn't segfault because pilot has no ai checks.
    * Don't segfault if pilot doesn't have an ai when hailing.
    * Changed comm behaviour to run hail hook before creating window.
    * Made all the colours constant as they should be.
    * No longer segfault when trying to hail a planet.
    whitespace
    hailing planets now checks to see if the planet is in range.
    unpredictably causes segsegv. unknown cause, but I don't think its my code
    * Manually controlled pilots will never refuel anymore.
    Fixed the way the comm window displays non-square images. Do the Slim GUI's resizing in the same manner.
    Whitespace, typo and general style cleanup.
    Fix truncation and centering issues in the comm window.
    Restricted planets should be bribable when non-hostile.
    * Fancier behaviour, more explicit.
    * Basic implementation works, probably quirky all over.
    Many, many typo fixes.
    Remove trailing spaces in src/
    * Pilots should no longer "jump dance".
    * Cheap hack, you can always respond to autohail.
    * Fixing misc issues.
    Print a warning when attempting to hail an out-of-range target, rather than returning silently.
    * Fixed player.commClose().
    * Can't hail unknown pilots.
    * Doxygen typo.
    * Luadoc.
    * Added API to immediately close a comm window after it opens (for use with hail hooks).
    * Fixed factions being marker as hostile when are neutral in comm window.
    * Moved to more flexible hook parameter framework.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Try to avoid segfaults when a ship has no comm graphic.
    * Can close the comm window with escape.
    * Added hook infrastructure for returning parameters.
    * Added generic "board" and "hail" hooks.
    * Toolkit image widget now has dimensions parameter.
    * Hailing planets no longer has them take up more than the window.
    Hail function now destroys the window if it's present (Like map, info window.)
    * Fixed some segfaults.
    * Major refactoring of the pilot. It is now all contained in a struct.
    * Should stop hyperspacing when requesting refuel.
    * Removed pilot chance.
    * Using new scheduler.
    
    Currently does not respect cap or spawn at start.
    * Fixed major flaws in the last credit patch.
    * Better money handling, credits shouldn't overflow anymore.
    * Some changes to coloring for player messages.
    * Implemented pilots hailing player.
    * Services are more specifically defined now.
    * Fixed issues found by the reenabling of the warnings.
    * You can't talk to a pilot while he's jumping.
    * Pilots will break out of jump preperations to refuel.
    * Added manual control for AI.
    * Fixed some long standing bugs in AI.
    * Decreased code footprint in nlua_pilot.c
    * Misc fixes.
    * Should fix segfault in comm_pilot.
    * Should fix an issue where the pilot hail hook changes pilot stuff and isn't represented in the comm window.
    * Attempt two to fix off-by-one render.
    * Fixed off-by-one rendering glitch.
    * Fixed some logos not rendering properly in comm.
    * Handle 0 price refuels better.
    * You can now hook pilots being hailed.
    * Can't open small menu when comm menu is open to avoid possible segfaults.
    * Bribed pilots show neutral in communication.
    * Fixed minor bug
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * New bribe cost function for planets.
    * Implemented planet bribing.
    * Code clean up.
    * Empire now sometimes refuels.
    * AI can decide not to refuel.
    * Pilots can refuel you now if you ask for it.
    * Fixed memory leak.
    * Fixed bribing.
    * Cleaned up communication some.
    * More robust checking of ship hostileness.
    * Missions now enforce hostile/friendly status in some missions.
    * Don't always preload comm graphics for ships.  Load only as needed.
    * Added pilot_rmHostile.
    * music_choose now accepts NULL as a parameter.
    * Even more doxygen.
    * Doxygen fixes.
    * Using unsigned int for prices instead of signed int.
    * Can only bribe each pilot once.
    * Gave AI customizeable bribe messages.
    * Fixed some rough edges around bribing and communication in general.
    * Added math lib to basic nlua.
    * Added ai.shipmass()
    * ai.shipclass now can take a pilot id as parameter.
    * Bribe amount is stored in mem.bribe in pilot's ai.
    * Implemented bribing.
    * Added ai.isbribed().
    * Fixed major outstanding bugs in flag usage.
    * Fixed major outstanding bugs in weapon_hit stuff.
    * Major upgrade adding all sorts of new featurse to communication window.
    * Major toolkit change to simplify things a lot, makes it more object oriented.
    * Added communication framework.
    Sprinkle in some array_create_size usage
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Added ship rarity field.
    Fixed minor memleak.
    Ships can also use graphics overlay now.
    Added translation targets for ALL the xml.
    More translation thoughout the game.
    Warnings.
    Check for file existence of PLG in the ndata.
    added warning for polygon length (and added new collision algo to changelog)
    warn when there is no polygon
    Fix some memory leaks
    update on polygon collision
    polygonal collision algorithm
    fixed some clang warnings
    Remove all C code meant to support SDL < 2.0.0
    Reverted to required time_mod element.
    Added default calculation of time_mod.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Fixed a warning showing up.
    Added support for loading arbitrary images as ship graphics.
    
    Three new possible tags have been added to ship XML files:
    "gfx_space", "gfx_engine", and "gfx_comm". These allow you to define
    ship graphics outside of the normal ship graphics tree. I've tested
    the new tags, and there are no problems; ships with graphics defined
    in this way load just the same as with the GFX tag (which is still
    preferred for most ships, for the sake of brevity).
    Split off the loading of ship images into two separate functions.
    Make everything fuel related an int
    Tag everything related to fuel and using double with DELETETHIS_
    More gettext.
    Using ngettext for plurals.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Strip trailing whitespace
    Rebalance the Collective Heavy Drone as a heavy fighter
    Fix a few issues discovered by Clang
    Added caching for texture transparency maps
    
    When loading a texture that requests transparency mapping, the PNG data
    is hashed (MD5). If the cache dir has a file matching the MD5 hash, and
    its size is correct, it's loaded instead of generating the transparency
    map from scratch.
    
    If a cached map doesn't exist, the generated one will be written to the
    cache directory.
    Replaced fuel_consumption stat with fuel_consumption characteristic.
    
    fuel_consumption is a flat variable, but ship stats are clearly
    meant to be midifiers. This resulted in the game telling the player
    that fuel_consumption was a modifier. It's now a (mandatory)
    characteristic of the ship instead. This also avoids the problem of
    the arbitrary 100 fuel default consumption.
    
    Ships haven't been updated yet. That will be done next commit.
    
    I also removed a bunch of ship info from the shipyard that is
    outdated (i.e. characteristics that are no longer used, and that are
    now determined by outfits and ship stats).
    Fixed the "slots not loading exclusive bit properly" bug
    Made slot flags read from the xml if they are present there
    
    They were read just from the slot type info before.
    * Fixed crash in release mode.
    * sizeof(char) is always 1. No need to keep it around.
    * Fixed many minor memory leaks.
    Added a ship tag to avoid false-positives in in-sanity and clean up NSH's output.
    remove unused #defines
    * Try to not segfault if ship is lacking comm graphics.
    * Added option to disable engine graphics from ship.
    * Merge master into slots, part deux.
    * More memleak fixage.
    * Clean up and defense programming yadda yadda.
    nfile_* functions do not work with ndata.
    * Some fixes to ndata loading and sanity.
    * New planets get a nonzero radius.
    * Update radius when updating gfx.
    * Moved various path defines into ndata.h.
    * Wrapper for nsnprintf being used all over.
    * Load ships from laid out data.
    * cap_cargo => cargo.
    * Made all slot and outfit sizes explicit.
    * Renamed "light" and "heavy" sizes "small" and "large" respectively.
    * Warn about implicit slot sizes for ships.
    * Added basic performance stats (not functional yet).
    
    Conflicts:
    
            src/ship.c
    * Required slots require default outfits now.
    * Do not warn about 0 cargo base ships.
    * Ships take into account the default outfits they can have when buying (for price).
    * Allow longer ship descriptions.
    * Danger when doing something like l += snprintf(&buf[l],MAX-l,...) as the size member is size_t and it will overwrite and fuck everything up.
    * Added basic performance stats (not functional yet).
    * Less warny about ships.
    * Uniformity, renaming cap_cargo cargo.
    * Implemented maximum engine limits for ships.
    * Slots are now handled separately in xml.
    * Respect properties when equipping.
    * Moved outfit property to the outfit slot itself.
    * Free slot properties.
    * Implemented ship properties and stuff, although not actually used yet.
    * Should behave the same as before now.
    * Seems to work.
    * Better handling of stats, not entirely working yet.
    * Initial commit of ship stats, doesn't really do anything new yet.
    * Recharge rates in XML are now per second, not per minute.
    Minor fixes and dead code clean-up.
    Minor fixes and dead code clean-up.
    Many, many typo fixes.
    * Fixed new gcc -Wunused-but-set-variable warnings.
    Allow separate nebula damage modifiers for shield and armour.
    * Nebula resistance should be nebula damage.
    * Added nebula resistance.
    * Try to fix the bloody credits mess.
    Comment the unneeded variables, too.
    Commented out the scanline effect.
    * Sort by names as tie-breakers.
    * Implemented more ship stats.
    * Added ship_existsCase.
    * Changed internal representation of direction velocity and turn from deg/s to rad/s.
    * Changed obsolete accuracy mods to heat mods.
    * Fixed damage absorption being 100x too large.
    * Ships now load damage absorption.
    * Strict error checking for ship stats (including for mod outfits).
    * More strict node name checking for ships.
    * Stupid copy & paste error.
    * Removed minor memory leak.
    * Store graphics are fixed 128x96 pixels, however target graphics no longer have a limit.
    Systems slot renamed to Utility.
    * Return NULL instead of invalid memory when ship_get fails.
    * Better error handling and creating fake texture names so they can be stored and duplicated.
    * NAEV should work with ndata again.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    Migrating from High, Medium, Low + Heavy, Standard, Light to Weapon, Systems, Structure + Heavy, Medium, Light
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * Simple initial implementation of slot size visualization in the shipyard.
    * Use non-modified target graphic variant for stores.
    * Set default slot sizes for ships based on class.
    * Ships check for outfit slot sizes too.
    * You can now generate ship csv too.
    * More targetting tweaks.
    * Fixed wrong values for targetting graphics.
    * Now targetting graphics look sexy.
    *
    * Added RGB->HSV routines.
    * Manipulate targetting graphics in HSV space.
    * Try to make the targetting graphics look good.
    * Made targetting graphics look better.
    * Renders target graphics differently now, it's a start.
    * Started to work on the targetting graphic framework.
    * Improved heavily how opengl textures handle memory.
    * Added ship stats for ew_detect and ew_hide.
    * Moving unidiff to new tech system.
    * Fixed tech loading.
    * Fixed tech saving.
    * Added test tech.
    * Initial commit of tech stuff.
    * Interpolation should disable loading of interpolation graphics.
    * Fixed minor inoffensive memory leaks.
    * Use less misleading name.
    * Fixed more warnings.
    * Added ship base types as per BTAxis' proposal.
    * Fixed more potential bugs.
    * Implemented energy usage modifiers for turrets/forward.
    * Fixed some display glitches related to stats.
    * Prepared the ground for more stats.
    * Implemented accuracy stats.
    * Fixed minor memory leak.
    * Generate stats of pilot based off of pilot.
    * Make ship stats desc rendering a bit more sane.
    * Only display stat if it makes sense.
    * Using more generic functions for ShipStats stuff.
    * Moved shipstats to outfit.h.
    * Added many more stats.
    * Initialize stats.
    * Improved nxml onlyNodes API.
    * Events also check for unknown nodes.
    * Properly loading ship stats.
    * Detect bad nodes in ship.
    * Added option to disable engineglow.
    Minor documentation correction.
    * Replace ship_stack with the new array library.
    * Ship base price does not include outfits.
    * Ships don't regenerate armour without outfits now.
    * Use qsort() to sort shipyard ships.
    * Sort player ships by price inversely.
    * You must specify modification cpu value as negative.
    * Fixed bug in displaying low outfit overlay.
    * Modified it so some things do display with one decimal.
    * More decimal removal.
    * Added more information to ship window.
    * You can now actually add and remove outfits.
    * Fixed another segfault.
    * Fixed more segfaults.
    * Some better handling of things.
    * Compiles cleanly - nothing works.
    * Fixed comm graphics.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * Properly implement engine glow.
    * Mipmaps for engine glow sprites.
    * Rough engine glow implementation.
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * Use mipmaps for stuff that is scaling now.
    * Added gl_printHeightRaw - should avoid some segfaults with formatted strings from Lua.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Don't always preload comm graphics for ships.  Load only as needed.
    * Doxygen.
    * Code clean up.
    * Mount y position is now properly in pixels.
    * Warn if ship has no mounts.
    * Fixed the mounts offset due to the ortho projection.
    * Mountpoints implemented for turrets.
    * Cosmetic code changes.
    * Added flags to image creation to control transparency mapping.  Should speed up theloading some and reduce memory usage.
    * First large ndata patch.
    * Moved xml.h to nxml.h.
    * Added more complicated xml parse functions in nxml.c.
    * Code clean up and optimizing.
    * First patch to try to add a dynamic economy.  Economy is static atm.
    * Some code clean up.
    * Fixed a memory leak.
    * First implementation of Licenses.
    * Major rewrite to xml.h increasing sanity checks.
    * Gui can now handle overlays.
    * Add check for negative ship price.
    * Fixed typo: Luxery -> Luxury.
    * Major upgrade adding all sorts of new featurse to communication window.
    * Major toolkit change to simplify things a lot, makes it more object oriented.
    * Reduced calls to xmlCleanupParser(), only one for all the loading now.
    * Made ship_classFromString non-static.
    * Made toolkit_getList apply to Image Arrays too.
    * Use image arrays in shipyard.
    * More doxygen.
    * Revamped the ship classes.
    * Doxygenization.
    * Ships now use human readable class strings instead of numbers.
    * You can now sell your ships.
    * Thrust is per ton to make any sense.
    * You can now specify target graphic different then normal gfx.
    * Few more comments.
    * Renamed ships to ship_nstack following the current convention.
    * ship_getTech now sorts by price too.
    added fuel info to ship information
    preparing for adding fuel into game
    started :retabbing (spaces only) and fixed some xml issues
    branch:      naev
    added player_ships and player_getShip to manipulate player ships
    branch:      naev
    fixed minor memory leaks
    branch:      naev
    added more ship types
    branch:      naev
    implemented special techs
    branch:      naev
    preliminary tech support (only raw, no special tech yet)
    branch:      naev
    missed a free()
    branch:      naev
    improved  alot of things for shipyard, including shipyard
    branch:      naev
    You can now visualize the ship well, as well as get a description in the shipyard
    branch:      naev
    more list support, more shipyard features, allow NULL text in widget
    branch:      naev
    gave outfits/ships prices
    branch:      naev
    capitalized loading debug
    branch:      naev
    compressed the debug messages
    branch:      naev
    some code cleanup (MELEMENT sanity)
    added information and ship spec windows
    some more comments here and there
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] added more sounds
    sound engine should be working ,but isn't tuned enough yet
    branch:      naev
    [svn] Basic toolkit implementation (but ugly)
    Basic landing
    Pause bugfixes
    branch:      naev
    [svn] switched to commonwealth spelling (armor -> armour)
    implemented seeker missiles and ammo
    implemented secondary weapons
    branch:      naev
    [svn] combined xmlness in single header file
    rewrote player.c to use new xml syntax
    branch:      naev
    [svn] GUI are now saved in XML datafile
    this allows multiple guis
    each ship can have it's own GUI too :)
    branch:      naev
    [svn] much more error checking in the xml
    fleets are built in - just need to do something with them
    minor tweaks and fixes
    branch:      naev
    [svn] added faction support
    documentation tweaks
    branch:      naev
    [svn] targetting added
    fancy UI fixes
    branch:      naev
    [svn] added basic gui framework
    branch:      naev
    [svn] lasers fade out
    minor tweaks
    fixed all memleaks
    just need some collision detection now
    branch:      naev
    [svn] rudimentary shooting system, needs work
    branch:      naev
    [svn] outfit loading, not properly used yet
    branch:      naev
    [svn] added star system support/loading
    added planets
    more minor tweaks and fixes
    general happiness
    branch:      naev
    [svn] checks ship syntax
    fixed 'Mr. Test' xml
    branch:      naev
    [svn] xml now loads from data
    branch:      naev
    [svn] ship validity checking, thus spoke Zan
    branch:      naev
    [svn] repo went crazy for a bit
    branch:      naev
    [svn] minor attempt to fix bug
    branch:      naev
    [svn] moved everything to directories
    cleaned up Makefile
    improved AI
    branch:      naev
    [svn] cosmetic changes, minor fixes
    branch:      naev
    [svn] gl_print the printf for opengl now works! :)
    branch:      naev
    [svn] just uploading working copy
    branch:      naev
    [svn] working libxml at ship.c
    fixed all memory leakage
    branch:      naev
    [svn] good blitting system, pilot/ship outline
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    * Fixed bug in RNG_1SIGMA and improve accuracy for other RNG_#SIGMAs as
    reported by Thunk.
    * Added RNG_3SIGMA() for completion.
    * Using confidence intervals from macrso now.
    * Doxygenized rng.[ch].
    * Now using normal distribution for accuracy on weapons (clamped).
    * Made RNG() more robust.
    * Big fancy new "cloud" generator in place, will need heavy tweaking.
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    fixed bug
    improved lua api for missions by alot
    a bit of cleanup
    now using mersenne twister instead of rand()
    branch:      naev
    enemy pilots can now die
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] lasers fade out
    minor tweaks
    fixed all memleaks
    just need some collision detection now
    branch:      naev
    [svn] moved everything to directories
    cleaned up Makefile
    improved AI
    branch:      naev
    [svn] moving background
    improved opengl workings
    minor tweaks
    branch:      naev
    [svn] more files yay
    Fixed size problem.
    
    Thanks bobbens for telling me what was wrong; I was totally lost here.
    Moved out finding key display names to input.c.
    
    For next commit.
    made autonav follow ships
    Remove SDL1 compatibility -D CLAGS, and sed so they aren't used
    Add support for joystick hats
    made mining more user-friendly
    Overhaul mouse targeting
    
    The overlay now uses the same click-handling code that everything else
    does. Proper fallthrough has been implemented as well, so that a click
    on the radar can still target a ship underneath the radar, etc.
    
    Left click is now used for the majority of actions, with the exception
    of autonav. Autonav is now exclusively engaged via right-click.
    Add WASD key bindings by default.
    
    The arrow key-centric bindings are still present, and if desired can be
    set through the options menu.
    Implement basic double-click detection and use it for mouse targeting
    * Fixed keybindings with SDL2.
    * Allow disabling all keybinds too.
    * Can enable or disable keybindings.
    * Mouse cursor will auto-hide after a bit and be available when flying around.
    * Sanitized mouse hiding/showing so it doesn't dissappear in some cases.
    * Fixed rudi_s tab change keybindings.
    * Better handling of modifier keys, merging lctrl/rctrl into ctrl and such.
    * Added key repeat to toolkit (barely used).
    * Added naev.getKey() Lua binding.
    * Keybinds warn you when you set them so that they overlap.
    * Removed casting.
    * Much better handling of joystick axes.
    * Doxygen.
    * Code clean up.
    * You can now set keybindings by key name.
    * More keybindings updates.
    * You can now find out about your keybindings.
    * You can now view what keybindings do what.  Not finished yet.
    * Doxygen.
    * Added support for key modifiers.
    fixed acceleration sticking sometimes
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] pulled input out of player, file was getting too big
    more preperations for the toolkit
    Remove all C code meant to support SDL < 2.0.0
    More gettext.
    * Initial work to get everything running on SDL2.
    Prune trailing whitespace.
    Whitespace, typo and general style cleanup.
    Typo fix.
    * Compaction.
    * Possibly more clear.
    * Fixed hardlock if dequeue fails.
    * Comments.
    * Added clean up (unused) for threadpool.
    * Whitespace.
    * Whitespace.
    * Better doxygen.
    * Fixed mutex being destroyed too soon.
    * Minor paranoia.
    * Misc fixes and correctness.
    * Minor correctness.
    * Comments.
    * Don't use a direct link, it's ugly.
    * Whitespace.
    Many, many typo fixes.
    * Spelling isn't bobbens' fortee.
    Remove trailing spaces in src/
    * Shouldn't crash and burn when generating nebula now.
    * Something weird happened.
    * Minor cosmetics and such.
    * More tweaks.
    Changed a few comments
    * Cosmetics.
    * Commented and cleaned up thread code.
    * Do not fear the pointers - no pointer hiding!
    * More cosmetics.
    * Cosmetics.
    * Cosmetics.
    Fixed the busy-wait
    Put in busy-waiting in tq_dequeue
    
    I put in busy-waiting in tq_dequeue. I think it's only a problem of
    enqueues not propagating to the dequeuing thread's cache fast enough.
    * Cleaned up code a bit.
    * Use calloc just in case.
    Apparently there's an SDL_GetError()
    
    I use it in WARN() to print the error-type.
    Ok, I made some mistakes in last commit.
    threadpool now kinda-handles SemWait-failures.
    
    In a very bad way. I don't know what to do, really.
    Added additional checks in threadpool.c
    
    I now WARN() if SDL_SemWait() fails. It is really bad if that happens,
    but I don't know how to handle that kind of error yet.
    Commented the structs in threadpool.c
    Done commenting.
    Halfway done with comments in threadpool.c
    * Code clean up and fixed all threadpool warnings.
    Merged the threadpool and changed perlin to use the threadpool.
    Initial work on merging my threadpool into naev.
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Uniformized the "Out of Memory" message variants.
    More gettext.
    * Wrapper for nsnprintf being used all over.
    * cppcheck fixes.
    * Fixed 1D turbulence noise.
    * Made macros a bit more robust.
    Remove trailing spaces in src/
    * Fixed new gcc -Wunused-but-set-variable warning.
    * Do not fear the pointers - no pointer hiding!
    * More CLANG fixes.
    * Exposed some default parameters for noise.
    * Made noise stuff public.
    * Added 1d noise stuff.
    * Added 1d simplex noise.
    Merged the threadpool and changed perlin to use the threadpool.
    * Doxygen.
    * Defensive coding.
    * Fixed minor memory leak.
    * Fixed warning.
    * Fixed warning.
    * Fisherman threaded the perlin 3d noise generation algorithm to speed up nebula generation.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Fixing really minor possible segfaults and other misc issues detected with scan-build.
    * Nebulae is plural, changed it all to nebula.
    * Made savegame more robust when loading inexistant missions.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Retab.
    * Seems like zid is a genius at optimizing nebulae generation.
    * Minor formatting.
    * Whitespace.
    * Minor commentary update.
    * Introduced the concept of FleetGroups.
    * Even more doxygen.
    * Doxygen fixes.
    * Interference is generated and renders wonderfully, needs internal mechanism first.
    * Code clean up.
    * Some refactoring for 2d/3d fractals, should speed up the puffs.
    * Doxygen.
    * Removed execution permissions on some source files.
    * Nebulae puffs now look cosmetically pleasing.
    * Restructuring to prepare for nebulae puffs.
    * Moved some code from perlin.c to nebulae.c .
    * Fixed perfectly, tweaked some more.
    * Should be fully fixed by now.
    * Almost working nebulae except for a major graphical glitch.
    * Some clean up.
    * Hardcoded everything to have 3 dimensions.
    * Some SSE stuff for speedups.
    * Debug information on time it takes to generate nebulae.
    * Added nebulae generation code (not used atm).
    * Optimizations.
    * Some moving around in the perlin.[ch] files.
    * Big fancy new "cloud" generator in place, will need heavy tweaking.
    Made it so that overlay text is always partially transparent.
    
    This prevents the text from having outlines. A temporary fix for a
    problem where the outlines were obscuring other parts of the overlay
    map, but ultimately the overlay map should be redesigned so it doesn't
    have text clobbering together all over the place. I'm not sure what
    the solution is right now though, so fixing it this way for now.
    More gettext.
    corrected a crash, added radar display of asteroids and display on map editor
    Manually translate overlay coordinates
    
    It seems that doing the translation via OpenGL results in text mangling
    at certain resolutions, so it makes more sense to do it manually.
    Overhaul mouse targeting
    
    The overlay now uses the same click-handling code that everything else
    does. Proper fallthrough has been implemented as well, so that a click
    on the radar can still target a ship underneath the radar, etc.
    
    Left click is now used for the majority of actions, with the exception
    of autonav. Autonav is now exclusively engaged via right-click.
    Properly prevent exit-only jumps from being targeted
    * Hidden jump points can now be detected by ships that have the "hidden jump detect" ship stat.
    * Added a hidden jump scanner (activated) that provides said stat.
    * Ignore overlay input when the pilot is jumping.
    * Cosmetics.
    Right-clicking on jumps in the overlay will engage autonav, too.
    Added autonav-to-planet to the overlay. Doesn't do anything autonav-to-pos can't, but it's fancier.
    player.cinematics() will also close the overlay.
    Axed player_valid* sanity check functions.
    
    One was just a clunky wrapper around jp_isKnown(), and it turns out a non-real asset will never be marked known in the first place.
    Don't target unknown planets or jumps via the overlay.
    remove jump point type in favor of flags
    jump point type 3 is invalid. should be 2.
    dont render exit only jump points
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Many, many typo fixes.
    Remove trailing spaces in src/
    * Fixed more uninitialized things.
    Return values in the overlay mouse targeting function were inverted.
    Minor fixes for overlay mouse targeting, also updated for new functions.
    (Very) minor clean-up of overlay mouse targeting.
    Fixed minor overlay mouse targeting bug.
    Improved overlay mouse input handling.
    * Fixed assert fail on exit.
    * Fixed nonexistant memory leak.
    * Do not handle click events related to player when he's null.
    * Do not handle click events related to player when he's null.
    * Fixed symptoms and not problem, go me!
    * Can't set GOTO markers when jumping or under manual control.
    Planets and jump points are mouse-selectable outside of the overlay.
    * Can't select planet target while landing anymore (used to be able through map overlay).
    * You can now select planets and jumps from the overlay map.
    * You can now target pilots with overlay map.
    * Hack to "fix" off by ones on poor performing video cards.
    * Fixed yet another possible assert failure.
    * Fixed segfault on player death when overlay map is open.
    * Fixed assert failure on opening of overlay map.
    * Fixed assert failure on load.
    * Fixed overlay markers not behaving properly.
    * Added support for point markers on the overlay map.
    * GOTO gives a visual indicator on the overlay map now.
    * Sanitized mouse hiding/showing so it doesn't dissappear in some cases.
    * Autonav to a position works.
    * Refresh the map overlay when player changes system.
    * Calculate best resolution to fit overlay map, center is always 0,0 however.
    * Fixed the resolution of the overlay map in some systems.
    * Overlay map now doesn't center on player, but shows everything always.
    * Display names on the overlay.
    * Added player cross to overlay map.
    * Fixed function duplication.
    * Properly calculate system radius for resolution.
    * Render jump points too.
    * The overlay map seems to work OK, needs more features and a sane way to handle resolution.
    * Added some initial stuff, nothing interesting yet.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    * Wrapper for nsnprintf being used all over.
    * Added function for saving star systems.
    * Added flags to image creation to control transparency mapping.  Should speed up theloading some and reduce memory usage.
    * Moved xml.h to nxml.h.
    * Added more complicated xml parse functions in nxml.c.
    * Compression noise thingy seems to work.
    * Implemented group volume level.
    * Added sound_speedGroup.
    Use logarithmic music and sound volume when using OpenAL.
    * Might fix an issue with Mac OS X.
    * Change al_checkErr to work like the new gl_checkErr.
    * Sound pitch changes (on openal) with game sound change.
    * Should fix memory leak.
    * More header upgrades.
    * Removed reverb which was accidently on by default.
    * Have environment change in medium.
    * Unified the debug startup sound messages.
    * Some initial usage of the EFX API.
    * Updated EFX header again.
    * Filled out some more missing defines.
    * Added auxiliary effects.
    * Detect EFX extension.
    * Sound fade out instead of stopping, should fix most of the popping.
    * Implemented openal groups.
    * Tweaked API a bit.
    * Removed some hacks.
    * Fixed segfault with invalid sound backend.
    * Code clean up.
    * WAVE loader should be finished.
    * Have endianness declared in header.
    * More code properness.
    * Trying to rewrite load functions.
    * Compiles with OpenAL backend.
    made autonav follow ships
    Changed the "lock" slowdown to simple enemy presence.
    Changed abortion of Autonav when danger occurs to slowing down time.
    Added player_autonavResetSpeed function.
    * Made options menu a little more straightforward, using "OK" and "Cancel" buttons that do what you'd expect.
    * Faders no longer write to the config whenever they are used.
    * Default button no longer overwrites config, so pressing "Cancel" after "Default" does what you'd expect..
    Added player_autonavAbortJump, for allowing in-system autonav to persist despite hyperspace target wonkiness.
    Separated autonav-to-planet and autonav-to-position to enable fancier output and avoid ugly GOTO on the overlay.
    Added autonav-to-planet and made some small polish tweaks to the autonav.
    * Minor cosmetics.
    Autonav shouldn't auto-abort when taking nebula damage.
    Relax the autonav aobrt conditions if the player reinitializes autonav soon after a previous abort.
    Added variable autonav exit conditions and a slider to control them.
    * Autonav time compression velocity to compress to is now defineable in the conf.
    * Preliminary cinematics mode support.
    * Time compression level is based on ship speed now.
    * Time compression works with autonav now.
    * Split player autonav stuff from player.[ch].
    Added ship rarity field.
    Made ship store graphics square to be able to share overlays with outfits.
    Ships can also use graphics overlay now.
    Fixed issue with period not being read.
    Removed some externs.
    Fixed warnings.
    polygonal collision algorithm
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Make everything fuel related an int
    Tag everything related to fuel and using double with DELETETHIS_
    Replaced fuel_consumption stat with fuel_consumption characteristic.
    
    fuel_consumption is a flat variable, but ship stats are clearly
    meant to be midifiers. This resulted in the game telling the player
    that fuel_consumption was a modifier. It's now a (mandatory)
    characteristic of the ship instead. This also avoids the problem of
    the arbitrary 100 fuel default consumption.
    
    Ships haven't been updated yet. That will be done next commit.
    
    I also removed a bunch of ship info from the shipyard that is
    outdated (i.e. characteristics that are no longer used, and that are
    now determined by outfits and ship stats).
    * Ships take into account the default outfits they can have when buying (for price).
    * Doxygen.
    * Moved outfit property to the outfit slot itself.
    * Cosmetics and slot definitions.
    * Better handling of stats, not entirely working yet.
    Minor fixes and dead code clean-up.
    Minor fixes and dead code clean-up.
    Many, many typo fixes.
    * Try to fix the bloody credits mess.
    * Added ship_existsCase.
    * Removed ancient non-existant prototype.
    * Implemented damage absorption, not set however.
    * Strict error checking for ship stats (including for mod outfits).
    Systems slot renamed to Utility.
    Migrating from High, Medium, Low + Heavy, Standard, Light to Weapon, Systems, Structure + Heavy, Medium, Light
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * Simple initial implementation of slot size visualization in the shipyard.
    * Use non-modified target graphic variant for stores.
    * Ships check for outfit slot sizes too.
    * You can now generate ship csv too.
    * Moving unidiff to new tech system.
    * Fixed tech loading.
    * Fixed tech saving.
    * Added test tech.
    * Initial commit of tech stuff.
    * Added ship base types as per BTAxis' proposal.
    * Generate stats of pilot based off of pilot.
    * Make ship stats desc rendering a bit more sane.
    * Using more generic functions for ShipStats stuff.
    * Moved shipstats to outfit.h.
    * Added many more stats.
    * Properly loading ship stats.
    * Detect bad nodes in ship.
    * Compiles cleanly - nothing works.
    * Rough engine glow implementation.
    * Don't always preload comm graphics for ships.  Load only as needed.
    * Mountpoints implemented for turrets.
    * First implementation of Licenses.
    * Using unsigned int for prices instead of signed int.
    * Fixed typo: Luxery -> Luxury.
    * Major upgrade adding all sorts of new featurse to communication window.
    * Major toolkit change to simplify things a lot, makes it more object oriented.
    * Made ship_classFromString non-static.
    * Made toolkit_getList apply to Image Arrays too.
    * Use image arrays in shipyard.
    * Revamped the ship classes.
    * Doxygenization.
    * Ships now use human readable class strings instead of numbers.
    * You can now sell your ships.
    * Redid entire sound system with SDL_mixer.
    preparing for adding fuel into game
    fixed silly typo mistake
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    branch:      naev
    big update, ai now controls ship's credits/loot, more API, pilot cargo stuff
    branch:      naev
    added more ship types
    branch:      naev
    implemented special techs
    branch:      naev
    preliminary tech support (only raw, no special tech yet)
    branch:      naev
    improved  alot of things for shipyard, including shipyard
    branch:      naev
    You can now visualize the ship well, as well as get a description in the shipyard
    branch:      naev
    more list support, more shipyard features, allow NULL text in widget
    branch:      naev
    gave outfits/ships prices
    branch:      naev
    C correctiveness patch
    branch:      naev
    some code cleanup (MELEMENT sanity)
    added information and ship spec windows
    some more comments here and there
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] added more sounds
    sound engine should be working ,but isn't tuned enough yet
    branch:      naev
    [svn] major syntax rewrite, big "what the hell was I thinking" in player.c
    made opengl.h struct names more intuitive
    branch:      naev
    [svn] switched to commonwealth spelling (armor -> armour)
    implemented seeker missiles and ammo
    implemented secondary weapons
    branch:      naev
    [svn] GUI's NAV and WEAPON monitors are now used, just need to add MISC
    branch:      naev
    [svn] GUI are now saved in XML datafile
    this allows multiple guis
    each ship can have it's own GUI too :)
    branch:      naev
    [svn] much more error checking in the xml
    fleets are built in - just need to do something with them
    minor tweaks and fixes
    branch:      naev
    [svn] added faction support
    documentation tweaks
    branch:      naev
    [svn] targetting added
    fancy UI fixes
    branch:      naev
    [svn] added basic gui framework
    branch:      naev
    [svn] outfit loading, not properly used yet
    branch:      naev
    [svn] added star system support/loading
    added planets
    more minor tweaks and fixes
    general happiness
    branch:      naev
    [svn] moved everything to directories
    cleaned up Makefile
    improved AI
    branch:      naev
    [svn] cosmetic changes, minor fixes
    branch:      naev
    [svn] working libxml at ship.c
    fixed all memory leakage
    branch:      naev
    [svn] good blitting system, pilot/ship outline
    Replaced all references to SCU/STP/STU to cycles/periods/seconds.
    
    This unifies the code with the in-game dialog and should hopefully
    prevent confusion regarding what terms to use.
    
    (Recap: these abbreviations were removed from in-game use long ago
    due to confusion that is likely to happen as a result of them looking
    similar.)
    Converted some comments. Is that what you meant, bobbens?
    Changed "STU", "STP", and "SCU" to "seconds", "periods", and "cycles".
    
    This is meant for better readability; it makes the different units
    more distinguished from each other.
    
    "STU" was replaced with "seconds" instead of "units" for two reasons:
    one, "units" is too generic (it's used for all kinds of measurements,
    not just time measurements), making it a confusing name. Two, the SCU
    is the same as a second in-universe anyway, and I don't see the
    general population abandoning that term.
    
    For the auto generation of "pretty" time text, I replaced e.g "12 STU"
    with "12s", and e.g. "8.32 STP" with "8.32p".
    
    Also fixed some language mistakes in dialogs I happened to notice,
    plus some very weird usage of the time units that probably resulted
    from a misunderstanding of how long they're supposed to be (there
    was a father concerned because his daughter disappeared several
    *seconds* ago, a food station that had a harvest every day, and a
    weekly mining trip to one planet that was talked about as if that
    wasn't frequent).
    
    Just a thought that just came to mind as I was writing this: perhaps
    it would be better to call decaperiods "daps"? Not truly necessary,
    but it would be an interesting idea because it's a name for a unit
    that kind of look like "days", while also serving as a shorthand
    for the full official name. Any thoughts?
    More gettext.
    * Wrapper for nsnprintf being used all over.
    remove duplicated includes
    
    Signed-off-by: Nicolas Kaiser <nikai@nikai.net>
    Many, many typo fixes.
    Remove trailing spaces in src/
    * More elegant fix.
    * More NAEV -> Naev.
    * "time" hook no longer exists.
    * Update time hooks on ntime_inc.
    More time changes. Pretty time should always display two decimal places of precision with no zero-padding of STP.
    Changed time displays to use hSTU - 1 hSTU is 1% of a STP.
    * Saner, more precise and safer way of saving dates.
    * Jump delay ship stat works again.
    * Fixed time drift when loading game (due to simulation update increasing time).
    * Time updates as it should.
    * Initial addition of the date hook. Untested as of this commit.
    * New time system. As seen on wiki.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Added the possibility to do lagged time increments (for when adding to mission subsystem).
    * Doxygen.
    * First patch to try to add a dynamic economy.  Economy is static atm.
    * Some code clean up.
    * Fixed a memory leak.
    * Doxygen.
    * Properly documented ntime.[ch].
    * Doxygenization.
    improved ntime_pretty and increased time to do rush delivieries
    changed time units
    added time in the form of the galactic date
    More gettext.
    * Wrapper for nsnprintf being used all over.
    * Luadoc.
    * Fixed brown paper bag bug.
    * Instead of hardcoding 32 for credits2str buf length, added #define to make it much more sane.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Use polar coordinates instead of cartesian coordinates.
    * Debris implemented.
    Use new __RW system and nlua_register() everywhere
    Make background script use global lua state
    Replace LuaColor with glColor
    lua headers are system headers, include them that way
    * Doxygen.
    * Added Lua Colour module.
    properly fopen and fclose in the shader generating stuff instead of having the OS implicitly close the file.
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    warnings
    Removed warnings.
    Properly report exit success so autotools don't abort.
    Use SDL for shaders_c_gen to hopefully fix compile on windows.
    glsl: remove circle_filled.vert, which is identical to circle.vert
    toolkit: tidy glsl code, and render inner and outer border
    Begin porting toolkit to use a fragment shader for rounded corners
    
    The borders aren't currently rendered
    Reduce shader boilerplate with a C program generating C code
    
    Ugly, I guess, but... less?
    Use new __RW system and nlua_register() everywhere
    Replace LuaShip with Ship*
    lua headers are system headers, include them that way
    * Added luaL_validship.
    * Added API to get the ship base graphics.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * More code clean up.
    * Added ship Lua API.
    * Fixed scripts for changes.
    * Created helper script for easy inclusion in the unique code.
    Remove trailing spaces in src/
    * Fixed memory leak.
    * Move pilot hook stuff into pilot_hook.[ch].
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    Use new __RW system and nlua_register() everywhere
    Add types to lua api docs, and other documentation improvements
    Fix another complain from LDoc
    Use Vector2d instead of LuaVector
    Some doxygen documentation fixes
    Add vec2.newP() for creating a vector from polar coordinates
    vec2.setP() uses degrees, not radians
    Correct Luadoc for vec2.setP()
    * Fixed the vec2 add/sub/mod/div to work as intended (modify object with :add(), not with +, etc...)
    * cppcheck.
    * Oopes vec.set was mapped to vec.setP...
    * Added vec2.dist2().
    lua headers are system headers, include them that way
    * Luadoc.
    * Added function to set vector by polar coordinates.
    * Cleaned up vec2 doxygen.
    * Added vec2.polar().
    * More cppcheck shutting up.
    Luadoc fixes.
    Luadoc fixes.
    * Better invalid parameter Lua checking.
    * Luadoc.
    * Stupid mistakes make bobbens stupid.
    * Should finally make sense out of the vec2 math stuff.
    * Fixed bug in nlua_vec2.
    * Made some nlua naming consistant.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Should check for type, not userdata.
    * Added luaL_checkvector.
    * Correctness patch.
    * Makes more sense now.
    * Luadoc.
    * Split vec2 from nlua_space.
    More gettext.
    Add a CSV containing ship names and their stats to devcsv
    Minor devcsv output fixes
    * Wrapper for nsnprintf being used all over.
    * Should be cargo not cap_cargo.
    * Thrust for ships is actual thrust, not multiplied by mass.
    * Do not crash if CSV can't be generated.
    * Fixed absorption and penetration should be 0-100 values in the csv and 0-1 internally.
    * Fixed absorption and penetration should be 0-100 values in the csv and 0-1 internally.
    * Ship csv should have absorb.
    * Use cap_cargo instead of cargo so xrogaan doesn't get angry.
    * Recharge rates in XML are now per second, not per minute.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    * Put ship class in the generated ship csv.
    * Try to fix the bloody credits mess.
    * Changed internal representation of direction velocity and turn from deg/s to rad/s.
    Systems slot renamed to Utility.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    Migrating from High, Medium, Low + Heavy, Standard, Light to Weapon, Systems, Structure + Heavy, Medium, Light
    * Have the ship stats be exactly like the xml values.
    * You can now generate ship csv too.
    Remove leading underscore
    Prefix array sentinel to avoid future conflicts
    Add ability to create array with initial capacity
    Check to see if stdalign.h is available and use it when possible.
    array.h: use alignment that is valid for all types
    
    This was producing a lot a ubsan errors
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Many, many typo fixes.
    Pointer arith. to get to dynarray container.
    
    Simpler, and gets rid of cast-align warnings.
    0-sized array stub in dynamic array conatiner.
    * Doxygen.
    * Doxygen.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Fancier documentation.
    * Better documentation.
    
    Conflicts:
    
            src/array.h
    Added array_erase() and array_push_back()
    * Better documentation.
    * Fixed small bug
    * Added licensing stuff.
    * Fixed warnings
    * Fixed comments to match Doxygen style.
    * Changed according to bobbens review.
    
    * Used DEBUGGING instead of DEBUG
    * Fixed warning on 64-bit platforms
    * Added a sentinel for better testing.
    * Added the array library.
    ndata is dead! Long live ndata!
    Fix warnings when building with clang
    Added ship rarity field.
    Ships can also use graphics overlay now.
    Use texture compression only when enabled
    Use glad instead of galogen
    
    Similar idea, but a more major projects that, among other things,
    handles hhrplatform.h.
    Replace opengl_ext.c with files generated using Galogen
    
    Looking at several OpenGL extension loading libraries, I like Galogen
    because it allows generating files for any choice of GL version and
    extensions. So when we (hopefully) switch to GL 3.2 Core, we can
    generate headers for such and it will be a compile error to use features
    that are removed in that version, or added by later versions.
    
    Generated with:
    ```
    galogen gl.xml --ver 3.0 \
                   --profile compatibility \
                   --exts ARB_texture_filter_anisotropic
    ```
    
    https://github.com/google/galogen
    Remove all C code meant to support SDL < 2.0.0
    Made it so the Lua couldn't shouldn't crash when planets have improperly defined textures.
    Uniformized the "Out of Memory" message variants.
    More gettext.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Correct swapped format and internalFormat in glTexImage2D call
    Correct calls to glTexImage2D
    
    I think this is correct. I noticed the issue while trying to port naev
    to emscripten. Under emscripten, this made texture rendering work.
    Added caching for texture transparency maps
    
    When loading a texture that requests transparency mapping, the PNG data
    is hashed (MD5). If the cache dir has a file matching the MD5 hash, and
    its size is correct, it's loaded instead of generating the transparency
    map from scratch.
    
    If a cached map doesn't exist, the generated one will be written to the
    cache directory.
    * Wrapper for nsnprintf being used all over.
    Fix extremely rare issue where dir is  exactly 2*M_PI (when represented as a float, anyway).
    Simplify gl_needPOT a little.
    Whitespace, typo and general style cleanup.
    Many, many typo fixes.
    * Fixed new gcc -Wunused-but-set-variable warnings.
    * When creating collision map, test for > 10% alpha.
    Remove unused SDL_image header #includes
    * Removed unused variables.
    * Removed unused variables.
    * Being strict.
    * Read sx/sy from png metadata when loading png.
    * Better error handling and creating fake texture names so they can be stored and duplicated.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Should fix segfault due to system editor not expecting non-planet images in the planet image section.
    * Started to work on the targetting graphic framework.
    * Improved heavily how opengl textures handle memory.
    * Only use POT if needPOT is true.
    * Fixed SDL_RWops leak.
    * Speed up image loading even more (do padding initially).
    * Minor optimization: do not POT pad if not needed.
    * Adding more parametrization.
    * More load up optimization related to png.
    * Optimizing loading a bit.
    * No longer using SDL_image.
    * npng.c now handles PNG file loading and the likes.
    NPOT toggle actually works now.
    * Show more compact opengl features at runtime.
    * You can now force disable NPOT textures.
    * Using abstractions.
    * Should fix nebula issues with NPOT textures.
    * Should fix some issue with the NPOT extension.
    * Make use of the GL_ARB_texture_non_power_of_two if available to lower ram usage.
    * Extra ;.
    * Minor correctness patch.
    * Using texture compression if found.
    * Added compression extension support.
    * Cleaned up code for mipmaping some.
    * Support for user disabling mipmaps.
    * More lenient on errors.
    * Improved mipmap generation handling.
    * Fixed texture leak detection.
    * Removed unnecessary debugging.
    * More debugging checks.
    * Minor tweaks to attempt to fix some minor off by one pixel thingies.
    * Added new data to texture to help speed up rendering.
    * Added mipmap support.
    * Added ability to draw filled circles.
    * Removed immediate mode from circle drawing.
    * OpenGL code is now becomming modular!
    * Split glTexture from opengl.c.
    Made OpenAL includes work again.
    Whitespace.
    fixed crosscompiling for openal binaries.
    Made the openal stuff extern and added them in a separate file. Not sure why it worked in the first place (maybe differente AL_APIENTRY definition?)
    Many, many typo fixes.
    * Autotools support by Unavowed.
    * Left out file last commit.
    * Enforce a minimum fps for the update of the rumble simulation.
    * Use real_dt when updating haptic devices not dt.
    * Tweaked parameters for shake.
    * New shake model (based on spring and dampener).
    * Fixed bug with shake model projection.
    * Targetting reticles "rumble".
    * Rumble shouldn't be based on resolution - too bad at high res.
    * Make rumble half as strong on the GUI.
    * Tweaked entire rumble system.
    * Pilot death explosions now give knockback and rumble as expected.
    * More doxygen.
    * More doxygen and code cleanup.
    * Tweaked the rumble even more.
    * Switched SPFX timers to something more sane.
    cleanup and fixes
    split cinematics mode to spfx
    get ready to... RUMBLE!  (added rumble for afterburning among others)
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    branch:      naev
    added some code to hopefully help prevent dt intervals that are too big
    branch:      naev
    enemy pilots can now die
    branch:      naev
    you can define spfx per outfit, fixed major memory issue
    branch:      naev
    added explosions with a primitive special effect system
    Support N_ instead of gettext_noop in both Lua and C.
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Allow disabling NLS.
    * Added gettext.h
    * Define LOCALEDIR in configuration file.
    * Bind to gettext using variables.
    Made debug paranoid's warnings more like the error messages.
    Fixed warning/error messages.
    More gettext.
    More gettext.
    Can now use gettext with LOG, WARN, ERR, and DEBUG.
    Initial internationalization support with partial Japanese support.
    Add cross-platform log redirection when not running from a terminal
    
    As --datapath and datapath.lua must be respected, output is initially
    copied into memory, and either flushed to disk or deleted once configs
    have been loaded.
    
    Redirection is only done is conf.redirect_file is enabled and Naev is
    not connected to a terminal.
    
    The files go into ${datapath}/std-{out,err}_YYYY-MM-DD_hh-mm-ss.txt,
    and the logs for a session are deleted if stderr is empty.
    * NAEV now also prints everything to it's internal console.
    * Made the -DDEBUG and -DDEBUG_PARANOID common cflags.
    * OpenGL errors now print the name of the function where that happened.
    * Support for FreeBSD by Dmitry Marakasov.
    * Use SIGTRAP instead of assert(0) in blowing up on errors.
    * Automatically give backtraces in DEBUG mode.
    * Fixed broken release mode.
    * Fixed checks for DEBUG when they should be for NODEBUG.:
    * Minor tweaks.
    * More checks in weapon.c
    * WARN now says function it is in.
    * Make assert(0) on WARN optional with DEBUG_PARANOID.
    * WARN and ERR now generate asserts in DEBUG mode.
    logs more verbose and added a variable stack to missions
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] Makefile tweakage
    images already loaded from datafile
    checks md5sum
    branch:      naev
    [svn] moved everything to directories
    cleaned up Makefile
    improved AI
    branch:      naev
    [svn] minor fixes
    dynamic keybind loading from configuration file
    sample configuration file added
    branch:      naev
    [svn] working libxml at ship.c
    fixed all memory leakage
    branch:      naev
    [svn] blits, opengl loads properly, looking good
    branch:      naev
    [svn] initial import
    * Basic GUI list implementation, never added though.
    Fix pilot.follow()
    Remove TaskData, now that everything is in one Lua state
    WIP change to use one Lua state; does not yet compile
    
    Starting with ai.c
    * Documentation.
    Use lua registry to make push(sub)task support data of any type
    Combine ai_extra.h into ai.h
    
    Use forward declaration of struct to deal with cyclical import.
    Make ai code deal with pilot objects instead of ids
    Many, many typo fixes.
    lua headers are system headers, include them that way
    * Using garbage collector for tasks.
    * Fixed pilot.memory.
    * Added pilot.memoryCheck.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * ai.pushtask() no longer has a pos argument.
    * Added subtasks with similar api to normal tasks.
     * Subtasks are tied to their task and allow mini state machines.
    * Added manual control for AI.
    * Fixed some long standing bugs in AI.
    * Decreased code footprint in nlua_pilot.c
    * Misc fixes.
    * Sped up equipment script by a bit.
    * Removed the horrible, horrible TYPE_PTR from ai.
    * More doxygen.
    make ai more lax when checking for error, make accel speed dependent, not thrust
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    branch:      naev
    improved the chase ai_face function quite a bit with customizable velocity weight
    branch:      naev
    made ai/toolkit compileable under C99 (naev isn't completely though)
    branch:      naev
    C correctiveness patch
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] sanitized lua ai api
    branch:      naev
    [svn] prepared for the upcoming toolkit_list
    fixed some sanity around turning pilot functions, now in pilot_face
    added basic rough on the edges hyperspace implementation
    branch:      naev
    [svn] added timer support for the AI
    fixed major buffer overflow in AI
    branch:      naev
    [svn] bug fixes
    support for different AI Profiles
    branch:      naev
    [svn] more ai API
    ai now responds on being attacked
    branch:      naev
    [svn] added a few AI API functions that need tweaking
    branch:      naev
    [svn] outfit loading, not properly used yet
    branch:      naev
    [svn] improved ai API
    fixed minor memory leaks
    cleaned up a bit
    branch:      naev
    [svn] moved everything to directories
    cleaned up Makefile
    improved AI
    branch:      naev
    [svn] temporary commit before playing with cpio
    branch:      naev
    [svn] minor tweaks
    creation of start of AI infrastructure
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Use OpenGL 3.2 Core Profile
    Use glad instead of galogen
    
    Similar idea, but a more major projects that, among other things,
    handles hhrplatform.h.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Cause standing of the "Player" faction to show up as "Escort".
    Fixed crashing when critical files not found.
    Fixed error messages referring to wrong file when not found.
    Made it so that even if critical files are not found, the game tries to load.
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Added symbols for faction text on the map screen, and for ship stats
    
    This is an accessibility feature for those who are colorblind. You
    no longer need color vision to see this information.
    
    Based on the idea we had before to use emojis, but using ASCII instead.
    The biggest advantage of this is that it can just be directly inserted
    into the text rather than having to worry about positioning the symbols
    manually.
    Fixed warnings.
    Changed fabs to FABS throughout the code.
    Reset faction flags when resetting their standing.
    
    This fixes a problem where starting a new game after having loaded
    a previous save (in the same session) leads to the "known" status
    of the previous save leaking into the new one. It should fix any
    other such problems with flags if they crop up again, too.
    Changed faction name from attribute to node.
    Using ngettext for plurals.
    Changed escape code for colors from '\e' to '\a' so xgettext plays well with it.
    More gettext.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Revert "Call getfenv in nlua_pcall() eliminating the need to pass the"
    
    This reverts commit 79e36c0c1bbca2aa5fa2922651dd303bc7b87882.
    Fix nlua_freeEnv() of invalid env
    Call getfenv in nlua_pcall() eliminating the need to pass the
    environment as an argument
    Use new __RW system and nlua_register() everywhere
    Set __RW for each env
    Use nlua_pcall() almost everywhere
    Make faction scripts run in global lua state
    Run equip scripts in global lua state
    Fixed some (lack of) braces.
    Added support for some faction unidiffs.
    
    The diffs are as follows:
    
    * Making a faction invisible or invisible (for factions that have
      been destroyed or created)
    
    * Changing faction alignments (e.g. making the Empire and the FLF
      enemies mid-game, or making the FLF and Dvaered neutral mid-game)
    
    Use of this to make the Collective invisible once it is defeated has
    been added.
    Make faction_get("Escort") work
    Make LuaFaction an int instead of struct
    Fixed a wrong type being used.
    Removed the warning about having both standing lua and the static tag.
    
    There's now a point to having both: the standing Lua code defines
    what different standing amounts are called.
    Moved checks for alliance or hostility to player into Lua code.
    
    This makes it much more flexible, and also allows translations.
    Currently, the actual behavior is unchanged.
    Changed > to >= when considering whether a ship is friendly.
    Minor style cleanup and separate declaration/assignment
    Implement faction.allies() for player faction
    User PLAYER_ENEMY rather than hardcoding 0
    Make faction.enemies() return the player's enemies for "Player" faction
    Made standing text something defined in Lua.
    
    So now, different factions can have different terms for different amounts
    of standing, and these text representations can now be localized.
    Added setPlayerStanding Lua function (and a corresponding C function).
    
    Gets rid of having to mod the standing to -standing + whatever you
    want. You can now just set the standing straight to what you want.
    This is needed for my proposal to change how standing is handled,
    but even without that, it's useful in some places (e.g. for cheating,
    and for missions like flf_pre02 which either immediately make you an
    enemy or immediately make you not an enemy).
    
    Like modPlayerRaw, this function doesn't pass through any Lua code
    before setting the standing; it's just a direct modification.
    Fix a few issues discovered by Clang
    Made comments gender neutral, for accuracy
    * More memory leak fixage.
    * Fixed minor memleak.
    Add support for optional RGB attributes in faction colour definitions.
    * faction_modPlayerRaw will also sanitize player faction.
    * New planets get a nonzero radius.
    * Update radius when updating gfx.
    * Moved various path defines into ndata.h.
    * Wrapper for nsnprintf being used all over.
    calloc > (malloc + memset)
    comment and cleanup.
    better faction saving
    set initial faction known state in faction.xml
    save factions known status.
    factions can be known
    
    Conflicts:
    
            src/faction.c
    
    factions can be known.
    appease the bobbens
    move faction header back into .c
    change // to /* */
    comment and cleanup.
    better faction saving
    set initial faction known state in faction.xml
    save factions known status.
    factions can be known
    
    Conflicts:
    
            src/faction.c
    
    factions can be known.
    * Made all the colours constant as they should be.
    Change the spawn Lua path.
    Migrated standing Lua to dat/factions/standing/
    Read a faction's <equip> from XML, store in faction struct.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Restructure areAllies and areEnemies a bit. Should be marginally faster.
    Restructure areAllies and areEnemies a bit. Should be marginally faster.
    Whitespace, typo and general style cleanup.
    Running strcmp on NULL is a bad idea.
    Typo fix.
    * Warn of non-static factions without Lua.
    * Change modPlayerRaw to modPlayerSIngle, added new modPlayerRaw.
    * Removed deprecated player.modFaction* and player.getFaction.
    * Update space land messages with faction changes.
    * Fixed error handling in the faction Lua.
    * Added faction standing change hook.
    * Sanitize faction just in case.
    * Do not modulate secondary "splash" faction hits, that's up to the Lua.
    * Gave most factions a faction Lua profile.
    * Factions can now use Lua to mess with actual faction hits.
    Many, many typo fixes.
    Bad bobbens, no apostrophe for you!
    * More NAEV -> Naev.
    * Fixed factions being marker as hostile when are neutral in comm window.
    * More security and error checking.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Do not save nor load static faction values.
    * Reset faction values on new game or game load.
    * Separate faction real name and shortname. This is to differenciate what to display and what is real.
    * You can fake faction names now.
    * It seems like the faction spawning scripts can work now.
    * Fix stupid erorr.
    * Fix stupid erorr.
    * Made faction_isFaction public.
    * Correctness.
    * Made faction_isFaction public.
    * Correctness.
    * Added faction_getGroup.
    
    int* faction_getGroup(int *n, int which)
    It returns an array of faction ids, depending on which.
    * Added hostility threshold define for the player.
    * Cleaned up the horrible hack.
    
    I now fail slightly less at global variables.
    * Added per-faction presence view.
    * Some player_message colouring.
    * Doxygen.
    * Use tiny logo for GUI.
    * Check invalid faction nodes.
    * Hide some factions from the player.
    * Added faction standings to info window.
    * Added colours to factions
    * Added system safety.
    * Map interface heavily changed.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Added check for faction sanity.
    * More faction tweaks.
      * Fixed bug with static factions getting modified.
      * Improved distribution of ally/enemy faction modifications.
      * Made faction hits affect allies and enemies more.
    * Added concept of static factions (don't modify player standing).
    * Much more Lua API added.
    * Dvaered patrol missions now actually force you to kill hostiles.
    * Added flags to image creation to control transparency mapping.  Should speed up theloading some and reduce memory usage.
    * Even more doxygen.
    * Doxygen fixes.
    * First large ndata patch.
    * Moved xml.h to nxml.h.
    * Added more complicated xml parse functions in nxml.c.
    * Fixed harmless memory leaks.
    * More code clean up and optimization.
    * Code clean up.
    * Replaced malloc.h with stdlib.h, as the former is deprecated
    * Fixed major bug making faction always decrease.
    * Doxygen.
    * Tweaked faction gain.
    * Major upgrade adding all sorts of new featurse to communication window.
    * Faction rating and combat rating are now continuous.
    * Escorts and fighter bays start to work well.
    * Some doxygen fixes.
    * Reduced calls to xmlCleanupParser(), only one for all the loading now.
    * Fixed new player inheriting last loaded player's faction standings.
    * Added faction logos.
    * Display faction logos on land.
    * outfit.c: Cleaned up some code.
    * Fixed double free if an invalid faction was loaded.
    * Doxygenized faction.c
    * Added faction_modPlayerRaw and the misn binding for it.
    * Improves the faction colouring a bit.
    * More faction validity checking.
    * Changed DEBUGs for WARNs, makes more sense.
    * Left debug message in.
    * Tweaked faction hits to be more useful.
    * Made it easier to lose faction then to gain it.
    * Unified colouring schemes.
    * All factions you are enemies with will appear as hostile too.
    * Removed alliance references.
    * faction_modPlayer() now affects allies and enemies.
    * Sanitize player faction standing.
    * Factions now can have long names.
    * Removed alliance deal, now each faction states it's allies/enemies.
    * Added many new not-used factions.
    * Map now displays faction standing.
    added more nazi flags: -Wmissing-prototypes -Winline -Wcast-align -Wmissing-declarations -fno-inline
    missions increase/lower faction, fixed bug with factions
    yes, you can lose faction now, fixed ai to set you as hostile
    player faction standings are now saved and loaded
    first player faction patch
    started :retabbing (spaces only) and fixed some xml issues
    game now tries to load up the missions properly, except lua needs more bindings :)
    typo bug
    also store alliance as a number, more aux functions for factions
    major improvement -> use ids for factions instead of pointers
    branch:      naev
    major content addition: 1 new system, 5 new outfits, more data checking
    branch:      naev
    fixed wierd new warnings and added more thingies (especially factions)
    branch:      naev
    capitalized loading debug
    branch:      naev
    compressed the debug messages
    branch:      naev
    C correctiveness patch
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] combined xmlness in single header file
    rewrote player.c to use new xml syntax
    branch:      naev
    [svn] multiple enemies now supported
    bug fixes
    you can get other ship's health now from AI
    branch:      naev
    [svn] enemies are now properly parsed
    added possibility of pirate
    buffer overflow in ai fixed
    branch:      naev
    [svn] added timer support for the AI
    fixed major buffer overflow in AI
    branch:      naev
    [svn] bug fixes
    support for different AI Profiles
    branch:      naev
    [svn] faction system almost fully implemented
    fleets almost fully implemented (just need randomized start positions)
    major bugfix in weapon.c
    branch:      naev
    [svn] much more error checking in the xml
    fleets are built in - just need to do something with them
    minor tweaks and fixes
    branch:      naev
    [svn] added faction support
    documentation tweaks
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Avoid regenerating the land tabs over top of themselves
    
    This was only occurring when hooks caused a GUI reload, which is
    somewhat unsafe, but this seems like a useful precaution to take.
    Add a 'Buy Local Map' button on planets that offer refuel
    Remove fuel cost and make refueling wholly-automated
    
    This was discussed earlier in IRC. My feeling is that fuel costs add nothing,
    yet can potentially strand new players and render saves unusable.
    
    There were also several issues with fuel being zeroed when removing fuel pods
    and engines, leading to fuel loss while experimenting with loadouts.
    Let's go more than a little enum-crazy.
    Large revamp and unification of the various error-printing functions in the land window.
    * Update bar npc when adding mission/event from console.
    * Attempt to fix various issues like crash with menu_main.
    * Cleared up menu_main usage.
    * Allow takeoff to be forced at any moment.
    * Added API to set the land window.
    * Fixed reload land windows when swapping ship.
    * Should fix segfault with player.addOutfit() with land hooks.
    * Pretty hackish way to regenerate the land windows when changing GUI.
    * Do not run event/mission hooks when game starts landed.
    * Moved land button sizes to be global and not local to reduce copying.
    * Move shipyardstuff out of land.c in a first attempt to thin land.c.
    Fixed several more minor bugs. Error dialogue generator is fully functional, and all edge cases should be addressed.
    Moved several sanity checks into functions. Replicates old functionality 100%, but is a work-in-progress.
    Moved equipment tab ship list updating into player.c (with sanity check).
    * Split equipment stuff from land stuff to make it more understandable.
    * Display the mount point when selecting high energy slot.
    * Made it so forced takeoffs by missions don't take time.
    * Some doxygen for land.c.
    * Implemented outfits/shipyard/land missions.
    * More properly landing cleanup.
    * Fixed bug with exiting while landing and switching pilots causing space warping.
    fixed bugs so that missions actually work now :)
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] Basic toolkit implementation (but ugly)
    Basic landing
    Pause bugfixes
    Events using common lua state
    
    Still need to fix some things
    lua headers are system headers, include them that way
    * MAJOR COMMIT - May bring breakage.
    * Removed global variables from nlua_misn.c, nlua_event.c and nlua_hook.c
    * Added tutorial button.
    * Added sample event for random npcs.
    * Added some event only API.
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Fixed some Lua documentation.
    
    Some things were documented wrong or poorly, so I've improved that.
    Also found and fixed a possible segfault along the way (where it
    tried to free something that could be NULL; fixed by simply checking
    if it's NULL before freeing).
    Fixed several strings and lack of gettext usage.
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    gettext for nlua modules.
    [Docs] Replace '=' with '=='
    Comparison is done with the latter, not the former.
    Fixed clang warnings.
    Use new __RW system and nlua_register() everywhere
    Add types to lua api docs, and other documentation improvements
    Fix various param issues LDoc (appropriately) warns about
    Rename Lua_article to LuaArticle and make it an int instead of struct
    Fix news.add() in luajit
    Keep var declaration and assignment separate
    Cursory code style and Luadoc cleanup
    Replace <string.h> includes with nstring.h
    Luadoc fixes
    added "ship.getSlots" lua function
    fixed segfault for accessing deleted articles
    news.rm() and news.bind() now accept tables
    * Luadoc.
    * Luadoc.
    * Luadoc.
    * Removed references to economy.
    * Added @luamod so it gets generated luadoc.
    changed syntax for news.add(), removed old file
    removed date_to_remove
    news.add() now accepts tables of args in a table
    added news.bind()
    Added date_to_add & date_to_rm args to news.add()
    removed bugs and added generic news event
    * Always update the news widget when updating the bar.
    * Regenerate the news buffer when landed.
    * news.get() will get all articles if called without an argument.
    * Renamed internal functions.
    * Renamed functions
    * Luadoc
    Removed printfs & prettified code a little
    Better lua cmds
    Fixed date issues. Added temporary headers
    Semi-finished
    Fixed some lua
    Added WIP Lua and saving/loading
    Fixed typo in header.
    Implemented a travel log event.
    
    This also fixes some more problems, including one that prevented
    the shiplog system from being used outside of missions and one that
    prevented compilation from being successful.
    Created nlua_shiplog, and moved log stuff out of nlua_mission.
    Updated example in shadowvigil.lua.
    Remove SDL1 compatibility -D CLAGS, and sed so they aren't used
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    * Put STRCASECMP in nstd.h.
    * Improved input widget handling by introducing text events.
    * Avoid some other possible segfaults.
    * Fixed another possible segfault with isspace().
    * With the new SDL 1.3 change this is much simpler now.
    * Doxygen.
    * Code clean up.
    * Created nstd for portable SDLKey isalpha functions and the likes.
    Use new __RW system and nlua_register() everywhere
    Replace LuaTime with ntime_t*
    lua headers are system headers, include them that way
    * New time system. As seen on wiki.
    * Made some nlua naming consistant.
    * Split nlua_time from nlua.
    Fancy NPC get fancy icon.
    More gettext.
    Replace remaining uses of Lua globals with Lua environments.
    
    This fixes crashes in the tutorials (and probably other events).
    Remove __evt and __misn globals after they are used
    Events using common lua state
    
    Still need to fix some things
    Intial port of missions to single lua state
    
    Does not properly implement loading of all needed libraries, so somewhat
    broken for now.
    Replace memcpy with struct assignment
    Turn player_missions in an array of pointers
    * Wrapper for nsnprintf being used all over.
    * Fixed possible but rare memleak - cppcheck.
    * Merge, you merge, we all merge (I'm paranoid about implicit type casting).
    Check ID in case names are the same.
    * Changed sorting a bit more.
    * Sort NPC by priority, name, then description.
    Check ID in case names are the same.
    Whitespace, typo and general style cleanup.
    Many, many typo fixes.
    lua headers are system headers, include them that way
    * Bar missions should work with naev.missionStart().
    * Sort by names as tie-breakers.
    * Update NPC when a hook is successfully run at the land window.
    * Fixed minor memory leak.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Doxygen.
    * Fixed minor NPC removing issues.
    * Added sample event for random npcs.
    * Event NPC stuff working now.
    * Fixed issue with hooks saving event hooks.
    * Added event land as start condition.
    * Morre corrections.
    * Added NPC bindings to events.
    * COMPILES AGAIN - and seems to work at least like before (NPC do).
    * Using the resize and erase functions in npc.c now.
    * Committed npc stuff just in case - DOES NOT COMPILE.
    Look for ndata in macOS app bundle
    Use macOS-specific user directories.
    Use OpenGL 3.2 Core Profile
    Use glad instead of galogen
    
    Similar idea, but a more major projects that, among other things,
    handles hhrplatform.h.
    Use new __RW system and nlua_register() everywhere
    Make LuaPilot an int instead of a struct, simplifying things
    lua headers are system headers, include them that way
    * Made the planet Lua stuff also much more robust vs addition of planets.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Made some nlua naming consistant.
    * Added luaL_checkpilot.
    * Lua API clean up.
    * Luadoc.
    * Doxygen.
    * Doxygen fixes.
    * Doxygen.
    * Moved Lua pilot stuff into it's own file.
    * Pilots now use metatables.
    Removed NDATA_DEF define that basically was just the same as NDATA_PATHNAME right now.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Translate window titles when possible.
    Fixed "Restart Naev" text location.
    Increase button sizes for find dialogs.
    Gave the options menu more space and wider buttons.
    Fixed the rest of the text colors.
    Added a "slow mode" for accessibility.
    
    This was something we mused about before: the idea of adding a "slow
    mode" as an accessibility feature. Slow mode is pretty simple, it
    simply halves all speed in space compared to what it would normally
    be. This is helpful for people who have difficulty with motor control
    or otherwise have trouble running the game at normal speed (much like
    an easy mode).
    Added system language option.
    Do not crash on options when language isn't set.
    warnings
    Allow disabling NLS.
    "only" detect first 128 languages.
    Don't crash if dat/LANGUAGES is not available.
    Allow choosing language from the options menu.
    Don't warn about resolution change being impossible if none attempted
    
    Fixes #1094.
    Added some color to compile options text
    Oops
    Removed the ugly uses of cDConsole as a color for headers.
    
    Replaced those all with black; headers don't need to be a different
    color and it honestly looks nicer without one.
    Fixed translatability of music/sound volume.
    Changed fabs to FABS throughout the code.
    keybind_info: terminate with NULL instead of "end"
    Remove fallback for not having VBO
    
    OpenGL without VBOs is deprecated. Presumably, any drivers that can
    handle shaders will be fine with VBOs.
    Remove SDL1 compatibility -D CLAGS, and sed so they aren't used
    Remove all C code meant to support SDL < 2.0.0
    Add support for joystick hats
    Spelling.
    Only display a single resolution once (despite refresh rate, etc. changing) (should address issue #737)
    More gettext.
    Refer to macOS as 'macOS' everywhere
    Added option to change scale factor to options menu.
    Whitespace.
    Avoiding conditional directives that break statements.
    Refer to LuaJIT as "LuaJIT" consistently
    Strip trailing whitespace
    Minor whitespace and fixes and s/\t/   /g
    Update options menu when window is manually resized (Fixes #241)
    Better variable naming and minor fixes for video settings
    Further video settings polish
    Reset minimize checkbox state
    Make minimize on focus loss configurable
    Add on-the-fly resolution changing via the options menu
    
    SDL2 doesn't allow the resolution to be changed while fullscreen, so
    a resolution change while fullscreen triggers the "restart to apply
    changes" warning.
    
    It seems that it's fine to go from windowed to fullscreen and back,
    even with fullscreen mode setting enabled (does not destroy the GL
    context), at least on Linux with Nvidia drivers.
    
    There's also a prompt when changing resolutions or between fullscreen
    and windowed, that will restore all settings if no/esc is pressed.
    Make SDL_mixer volume behave the same as OpenAL
    Removed the "pause instead of abort" option.
    
    This was clearly designed to use in conjunction with the old autonav
    abortion behavior. player_autonavAbort is still used in some places,
    but I don't think it's particularly useful to give the player the
    option to pause instead of abort in these places.
    
    Also includes a comment fix that I apparently forgot to merge previously.
    Add WASD key bindings by default.
    
    The arrow key-centric bindings are still present, and if desired can be
    set through the options menu.
    Updated options menu
    Updated text in the options menu.
    Always restore the focused line in the keybinds list, if possible
    * Made stuff a bit cleaner.
    * Initial work to get everything running on SDL2.
    Added option to pause game instead of disabling autonav when damage is taken
    * sizeof(char) is always 1. No need to keep it around.
    * Made options menu a little more straightforward, using "OK" and "Cancel" buttons that do what you'd expect.
    * Faders no longer write to the config whenever they are used.
    * Default button no longer overwrites config, so pressing "Cancel" after "Default" does what you'd expect..
    * Wrapper for nsnprintf being used all over.
    * Fixed uinintialized issue - clang.
    * XDG patch by aanderson.
    user data should go into $XDG_DATA_HOME (.local/share by default)
     - .naev/saves -> ~/.local/share/naev/saves
     - .naev/screenshots -> ~/.local/share/naev/screenshots
    
    user preferences should go into $XDG_CONFIG_HOME (.config by default)
     - .naev/conf.lua -> ~/.config/naev/conf.lua
     - .naev/conf.lua.backup -> ~/.config/naev/conf.lua.backup
    
    cached data should go to $XDG_CACHE_HOME (.cache by default)
     - .naev/gen -> ~/.cache/naev
    * LLVM.
    * Tabwins can now have tabs at the top or at other crazy places.
    Current FPS limit wasn't being set on the input widget.
    Whitespace, typo and general style cleanup.
    Update window_addList behavior
    
    All but one point that calls window_addlist with a selected item
    changed handler calls that handler immediately after.  Update this
    to be the default behavior if there's a default item passed in.
    
    The caller in the options window had to be slightly re-worked, but
    it turned out to be a cleaner solution.
    * You can now either use internal, shared or luajit as implementations of Lua.
    * Fixed memory leak in options when using non-standard resolution.
    Created another player sound group for non-GUI sounds (just hyperspace noises for now).
    * Play sound when messing with sound slider.
    Minor spacing fixes.
    Replace duplicate functions with generic ones; minor cleanup.
    Use logarithmic music and sound volume when using OpenAL.
    0 == unlimited time accel.
    Added a box for setting maximum time compression in the options menu.
    Added variable autonav exit conditions and a slider to control them.
    * Use Lua JIT if it's available.
    Added options window checkbox for toggling mouse-based thrust control.
    * Fixed setting of keybindings.
    * Fixed typo causing the EFX disable button to spit warnings.
    * Option to change preference direction (default ~/.naev) by Noyga.
    * Changed the way keybinds are handled so they use human readable names.
    * Added option for setting manual zoom control.
    * Check ndata version against binary.
    * When you change a keybind, conserve the position.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Input widget can now specify font.
    * Console input is in mono by default.
    Cleaned up appearance of video options.
    * You can now force disable NPOT textures.
    * Display mods in the keybinding list.
    * YesNo dialogues with alerts when restoring defaults.
    * You can now restore keybindings to defaults.
    * Better handling of modifier keys, merging lctrl/rctrl into ctrl and such.
    * Options menu closes with escape.
    * Added option to toggle amount of log lines you want.
    * Fixed more overflow.
    * Increased static buffer size for bindings.
    * Fixed some possible buffer overflows and warnings.
    * Warn user he needs to restart when changing audio backend.
    * Fixed keybindings.
    * Display ndata currently being used.
    * Friendlier messages.
    Shortened interpolation desc.
    * Added interpolate to options.
    * Fixed potential afterburner issue.
    * Added option to disable savegame compression.
    * Show compilation flags.
    * Added Gameplay options.
    * Can now toggle EFX from options.
    * Added more sound options.
    * Some more fanciness.
    * Added restart message to audio thingy too.
    * Fixed wording.
    * Can now set engine glow.
    * Split into two columns.
    * Can reset to defaults.
    Made more readable.
    * Neatness.
    * Fixed FPS limit options.
    * More options.
    * You can now change resolution and fullscreenness through configuration.
    * Added tabs to option window.
    * Added naev.getKey() Lua binding.
    * Keybinds warn you when you set them so that they overlap.
    * You can now set keybindings in-game.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Fixed warning on systems that already declare bind somewhere.
    * Sound/music volume faders are now set to current volume.
    * Much better handling of joystick axes.
    * Doxygen.
    * Code clean up.
    * Avoid some other possible segfaults.
    * Doxygen.
    * Code clean up.
    * Created nstd for portable SDLKey isalpha functions and the likes.
    * More fixes to work with SDL 1.3.
    * Even more doxygen.
    * Fixed warning on some systems.
    * Faders and Audio options by Camilo.
    * Fixed keybindings segfaulting on reopen.
    * Some minor tweaks.
    * More keybindings updates.
    * Display bindings in uppercase.
    * You can now find out about your keybindings.
    * You can now view what keybindings do what.  Not finished yet.
    * First commit of the options menu (does nothing yet).
    * Fixed segfault when abandoning a mission in the middle of a mission dialogue.
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Fixed the rest of the text colors.
    Removed commented logging.
    Got rid of warnings.
    Removed the ugly uses of cDConsole as a color for headers.
    
    Replaced those all with black; headers don't need to be a different
    color and it honestly looks nicer without one.
    Improved some mapedit functionality.
    Improved string handling in the map editor.
    Remove gl_drawCircleInRect()
    
    It doesn't really seem to be needed, and gl_clipRect() can serve the
    same role.
    dos2unix + retab
    easier to understand expressions
    Remove SDL1 compatibility -D CLAGS, and sed so they aren't used
    Fix potential memory leak in mapedit_loadMapMenu_load()
    
    Signed-off-by: Stephen M. Cameron <stephenmcameron@gmail.com>
    Add a Map Outfits Editor for selecting/unselecting entire systems
    
    Add the Map Editor window
            src/dev_mapedit.c
            src/dev_mapedit.h
            src/Makefile.am
    
    Add file name and description parameters to dsys_saveMap()
            src/dev_system.c
            src/dev_system.h
    
    Remove Save Map button from Universe Editor
            src/dev_uniedit.c
    
    Add an intermediate menu for Universe and Map Editors, that could accomodate other future editors
            src/menu.c
            src/menu.h
    Add a Map Outfits Editor for selecting/unselecting entire systems
    
    Add the Map Editor window
            src/dev_mapedit.c
            src/dev_mapedit.h
            src/Makefile.am
    
    Add file name and description parameters to dsys_saveMap()
            src/dev_system.c
            src/dev_system.h
    
    Remove Save Map button from Universe Editor
            src/dev_uniedit.c
    
    Add an intermediate menu for Universe and Map Editors, that could accomodate other future editors
            src/menu.c
            src/menu.h
    Fix warnings when building with clang
    Use array infrastructure for damagetypes.
    Fixed crashing when critical files not found.
    Fixed error messages referring to wrong file when not found.
    Made it so that even if critical files are not found, the game tries to load.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Add explanatory comments for damage type ship stat voodoo
    Allow damage types to associate themselves with arbitrary ship stats
    
    For the time being, these must be non-absolute doubles.
    * New planets get a nonzero radius.
    * Update radius when updating gfx.
    * Moved various path defines into ndata.h.
    Typo fix.
    * Bobbens OCD ftw (cleaned up stuff).
    * Renamed damagetype.xml stuff to be a bit more self descriptive.
    * Proper sanity check.
    * Outsource damage types to XML.
    * Note: still buggy.
    Use new __RW system and nlua_register() everywhere
    Make background script use global lua state
    Replace LuaTexture with glTexture**
    lua headers are system headers, include them that way
    * Doxygen.
    * Comments.
    * Added texture library for Lua.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Fixed the rest of the text colors.
    Added some more ngettext, simplified econ map description.
    Fixed issue with period not being read.
    Removed some externs.
    Fixed warnings.
    Ah, whoops, one more I missed.
    Fixed several strings and lack of gettext usage.
    Modified the way info about cargo is displayed to fix an issue.
    
    The previous way showed type of cargo, which is cool in theory, but it
    caused later info to be offset and disappear out of the bottom. Since
    it's theoretically possible for any number of different kinds of
    commodities to exist in one ship, I think it's best not to depend on
    being able to list all of them. Better to just say the total amount
    of cargo and be done with it.
    Modified the way escort launching is controlled so it can be monitored in real-time.
    
    The previous method was clunky and didn't allow monitoring changes
    to how many escorts you have deployed in real-time very well. So this
    is a HUGE overhaul in how that whole thing works. It solves a bug that
    prevented you from getting new fighters when your old fighters were
    destroyed, while still limiting how many you can launch at once.
    Make everything fuel related an int
    Tag everything related to fuel and using double with DELETETHIS_
    Changed escape code for colors from '\e' to '\a' so xgettext plays well with it.
    More gettext.
    Make LuaPilot an int instead of a struct, simplifying things
    Strip trailing whitespace
    * Keep "board" with the old behaviour and introduce "boarding" with the
    new one.
    Run pilot board hook for all pilot, not just player
    Correctly pass boarding ship to pilot board hook
    Make pilot_cargoAddRaw ignore free space
    
    This fixes an issue where the player's cargo could be lost on load. If
    a player had n tons of cargo and then reduced their capacity below n
    and quit, on next load they would lose any cargo over the limit, with
    mission cargo being handled no differently.
    
    As a side note, pilot_cargoAdd now takes a mission ID parameter, and
    most calls to pilot_cargoAddRaw have been replaced for safety.
    Prevent nebula damage from resetting shield timers
    Improve autonav abort conditions and control handling while disabled
    * Cosmetics et al.
    execute pilot... get only once
    Improve board action behavior when there is no target selected
    Fixed tab in indentation of a line.
    Removed DEBUG statement when stealing ammo.
    Ammo can now be looted from ships when boarding (only takes what you can carry and what's compatible).
    Fixed a crash when boarding ships with cargo.
    * Wrapper for nsnprintf being used all over.
    Silence some more warnings.
    At this point, j can never not be 0.
    * Boarding by pirates should work.
    * Boarding by pirates should work.
    * LLVM.
    * Fixed warning.
    * Paranoia.
    * Pirates will plunder your ship if it's disabled.
    * Outsource damage types to XML.
    * Note: still buggy.
    * Using fancy damage struct to prepare for generic disabling implementation.
    * Using fancy damage struct to prepare for generic disabling implementation.
    Many, many typo fixes.
    It's its not it's
    Set shield to 0 when triggering self-destruct, so the ship definitely dies.
    Guaranteed unboard when exiting to menu, even with the boarding window open.
    Added pilot.setActiveBoard(), allowing a ship to be boarded while not disabled; minor Luadoc clean up.
    * When ubnoadr is called, clear the boarded flag.
    * Do not let the player be teleported while landed, boarded nor hailing.
    * Polished up the relative crew stuff.
    here is my boarding android mod, right now, there are 2 models the mk I nad the mk2, which give you 20% and 35% more crew to increase your chance of success when boarding a ship.
    I'm still using the cargo_pod gfx, because i dont have any better graphics :X
    
    here is a summary of what i changed:
            modified:   dat/outfit.xml, added outfits Boarding Androids Mk I and II (tanks Deiz for the hillarious descriptions)
            modified:   dat/tech.xml,   added the Boarding AndroidsI&II to: High Tech Upgrades, Low Tech Upgrades; added Boarding Android Mk I to Basic Outfits 2.
            modified:   src/board.c,    changed board_tryStel(...) to use the modified crew value of the pilot and not the static one f the ship
            modified:   src/info.c,     changed ship_update(...) to use the modified crew value of the pilot.
            modified:   src/outfit.c,   added functionality to load <crew_rel> xml nodes .
            modified:   src/outfit.h    added variable double crew_rel to pilot.u.mod
            modified:   src/pilot.c     changed init to init the initial crew.
            modified:   src/pilot.h     added variable double crew to struct Pilot.
            modified:   src/pilot_outfit.c changed Pilot_calcStats stats to change pilot->crew acording to temp->u.mod.crew_rel
    * Implemented damage absorption, not set however.
    * Do boarding hooks before creating boarding window for those picky mission developers.
    * Separated the pilot cargo stuff into pilot_cargo.[ch].
    * Renamed some stuff to be more consistant.
    * Moved to more flexible hook parameter framework.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Instead of hardcoding 32 for credits2str buf length, added #define to make it much more sane.
    * Added hook infrastructure for returning parameters.
    * Added generic "board" and "hail" hooks.
    * Increased credits minimum buffer to 32. Fixed code to use 32 always.
    * Major refactoring of the pilot. It is now all contained in a struct.
    * Better money handling, credits shouldn't overflow anymore.
    * Stupid mistake.
    * Some changes to coloring for player messages.
    * Fixed FPE exception.
    * Added API to set pilot health or set noboard state.
    * Added function to forcibly unboard the player.
    * Fixed segfault.
    * Converted commodities back to int.
    * Changed commodities to doubles.
    * Properly display ship stats in the equipment window.
    * You can now recover disabled fighters from your fighter bay.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Pilots can refuel you now if you ask for it.
    * Have player get faction hit on the self-destruct.
    * Implemented boarding for AI pilots.
    * Fixed bug with not being able to steal fuel.
    * Removed all (improper) usage of strcat/strncat.
    * Missing '\n'.
    * Fixed some board fuel bugs, lowered fuel able to steal.
    * Implemented fuel stealing.  Needs more testing.
    * Tweaked the boarding messages and chances a bit.
    * Major toolkit change to simplify things a lot, makes it more object oriented.
    * Moving to target on pilot structure.
    * Fixed Pilot boarding hooks.
    * More doxygen and code cleanup.
    * Documented board.c.
    * Added punctuation to player_message()s.
    * Added two new pilot hooks: board and disable.
    * Made lua debug macros more verbose.
    * Code cleanup.
    new philosophy, when you swap ships your cargo stays with you, will fix issues
    type spotted by ahuillet
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    changed everything to use player->credits instead of player_credits
    branch:      naev
    fixed "none" not appearing when ship had no cargo
    branch:      naev
    tweaked board success chance values
    branch:      naev
    merchants now have cargo and you can board and steal it
    branch:      naev
    boarding text fixes
    branch:      naev
    big update, ai now controls ship's credits/loot, more API, pilot cargo stuff
    branch:      naev
    changed some player variable names, immproved outfit buying/selling
    branch:      naev
    improved  alot of things for shipyard, including shipyard
    branch:      naev
    fail now depends on crew comparison
    branch:      naev
    can only board once, can steal credits :)
    branch:      naev
    split the credit functions and improved boarding
    branch:      naev
    split boarding from player.c to board.c
    More handling borked outfit xml.
    Fix crash with invalid outfit xml.
    Remove outfits that failed to load.
    Forgot return.
    Don't crash with invalid outfit xml.
    ndata is dead! Long live ndata!
    Renamed "dumb"/"dumbfire" rockets to "unguided".
    
    The term "dumbfire" (which doesn't seem to be in common use outside
    of a select few video games) comes from the term "dumb", which is
    ableist on two counts: firstly, it's sanist because the meaning
    "dumbfire" is derived from is "stupid" or "of low intelligence".
    Secondly, the term "dumb" actually originates from ableism against
    mute people, albeit in the German language rather than English.
    
    The term is imprecise, anyway, so I've changed it to the more precise
    and non-ableist term, "unguided".
    All outfits can now add shipstats with <stats> tags.
    Added flat armour/shield modifiers.
    Added flat armour/shield regeneration modifiers.
    Added unique outfit property.
    Simplified duplicated code.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Outfits use rarity images too.
    Simplified rarity image selection logic.
    It is now possible to add overlay layers to outfits.
    Fixed up uses of "NA" -> "N/A"
    Simplified colors and modified image array selection colors.
    
    This gets rid of some variants of text coloring and defines them
    in a different way. The "dark" versions are removed; intending to
    replace that with outlines of some kind.
    Added translation targets for ALL the xml.
    More translation thoughout the game.
    warnings
    Check for file existence of PLG in the ndata.
    added warning for polygon length (and added new collision algo to changelog)
    warn when there is no polygon
    Fix a couple more memory leaks
    Fix some memory leaks
    update on polygon collision
    polygonal collision algorithm
    Corrected the formula.
    OK, we got it!
    
    I repurposed Jam Resistance to be used as "tracking" and adjusted
    the numbers. Seems to work pretty decently well.
    First pass at putting jam functionality into scramblers.
    
    It doesn't work right. The numbers are wrong. Need some help on that.
    Removed the "Asterokiller" distinction.
    Improved short description info of launchers.
    
    I took info that was previously only visible in the now-invisible
    ammo short descriptions, plus added some info (most importantly range)
    that was missing even in the ammo short descriptions previously. The
    result is a far more complete set of stats.
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Fix some missed conversions and remove one unnecessary rounding
    Make everything fuel related an int
    Tag everything related to fuel and using double with DELETETHIS_
    More gettext.
    Using ngettext for plurals.
    Changed escape code for colors from '\e' to '\a' so xgettext plays well with it.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Destroyable asteroids
    Changed the inrange computation method
    Fix typo
    Strip trailing whitespace
    Since switching to an enum, AI can never be <0
    Fix beam short descriptions
    Rework beams in accordance with the Beam Revamp proposal
    
    Beam refire delays now scale with how long they're fired, relative to
    their maximum duration. They can only be fired again once they reach
    full charge, however.
    Replace hard-coded ammo AI types with an enum
    Detect and warn about name collisions when loading outfits
    Square launchers' ew_target for comparison against squared hide values
    Remove all traces of the vestigial non-shipstat nebu_absorb_shield
    Factor ammo information into launcher descs and DPS calculations
    Optionally load outfits' default weapon group from XML
    Improve range calculations for missiles and other launched projectiles
    Remove obsolete hide_rel attribute
    Treat fighter bay delay as seconds, not milliseconds.
    Add a priority element to outfit XML for last-resort sorting
    Added nebu_absorb_shield shipstat
    
    Added nebu_absorb_shield shipstat, as well as a prototype outfit, nebula_shielding0,
    that uses it.  If a ship has nebu_absorb_shield, it will be applied to nebula damage
    in the same way that dmg_absorb is applied to normal damage.  Removed nebula_dmg_shield,
    nebula_dmg_armor, since they were presumably meant to do the same thing, but didn't
    have any real code attached to them in the damage calcs.  The Thurion Integrity will
    need to be updated, since it uses the old values, and since they didn't do anything,
    I have no way of knowing what -80 and -97 were supposed to mean in that context.
    I also added a nebu_absorb_armor shipstat as a placeholder, but it doesn't do anything
    yet.
    A tiny optimisation/readability improvement
    * Color code modification outfit "old school" stats.
    * Modifications show cpu again...
    added "ship.getSlots" lua function
    * sizeof(char) is always 1. No need to keep it around.
    * Minor optimization.
    * Fixed many minor memory leaks.
    properly place new line in Activated Outfit descriptions.
    * Memleak fixes and code clean up.
    * Reinstate <cpu> as common flat value.
    * Using <cpu_max> and <cpu_mod> as shipstat to increase/decrease maximum cpu.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Fixed another minor memleak.
    * More memleak clean up and cosmetics.
    * Moved disable damage near normal damage.
    Handle invalid nodes in maps without exploding.
    Refactored the afterburner patches a bit.
    * Scripted temperature thresholds for afterburners.
    * Afterburners support start, on, and end sounds.
    * Still needs to be done via the generic activated outfit framework.
    * Tweaked heat values.
    * Rewrote descriptions.
    * Some code for heat on afterburners. Todo:
    ** Show afterburner heat.
    ** Don't toggle afterburner when used via weapon group.
    remove unused #defines
    Default to type as desc_short for maps.
    Avoid invalid read by keeping outfit type lists the same length.
    * Whitespace.
    * Map planets too.
    * Added local maps.
    * Some code cleaning up.
    * hide_rel is replaced by ew_hide.
    * Display "only one can be equipped" for Jammers.
    * Modifiers can use energy_loss.
    * Jammers report positive CPU need.
    * Jammers use energy_loss, not energy_regen.
    Actived is not a word.
    Swap out the horrible hacks for something more elegant.
    Cast to silence a warning.
    As ndata and nfile implementations diverge, handle things separately.
    * Yo dawg I heard you like memleaks, so I put memleaks in your memleaks so you can leak while you leak.
    * Whitespace.
    * Trying to make code a bit more elegant.
    Recursing through directories without having a directory structure is awful.
    I wish there were another way, but this hideous pile of hackery seems to be the best solution for now.
    * Some fixes to ndata loading and sanity.
    Make outfit hide modifiers relative.
    Check for zero-mass bolt weapons (may cause divide by zero)
    * New planets get a nonzero radius.
    * Update radius when updating gfx.
    * Moved various path defines into ndata.h.
    * Wrapper for nsnprintf being used all over.
    load maps.
    load laid out outfits.
    * Removed superfluous checks.
    * Limit set on char not int.
    * More generic implementation for limiting outfits to 1 per ship.
    * Causes segfault at startup.
    * Implemented hide modification for modification outfits.
    * Scramblers work as intended now.
    * Added a scale factor for evasion (compared to hide). This ensures that pilots are always detected fuzzily before they are scanned, even when they're stationary.
    * Do not show CPU use as +.
    * Fixed outfits adding CPU when they should be using them.
    * Uniformized CPU semantics in outfit.xml.
    * Explicitly mention outfits which are activated.
    * Fixed outfit_getType(...).
    * Mention only one afterburner can be equipped at a time.
    fixed outfit short descriptions.
    * Merge thingy.
    * Afterburners have cooldown and duration (not used yet).
    * Display jam resistance.
    * Made all the colours constant as they should be.
    Removed now-obsolete "turret ammo" type, as regular ammo is handled properly in turrets.
    * Delay is a float not an int.
    * Delay is in seconds for all weapons now.
    * Beam delay and duration times were used improperly, fixed.
    * Beam duration and delays are both defined in seconds now.
    define maps short description in xml.
    * Fixed some warnings.
    add support for jump points
    maps load data, also can be added without crashing.
    maps load and unload
    malloc for now. should adjust headers to avoid the whole mess.
    adjusted map parsing
    * CPU value should be displayed as positive for jammer outfits as reported by Thra11.
    * OK, so outfits *seem* to work, but there's shit that still needs to get ironed out.
    * Added outfit_cooldown(...) and outfit_duration(...).
    * Added duration and cooldown options for active outfits (not used yet).
    * Made all slot and outfit sizes explicit.
    * Renamed "light" and "heavy" sizes "small" and "large" respectively.
    * Warn about outfit implicit slot sizes.
    * Implemented jammers as per BTAxis wishes.
    * LLVM.
    * Do not warn about lack of outfit price.
    * Yo dawg, I heard you like colours so I put colours in your...
    * Removed legacy mass_rel, crew_rel crap (use ship stats).
    * Danger when doing something like l += snprintf(&buf[l],MAX-l,...) as the size member is size_t and it will overwrite and fuck everything up.
    * Do relative health/movement upgrades through ship stats.
    * Added absorption to modifications "absorb".
    * Instead of defining engine per mass, define absolute and use engine mass limit.
    * Changed how stuff is handled and implemented.
    * Relative bonuses are applied after absolute ones.
    * Slots are now handled separately in xml.
    * Use the ship outfit slot as a reference and do not duplicate data.
    * Removed ununesd define.
    * Formatting.
    * Respect properties when equipping.
    * Outfits load properties now.
    * Moved outfit property to the outfit slot itself.
    * Outfits can be active (not able to activate them yet).
    * Better handling of stats, not entirely working yet.
    * Removed pointless pilot parameter from ListDesc.
    * Better handling of everything, still not done yet.
    * Actually make secondary weapon check check the secondary weapon bit.
    * Weapon set auto-handle now sets secondary weapons according to the secondary flag in XML, not according to weapon type.
    * Damage penetration needs normalization, spotted by Angelo.
    * Handle unknown damage types in outfit.xml.
    * Outsource damage types to XML.
    * Note: still buggy.
    * Changed xml API for outfit damage.
    * Properly load disable and not penetrate as disable.
    * Display disable it weapon descriptions.
    * Disable can now be loaded in the form of <damage type="energy" penetrate=10 disable=5>10</damage>.
    * Using fancy damage struct to prepare for generic disabling implementation.
    * Changed xml API for outfit damage.
    * Properly load disable and not penetrate as disable.
    * Display disable it weapon descriptions.
    * Disable can now be loaded in the form of <damage type="energy" penetrate=10 disable=5>10</damage>.
    * Using fancy damage struct to prepare for generic disabling implementation.
    * Fixed missile launcher warning logic.
    * Recharge rates in XML are now per second, not per minute.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    * Added missile arcs.
    * Check that seeker launchers have ew_target and lockon parameters.
    * Removed old missile lockon.
    Make sure buf isn't NULL before passing it to strcmp.
    Many, many typo fixes.
    * Fixed fighter bays not launching.
    Added a function to see if an outfit matches a slot's type without taking size into account.
    * Fixed fugly code.
    Allow separate nebula damage modifiers for shield and armour.
    * Try to fix the bloody credits mess.
    Remove apparently-nonsensical outfit damage modifications. Don't do drugs, kids.
    * Sort by names as tie-breakers.
    * Search stuff for outfits.
    * Added swivel weapons, may need more swivel.
    * Added concept of turret tracking and thus dynamic lead angle based on ewarfare.
    * Fixed warnings when loading graphics with interpolation disabled.
    * Ammo must have mass.
    * Modifications that give absolute turn should work again.
    * Missile and beam weapon turning should work well again.
    * Enabled lead angle.
    * Fixed afterburner issues.
    * Implemented mass limit for afterburners.
    * Outfits use heatup now. May still need more tweaking love, but it looks ok for now.
    here is my boarding android mod, right now, there are 2 models the mk I nad the mk2, which give you 20% and 35% more crew to increase your chance of success when boarding a ship.
    I'm still using the cargo_pod gfx, because i dont have any better graphics :X
    
    here is a summary of what i changed:
            modified:   dat/outfit.xml, added outfits Boarding Androids Mk I and II (tanks Deiz for the hillarious descriptions)
            modified:   dat/tech.xml,   added the Boarding AndroidsI&II to: High Tech Upgrades, Low Tech Upgrades; added Boarding Android Mk I to Basic Outfits 2.
            modified:   src/board.c,    changed board_tryStel(...) to use the modified crew value of the pilot and not the static one f the ship
            modified:   src/info.c,     changed ship_update(...) to use the modified crew value of the pilot.
            modified:   src/outfit.c,   added functionality to load <crew_rel> xml nodes .
            modified:   src/outfit.h    added variable double crew_rel to pilot.u.mod
            modified:   src/pilot.c     changed init to init the initial crew.
            modified:   src/pilot.h     added variable double crew to struct Pilot.
            modified:   src/pilot_outfit.c changed Pilot_calcStats stats to change pilot->crew acording to temp->u.mod.crew_rel
    * Load heat up parameter.
    * Removed references to "old" accuracy.
    * Display outfit damage penetration at the outfit overlays.
    * Load weapon damage penetration.
    * Implemented damage absorption, not set however.
    * Fixed beam weapons not displaying their damage type properly.
    * Properly process gui outfits.
    * Strict error checking for ship stats (including for mod outfits).
    * Strict error checking for invalid/unknown nodes in the outfits.
    * Renamed outfit_isWeapon to outfit_isForward to make sense (tm).
    * Added ability to add GUI outfits.
    * Get range of launchers if applicable.
    * Consider both launcher and ammo as seeker.
    * Code clean up, added concept of autoweap.
    Systems slot renamed to Utility.
    * Minor cosmetics.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    Migrating from High, Medium, Low + Heavy, Standard, Light to Weapon, Systems, Structure + Heavy, Medium, Light
    * Maps should have slot size NA.
    Updated sorting (now sorts slot type -> outfit type -> named type -> slot size -> price).
    * Slot sizes now indicated in the equipment window for outfits.
    Changed slot size colour scheme, minor usability fixes.
    * Converted some strcmp to strcasecmp to be more lenient.
    * Outfits get designated default sizes now.
    * Set default slot sizes for ships based on class.
    * You can only equip outfits that fit slot size now, however there is no slot size indication.
    * Reuse common code.
    * Ships check for outfit slot sizes too.
    * Added checks for slot size in outfits.
    * Initial implementation of slot size types.
    * Generating properly the outfit bolt weapon stats.
    * Basic core for generating csv output done.
    * Implemented weapon lockon and evasion.
    * Formatting.
    * Moving unidiff to new tech system.
    * Tech should free properly.
    * Added stuff to get outfits from tech.
    * Initial commit of tech stuff.
    * Interpolation should disable loading of interpolation graphics.
    * Better money handling, credits shouldn't overflow anymore.
    * Armour bonuses are now relative not absolute.
    * Generate stats of pilot based off of pilot.
    * Make ship stats desc rendering a bit more sane.
    * Using more generic functions for ShipStats stuff.
    * Improved nxml onlyNodes API.
    * Events also check for unknown nodes.
    * Detect invalid outfit nodes too.
    * Display slot type in outfit shopping window.
    * Simplified launchers and ammo.
    * Enormous diff that basically points out that bobbens' punctuation sucks.
    * Replaced outfit stack with the new library
    * Afterburners are only relative now.
    * Fixed beam description.
    * Fixed memory leaks.
    * Text/colour tweaks by Deiz.
    * Abbreviate energy/s EPS.
    * Bolt weapons now display energy/s.
    * Added decimal to energy regen from jammers so you can see the value.
    * Changed subtype to typename.
    * Also sort the player's equipment outfits.
    * Using qsort() for sorting outfits.
    * Introduced type and subtype overrides.
    * Changed outfit presentation a bit.
    * Display weight in equipment window.
    * Made movement upgrades somewhat relative.
    * Added relative mass.
    * Tweaked armour values.
    * Automatically reload outfits.
    * Fighter bays work again.
    * Added outfit to Fighter Bays.
    * Automatically add ammo if available.
    * You must specify modification cpu value as negative.
    * Fixed bug in displaying low outfit overlay.
    * Modified it so some things do display with one decimal.
    * Don't display decimals with outfits/ship stuff.
    * Added amounts to launchers.
    * Don't need to multiply by 1000.
    * Modified outfit short descriptions somewhat.
    * Fixed adding of outfits.
    * Improved handling of mass.
    * Ammo shouldn't necessarily have energy requirement.
    * Removed uneeded linebreak.
    * All outfits have short descriptions.
    * Fixed "memory leak".
    * Added concept of short description for outfits.
    * Added the CPU bar.
    * Not all outfits need slot types.
    * Load CPU.
    * Compiles cleanly - nothing works.
    * Implemented <sound_hit>.
    * Take into account falloff in range.
    * Using gfx_end instead of hues.  Weapons render with gfx_end.
    * Use mipmaps for stuff that is scaling now.
    * Was going wrong way.
    * Get shortest HSV route.
    * Better handling of hues in blot weapons.
    * Bolt weapons can now work with HSV colourspace (only hue) if you are so inclined.
    * Fixed misinitialization.
    * Added blowup properties to outfits so they blowup when they time out.
    * Removed obsolete @fn.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * New outfit.
    * Fixed a silly typo bug in weapon.c.
    * Ammunition can now have accuracy (missiles and such).
    * Added flags to image creation to control transparency mapping.  Should speed up theloading some and reduce memory usage.
    * More doxygen.
    * Even more doxygen.
    * First large ndata patch.
    * Moved xml.h to nxml.h.
    * Added more complicated xml parse functions in nxml.c.
    * Added support for different armour/shield hit animations.
    * Fixed harmless memory leaks.
    * First implementation of Licenses.
    * Minimize data usage.
    * Improved outfit loading some.
    * Have FighterBays and Launchers actually link to their ammo (prevents realloc after loading though).
    * Escorts work, sort of.
    * Added much more escort stuff.
    * Implemented volatility damage.
    * Reduced calls to xmlCleanupParser(), only one for all the loading now.
    * Made outfit_getTech return outfits, not names.
    * Fixed some long-term snprintf mistakes.
    * Added faction logos.
    * Display faction logos on land.
    * outfit.c: Cleaned up some code.
    * You can now sell your ships.
    * Code cleanup.
    * Beam weapons require spfx now.
    * Proper beam spfx usage.
    * Remove startup warning about missing turn element on non-turret beams.
    * Added sounds to beam weapons.  Sound system needs overhaul for it to be better.
    * Beam weapons now properly use graphics.
    * More improvements for beam turrets.
    * Beam weapons now use delay and duration.
    * Finished doxygenization of outfits.
    * Split beam/bolt loading logic.
    * Making some more room for beam weapons.
    * Doxygenized outfit.h.
    * Dvaereds get mace rockets.
    * AI now uses more weapon types and more wisely.
    * New Outfit: Mace Rocket.
    * Implemented dumb missiles.
    * Redid entire sound system with SDL_mixer.
    * Improves enemy ai: they hit a lot now.
    * Improves turret ai: should also hit a lot now.
    * Improved the global attack() ai.
    * Updated TODO.
    * Fixed missile resist being 100 times stronger.
    * Missiles can now resist jamming.
    * Forgot to change energy units of jammer.
    * Jammers now loaded (not used yet).
    * Warn if outfit not found.
    * Pilots now keep track of how many weapons are locked onto them.
    * Knockback now dependent on DamageType.
    * AI now calculates optimal distance when shooting.
    * Switched weapon timer method to something more sane.
    * Put turrets before misiles.
    * Outfit_getTech now sorts by type and price.
    * Let radiation weapons do a bit morne shield damage.
    * map.c: Fixed segfault when landing.
    * New Outfit: Star Map.
    * No longer using int ids for outfit.xml outfit types.
    * Fixed typo.
    * Added new damage types:  Ion and Radiation.
    big assorted patch, adds afterburner noise
    switched from damage_armour and friends to just damage and damagetype
    rumble of the afterburners is now in outfit.xml
    mods can now add cargo, added cargo pod as an example, fixed rmOutfit bug
    preparing for adding fuel into game
    cleaned up some xml parsing stuff
    started :retabbing (spaces only) and fixed some xml issues
    branch:      naev
    added afterburners
    branch:      naev
    added stare outfit graphics
    branch:      naev
    added support for modification upgrades and a few examples
    branch:      naev
    energy matters and is actively used now
    branch:      naev
    implemented special techs
    branch:      naev
    preliminary tech support (only raw, no special tech yet)
    branch:      naev
    bolt->blt not wpn and added a new ship and outfit (outfit needs gfx)
    branch:      naev
    can now buy outfits
    branch:      naev
    added turrets
    branch:      naev
    gave outfits/ships prices
    branch:      naev
    capitalized loading debug
    branch:      naev
    compressed the debug messages
    branch:      naev
    now compiles with -std=c99, also fixed major union alignment issue
    branch:      naev
    missiles now have a lockon time
    branch:      naev
    you can define spfx per outfit, fixed major memory issue
    branch:      naev
    you can now disable sound in conf or by CLI
    more MELEMENT fixes
    branch:      naev
    can now play if sound doesn't work
    branch:      naev
    some code cleanup (MELEMENT sanity)
    added information and ship spec windows
    some more comments here and there
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] added sound support base, for some reason seems to crash the game alot
    not in usage
    branch:      naev
    [svn] added more sounds
    sound engine should be working ,but isn't tuned enough yet
    branch:      naev
    [svn] Basic toolkit implementation (but ugly)
    Basic landing
    Pause bugfixes
    branch:      naev
    [svn] AI can now use secondary weapons
    branch:      naev
    [svn] switched to commonwealth spelling (armor -> armour)
    implemented seeker missiles and ammo
    implemented secondary weapons
    branch:      naev
    [svn] fixed AI landing (still too loose for my tast though)
    cleaned up some code
    more xml macros
    branch:      naev
    [svn] combined xmlness in single header file
    rewrote player.c to use new xml syntax
    branch:      naev
    [svn] GUI are now saved in XML datafile
    this allows multiple guis
    each ship can have it's own GUI too :)
    branch:      naev
    [svn] much more error checking in the xml
    fleets are built in - just need to do something with them
    minor tweaks and fixes
    branch:      naev
    [svn] lasers fade out
    minor tweaks
    fixed all memleaks
    just need some collision detection now
    branch:      naev
    [svn] rudimentary shooting system, needs work
    branch:      naev
    [svn] yeah, forgot the new stuff
    replaced some sprintf with nsnprintf.
    Replace jump_getTarget() with JumpPoint.returnJump where appropriate.
    
    Hurray for less looping!
    Add some convenience fields to JumpPoint
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Added system name to message.
    Warn about volatile systems when entering.
    added lua function to create gatherable object and hook for gathering
    Added a symbol for planets that are uninhabited but can be landed on.
    
    I chose "=" for this. Currently only seen for Eiroik.
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Added symbols for faction text on the map screen, and for ship stats
    
    This is an accessibility feature for those who are colorblind. You
    no longer need color vision to see this information.
    
    Based on the idea we had before to use emojis, but using ASCII instead.
    The biggest advantage of this is that it can just be directly inserted
    into the text rather than having to worry about positioning the symbols
    manually.
    Simplified colors and modified image array selection colors.
    
    This gets rid of some variants of text coloring and defines them
    in a different way. The "dark" versions are removed; intending to
    replace that with outlines of some kind.
    Fixed bracket placement.
    Make it impossible to target unknown or out of range objects
    system_getPresence return positive or zero value
    Fixed up lots of style errors, removed travel log at least partly
    
    Please look over this, but I had a go at removing the travel logs.
    Didn't do any testing beyond making sure it compiles. I was exhausted
    by all the things I was compelled to fix and just had to stop. I
    *think* I removed the travel log stuff though.
    
    A note on style: you consistently get a lot of style wrong and it's
    a pain to correct. Please take a look at some of the fixes I've made
    here and make further adjustments following this.
    
    In addition to the kinds of style errors I fixed, I also noticed you
    using printf to print warnings. You should *not* do this; Naev has a
    macro specifically designed for warnings, the `WARN` macro. You should
    *always* use macros like this (`WARN`, `DEBUG`, or `ERR` depending
    on the situation) for a whole host of reasons, not least of which is
    that these macros do more than just print a message. You need to fix
    all of these uses of `printf`. It's never something you should be using
    in Naev code.
    
    🕵️
    Initial mission log work completed.
    Initial mission log work completed.
    Rewrote so that unidiff now recalculates entire economy, but doesn't erase player knowledge.
    Fixed unidiff issue - applying a unidiff of any time would wipe the players economy history (including in any new saves)
    Made it so that commodities only exist on planets with the service.
    Warnings.
    Fixed issue with period not being read.
    Removed some externs.
    Fixed warnings.
    Don't remove negative presences, as they can cancel out neighbouring effects.
    support for standard commodities
    Added npc person to give economy information, which then gets added to the player's knowledge.
    Changed fabs to FABS throughout the code.
    Working on adding a person in the bar to give economy information
    Added economy statistics and last purchase price, including saving of economy data
    Added cleaning up of new economy memory
    Removed tabs, replaced with 3 spaces
    Further tidying up ready for pull request into main branch
    Cleaned up code, and refactored the sinusoidal economy part
    Adding simusoidal economy parameters
    Fix a couple more memory leaks
    Fix some memory leaks
    Memset only changing pointer, not pointed value.
    Render asteroid debris under nebula, add asteroid field to Sol.
    
    Debris was being rendered on top of the nebula overlay, which looked
    silly and made no sense. I've moved it up so that this debris renders
    before (and therefore under) the nebula overlay.
    
    Also added a large asteroid field to Sol to represent destroyed planets.
    Increased asteroid explosion frequency a bit more.
    Increased frequency of asteroid explosions.
    Made asteroids occasionally randomly explode.
    
    This was an idea I had that I mentioned on Discord to add a bit of an
    element of danger to asteroid fields. Asteroids now randomly sometimes
    explode in intervals, and they explode when leaving asteroid zones too
    rather than "shrinking". These explosions don't yield gatherables.
    
    Also added playing of explosion sound effects when asteroids explode.
    Added support for exclusion zones.
    
    I also had to clean up some code (magic numbers in particular, replaced
    with an enum). There is an example exclusion zone in Lapis.
    Replaced the polygon definition of asteroid fields with simple circles.
    
    I kind of get why it was implemented that way: you can define all kinds
    of wacky shapes real easily. But in the vast majority of cases don't
    need that, and it makes defining asteroid fields needlessly complicated.
    In the few cases where complicated shapes might be needed, it's easy
    enough to approximate shapes with a series of circles.
    
    The code is much simpler, too.
    
    Display in the map editor has been removed at least temporarily.
    Hopefully should add it back in later.
    Added damage checks for asteroids.
    
    Asteroids now take "armour" damage until they lose said "armour",
    rather than being instantly destroyed.
    Fixed the music so it plays combat music correctly.
    
    There were a few parts to this. In a nutshell:
    
    1. Fixed the way enemies are counted so that disabled pilots are properly
       accounted for (previously a disabled and then destroyed enemy would
       decrease the enemy counter twice, for instance).
    
    2. Removed the unnecessary requirement for the enemy becoming hostile
       to be the first enemy before setting combat music. (Lua already takes
       care of this, so the check in C was redundant.)
    
    3. Fixed choose_combat Lua function so that if it finds that it's already
       playing, it still marks itself as the last music played (important because
       otherwise "ambient" is always set to "last" when jumping in, and music for
       missions ends up getting set before "idle" plays but after "ambient";
       if previous system had been playing combat music it would catch this and
       then not record itself as the "last" type, leading to ambient being "last"
       even though combat really was).
    
    TL;DR: combat music now plays correctly, 100% of the time. No strange cases
    of ambient music when you're fighting a gigantic horde of pirates.
    Fix some undefined behavior caught by ubsan
    Should fix an minor off by one memory copy (#874).
    Modified the way escort launching is controlled so it can be monitored in real-time.
    
    The previous method was clunky and didn't allow monitoring changes
    to how many escorts you have deployed in real-time very well. So this
    is a HUGE overhaul in how that whole thing works. It solves a bug that
    prevented you from getting new fighters when your old fighters were
    destroyed, while still limiting how many you can launch at once.
    * aera -> area
    Do not persist escorts on takeoff
    
    This was resulting in duplicated escorts.
    SOLVED #826 : removed debug logs after issue is solved
    Fixed issue : copy field corners into 1st subset corners
    Added logs on asteroids load ; issue lies in convex subsets generation.
    Fixed a bug that allowed you to buy maps with no new information.
    
    The bug was caused when there were destroyed assets within the map.
    Whether or not the asset actually existed was not being checked,
    so you could always buy the map again and again, wasting your
    credits. Fixed by considering any planet that either doesn't exist
    or is outside of the planetname_stack to be "known". This fixes the
    problem and doesn't seem to have any unintended side-effects.
    
    Big thanks to both bobbens and BTAxis for helping me navigate the
    code on this one.
    Fixed a bug that allowed you to buy maps with no new information.
    
    The bug was caused when there were destroyed assets within the map.
    Whether or not the asset actually existed was not being checked,
    so you could always buy the map again and again, wasting your
    credits. Fixed by considering any planet that either doesn't exist
    or is outside of the planetname_stack to be "known". This fixes the
    problem and doesn't seem to have any unintended side-effects.
    
    Big thanks to both bobbens and BTAxis for helping me navigate the
    code on this one.
    Make everything fuel related an int
    Tag everything related to fuel and using double with DELETETHIS_
    modifications on asteroids
    misc update on mining
    made mining more user-friendly
    Fix some allocations
    Alignement
    Using ngettext for plurals.
    More gettext.
    Changed escape code for colors from '\e' to '\a' so xgettext plays well with it.
    Added TODO.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Fixed blackmarket name.
    
    "Black Market" -> "Blackmarket". Because it's simpler for Lua.
    Converted the "blackmarket" flag to a "blackmarket" service.
    
    This is cleaner, and it's an easy way to make adjusting this property
    in the editor possible. The "blackmarket" flag outside of the assets
    is still supported for compatibility.
    Enabled mining and added variety to the fields
    Destroyable asteroids
    Fixed off by one memory read.
    Fixed minor memory leaks.
    Made asteroid fields ID a string.
    manage different kinds of asteroids
    Added player-rendered debris
    added management of non-convex fields
    Made required changes
    Added a new field, corrected Euler and added the stabilization step
    corrected a crash, added radar display of asteroids and display on map editor
    added graphical variation among asteroids
    added decorative asteroids
    Remove unused SystemFleet
    Revert "Call getfenv in nlua_pcall() eliminating the need to pass the"
    
    This reverts commit 79e36c0c1bbca2aa5fa2922651dd303bc7b87882.
    Call getfenv in nlua_pcall() eliminating the need to pass the
    environment as an argument
    Use new __RW system and nlua_register() everywhere
    Set __RW for each env
    Use nlua_pcall() almost everywhere
    Make landing script run in global lua state
    Make faction scripts run in global lua state
    Make LuaPlanet an int instead of struct
    Make LuaPilot an int instead of a struct, simplifying things
    Invert presence sort order instead of iterating backward
    Fix off-by-one (for single-presence systems)
    Minor optimization to system_setFaction
    
    Since it was iterating forwards and using the last (largest) presence,
    it's quicker to iterate backwards and bail on the first match.
    Strip trailing whitespace
    Memory leak fix
    Modify the economy updating model
    
    Galaxy-modifying functions (adding or removing planets, etc.) now only
    queue an economy update, with the caller being responsible for running
    the update via economy_execQueued.
    
    The main benefit is that diffs now only cause one economy update, when
    they prevously did an update for each jump or planet. Economy updates
    were the single largest time-sink when loading, particularly if a
    diff cleanup was necessary.
    Improved handling of saves with invalid locations
    Revoke land authorization if reputation dips too low
    
    This is a minor exploit, and based on discussions on IRC, the landing model
    may end up being fully revamped in the future. Regardless, I think this fix
    is useful for the time being.
    Prevent nebula damage from resetting shield timers
    Avoid minor memory leak
    Changed planet classes from enum to plain strings.
    
    The Naev engine wasn't doing anything in particular with explicitly
    defined classes. If anything were to be done, it would be in Lua,
    and that only sees strings anyway. Just changing it to strings makes
    it more flexible without losing anything.
    Changed "black market" to a flag, not a variable.
    
    To conform with the rest of the code.
    Added the capability for "black market" planets.
    
    Quite simply, a "black market" planet ignores licenses: the player
    can buy anything from a black market planet, regardless of what
    licenses would normally be required. Black market planets are
    indicated by the <blackmarket/> XML tag.
    Properly prevent exit-only jumps from being targeted
    Added nebu_absorb_shield shipstat
    
    Added nebu_absorb_shield shipstat, as well as a prototype outfit, nebula_shielding0,
    that uses it.  If a ship has nebu_absorb_shield, it will be applied to nebula damage
    in the same way that dmg_absorb is applied to normal damage.  Removed nebula_dmg_shield,
    nebula_dmg_armor, since they were presumably meant to do the same thing, but didn't
    have any real code attached to them in the damage calcs.  The Thurion Integrity will
    need to be updated, since it uses the old values, and since they didn't do anything,
    I have no way of knowing what -80 and -97 were supposed to mean in that context.
    I also added a nebu_absorb_armor shipstat as a placeholder, but it doesn't do anything
    yet.
    * Turns out we can't do A*.
    * Sanitized hidden jump point handling.
    * jumpDist and adjacentSystems now by default IGNORES hidden jump points, if
      you want to actually handle them, there is a new hidden parameter that lets
      you change the behaviour to how it was beforeish, except it now is
      consistant.
    * Actually using A* with an admissible heuristic now yay.
    * You can change asset faction with unidiff now.
    * Horrible code duplication to get around the fact that jump point XML is only parsed when adding a jump.
    * Reworked the jump point unidiff format.
    ** All jump point parameters are now attributes, not subnodes, in keeping with the existing unidiff syntax.
    ** x and y parameters are optional, if omitted the jump point will be auto-positioned.
    ** hide parameter is optional.
    ** type parameter is optional and can be either "hidden" or "exitonly".
    * sizeof(char) is always 1. No need to keep it around.
    * Fixed minor memory leak.
    * Fixed many minor memory leaks.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Memleak fixes and code clean up.
    * Hidden jump points can now be detected by ships that have the "hidden jump detect" ship stat.
    * Added a hidden jump scanner (activated) that provides said stat.
    * More minor memleak fixage.
    * Fixed more memory leakage.
    * Whitespace.
    * Minor formatting.
    * Fixed memory leaks on load.
    * Disable commodity warnings.
    * Do not reset heat when initializing a system, but do reset heat when landing.
    remove unused #defines
    * Should be more robust to invalid classes for assets.
    Prune presences as necessary when applying unidiffs.
    Remove negative-value presences when cleaning up.
    nfile_* functions do not work with ndata.
    * Fixed loading of graphics.
    * New planets get a nonzero radius.
    * Update radius when updating gfx.
    * Moved various path defines into ndata.h.
    * Wrapper for nsnprintf being used all over.
    * Sanity check for space_sysReachable.
    save more.
    xml errors don't have to be fatal.
    load systems from laid out data
    load laid out planets
    Turns out it's bad to treat NULL as if it's a system.
    Recalculate presences when changing things in the editor.
    * Fixed crash.
    * Keep cur_system sane in case of realloc.
    * Removed all references to asteroids. Not implemented, will never be implemented this way.
    i and j are subtly different.
    Squared values used in the planet and jump inRange functions so that hide values (sourced from XML) are linear.
    INFINITY is ill-suited to representing angles.
    Use INFINITY constant instead of fixed value.
    * I decree from this day henceforth that bobbens will not code when sleep deprived at work.
    * I don't always write patches, but when I do they're copy-paste coding bugs.
    * Push jump for discover hook.
    Created a planet_setFlag wrapper to avoid marking virtual assets as known.
    * Put a do { } while(0) around all the xmlw_* routines to ensure they are sane and not messing with my ifs.
    * Added discover hook.
    * Minor cosmetics and constantness.
    * Made parameter in jump_get const.
    * More usage of jump_getTarget.
    * Added jump_getTarget.
    * Doxygen.
    First set of highway jumps is in-game, no need for forced buoy display.
    Quick-and-dirty implementation of jump buoys that flank highway jump points.
    no autodiscovery while simulating.
    * Colour coding for discovered planet.
    * Display a message when discovering an asset or jump.
    presence doesn't spill through hidden and exitonly jumps
    * Made all the colours constant as they should be.
    remove jump point type in favor of flags
    removed all traces of the onMap system
    * Nitpicking cosmetics.
    whitespace
    comments
    old saves load now.
    old saves crashed because of the new known structure in saves.
    a simple check dodges the crash.
    an else statement with the old load code keeps as much info as possible
    remove a jump point type
    a highway jump point is just a regular one with a hide value of 0.
    this simplifies things a bit.
    reset planet and jump known flags on load.
    exiting a game and reloading without exiting naev caused
    previously known planets and jump points to remain known.
    the known flags are now reset
    dont render exit only jump points
    can unidiff jump points
    fixed maps, pathfinding, and jump detection
    remove warnings and redundant code
    ssys.xml has new jump properties
    jump properties are saved and loaded.
    also, editor saves additional properties
    more jump stuff
    system map respects unknown jump points
    initial commit for hidden jump points.
    jump points can be discovered, and known state is saved
    planets are now on maps.
    support for asset hide flag. also, interference
    whitespace
    planets save in the save file. are remembered past game exit
    planets are now remembered
    set planet known flag if in range
    * Clear locks when player enters a new system.
    * You can toggle spawning of specific factions now.
    * Variable fuel consumption.
    Fix two memory leaks, one failing to free a returned array in space.c, one failing to free the last news item line in news.c
    * Implemented instant jumping on new stats architecture.
    * Better handling of system presence.
    * Whitespace.
    * Outsource damage types to XML.
    * Note: still buggy.
    * Added planet.getLandable().
    * Refactored code.
    * Cleaned up code.
    * Using fancy damage struct to prepare for generic disabling implementation.
    * Using fancy damage struct to prepare for generic disabling implementation.
    Update call site.
    * Lua can now force allow the player to land.
    Comment the inhabited && population == 0 check for now, pending potential removal.
    Don't save jump position when autopos flag is set. Set a default radius instead of requiring explicit declaration.
    Prune trailing whitespace.
    Whitespace, typo and general style cleanup.
    Made the function that gets a planet class from its char non-static; Added functions to get a service's bit from its name and vice versa.
    Minor fixes and dead code clean-up.
    Minor fixes and dead code clean-up.
    Fixed-totally irrelevant edge case where there are no planets (or no reachable planets) in the galaxy. Of course, it will still crash on load... but it lasts six lines longer!
    Run a GUI function when faction relationships change. Reduced the number of API calls the Slim GUI makes each frame.
    Fixed inaccurate doc.
    Bribing should trigger when *not* landable.
    * Improved handling of stuff - like them tricksy planet landing colours and such.
    * Fancier behaviour, more explicit.
    * Update space land messages with faction changes.
    * Basic implementation works, probably quirky all over.
    * Whitespace.
    * Initial implementation of landing lua. Not actually used yet.
    * Factions can now use Lua to mess with actual faction hits.
    Many, many typo fixes.
    * More minor correctness.
    * Should fix a stack imbalance.
    * Spawn Lua errors should produce stack traces now.
    It's its not it's
    Scale map faction circles based on faction presence.
    * Fixed new gcc -Wunused-but-set-variable warnings.
    * Whitespace.
    Allow separate nebula damage modifiers for shield and armour.
    * Nebula resistance should be nebula damage.
    * Added nebula resistance.
    Ensure a planet's system is truly reachable prior to returning it (avoids getting the tutorial systems from the main galaxy, etc.)
    * Minor fixes and tweaks.
    * Try to fix the bloody credits mess.
    Return distance (or angle) when getting the nearest asset.
    Added function for getting assets nearest to an angle extending from a given pair of coordinates.
    * Don't display superfluous "preparing for hyperspace" messages (fixes issue 94)..
    Added two new Lua API functions, for enabling or disabling the ability to jump or land for each pilot.
    * Fixed segfault when jumping.
    * Added API to get price at a system (both C and Lua).
    Changed time displays to use hSTU - 1 hSTU is 1% of a STP.
    * Implemented more ship stats.
    * Only switch to ambient song when player is valid (aka let load song play).
    * Using our horrible slow implementation of strcasestr.
    * Finds and sorts systems with partial matches.
    * Fixed time drift when loading game (due to simulation update increasing time).
    * Do not render nebula overlay when on the main menu.
    * Not testing fixes because of stupid broken drivers is bad mmkay?
    * Should avoid segfaults when adding new planets to systems.
    * New time system. As seen on wiki.
    * Invincible or invisible ships take no damage evar!
    * Centralized the game start information.
    * New player should have the system he'll start in as a background when writing name.
    * Implemented damage absorption, not set however.
    * Use radius metadata from planet image if applicable.
    * Hacked in fancier realloc model. Should use array stuff ,but this is ok for now.
    * Fixed segfault when accidently targetting virtual asset with mouse click.
    * You can now select planets and jumps from the overlay map.
    * Clear markers when jumping.
    * Refresh the map overlay when player changes system.
    * Clang.
    * Fixed another clang error.
    * Added all the heat framework.
    * Made the planet Lua stuff also much more robust vs addition of planets.
    * Added support for per-system backgrounds.
    * Support for script to set backgrounds.
    * Renamed background_cleanup background_clear.
    * Implemented background images, not usable yet.
    * Split star background stuff from space stuff.
    * Added check for duplicate jumps in a system.
    * Run update_system in the gui when changing systems.
    * Made code more elegant.
    * Map searching is case insensitive.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Default matrix mode is now GL_PROJECTION. No longer need to always change.
    * player.teleport() should no longer segfault with invalid parameters.
    * Removed warning.
    * No longer using SDL_image.
    * npng.c now handles PNG file loading and the likes.
    * Disabled sound when simulating system.
    * Implemented the basic advanced mission markers as per the proposal.
    * Fixed really minor memory leak.
    * Fixed another memory leak.
    * Fixed memory leak.
    * Fixed minor memory issue.
    * Tweaked default planet radius, it's now 80% of (w+h)/2., however targetting looks like normal.
    * Fix some Lua issues causing crashes.
    * Using decrease function in spawn scripts.
    * Using planet radius now instead of graphic size for planet size assumptions.
    * Load planet graphics on demand.
    NPCs now take damage in volatible systems. Player no longer takes 15 seconds of damage when entering such systems.
    * Don't spam player with messages when simulating system.
    * Simulate system for 15 seconds before player enters.
    * Pilots now lose presence when disabled or deleted.
    * More sane spawning script, still some issues with some stuff.
    * Do not segfault when spawn script epically fails.
    * Changed how the pilots are returned internally from spawn script.
    * Set per pilot faction presence.
    * It seems like the faction spawning scripts can work now.
    * No need to be explicit about setting stuff NULL if virtual.
    * End of transition. Commit now loads only the new format.
    * Better handling of virtual/real assets, especially when saving asset.xml.
    * Code cosmetics.
    * Removed prodfactor and disabled "dynamic" economy for now.
    * Fixed segfault when using range for faction presence.
    * Planets with faction should have presence, warn otherwise.
    * Cosmetics.
    * Renamed and made some functions static to avoid namespacing issues.
    * Shouldn't segfault nor load fleets now.
    * Compiles.
    * Tech unidiff is working.
    * Fixed tech loading.
    * Fixed tech saving.
    * Added test tech.
    * Tech stuff should load and write properly now.
    * Terribly hacky way to make the planet Class tag non-empty for new planets.
    * Terribly hacky way to change a planet's appearance in the editor.
    * Fixed issue with planet saving.
    * Initial commit of planet saving code.
    * You can now add new planets.
    * Converted what should be warnings into actual warnings.
    * Allow creation of new planets online.
    * Fixed stupid bug with flags not being detected when parsing jump points.
    * Fixed bug in jump loading.
    * Fancier jump reconstruction algorithm which takes into account AUTOPOS flag among other things.
    * Automagically adding autopos tag to all jump points.
    * Automagicalyl adding radius tag to all systems.
    * Fixed bad jump reconstruction causing segfaults in the editor.
    * Reconstruct jump routes when systems realloc.
    * Stupid mistakes mean stupid segfaults.
    * You can now add new systems.
    * Star length is now 250 like star buf.
    * Stars now streak the other way.
    * Fixed issue where I fucked it up.
    * Stars keep moving during the hyperspace sequence.
    * Fixed bug with NPC ships jumping in facing weird directions.
    * Should fix segfault when NPC doesn't find landable planet.
    * NPC pilots now jump in from jump points.
    * Added some rerro to jump entry position.
    * Tweaked it so the player enters at the appropriate jump point.
    * Displaying triangles correctly for jump points.
    * You can only jump from jump points. NOTE: Breaks everything.
    * Moved nav_hyperspace and nav_planet to pilot instead of player struct.
    * Major refactoring of the pilot. It is now all contained in a struct.
    * Give the jump points heading.
    * Renders the jump points - not visible on minimap yet nor do they rotate.
    * Using new jump point system, behaves exactly the same as the old system.
    * Added new files to compile chain.
    * It should all actually compile now.
    * Added function for saving star systems.
    * Prevented "could not find a fleet" spam.
    * Added NULL check in system_rmFleet.
    * Removed pilot chance.
    * Removed fleetgroups.
    * Tweaked some numbers
    
    Chance of spawning in-system is 50%, down from 66.67%.
    Spawning time now has a variance of +/-20%, up from 10%.
    * Fixed chaining chance.
    * Fixed pilots not having systemFleet updated.
    * Fixed memmove size bug.
    * Fixed fleet chaining on init == 2.
    
    If the previous fleet was created on init, the chained fleet is also created as if it was on init.
    * Added fleet chaining.
    * Increased chance of in-system start to ~66%
    * Dead/disabled/left pilots reduce the used presence.
    * Fleets use up presence when they spawn.
    Unreinstated pilot chance.
    
    This reverts commit 5225bd915e36b7364baace3f00de5cf3847290f6.
    * Fixed spawn and message spams.
    * Removed remnants of old security system.
    
    Lua sys:security() function is now marked obsolete. It, for now, returns friendly / all presence.
    * HACK for infinite loop(presence no fleets) bug.
    * Fixed inverse presence bug.
    * Fixed wrong faction fleet bug.
    * Fixed typo and removed debug WARN.
    * Reinstated pilot chance.
    * Changed init possible state chances.
    
    From en route/landed/incoming 50/25/25 to 50/50/0.
    Also, a comment update.
    * Added init scheduling.
    
    The scheduler is called with init == 2 on initialisation.
    This allows it to start fleets off landed and en route.
    * Using new scheduler.
    
    Currently does not respect cap or spawn at start.
    * Hyperspace should no longer be impeded by unreal assets.
    * Prevented Lua from getting unreal assets.
    * Added NULL checks/WARNs and a comment.
    * Comment updates.
    * Added presenceCleanup.
    
    Value 0 presences are now removed.
    * Comments.
    * Added amount != 0 check to system_addPresence().
    * Using new presence struct, and related changes.
    
    faction_nstack is no longer externed in space.c.
    Using faction_isFaction() call instead.
    Added public system_getPresence() function, which returns the presence for a faction in a system.
    * Renamed addPresence with system_ prefix.
    * Clearing spill variable after empty queue.
    * Cosmetics.
    * Fixed range issue.
    * Fixed presence addition while loading.
    * Fixed major "minor" typos.
    * Unidiff planets now affect presence.
    * Unreal assets no longer count towards ownership.
    * Fixed presence overspill bug.
    * Systems no longer filled for unreal planets.
    * Added spillage.
    * Set values to NULL for unreal assets.
    * Added faction out of bounds checking.
    * Freeing memory.
    * Moved array allocation.
    * Removed unused variables.
    * Renamed planet to asset.
    
    "Unreal" assets are allowed. An asset is "unreal" if it has no <pos> tag.
    planet.xml has been renamed to asset.xml
    Checks are in place to ensure that "unreal" assets are not used where only "real" assets should be.
    * Style edit.
    
    Removed braces.
    * Changed presence to be read from XML.
    * Some changes to coloring for player messages.
    * Cleaned up the horrible hack.
    
    I now fail slightly less at global variables.
    * Added per-faction presence view.
    * Services are more specifically defined now.
    * Fleet ratings are read in from XML
    * Changed security to presence
    
    It now shows guard/hostile presence for systems.
    * Added manual control for AI.
    * Fixed some long standing bugs in AI.
    * Decreased code footprint in nlua_pilot.c
    * Misc fixes.
    * Fixed more potential bugs.
    * More bugs detected with scan-build.
    * Check for unknown nodes in planets and star systems.
    * Changed zoom lingo to near/far.
    * Whitespace.
    * Tweaked security algorithm a bit - make mass not matter as much.
    * Made security dependent on mass.
    * Fewer stars then there should be.
    * You can now modulate star zoom.
    * Fixed star overflow.
    * More correctness.
    * Correctness fix.
    * Stars now zoom in/out properly.
    * Allow initializing/rendering stars outside of internal space functions.
    * Shouldn't blow up as much with bad data.
    * Fixed bug with shooting too many shots first shot.
    * Made fastest stars be as fast as the player, to give a reference of speed.
    * Nebulae is plural, changed it all to nebula.
    * Made savegame more robust when loading inexistant missions.
    * Have environment change in medium.
    * Use mipmaps for stuff that is scaling now.
    * Rewrote conf framework to be much more robust and better overall.
    * Sped up security calculations.
    * Rerun security calculations in when doing unidiffs.
    * Added system safety.
    * Map interface heavily changed.
    * Should fix all the issues with stranded fighters and multiple
      fighters.
    * Persistant escorts now are working.
    * Got rid of a glPushMatrix.
    * More VBO improvements.
    * Much cleaner OpenGL VBO subsystem design.
    * Initial VBO framework.
    * Stars using VBO.
    * Systems should try to keep half of what they were trying to keep (pilotwise).
    * Actually use mstars now.
    * All star stuff uses vertex arrays.
    * Using vertex arrays partially for the stars.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * More sanity checks for angles.
    * Correctness patch.
    * Sanitized all the sensor ranges, it should always be applied now.
    * Constness.
    * Cleaned up some Lua code.
    * Made planets on radar more similar to pilots on radar.
    * Now draws fancier markers.
    * You can now add/remove outfits from pilots with Lua.
    * Made the hyena fight easier in the tutorial.
    * Added fleet pilot creation abstraction.
    * Implemented planet bribing.
    * Tweaked spawn rates a bit more.
    * Completely changed spawn algorithm to make more sense and try to balance ships.
    * Whitespace patch.
    * Should fix the minor corruption stars can experience.
    * Some code clean up.
    * Fixed some possible issues.
    * Put framework for distress signals handled in AI.
    * Fixed some ai functions.
    * Interference now affects targetting and communication.
    * Added concept of distress signals.
       * Ships under attack generate distress signals.
       * If someone gets the signal, and player is attacking player loses faction.
       * Limited by interference.
    * Fixed rare and elusive segfault bug in ai.
    * Try to load as fleetgroup first.
    * Using either fleets or fleetgroups when loading starsystems.
    * Moved fleet stuff out of pilot.[ch].
    * Cleaned up code some.
    * Introduced idea of system_getIndex().
    * Ripped the GUI stuff out of player.c and put it in gui.c.
    * Better music handling.
    * Fixed issue with interference not disappearing as it should.
    * Have player keep track of hostiles it has in system.
    * Doxygen.
    * Using confidence intervals from macrso now.
    * Tweaked interference some.
    * Some code clean up and optimization.
    * Added flags to image creation to control transparency mapping.  Should speed up theloading some and reduce memory usage.
    * Added interference.
    * Clean up and doxygen.
    * First large ndata patch.
    * Moved xml.h to nxml.h.
    * Added more complicated xml parse functions in nxml.c.
    * Removed all non-dt timers from stuff that should be dt based.
    * Interference is generated and renders wonderfully, needs internal mechanism first.
    * Code clean up.
    * Economy now dynamically fluctuates a bit.
    * First patch to try to add a dynamic economy.  Economy is static atm.
    * Some code clean up.
    * Fixed a memory leak.
    * Some clean up.
    * Make sure AI doesn't run when entering hyperspace.
    * Replaced malloc.h with stdlib.h, as the former is deprecated
    * Major rewrite to xml.h increasing sanity checks.
    * Gui can now handle overlays.
    * Missions destinations are now marked when selecting missions at mission computer.
    * Changed some colours around.
    * Fixed stupidity in physics.h
    * Added the line thing for planets also.
    * Doxygen.
    * If AA_LINE is enabled, smooth hyperspace lines too.
    * Tweaked entire hyperspace distance system to be more sane.
    * On jump clear the player's escorts (should prevent it from eventually bloating).
    * Implemented volatility damage.
    * Reduced calls to xmlCleanupParser(), only one for all the loading now.
    * Fixed pausing game when player is hyperspacing.
    * Actually change system faction on planet removal/addition.
    * Fixed segfault when system only has one planet with no faction.
    * Implemented fleet addition/removal.
    * More proper unidiff cleaning up.
    * Unidiff no longer segfaults.
    * First release of the unidiff system.
    * Major rewrite and clean up in space.c.  Hopefully won't introduce bugs.
    * More functionality added.
    * Removed dependency of the spawn_timer on SDL_GetTicks().
    * Added boolean to control spawn.
    * Small doxygen fix.
    * Tweaked fleet adding a bit to seem more natural.
    * Pilots can start sort of landed now.
    * Finished doxygenization of space.c
    * Partial doxygenization.
    * Fixed some long-term snprintf mistakes.
    * More doxygen and code cleanup.
    * Improves the faction colouring a bit.
    * Added planet_getClass().
    * Added punctuation to player_message()s.
    * No longer segfault if can't find a known system in a save file.
    * Can now override pilot AI in a fleet.
    * Made fleet_parse() more up to date with xml.h.
    * Unified colouring schemes.
    * All factions you are enemies with will appear as hostile too.
    * Uninhabited planets now show up as so on radar.
    * Removed alliance deal, now each faction states it's allies/enemies.
    * Added many new not-used factions.
    * Forgot to change the free.
    * Load gfx_exterior for planets only on demand now.
    * Split player rendering properly into GUI and player.
    * Now render particles when flying in nebulae.
    * Restructuring to prepare for nebulae puffs.
    * Improved nebulae system.
    * Star Systems can now set nebulae density and volatility.
    * Fixed new pilot segfault.
    * Added space_renderOverlay().
    * Nebulae are now drawn ingame.
    * Added nebu_density and nebu_volatility parameters to star systems.
    * Split the star rendering to be able to switch to nebulae soon.
    * AI now calculates optimal distance when shooting.
    * New CFLAG: -Wshadow.
    * Fixed all new warnings.
    * Missions can now mark systems.
    * Moved A* jump pathfinding from space.c to map.c.
    * Code uses flags for systems now to allow missions to mark them.
    * Pathfinding will avoid unknown systems.
    * Major upgrade, you don't already know all systems location.
    * Make ships appear to enter from hyperspace. Not totally satisfied yet.
    * Missed another xml_nextNode.
    * Missed an xml_nextNode.
    * Formalized Space Station types.
    * A* bugs were because of a typo, now turned into Djikstra though.
    * Pathfinding doesn't segfault anymore, still needs fixing though.
    added more nazi flags: -Wmissing-prototypes -Winline -Wcast-align -Wmissing-declarations -fno-inline
    cosmetic patch -> gl_screen.[wh] = SCREEN_[WH] in most places
    added PLAYER_CREATING flag to finally fix all creation/death issues
    cleanup and fixes
    fuel used ingame now
    unnoticeable changes
    misc fixes and prompt before overwriting pilot
    minor optimization
    you can sort of load games, still need to fix issues though
    fixed stupid memory leak (not best way probably :) )
    added A* algorithm to get paths between systems
    added time in the form of the galactic date
    started :retabbing (spaces only) and fixed some xml issues
    brown paper bag  bug
    implemented ability to figure out where a planet is located
    improved space.getPlanet() mission lua
    fixed small bug biasing planets
    improved lua api for missions by alot
    major improvement -> use ids for factions instead of pointers
    some cleanup and changes in loading
    branch:      naev
    fixed minor memory leaks
    branch:      naev
    almost working player input, need to hack font up first
    branch:      naev
    player death implemented
    branch:      naev
    made limit_speed to act abruptly, much nicer when afterburning now
    branch:      naev
    major content addition: 1 new system, 5 new outfits, more data checking
    branch:      naev
    planets now have commodities, but you can't do anything with them yet :)
    branch:      naev
    implemented special techs
    branch:      naev
    preliminary tech support (only raw, no special tech yet)
    branch:      naev
    allow menu when hyperspacing (cancel fancy hyperspace effects when paused)
    branch:      naev
    planet colours now based on standing
    branch:      naev
    added new station, added actual empire ships and fights with the collective
    branch:      naev
    fixed wierd new warnings and added more thingies (especially factions)
    branch:      naev
    another useless line in the same function
    branch:      naev
    remove useless gl call
    branch:      naev
    map framework, changed systems name to systems_stack for coherency
    branch:      naev
    tweaked fleet numbers, less ships when you enter, but they come/go faster
    branch:      naev
    added spawning, will need tweaking
    branch:      naev
    capitalized loading debug
    branch:      naev
    compressed the debug messages
    branch:      naev
    forgot to clear the spfx on hyperspace
    branch:      naev
    spoke too fast, star deformation length now defined
    branch:      naev
    perfected hyperspace visuals
    branch:      naev
    added fade to white when hyperspacing, still needs sound though
    branch:      naev
    C correctiveness patch
    branch:      naev
    merchant vessles now go hyperspace
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] hyperspace now behaves like in EV
    branch:      naev
    [svn] prepared for the upcoming toolkit_list
    fixed some sanity around turning pilot functions, now in pilot_face
    added basic rough on the edges hyperspace implementation
    branch:      naev
    [svn] added window_get to get windows based on their name
    added a small boarding menu
    branch:      naev
    [svn] windows now get a name embedded
    added empty commodity exchange
    tried to sanitize secondary weapon/weapon shooting
    changed pilot stack and star stack to not lower memory allocation
    fixed landing/takeoff to actually affect the system
    branch:      naev
    [svn] added the spaceport bar (no missions or hirelings available yet)
    branch:      naev
    [svn] game now uses planet services (they aren't implemented yet though)
    took out an accidental DEBUG i left in
    branch:      naev
    [svn] improved the font usade
    now you can print blocks of text
    added planet descriptions
    branch:      naev
    [svn] added support for images of planets
    cosmetic toolkit changes
    changed the gl_blit functions to work with doubles instead of Vector2d pointers
    took opportunity to clean up space.c xml (bringing it up to xml.h standard)
    cleaned up code
    branch:      naev
    [svn] added beginning frame for toolkit
    added ability to pause/resume game
    nerfed lasers armour damage
    branch:      naev
    [svn] rudimentary screenshot taking
    put some data info in start.xml
    branch:      naev
    [svn] fixed AI landing (still too loose for my tast though)
    cleaned up some code
    more xml macros
    branch:      naev
    [svn] combined xmlness in single header file
    rewrote player.c to use new xml syntax
    branch:      naev
    [svn] targetting graphic now displays color based on the targetted pilot
    branch:      naev
    [svn] added new GUI by default
    branch:      naev
    [svn] more ai functions
    some ai tweaks
    more ai protection
    branch:      naev
    [svn] added mkspr util
    more distance to fleets when created
    branch:      naev
    [svn] enemies are now properly parsed
    added possibility of pirate
    buffer overflow in ai fixed
    branch:      naev
    [svn] bug fixes
    support for different AI Profiles
    branch:      naev
    [svn] bug fixes
    fleet improvements
    per pixel collision
    branch:      naev
    [svn] faction system almost fully implemented
    fleets almost fully implemented (just need randomized start positions)
    major bugfix in weapon.c
    branch:      naev
    [svn] much more error checking in the xml
    fleets are built in - just need to do something with them
    minor tweaks and fixes
    branch:      naev
    [svn] added planet to minimap
    branch:      naev
    [svn] targetting added
    fancy UI fixes
    branch:      naev
    [svn] outfit loading, not properly used yet
    branch:      naev
    [svn] improved ai API
    fixed minor memory leaks
    cleaned up a bit
    branch:      naev
    [svn] added star system support/loading
    added planets
    more minor tweaks and fixes
    general happiness
    branch:      naev
    [svn] moved everything to directories
    cleaned up Makefile
    improved AI
    branch:      naev
    [svn] removed python dir
    Vector2d now uses polar coordinates
    minor tweaks
    branch:      naev
    [svn] minor fixes
    dynamic keybind loading from configuration file
    sample configuration file added
    branch:      naev
    [svn] forgot to make stars scroll
    branch:      naev
    [svn] moving background
    improved opengl workings
    minor tweaks
    branch:      naev
    [svn] cosmetic changes, minor fixes
    branch:      naev
    [svn] gl_print the printf for opengl now works! :)
    branch:      naev
    [svn] stars use alpha instead of color
    branch:      naev
    [svn] yay stars make sense now
    branch:      naev
    [svn] more files yay
    Guaranteed unboard when exiting to menu, even with the boarding window open.
    * Do not let the player be teleported while landed, boarded nor hailing.
    * Added function to forcibly unboard the player.
    * Implemented boarding for AI pilots.
    branch:      naev
    split boarding from player.c to board.c
    save assets using laid out structure
     - changes appear immediately on disk
    * Too much slave coding makes bobbens forget important stuff.
    Use new __RW system and nlua_register() everywhere
    Typo fixes.
    * Comments and formatting.
    Fixed some bugs; store two system IDs instead of one and a jump ID.
    Added a new Lua API module for jumps.
    Fixed headers that misspelled their include guards with two underscores.
    * Debris implemented.
    Fixed several strings and lack of gettext usage.
    Remove all C code meant to support SDL < 2.0.0
    Using ngettext for plurals.
    More gettext.
    Can now use gettext with LOG, WARN, ERR, and DEBUG.
    * Fixed joystick.
    * Wrapper for nsnprintf being used all over.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Made an error a bit more verbose.
    * First simple implementation of force feedback.
    * Extra newline in debugging output.
    * Some formatting changes.
    * Doxygenized joystick.c.
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] fixed small typo
    branch:      naev
    [svn] added star system support/loading
    added planets
    more minor tweaks and fixes
    general happiness
    branch:      naev
    [svn] moved everything to directories
    cleaned up Makefile
    improved AI
    branch:      naev
    [svn] more joystick patches, allows to select by name
    branch:      naev
    [svn] more files yay
    branch:      naev
    [svn] just uploading working copy
    Add a Map Outfits Editor for selecting/unselecting entire systems
    
    Add the Map Editor window
            src/dev_mapedit.c
            src/dev_mapedit.h
            src/Makefile.am
    
    Add file name and description parameters to dsys_saveMap()
            src/dev_system.c
            src/dev_system.h
    
    Remove Save Map button from Universe Editor
            src/dev_uniedit.c
    
    Add an intermediate menu for Universe and Map Editors, that could accomodate other future editors
            src/menu.c
            src/menu.h
    Add a Map Outfits Editor for selecting/unselecting entire systems
    
    Add the Map Editor window
            src/dev_mapedit.c
            src/dev_mapedit.h
            src/Makefile.am
    
    Add file name and description parameters to dsys_saveMap()
            src/dev_system.c
            src/dev_system.h
    
    Remove Save Map button from Universe Editor
            src/dev_uniedit.c
    
    Add an intermediate menu for Universe and Map Editors, that could accomodate other future editors
            src/menu.c
            src/menu.h
    * Hacked in a "Save Map" button for the universe editor.
    ** Save Map button will save a map outfit file to dat/outfits/maps/.
    ** Systems included in the map are those systems selected with ctrl+click.
    ** Hidden jumps and exit-only jumps are not included in the map.
    save more.
    * Added new files to compile chain.
    * It should all actually compile now.
    * Missing two files.
    Don't allow opening system information when system is not known.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    removed whitespace
    Properly display system properties on the map.
    Render decorators more transparently.
    Made jumps easier to see.
    Decrease opacity of faction disks.
    Check to make sure it's a real faction before using faction_isKnown.
    Removed faction logo / name from map for unknown factions.
    
    Part of #891
    Made the main menu wider.
    Tweaked the starmap window layout, increased button size
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Added symbols for faction text on the map screen, and for ship stats
    
    This is an accessibility feature for those who are colorblind. You
    no longer need color vision to see this information.
    
    Based on the idea we had before to use emojis, but using ASCII instead.
    The biggest advantage of this is that it can just be directly inserted
    into the text rather than having to worry about positioning the symbols
    manually.
    Fixed the rest of the text colors.
    removed 2 blank lines
    Simplified colors and modified image array selection colors.
    
    This gets rid of some variants of text coloring and defines them
    in a different way. The "dark" versions are removed; intending to
    replace that with outlines of some kind.
    Fixed bracket placement.
    Added some more ngettext, simplified econ map description.
    Got purchase working
    Added star images to the system map
    Removed unnecessary printf call.
    adaptations and corrections in lua scripts and nlua doc
    No consideration about known or unknown JP with argument show_hidden in map_getJumpPath
    Bloody emacs - removed tabs.
    Render systems black when trying to trade from a system without selected commodity.
    Changed fount colour to cLightBlue on map
    Changed colour setting to a local macro
    Slight change to scaling for new prices
    Removed whitespace, changed economy map colour scheme
    Freeing memory on map closure (not a memory leak, since it checks on map_open, and frees if exists(, but best to be clean...
    Fixed mission map
    Working economy with list widget on map
    Warnings.
    Working with map modes
    Removed tabs!
    Reworked commodity map
    working on the solar system screen
    Added commodity messages on map, and changed colours of trade.
    Initial add of system map
    Tweak sizes of commodity info
    Fixed zoom on commodity info
    Modified economy markers
    Removed the ugly uses of cDConsole as a color for headers.
    
    Replaced those all with black; headers don't need to be a different
    color and it honestly looks nicer without one.
    Fixed translatability of text descriptions of stuff.
    Added map economy info to npc, and tidied up map.c
    Added economy information to the map
    Remove "glDisable( GL_LINE_SMOOTH );" calls
    
    This is never enabled in the current code
    Reduce shader boilerplate with a C program generating C code
    
    Ugly, I guess, but... less?
    map decorator: picture -> image
    Display when asteroid field exists on the map.
    Remove gl_drawCircleInRect()
    
    It doesn't really seem to be needed, and gl_clipRect() can serve the
    same role.
    Remove use of deprecated GL_POINT_SMOOTH
    Create a "smooth" shader, to replace some of the remaining code
    Use solid shader for map_drawMarker()
    Use shader to draw filled circles
    Remove SDL1 compatibility -D CLAGS, and sed so they aren't used
    Remove all C code meant to support SDL < 2.0.0
    Free map decorators.
    retab
    whitespace
    Fixed warning about size_t
    Make everything fuel related an int
    Tag everything related to fuel and using double with DELETETHIS_
    Declaration in head.
    More gettext.
    Changed escape code for colors from '\e' to '\a' so xgettext plays well with it.
    Disable line smoothing, doesn't work well with recent systems (Fixes #731).
    Disable line smoothing, doesn't work well with recent systems (Fixes #731).
    More gettext.
    Map decorators for Naev, with one as example
    Made standing text something defined in Lua.
    
    So now, different factions can have different terms for different amounts
    of standing, and these text representations can now be localized.
    Maintain selected system when jumping
    Add support for SDL2 mouse wheel events
    Generate a circle of exactly the desired size in the map
    
    Mipmaps weren't cutting it here, and the edge blending is size-dependent.
    Disable GL_LINE_SMOOTH in several places when using Intel hardware
    Optimize the map by skipping out-of-bounds names and systems
    Minor optimization for faction disk rendering
    Add line smoothing to the map, where suitable.
    Generate the map faction disk at load
    
    As I see it, there's no need to regenerate this as the zoom changes.
    It's a glorified radial blur that's already being scaled based on
    presence.
    Handle variable fuel consumption properly in the map
    Remove obsolete code and correctly render uninhabited systems in uniedit
    Make map markers blink in sync with the other indicators and jump path
    Substantially rework the map's rendering
    
    The map is now rendered through more passes, so that e.g. faction disks
    don't partially obscure jump routes.
    
    Indicators for the current and destination system pulsate every second,
    as does the entire player jump path (albeit more gently).
    Add jump path length to player.autonavDest()
    Take variable fuel consumption into account in the map
    Fix map pathing when using hidden jumps
    * Fixed bug where selecting a jump point manually in the middle of a jump route and jumping could cause illegal memory accesses.
    * Initial work to get everything running on SDL2.
    * Removed heurestic bit to discourage me from being silly.
    * Turns out we can't do A*.
    * Sanitized hidden jump point handling.
    * jumpDist and adjacentSystems now by default IGNORES hidden jump points, if
      you want to actually handle them, there is a new hidden parameter that lets
      you change the behaviour to how it was beforeish, except it now is
      consistant.
    * Removed debug message left in.
    * Actually using A* with an admissible heuristic now yay.
    Use the common human-readable service labels in the map, too.
    Include mission availability in the map sidebar.
    Disable autonav button on invalid hyperspace targets.
    * Map planets too.
    * Finished local map implementation.
    * Added local map.
    * Custom widgets must not bend down to the all encompassing "mouse functions return 1 if event is blocked".
    * Sanitized more toolkit return parameter for function pointers.
    * Wrapper for nsnprintf being used all over.
    * Show non-squared hide values on system map.
    * Removed all references to asteroids. Not implemented, will never be implemented this way.
    In-system autonav should be unaffected by map changes.
    Created a planet_setFlag wrapper to avoid marking virtual assets as known.
    * Display hide values in green if 0 (to spot highways easily in the editor).
    only known factions in presence list.
    others listed as Unknown.
    appease the bobbens
    move faction header back into .c
    change // to /* */
    * Reduced hide value to a single decimal.
    * Re-saved the galaxy to generate up to date data files.
    * Added primary color definitions.
    * Jump line colors are now properly set.
    only known factions in presence list.
    others listed as Unknown.
    * Made all the colours constant as they should be.
    * More messing with exitonly displays, not happy with it...
    * Changed connections on maps to lighter blue.
    * Render exit only jump points differently.
    * Minor optimization, no need to check if isn't known since we want to overwrite it anyway.
    remove jump point type in favor of flags
    * Display hide values on editor map.
    * Minor map rendering optimization.
    add support for jump points
    maps load data, also can be added without crashing.
    adjust functions to use the new map type
    * Fixed autonav refusing to route to unknown systems.
    * Map now properly handles unknown routes.
    * Picky bobbens cosmetics.
    * Make sure planets are known when searching.
    remove a jump point type
    a highway jump point is just a regular one with a hide value of 0.
    this simplifies things a bit.
    hidden jumps are type 2, not 3
    can't pathfind through exit only jumps
    fixed landing. intersystem pathfinding might behave oddly,
    but your probably ok if you don't teleport or to through
    a one way jump point.
    can unidiff jump points
    jumps have 3 onMap options.
    0 - not visible on map
    1 - visible on map, no data about target
    2 - visible on map, target system is potentialy known
    fixed maps, pathfinding, and jump detection
    adjusted if statement order and comment
    (for zid)
    some jumps are not on maps
    more jump stuff
    system map respects unknown jump points
    planets are now on maps.
    map doesn't tell you about services on planets you don't know about
    the map pays attention to known planets
    * Variable fuel consumption.
    * More LLVM fixes.
    * Danger when doing something like l += snprintf(&buf[l],MAX-l,...) as the size member is size_t and it will overwrite and fuck everything up.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Whitespace, typo and general style cleanup.
    Fix some minor nigh-impossible crashes; remove pointless initializations and such.
    Fixed and generally improved the map sidebar.
    Colourize planets listed in the map sidebar.
    Many, many typo fixes.
    It's its not it's
    Scale map faction circles based on faction presence.
    * Fixed new gcc -Wunused-but-set-variable warning.
    Disable the map's autonav button if the PILOT_NOJUMP flag is set.
    * Split map find functionality to expand soonish.
    Adding to the current hyperspace route shouldn't disable autonav.
    * You can now select planets and jumps from the overlay map.
    * Renamed startAutonav and abortAutonav to autonavStart and autonavAbort.
    Fixed a segfault when in a system with no jump points.
    * More autonav blocking stuff.
    Map buttons are now in a horizontal row.
    * Added binding to get player's long term hyperspace destination.
    * Fixed display of virtual assets when they shouldn't appear.
    * Changing entire reference system to bottom left based, should solve shit in the long run.
    Fixed planet/hyperspace targeting preemption.
    * Run the gui 'update_nav' when using the space map to navigate.
    fixed a bug in player.c that made naev crash when pressing backspace while jumping, and changed the behaviour of find in map so that it behaves a little more sane.
    * You can no longer find planets/systems you don't know exist.
    * Made code more elegant.
    * Map searching is case insensitive.
    * Added button to map window to also start find.
    * Added simple search for planet/system support to the map.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Implemented the basic advanced mission markers as per the proposal.
    * Fixed a rendering map faction logo in the wrong spot bug.
    * Separate faction real name and shortname. This is to differenciate what to display and what is real.
    * Fixed some bugs with images especially spaceport bar.
    * Toolkit image widget now has dimensions parameter.
    * Hailing planets no longer has them take up more than the window.
    Removed a few restrictions that aren't necessary due to bug fixes. Can now target planets when landing without repercussions.
    Added preemption to the autoface and untarget functions.
    Updated targeting to allow simultaneous planet and hyperspace targets, modified HUD and fixed player.teleport() bug.
    * Can't open map while landing to avoid segfaults.
    * Better handling of virtual/real assets, especially when saving asset.xml.
    * Cosmetics.
    * Should fix segfault with unlinked nodes.
    * Changed all mouse zoom models.
    * Default zoom in system editor is 2x amplification.
    * You can now see selected systems in the editor.
    * Fixed segfault in the editor related to system removal.
    * Removed unused code.
    * Split map path rendering routine from map_renderSystems.
    * The editor has colours and the likes now.
    * Editor should render systems and shouldn't segfault anymore.
    * More refactoring and splitting of the map rendering code.
    * Started splitting the rendering in map.c.
    * Fixed segfault.
    * Moved nav_hyperspace and nav_planet to pilot instead of player struct.
    * Major refactoring of the pilot. It is now all contained in a struct.
    * Using new jump point system, behaves exactly the same as the old system.
    * Minor code polish.
    Autonav button added to map, map rendering issue fixed.
    * Clicking on map will now abort autonav.
    * Clear nav target when selecting unreachable system in map.
    * Using new presence struct, and related changes.
    
    faction_nstack is no longer externed in space.c.
    Using faction_isFaction() call instead.
    Added public system_getPresence() function, which returns the presence for a faction in a system.
    * Reinstated map grey.
    
    Also made it capital to follow bobbens' "conventions".
    * BTAxis prefers 'm' for neutral instead of '0'.
    * Display on map of presences is sexy.
    * System ring colour is now faction colour.
    * Unreal assets no longer count towards ownership.
    * Systems no longer filled for unreal planets.
    * Systems display "none" for planets correctly.
    * Escape closes map window.
    * Fixed "N/A" printing of presence.
    * Renamed planet to asset.
    
    "Unreal" assets are allowed. An asset is "unreal" if it has no <pos> tag.
    planet.xml has been renamed to asset.xml
    Checks are in place to ensure that "unreal" assets are not used where only "real" assets should be.
    * Removed unused function.
    * Moved variable declarations.
    
    Moved to begining of the function. It's bobbens' style, methinks.
    * Added a map neutral colour.
    
    Right now, it's 30% grey.
    The neutral colour has been reset to the previous value.
    * Cleaned up the horrible hack.
    
    I now fail slightly less at global variables.
    * Added colour printing for factions.
    * Handle same system better.
    * Added per-faction presence view.
    * Changed 'security' heading to 'presence'.
    * Security is now shown using colours.
    * Changed security to presence
    
    It now shows guard/hostile presence for systems.
    * Fixed buffer overrun.
    * C style.
    * Patch for making custom jump routes by Barry.
    * Pad map logo to be 64 height.
    * Added faction logos to the map.
    * Fixed up map thingy staying selected when it shouldn't be.
    * You can see names of some systems with markers now.
    * Draw system names ontop of everything except markers.
    * Should fix some faction display problems in map.
    * Custom widgets use userdata now.
    * Changed how equipment slots are rendered so it acts like another widget now.
    * Made faction disks a bit stronger.
    * Improved markes
    
    * Changed colors
    * Better scaling
    * Antialiasing
    * Fixed overwriting of col.
    * Don't see faction of unknown systems.
    * Tweaks to make the markers more visible by Deiz.
    * Toned down faction map colours a bit.
    * Minor correction.
    * Minor corrections.
    * Texture is now generated only when zoom changes
    * Fix grammar
    * Code cleanup (thanx zid_)
    * Added factions disk
    * Fixed some custom widgets.
    * Maps and licenses should work properly again.
    * Nebulae is plural, changed it all to nebula.
    * Made savegame more robust when loading inexistant missions.
    * Made it so text doesn't overlap planets in map.
    * Make map circle sizes relative and not absolute.
    * Dead systems have no security.
    * Minor tweaks to attempt to fix some minor off by one pixel thingies.
    * Have systems on map scale somewhat.
    * Display security % on map.
    * Added system safety.
    * Map interface heavily changed.
    * Added mipmap support.
    * Added ability to draw filled circles.
    * Removed immediate mode from circle drawing.
    * Increased the loop protection threshold.
    * Removed the glBegin in the map.
    * Converted more glBegin to VBO.
    * Added gl_printHeightRaw - should avoid some segfaults with formatted strings from Lua.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Map is now official humongous.
    * Constness.
    * Cleaned up some Lua code.
    * Doxygen.
    * More marker tweaks.
    * Markers now act on zoom.
    * More marker tweaks.
    * My algebra is rusty, fixed transformation of markers on map.
    * Now draws fancier markers.
    * No longer autoroute in the mission minimaps.
    * Clean up map when switching players.
    * If you aborta  mission, properly clear markers.
    * Should make sure markings are sane.
    * Mission computer now selects the system and routes to it when selecting a mission.
    * Fixed some visual glitches with markers.
    * Improved map zoom handling.
    * Custom widget mouse movement function now gives dimensions.
    added a map in 'mission' section
    * Fixed invalid read.
    * Cleaned up code some.
    * Introduced idea of system_getIndex().
    * Ripped the GUI stuff out of player.c and put it in gui.c.
    * Avoid theoretical infinite loop + memleak in the map.
    * Explicitly set NAV target at end of route to none.
    * Minor doxygen.
    * More doxygen.
    * Doxygen fixes.
    * Removed all (improper) usage of strcat/strncat.
    * Added interference.
    * First patch to try to add a dynamic economy.  Economy is static atm.
    * Some code clean up.
    * Fixed a memory leak.
    * Replaced malloc.h with stdlib.h, as the former is deprecated
    * Missions destinations are now marked when selecting missions at mission computer.
    * Changed some colours around.
    * Fixed stupidity in physics.h
    * Added the line thing for planets also.
    * Always mark path as red when out of fuel.
    * memcopy should be memmove.
    * Should fix a lot of valgrind stuff.
    * Inverted zoom in/out to be more like google maps.
    * Doxygen.
    * Fixed map autoroute creating routes between unknown systems.
    * Major toolkit change to simplify things a lot, makes it more object oriented.
    * Corrected selecting hyperspace in map not updating window.
    * Map will now always close on new/load game.
    * Can now use 'h' key in map window.
    * Cannot open map while dead.
    * Some minor map tweaks.
    * Introduced autonav.
    * Fixed segfault when system only has one planet with no faction.
    * Major rewrite and clean up in space.c.  Hopefully won't introduce bugs.
    * More doxygen and code cleanup.
    * Faction comparison should be >0 not !=0.
    * Map fix for Multiple faction bug.
    * Unified colouring schemes.
    * All factions you are enemies with will appear as hostile too.
    * Make map check if faction is -1.
    * Adjust text height to faction name length.
    * You can now target unknown systems to fly to them.
    * You can no longer buy a map if you already know the area.
    * printHeight was using wrong width.
    * Inform of no services too.
    * Map now informs of available services.
    * Display whether or not a system has nebulae.
    * Map now displays faction standing.
    * Increased map size.
    * Fixed map giving stats about unknown systems.
    * Fixed bug with changing hyperspace path after selecting a route.
    * Missions can now mark systems.
    * map.c: Fixed segfault when landing.
    * New Outfit: Star Map.
    * Moved A* jump pathfinding from space.c to map.c.
    * Code uses flags for systems now to allow missions to mark them.
    * Pathfinding will avoid unknown systems.
    * Major upgrade, you don't already know all systems location.
    cosmetic patch -> gl_screen.[wh] = SCREEN_[WH] in most places
    some code cleanup, and made map more sane (and colour coded!)
    fixed minor graphical bug with map
    fixed segfault with map
    fixed silly bug with map
    big time map improvements, you can visually see the A* now :)
    added A* algorithm to get paths between systems
    fixed some long-standing map issues
    now using clipping planes for starmap for better results
    mouse wheel will zoom in/out of map
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    major improvement -> use ids for factions instead of pointers
    a bit of cleanup
    branch:      naev
    seems more sane to always drag on the map
    branch:      naev
    fixed wierd new warnings and added more thingies (especially factions)
    branch:      naev
    boundry checking for star map names
    branch:      naev
    resizing star map works at different speeds
    branch:      naev
    do not draw star map names if zoomed out
    branch:      naev
    you can see sys names in the star map, also changed path default to darkblue
    branch:      naev
    you can now zoom in/out on the star map
    branch:      naev
    hyperspace paths no longer appear if you drag offscreen
    branch:      naev
    map improvements
    branch:      naev
    more advanced map
    branch:      naev
    missed a return, now 'm' opens and closes star map
    branch:      naev
    mouse event for custom widgets has more control, better star map
    branch:      naev
    custom mouse events for custom widgets
    branch:      naev
    displays some information about the system
    branch:      naev
    early map is actually drawing planets well now
    branch:      naev
    added basic map support, added gl_drawCircle, added cYellow
    Implemented ammo_capacity ship stat.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Consider deployed fighters when refilling escorts with Active Cooldown.
    
    There's one more kink to fix: it seems fighters are often left
    considered "deployed" after destruction. Will investigate this next.
    Gradually refill all missiles during active cooldown.
    Clamp outfit and ship heat to 250K in several places
    Replace ship mass with ship plus core outfit mass in most places
    
    The only notable exception is transport cost, because that would allow
    players to alter the cost by de-equipping their ship.
    
    As a side effect, this also encourages appropriate equipping, as ships
    with overly-light core outfits will overheat more quickly.
    Pilot has no purpose at present.
    Refactored the afterburner patches a bit.
    * Scripted temperature thresholds for afterburners.
    * Fixed comment.
    Added a discrete cooldown mode for pilots.
    * Tweaked heat values.
    * Rewrote descriptions.
    * Added a sound for afterburner disengage.
    * Small number tweak.
    * Some code for heat on afterburners. Todo:
    ** Show afterburner heat.
    ** Don't toggle afterburner when used via weapon group.
    * Use turret heat ship stat for turrets, not forward firing heat ship stat.
    * Reduced heat bonus for Targeting Arrays.
    Heat is reset by space_init, doing it here causes active outfits to reset heat.
    * Initial commit of ship stats, doesn't really do anything new yet.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    * Minor code optimization.
    * Typos fix by c_korn.
    Remove trailing spaces in src/
    * Fixed weapons being really cold and draining ship heat.
    * Implemented more ship stats.
    * Fixed bug that didn't reset weapon heat when entering a system.
    * Changed obsolete accuracy mods to heat mods.
    * Removed DEBUGs that shouldn't be there.
    * Outfits use heatup now. May still need more tweaking love, but it looks ok for now.
    * Added functions to get outfit heat specifics, maybe we should move all the heat numbers somewhere else.
    * Whitespace.
    * Correctness.
    * Changed accuracy model caused by heat.
    * Tweaked values a bit.
    * Fixed bug in heat: weapons generating 10x the heat.
    * Added the heat accuracy and fire rate functions.
    * Added the heat accuracy and fire rate functions.
    * Update results based on previous results in the heatsim.
    * Fixed energy being in kJ not J.
    * Fixed sign of the conduction from ship.
    * Added all the heat framework.
    Removed recommendations to use `_` as a variable.
    
    `_` is used by gettext, so using `_` as a throwaway variable name
    can mess things up. Instead something like "i" should be used.
    Fixed bracket placement.
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    gettext for nlua modules.
    Use new __RW system and nlua_register() everywhere
    Remove ship.outfitCPU function
    
    This (unused) function provides identical functionality to
    outfit.get(name):cpu()
    Add types to lua api docs, and other documentation improvements
    Replace LuaTexture with glTexture**
    Replace LuaOutfit with Outfit*
    Replace LuaShip with Ship*
    Strip trailing whitespace
    Expose ship and outfit prices via the Lua API
    Return LuaOutfits in ship.getSlots(), not names.
    Fix invalid reads and add default outfit output to ship.getSlots()
    
    In time, this should probably be completely rewritten to use LuaOutfits
    added "ship.getSlots" lua function
    * Luadoc.
    Update a number of the luaL_valid* functions to support strings in addition to their native data types.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Many, many typo fixes.
    lua headers are system headers, include them that way
    * s/space/ship/
    * Added __eq to ship metatable.
    * __tostring for LuaShip is also name.
    * Added luaL_validship.
    * Added API to get the ship base graphics.
    Missed one instance.
    Systems slot renamed to Utility.
    * Added function to get target graphic.
    * Luadoc.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    Migrating from High, Medium, Low + Heavy, Standard, Light to Weapon, Systems, Structure + Heavy, Medium, Light
    * Added ship base types as per BTAxis' proposal.
    * Luadoc.
    * Luadoc.
    * More code clean up.
    * Added ship Lua API.
    * Fixed scripts for changes.
    * Created helper script for easy inclusion in the unique code.
    Switch scroll buffer from looped linked list to array with looped indexing. The primary motivation for this change is to simplify code analysis.
    Switched to better local fonts and removed usage of system fonts.
    Simplified colors and modified image array selection colors.
    
    This gets rid of some variants of text coloring and defines them
    in a different way. The "dark" versions are removed; intending to
    replace that with outlines of some kind.
    Add to length where the warning occurs rather than on var creation.
    
    Silly @bobbens, tricks are for kids. :P
    
    Fixes #1129
    Warnings.
    Remove all C code meant to support SDL < 2.0.0
    More gettext.
    Use defines for font paths.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Use backspace to skip back on intro scroll screen
    Handle resize in the secondary dialogue loop and intro
    * SDL_GL_SwapWindow is more adequate than SDL_RendererPresent.
    * Almost there.
    * Font sizes are now customizeable. User discretion advised to not break EVERYTHING.
    * Wrapper for nsnprintf being used all over.
    'inline' requires C99, and the function is only called twice.
    Whitespace, typo and general style cleanup.
    Many, many typo fixes.
    Remove trailing spaces in src/
    * More NAEV -> Naev.
    * Enter and space skip down again.
    * Use mono font for intro stuff.
    Do not leave space to the left of scrolling text if there are no images.
    Add back in speed up/down keys.
    Code/comment cleanup.
    Transition code.
    Add code for fade out.
    Free an image after it has faded out.
    Implement fade in.
    Memory cleanup, code cleanup.
    Make ESC work, again.
    Better commenting.  Also, try to adhere more closely to style.
    Make the intro stop when lines run out.
    Remove unused code.
    Add a comment to intro_draw_text().
    Code cleanup.
    Display the image to the left of text.
    Preliminary redesign of intro.
    Parse out commands for image display in intro.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Code cosmetics.
    Added some fanciness to intro.c
    * Intro should have keyrepeat now.
    * More correct way of breaking out of the intro sequences.
    * Switched how keys work in intro.
    * Arrows now affect intro text.
    * Fixed some fps control weirdness in the display.
    * Added the ability to do timed sound situation changes.
    * Code clean up.
    * Typo fix.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Should avoid the infinite loop in credits.
    * Fixed intro not handling music properly.
    * Properly added credits.
    * You can now define different text/music using the intro code.
    * Fixed another possible segfault with isspace().
    * First large ndata patch.
    * Added intro song for intro screen.
    * Start out with 0. offset so text appears sooner.
    * Added introductory text.
    added ability to add manual shiplog entries
    Removed logid from lua.  Logs now created/appended using the id string.
    Pruning mechanic added
    Added a log identifier for creating logs - so that logs can be shared between relevant missions.
    Fixed up lots of style errors, removed travel log at least partly
    
    Please look over this, but I had a go at removing the travel logs.
    Didn't do any testing beyond making sure it compiles. I was exhausted
    by all the things I was compelled to fix and just had to stop. I
    *think* I removed the travel log stuff though.
    
    A note on style: you consistently get a lot of style wrong and it's
    a pain to correct. Please take a look at some of the fixes I've made
    here and make further adjustments following this.
    
    In addition to the kinds of style errors I fixed, I also noticed you
    using printf to print warnings. You should *not* do this; Naev has a
    macro specifically designed for warnings, the `WARN` macro. You should
    *always* use macros like this (`WARN`, `DEBUG`, or `ERR` depending
    on the situation) for a whole host of reasons, not least of which is
    that these macros do more than just print a message. You need to fix
    all of these uses of `printf`. It's never something you should be using
    in Naev code.
    
    🕵️
    Added a remove log functionality, so that unimportant logs can be automatically removed.  Also limited the journey log to the 6 previous journeys.
    Ship log implemented and examples in some missions
    Initial mission log work completed.
    Ship log implemented and examples in some missions
    Initial mission log work completed.
    Might as well make nfile_dirname return const char* while I'm at it.
    Made nfile_dirname take a const char* as parameter to strongly indicate that it won't be modified.
    Have dirname use a buffer so it doesn't modify the path inplace.
    Detect AppImage environment and adjust paths
    Rework nfile_concatpaths parameters to catch more errors during build.
    Apparently Linux isn't the only platform? Fix Win build.
    ndata is dead! Long live ndata!
    added TODO
    Added function to check if a character is a file separator, which should improve support for windows paths with backslashes and not forward slashes.
    Uniformized the "Out of Memory" message variants.
    Fix mkpath to work in macOS app sandbox.
    More gettext.
    Use macOS-specific user directories.
    Refer to macOS as 'macOS' everywhere
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Removed unneeded function complexity.
    Make nfile_backupIfExists use nfile_copyIfExists to avoid duplicate code
    Make NAEV write to stderr and stdout, then on close, copy them over to
    yyyy-mm-dd_hh-mm-ss_std[err/out].
    
    This enables the developper to keep track of evolutions between multiple
    runs, but also to (auto-)reload stderr and stdout after each run,
    instead of searching for 2 new files each time, which is quite a pain...
    Strip trailing whitespace
    Avoid uninitialized return when file list is empty
    Memory leak fixes
    Better error-checking, based on patch by zid
    Use binary mode for reading/writing on Windows
    
    Seems to be an ignored flag on most every other OS.
    Speed up nfile_readDir by avoiding exponential strcmp calls
    * sizeof(char) is always 1. No need to keep it around.
    * More cleaning up memory leaks.
    * Whitespace.
    * Memleak fixes and code clean up.
    * Cosmetics.
    * Minor optimization.
    Did some clumsy preprocessor stuff so that Win32 can use mkpath to recursively create directory trees.
    Manually-defined user data path should not have naev/ appended.
    Added a CLI option to define a custom user data path.
    * cppcheck.
    * Fixed mkpath.
    * Made mkdir recursive.
    Swap out the horrible hacks for something more elegant.
    POSIX stuff tends to return 0 on success.
    * Wrapper for nsnprintf being used all over.
    * Doxygen.
    save assets using laid out structure
     - changes appear immediately on disk
    * A bit of paranoia is always good.
    * Should fix compile on win.
    * Code cosmetics and tweaks.
    * XDG patch by aanderson.
    user data should go into $XDG_DATA_HOME (.local/share by default)
     - .naev/saves -> ~/.local/share/naev/saves
     - .naev/screenshots -> ~/.local/share/naev/screenshots
    
    user preferences should go into $XDG_CONFIG_HOME (.config by default)
     - .naev/conf.lua -> ~/.config/naev/conf.lua
     - .naev/conf.lua.backup -> ~/.config/naev/conf.lua.backup
    
    cached data should go to $XDG_CACHE_HOME (.cache by default)
     - .naev/gen -> ~/.cache/naev
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    * Added nfile_dirExists, use it for creating directories.
    Remove trailing spaces in src/
    * More NAEV -> Naev.
    * nfile_readFile appends '\0' at the end so it can be also treated as a string.
    * Changed += to *= in memory allocation to scale better.
    * Option to change preference direction (default ~/.naev) by Noyga.
    * Fixed backupifexists.
    * Minor code cosmetics and reference.
    * More code simplification, should still work :).
    * Removed win32 specific code as it does work with the posix code too.
    * Improved nfile_backup. It now actually backs up and doesn't move.
    * Fixed minor and unlikely memory leak.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Fixed warnings and off by one in nfile_dirname.
    * Added nfile_dirname as portable substitute for dirname.
    * Now look for scripts in binary path after looking locally.
    * Change NAEV data dir on windows to %APPDATA%.
    Whitespace fixes
    Add a generic file writing function nfile_writeFile.
    Generalize file back up as nfile_backupIfExists.
    * Wasn't closing nfile_readFile.
    * Fixed nfile_dirMakeExists as reported by zid.
    * 'b' must be at the end of the fopen mode.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Fixed where naev saves stuff so it's partition independent.
    * Fixed windows segfault.
    * Cleans up file loading somewhat.
    * Forgot windows treats binary and text files differently...
    * Even more error checking.
    * More debugging stuff.
    * Cleaned up nfile_read even more.
    * Should handle better reading files.
    * Use opendir to check if directory exists on windows.
    * Handle no %HOMEPATH% on windows.
    * Have POSIX systems handle no defined $HOME.
    * Fixed location of windows $HOME equivalent.
    * Fixed POSIX build.
    * Using opendir and friends instead of the windows-specific crap on windows.
    * Should be like this I think.
    * Patch should make NAEV more windows friendly.
    * Switched increments from 100 to 128 to be power of two.
    * Fixed stupid typo.
    * Much better OS compatibility macros now.
    * Changed some LINUX+FREEBSD checks to _POSIX_SOURCE.
    * No longer need makefile when working in trunk, reads from directories directly.
    * Code clean up.
    * Doxygen.
    * Support for FreeBSD by Dmitry Marakasov.
    * Removed some unused stuff.
    * Minor correctness tweaks.
    * Create .naev/conf if not found.  Left empty though.
    * If ndata isn't found, try to be a bit more robust in finding it.
    * Allow reading ndata-version by default.
    * Implemented some cross-platform solutions.
    * Spell correction.
    * Minor tweak.
    * Doxygenized colour.c.
    * Fixed typo mistake in nfile.c doxygen.
    * Added todo.
    * Doxygenized nfile.c.
    * Order files with nfile_readDir by newest first.
    * Now will initialize nebulae.
    * Nebulae use a smaller more optimal format, reducing size.
    * Now give errors when OS isn't supported.
    * Fixed possible buffer overflows with strncpy
    misc fixes and prompt before overwriting pilot
    minor leak fix and improvement for load menu
    you can now save and partially load games (mission data is lost)
    stupid bug
    added filesystem abstraction and path based stuff
    * Fixed joystick.
    added more nazi flags: -Wmissing-prototypes -Winline -Wcast-align -Wmissing-declarations -fno-inline
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] moved everything to directories
    cleaned up Makefile
    improved AI
    branch:      naev
    [svn] more joystick patches, allows to select by name
    branch:      naev
    [svn] more files yay
    branch:      naev
    [svn] just uploading working copy
    Use new __RW system and nlua_register() everywhere
    Make LuaPlanet an int instead of struct
    lua headers are system headers, include them that way
    * Made the planet Lua stuff also much more robust vs addition of planets.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Made some nlua naming consistant.
    * Added luaL_checkplanet.
    * Fixed the naming of the metatables.
    * Fixed music.lua.
    * Split space into planet and system.
    Console should properly chop up lines, however, colour will not be necessarily continuous.
    * NAEV now also prints everything to it's internal console.
    * First draft of the console, not working yet.
    Put the GUI-setting functions into the info window.
    * Tabbed window inside a tabbed window renders, but doesn't seem to handle events.
    * Forgot header in last commit.
    * Code refactorization.
    Many, many typo fixes.
    * Doxygen.
    * Visual indication of weapn slots.
    GUI can now be set through the equipment screen.
    Changed the right mouse click API so that it won't pass the name anymore. It is seldom useful. and can be easily asked for.
    Changed the imagearray right click callback to provide name, not array index
    Added right-click callback to imagearray widget. Registered a
    right-click callback for the available outfit imagearray.
    * Better focus handling in equipment window.
    * Fixed accuracy giving 2x the bonus/malus.
    * Equipment screen looks sexy again.
    * Info is starting to take shape.
    * Custom widgets use userdata now.
    * Changed how equipment slots are rendered so it acts like another widget now.
    * Split equipment stuff from land stuff to make it more understandable.
    All outfits can now add shipstats with <stats> tags.
    Added flat armour/shield modifiers.
    Added flat armour/shield regeneration modifiers.
    OK, we got it!
    
    I repurposed Jam Resistance to be used as "tracking" and adjusted
    the numbers. Seems to work pretty decently well.
    Make everything fuel related an int
    Tag everything related to fuel and using double with DELETETHIS_
    More gettext.
    Replace memcpy with struct assignment
    Absorb and ew_hide must be multiplied to match XML values
    Add cpu_max to mod.csv (for core systems)
    Add beam output to --devcsv
    Increase outfit CSV uniformity
    Remove obsolete bolt CPU value
    Add launcher and ammo output to --devcsv
    Add modification output to devcsv
    Minor devcsv output fixes
    * Wrapper for nsnprintf being used all over.
    * Do not crash if CSV can't be generated.
    * Outsource damage types to XML.
    * Note: still buggy.
    * Fixed absorption and penetration should be 0-100 values in the csv and 0-1 internally.
    * Using fancy damage struct to prepare for generic disabling implementation.
    * Fixed absorption and penetration should be 0-100 values in the csv and 0-1 internally.
    * Using fancy damage struct to prepare for generic disabling implementation.
    * Put damage penetration in outfit csv.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    * Try to fix the bloody credits mess.
    Swivel should be output to CSV in degrees, not radians.
    * Added swivel weapons, may need more swivel.
    * Added concept of turret tracking and thus dynamic lead angle based on ewarfare.
    * Fixed output of leadangle being in rad.
    * Generate CSV with leadangle.
    * Outfits use heatup now. May still need more tweaking love, but it looks ok for now.
    * Fixed printing delay in s and not ms as xml format expects.
    * Removed references to "old" accuracy.
    * Remove non-primitive values (you can calculate anything based on what's there).
    * Fixe brown paper bag bug.
    * Generating properly the outfit bolt weapon stats.
    * Forgot files.
    Use new __RW system and nlua_register() everywhere
    lua headers are system headers, include them that way
    * Made some nlua naming consistant.
    * Split player stuff from nlua_misn.
    Fixed format strings being used with nfile_ stuff.
    FIxed savegame loading.
    Initial mission log work completed.
    Initial mission log work completed.
    Removed unused leftover tutorial stuff.
    Added economy statistics and last purchase price, including saving of economy data
    More gettext.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Added WIP Lua and saving/loading
    add core outfits to ships from old saves.
    * Wrapper for nsnprintf being used all over.
    * XDG patch by aanderson.
    user data should go into $XDG_DATA_HOME (.local/share by default)
     - .naev/saves -> ~/.local/share/naev/saves
     - .naev/screenshots -> ~/.local/share/naev/screenshots
    
    user preferences should go into $XDG_CONFIG_HOME (.config by default)
     - .naev/conf.lua -> ~/.config/naev/conf.lua
     - .naev/conf.lua.backup -> ~/.config/naev/conf.lua.backup
    
    cached data should go to $XDG_CACHE_HOME (.cache by default)
     - .naev/gen -> ~/.cache/naev
    * Lua command for turning off player saving.
    * Do not back up right after loading.
    * MAJOR COMMIT - May bring breakage.
    * Removed global variables from nlua_misn.c, nlua_event.c and nlua_hook.c
    * Added tutorial button.
    * Moved loading stuff into load.c.
    * Added infrastructure for reading save information.
    * More specific error.
    * Using naev_version instead of manual printing for better handling of -beta1.
    GUI can now be set through the equipment screen.
    * Moved gui_load out of src/pilot.c because it's ugly and a hack that barely works.
    * Kill the insane hooks.
    * Events can now be maybe to save themselves and reload with the evt.save() command.
    * Do not run event/mission hooks when game starts landed.
    * Added gui hook when player cargo changes.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Start off landed.
    * Added  "load" event trigger. This allows events to be triggered when a new game is created or an old game is loaded.
    * Major refactoring of the pilot. It is now all contained in a struct.
    * Added function for saving star systems.
    * Cleaned up naming in save.h.
    * Dehacked some hacks (savegame code in menu.c).
    * Fix faction colour in messages when loading a new game.
    * Load game menu closes with esc.
    * Added welcome message again.
    * Should fix all strict ubuntu warnings now.
    * Detect saves with 2 character names.
    * Added option to disable savegame compression.
    * Fancy new event system seems to work now.
    Generalize file back up as nfile_backupIfExists.
    * Events actually trigger now.
    * Check to make sure game doesn't get deleted after opening load game menu.
    * Moved placement of the "Del" button in the load window.
    Add a "continue" button in the Death menu
    * Persistant escorts now are working.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Seems like rename() behaves differently on implementations, should fix that.
    * Const.
    * Split variables from nlua_misn.
    * Shouldn't segfault if save is corrupted.
    * Should have gone in with last patch.
    * Fixed issue with unidiffs not removing properly.
    * Game now backs up saves.
    * Code clean up.
    * Warn user if saving fails.
    * Doxygen.
    * Use compression when saving.
    * Makes save files much more readable (good thing?).
    * First large ndata patch.
    * Moved xml.h to nxml.h.
    * Added more complicated xml parse functions in nxml.c.
    * First patch to try to add a dynamic economy.  Economy is static atm.
    * Some code clean up.
    * Fixed a memory leak.
    * Fixed game not saving.
    * If ndata isn't found, try to be a bit more robust in finding it.
    * Closing menus first before running hooks on new game so that dialogues seem in game.
    * Added introductory text.
    * Using remove() instead of unlink() for more portability.
    * Major toolkit change to simplify things a lot, makes it more object oriented.
    * Version bump to 0.3.0.
    * Reduced calls to xmlCleanupParser(), only one for all the loading now.
    * Some commentaries so no one makes the same mistake.
    * Fixed diffs not saving properly.
    * First release of the unidiff system.
    * Doxygenization.
    * Seperated dialogues from toolkit.
    * Changed some syntax.
    * Added some doxygen.
    * Need to run enter and takeoff hooks on load game.
    * Major upgrade, you don't already know all systems location.
    * Added possibility to delete savegames
    ended up writing my own saver, alot cleaner, alot faster, alot easier, silly me
    pluto still refuses to cooperate, mission/hook save disabled atm
    missions are now loaded! still need to load hooks for them to work
    player faction standings are now saved and loaded
    now completed missions and mission variables are also loaded, missing current missions
    minor leak fix and improvement for load menu
    you can now save and partially load games (mission data is lost)
    save version in savegame
    added filesystem abstraction and path based stuff
    pause forced with toolkit, linux specific stuff for saving
    you can sort of load games, still need to fix issues though
    save player variables
    fixed a couple of bugs with saving system
    missions save code, global save function
    Refer to macOS as 'macOS' everywhere
    * More NAEV -> Naev.
    * Ran doxygen -u to update the Doxyfile.
    * Split vec2 from nlua_space.
    * Ignore @luareturn in doxygen.
    * Use graphviz by default.
    * Some more Camilo patches to the documentation system.
    * More doxygen.
    * Clean up and doxygen.
    * First commit of Camilo's luadoc generation script.
    * Revamp somewhat of the documentation build process.
    * Disabling LaTeX by default.
    * Use source browser with doxygen.
    * Preliminary doxygen support.
    Use new __RW system and nlua_register() everywhere
    Put GUI in global lua state
    lua headers are system headers, include them that way
    * Added Lua GFX module.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Get rid of some uninitialized warnings.
    Made it so that right-click cannot select a new target.
    
    This fixes an annoyance introduced by the ship-following before: it
    usually just gets in the way of autonav since you aren't concerned
    about the the pilots all around the planet you're trying to land on.
    This fixes that: in order to select a pilot you must first
    left-click it to indicate your intention to target it (after which
    it has priority over planets for the right mouse button).
    Spacing
    Fixed parentheses
    
    They were adjusted in that commit I just reverted, re-adjusted them
    here.
    Revert "Fixed clicking on radar with scaling."
    
    This reverts commit 4cd59cca3b9fb0103385dd1666385b6891dc48b5.
    Fixed clicking on radar with scaling.
    Changed fabs to FABS throughout the code.
    keybind_info: terminate with NULL instead of "end"
    Fixed size problem.
    
    Thanks bobbens for telling me what was wrong; I was totally lost here.
    Moved out finding key display names to input.c.
    
    For next commit.
    Even better clicking code.
    
    This takes into account planets that aren't enemies but that you still
    can't land on.
    Fixed the mouse with landing.
    
    This causes a message to show when you try to land on an unlandable
    planet, and lands on overrided planets.
    made autonav follow ships
    shut up clang warnings
    Remove SDL1 compatibility -D CLAGS, and sed so they aren't used
    Remove all C code meant to support SDL < 2.0.0
    Fixed a bad read with speed adjustment.
    Added default keys for escort commands.
    
    It occurred to me that none were set by default. Well, let's fix that. :)
    Default set to:
    
    Attack: END
    Clear Orders: HOME
    Hold position: INS
    Return/dock: DEL
    Change the sound speed based on base time rate.
    
    Requested by bobbens: this makes it so that sound plays at 1x if
    you're at your ship's base time rate, etc.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Add support for joystick hats
    made mining more user-friendly
    Input widget text input box should now appear at the right position.
    Autonav keybinding also works on map.
    More gettext.
    Fixed unknown planets preventing use of autonav.
    Strip trailing whitespace
    Don't unbind defaults when loading invalid keybinds
    Avoid collision between fullscreen conf var and keybind
    Ugly implementation of fullscreen toggle keybind
    Disable text input events by default (enabled by widgets)
    Initial commit of resizing and fake fullscreen
    
    All of this is exclusive to SDL2.
    
    SDL_WINDOW_FULLSCREEN_DESKTOP allows Naev's window to be the size of
    the current screen without setting video mode (and thereby turning off
    other screens, messing up background window positioning, etc.), but to
    use it, we need to be able to resize the GL viewport on demand.
    
    The work required to allow that also permits dynamic resizing while
    playing, as long as a few other things are also reinitialized (a minor
    issue).
    Update map path when clicking jumps
    Add support for SDL2 mouse wheel events
    * SDL2 textevents seem to work now for mouse input.
      This was done by adding focusGain and focusLose events to the widgets.
      Input now gets focus events that use the new textevent stuff.
      This should theoretically be able to be extended to UTF8 but we can't
      render it atm.
    * Added INGAME() for the player keybinding so it doesn't blow up.
    Don't undo player-initiated pause when closing toolkit windows
    Keep pause on the Pause key to prevent confusion.
    Undo accidental change to double speed
    Replace active cooldown key with autobrake
    
    This is another commit that ended up being larger than intended due to
    adjacent diffs. It can be broken down into three separate things:
    
    Autobrake is triggered by the same key that used to handle cooldown.
    On the first press, it triggers braking if moving, cooldown otherwise.
    If pressed while already braking, cooldown starts when braking ends.
    
    player_restoreControl is now the go-to function for aborting autonav,
    cooldown, and all other control-monopolizing states.
    
    Lastly, a number of VMOD(vel) < MIN_VEL_ERR calls have been replaced
    with a handy macro.
    Overhaul mouse targeting
    
    The overlay now uses the same click-handling code that everything else
    does. Proper fallthrough has been implemented as well, so that a click
    on the radar can still target a ship underneath the radar, etc.
    
    Left click is now used for the majority of actions, with the exception
    of autonav. Autonav is now exclusively engaged via right-click.
    Optimize the double-click handling somewhat.
    Relax input restrictions while paused
    
    I don't foresee any problems with this. It was already possible to do many
    things with the mouse while paused, and I feel it's ultimately up to the
    player whether they make heavy use of pause while playing.
    Add WASD key bindings by default.
    
    The arrow key-centric bindings are still present, and if desired can be
    set through the options menu.
    Implement basic double-click detection and use it for mouse targeting
    Reordered click-handling conditionals to avoid a potential crash.
    Improve autonav abort conditions and control handling while disabled
    Prevent reverse thrusters from interfering with mouse flying
    Don't allow mouse targeting when dead
    Fix jump point targeting via border indicators
    Changed a double-if to a compound if.
    Allow the player to change the base speed while Autonav is on.
    
    So, for example, if Autonav is speeding you up 11x, you can still
    press the ` key so that when it slows down again it will go to 2x,
    or if time is not being sped up at the time because of an enemy,
    you can press the key to switch between 1x and 2x.
    Properly prevent exit-only jumps from being targeted
    * Fixed warning.
    * Fixed keybindings with SDL2.
    * Almost there.
    * Initial work to get everything running on SDL2.
    NOLAND() checks pilot flags and thus needs to check for NULL player.p
    More unification and integration of the cooldown mechanic.
    Moved the player cooldown messaging into the generic functionss.
       Lua-triggered cooldown will notify properly.
       Cooldown will cancel autonav (instead of temporarily preempting it).
    Avoid running cooldown when landing and taking off.
    Added a discrete cooldown mode for pilots.
    * Have I ever mentioned my dislike of touching working stuff?
    * Fixed toolkit being a bit too lenient with input.
    afterburners actualy burn when activated by weapon group.
    abstracted player_afterburn for all pilots
    afterburners actualy burn when activated by weapon group.
    abstracted player_afterburn for all pilots
    * Afterburners work, double-tap seems broken again.
    * Merge thingy.
    Hyperspace targets should be able to be changed freely during autonav.
    
    Added fancier double-click behaviour for planets.
    * Ignore key repeats for weapon groups.
    * LLVM.
    * Stop reverse thrusting when the reverse key is not pressed down.
    Don't run faction_name or areEnemies on invalid factions.
    Don't run faction_name or areEnemies on invalid factions.
    Fix some minor nigh-impossible crashes; remove pointless initializations and such.
    More comment changes for easier parsing.
    Shorten the overly-long land key description.
    Aligned the keybind info order and the order that defaults are set.
    Many, many typo fixes.
    Cleaned up some key descriptions.
    * Fixed afterburner not released when paused.
    It's its not it's
    Use proper coords (factoring in camera, etc.) for mouse flying.
    Added key binding for mouse flight.
    * More LLVM (scan-build) fixes
    Preliminary mouse flying implementation.
    Finished refactoring mouse targeting. No longer biases towards pilots unnecessarily.
    Initial refactor of non-overlay mouse targeting.
    Removed useless variables from the mouse targeting function.
    Avoid checking faction of non-landable planets.
    Broke off some GUI code into separate functions, implemented mouse targeting for border indicators (pilots only for now).
    Forgot to preserve viewport translating for regular mouse targeting.
    Initial implementation of mouse targeting for the radar.
    Decrease the fuzziness of regular mouse selection.
    Ignore player's ship when selecting with the mouse.
    * More NAEV -> Naev.
    * Only ignore presses when going input disable crazy.
    * Allow disabling all keybinds too.
    * You can now disable or enable keys from Lua.
    * Can enable or disable keybindings.
    * Added hook for mouse.
    * Added input hook.
    * Should fix crash when checking if a keybinding is already bound.
    * Changed the way keybinds are handled so they use human readable names.
    * You can now set manual zoom control.
    * Do not handle click events related to player when he's null.
    * Do not handle click events related to player when he's null.
    * Can no longer hail while blowing up.
    * Preliminary cinematics mode support.
    * Allow toggling overlay when jumping.
    Prevent the player from attempting to self-hail.
    Added click-based actions to the mouse input handler.
    Planets and jump points are mouse-selectable outside of the overlay.
    Afterburner wil transition to regular engines when out of energy.
    * Fixed being able to change planet target while landing and land on another planet (issue #67).
    * Fixed possible segfault with mouse input when player is inexistant.
    * Cosmetics.
    * GUI Lua mouse bindings should work now.
    * Allow opening different info windows.
    * Much easier to target stuff now.
    * Only target with left moose button.
    * Mouse targetting now works with pilots.
    * Mouse cursor will auto-hide after a bit and be available when flying around.
    Retain doublespeed setting across autonav.
    * Explicitly forbid the 2x modifier when autonav is enabled.
    * Sanitized mouse hiding/showing so it doesn't dissappear in some cases.
    * Renamed startAutonav and abortAutonav to autonavStart and autonavAbort.
    * The overlay map seems to work OK, needs more features and a sane way to handle resolution.
    * Fixed possible issues with input handling and weapon groups.
    * Fixed possible issues with input handling and weapon groups.
    * You can now hold fire groups and they will shoot.
    * Fixed descriptions warning.
    * Removed player references to secondary weapons.
    * You can now activate or switch weapon sets.
    * Added -Wredundant-decls and fixed all new warnings.
    * SDL 1.3 seems to have renamed some events.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Removed totally obsolete, unknown and unused weapon safety (sorry Deiz).
    * Fixed warnings.
    Updated targeting to allow simultaneous planet and hyperspace targets, modified HUD and fixed player.teleport() bug.
    * Major refactoring of the pilot. It is now all contained in a struct.
    * Hitting secondary weapon but not shooting anything will not disable autonav.
    * Autonav shouldn't always break when paused.
    * Fixed rudi_s tab change keybindings.
    * Better handling of modifier keys, merging lctrl/rctrl into ctrl and such.
    * Implemented autohail.
    * Added key repeat to toolkit (barely used).
    * Specifically disable key repeat.
    * Horrible hack to make deiz happy with afterburner key bindings.
    * Implemented scrolling up/down.
    * Fixes typos in commentaries by rudi_s.
    * Fixes typos in commentaries by rudi_s.
    * Added keybindings to switch tabs by rudi_s.
    * Fixed potential afterburner issue.
    * Fixed some afterburn not turn off issues.
    * Allow pausing during hyperspace.
    * Enormous diff that basically points out that bobbens' punctuation sucks.
    * Minor text updates by Deiz.
    * Made some keybinds work with any by default.
    * Code clean up.
    * Added naev.getKey() Lua binding.
    * Added keybind to clear target by popular demand (read BTAxis).
    * Whitespace.
    * Keybinds warn you when you set them so that they overlap.
    * Autoface by default ignores all modifiers.
    * Afterburn bound by default to z, doubletap still works.
    * Better handling of sound pausing/resuming.
    Fix target_prevHostile default keybind definition.
    * Rewrote conf framework to be much more robust and better overall.
    * Fixed stupid input bugs.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Typo fix by zid.
    * Some minor clean ups.
    * Removed casting.
    * Improved input widget handling by introducing text events.
    * First draft of the console, not working yet.
    * Made it so radar zoom makes sense.
    * Fixed warnings on 32 bits.
    * Add debugging check to avoid stupid segfaults like in the 0.3.6 release.
    * Fixed segfault in keybinding menu.
    * New keybindings to cycle through hostiles (forwards and backwards).
    * Timers clear properly now.
    * No longer able to do weird things while dying.
    * Can no longer land while exploding.
    * No longer using a toolkit global variable.
    * New firemodes, allows ships to shoot only turrets, forward mounts or both with primary weapons.
    * Move ai to use firemodes.
    * Improve bomber code.
    * New keybind to toggle weapon safety vs allies.
    * Sensibility => Sensitivity.
    * Added keybindings for targetting escorts.
    * Ripped the GUI stuff out of player.c and put it in gui.c.
    * Minor cosmetic patch.
    * Much better handling of joystick axes.
    * Doxygen.
    * Code clean up.
    * More segfault paranoia checks.
    * Avoid some other possible segfaults.
    * Got rid of warning.
    * More fixes to work with SDL 1.3.
    * Some stuff to start supporting SDL 1.3 ASAP.
    * Code clean up.
    * Added keybinding to cycle through secondary weapons backwards.
    * Removed some warnings on SDL 1.3, does not yet work with SDL 1.3 though.
    * Improve key handling to avoid situations where player gets "blocked".
    * Even more doxygen.
    * Doxygen fixes.
    * Fixed some keys that should have been KMOD_ALL.
    * Can no longer target ships while paused.
    * Improved the keybind loading system.
    * You can now set keybindings by key name.
    * Changed "speed" default from CAPSLOCK to '`'.
    * Added toggle 2x speed keybind.
    * More keybindings updates.
    * You can now find out about your keybindings.
    * You can now view what keybindings do what.  Not finished yet.
    * Give reason behind autonav abort.
    * Doxygen.
    * Added target_prev keybind.
    * Added communication framework.
    * Tweaked input settings a bit.
    * Can now use 'h' key in map window.
    * Cannot open map while dead.
    * Fixed some escort ai issues.
    * Escorts can now return to ship.
    * Some doxygen fixes.
    * Added much more escort stuff.
    * Polished autonav system a bit more.
    * Input clean up.
    * Fixed secondary weapon again.
    * Improved the mod state handling.
    * Allow two keybindinsg on the same key now.
    * Fixed some issues with autonav.
    * Added support for key modifiers.
    * Added afterburn to it's own keybind (for joysticks).
    * Some minor clean up.
    * Introduced autonav.
    * A few more commentaries.
    * input.c is doxygenized.
    * pilot.c is doxygenized partially.
    * Split engine sounds and GUI sounds for player.
    * player.c has more doxygen now.
    * Fixed some issues in sound.c.
    * Changed some default keybindings to avoid problems with SDL 1.3.
    * Sanitized the pilot_get*.
    * Player can target nearest pilot with 't'.
    * New CFLAG: -Wshadow.
    * Fixed all new warnings.
    * Lowered default ms delay to trigger afterburn from 500 to 250.
    * Fixed being able to rumble afterburner when in toolkit or hyperspacing.
    changed some input things to prevent blocking hopefully
    big assorted patch, adds afterburner noise
    fixed acceleration sticking sometimes
    game no longer pauses when loses focus, was buggy and player can pause with ESC or p
    made more bindings ingame to avoid segfaults
    pause forced with toolkit, linux specific stuff for saving
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    added new simple toolkit_YesNo confirmation dialogue
    branch:      naev
    fix possible segfault
    branch:      naev
    player death implemented
    branch:      naev
    to afterburn, you double tap accel instead of actually hitting a key
    branch:      naev
    added afterburners
    branch:      naev
    allow menu when hyperspacing (cancel fancy hyperspace effects when paused)
    branch:      naev
    fixed the ability to do funny stuff while hyperspacing
    branch:      naev
    fixed wierd new warnings and added more thingies (especially factions)
    branch:      naev
    you now need permission to land
    branch:      naev
    changed it so you can't change targets with toolkit open
    branch:      naev
    map framework, changed systems name to systems_stack for coherency
    branch:      naev
    allow toolkit to block input if needed
    branch:      naev
    fixed a bug introduced when allowing toolkit some control
    branch:      naev
    split boarding from player.c to board.c
    branch:      naev
    split toolkit input from game input to fix silly bugs
    branch:      naev
    C correctiveness patch
    branch:      naev
    information window pauses game
    can't target ships while game is paused
    branch:      naev
    some code cleanup (MELEMENT sanity)
    added information and ship spec windows
    some more comments here and there
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] prepared for the upcoming toolkit_list
    fixed some sanity around turning pilot functions, now in pilot_face
    added basic rough on the edges hyperspace implementation
    branch:      naev
    [svn] added little menu when hitting esc to not quit automatically
    branch:      naev
    [svn] added reverse command
    branch:      naev
    [svn] Basic toolkit implementation (but ugly)
    Basic landing
    Pause bugfixes
    branch:      naev
    [svn] added beginning frame for toolkit
    added ability to pause/resume game
    nerfed lasers armour damage
    branch:      naev
    [svn] pulled input out of player, file was getting too big
    more preperations for the toolkit
    corrected a crash, added radar display of asteroids and display on map editor
    Initial commit of resizing and fake fullscreen
    
    All of this is exclusive to SDL2.
    
    SDL_WINDOW_FULLSCREEN_DESKTOP allows Naev's window to be the size of
    the current screen without setting video mode (and thereby turning off
    other screens, messing up background window positioning, etc.), but to
    use it, we need to be able to resize the GL viewport on demand.
    
    The work required to allow that also permits dynamic resizing while
    playing, as long as a few other things are also reinitialized (a minor
    issue).
    * Made all the colours constant as they should be.
    Minor fixes and dead code clean-up.
    Minor fixes and dead code clean-up.
    Run a GUI function when faction relationships change. Reduced the number of API calls the Slim GUI makes each frame.
    Many, many typo fixes.
    Added a helper function, made sure appropriate Lua functions are called when ship mass changes.
    Broke off some GUI code into separate functions, implemented mouse targeting for border indicators (pilots only for now).
    Initial implementation of mouse targeting for the radar.
    * GUI can now catch mouse events if so inclined.
    * Overlay map now doesn't center on player, but shows everything always.
    * Display names on the overlay.
    * Split the player radar render code into a function.
    * Made the internal gui radar rendering stuff accessible.
    GUI can now be set through the equipment screen.
    * Added -Wredundant-decls and fixed all new warnings.
    * More gui viewport code, nearly working.
    * Added functions to deal with the viewport.
    * Run update_system in the gui when changing systems.
    * Run update_ship function when ship changes equipment.
    * Added gui hook when player cargo changes.
    * You can now define the message position from Lua.
    * Allow setting of planet/pilot targetting reticles through the Lua GUI module.
    * Hacked in basic Lua GUI module functionality.
    * Hackfully removed lots of stuff, it's still a horrible mess.
    * Reenable various stuff so it looks much better now.
    * Added "hooks" for target and nav computer changing in the GUI lua stuff.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Force blink on when changing targets.
    Enabled rendering of both planet and jump point reticles simultaneously.
    * Don't spam player with messages when simulating system.
    * Changed render order for reticles vs pilot overlay.
    * Added option to toggle amount of log lines you want.
    * Implemented scrolling up/down.
    * Implemented pilots hailing player.
    * Render planet targetting reticle with pilot target reticle.
    * Render target reticles above player.
    * Clear messages on player cleanup.
    * Removed gui_xoff/yoff externs.
    * Ripped the GUI stuff out of player.c and put it in gui.c.
    replaced some sprintf with nsnprintf.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Don't segfault when trying to generate news for planet with no faction.
    Simplified colors and modified image array selection colors.
    
    This gets rid of some variants of text coloring and defines them
    in a different way. The "dark" versions are removed; intending to
    replace that with outlines of some kind.
    Remove all C code meant to support SDL < 2.0.0
    Uniformized the "Out of Memory" message variants.
    More gettext.
    Changed escape code for colors from '\e' to '\a' so xgettext plays well with it.
    Replace memcpy with struct assignment
    Major whitespace and style cleanup in news.c
    Remove unused extern
    Remove pointless initialization and fix include order
    Replace <string.h> includes with nstring.h
    Whitespace and code duplication cleanup
    Add support for SDL2 mouse wheel events
    fixed segfault for accessing deleted articles
    * More bobbens paranoia around long ints and saving and such.
    changed (long int) to int64_t and removed a printf
    removed the another memory leak
    fixed memory leak
    fixed (long int) error message
    * Minor code cosmetics.
    * Some code cosmetic considerations.
    changed syntax for news.add(), removed old file
    removed date_to_remove
    news.add() now accepts tables of args in a table
    added news.bind()
    Added date_to_add & date_to_rm args to news.add()
    removed the unfeatured restriction on length
    removed bugs and added generic news event
    removed printfs
    hack to work around XML writer error
    fixed a bad exiting bug
    fixed bad exiting bug
    * \e, not \027 in C.
    * Force color codes off at the end of each title and message, for sanity.
    * Regenerate the news buffer when landed.
    Removed printfs & prettified code a little
    Issues have been worked out, useable now
    Better lua cmds
    Fixed date issues. Added temporary headers
    Semi-finished
    Fixed some lua
    Added WIP Lua and saving/loading
    Temporary line breaking
    First "working" but WIP news
    * Custom widgets must not bend down to the all encompassing "mouse functions return 1 if event is blocked".
    * Sanitized more toolkit return parameter for function pointers.
    * Wrapper for nsnprintf being used all over.
    * FIxed segfault.
    * Restoring should work for news T_T.
    * Reset colour in news after title and block.
    * SHould handle colour restoration with multiple lines.
    * Fixed news is good news.
    * Improved news allocation scheme a bit.
    * News should restore colours properly on linebreak.
    Fix two memory leaks, one failing to free a returned array in space.c, one failing to free the last news item line in news.c
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    * Fixed memory leak when news fails to load.
    Many, many typo fixes.
    * Spelling isn't bobbens' fortee.
    * Typos fix by c_korn.
    * As /dev/random pointed out, we should not use lua_next for ordered lists.
    * News Lua errors should produce stack traces.
    * Bit more paranoia.
    * Fixed news.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Custom widgets use userdata now.
    * Changed how equipment slots are rendered so it acts like another widget now.
    * Fixed some custom widgets.
    * Fixed bigger memory leak detected by Deiz.
    * Minor code clean up.
    * Fixed news jumping after dragging mouse.
    * Added gl_renderRect.
    * Removed more glBegin and friends.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Fixed scrolling direction of news.
    * Fixes last patch which was atrociously bad.
    * Some font optimizations.
    * Properly fixed news Lua stack.
    * Make it so you can't "lose" the news.
    * Some nlua sanitizing.
    * Should fix a SIGABRT.
    * Removed some warnings.
    * Implemented mouse usage in the news widget.
    * News is much fancier now.
    * News rewrite - not finished yet.
    * Initial news implementation.
    Optimize the map by skipping out-of-bounds names and systems
    * Added planet.getLandable().
    * Refactored code.
    * Cleaned up code.
    Added a function for randomly shuffling arrays.
    * Added RGB->HSV routines.
    * Manipulate targetting graphics in HSV space.
    * GUI now aproximates graphical health bars with least squares linear aproximation.
    * Added nmath to handle more math aspects of naev.
    Don't render dead widgets.
    Translate window titles when possible.
    Fixed some alt text not displaying properly.
    Added toolkit_drawTriangle.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Changed the rounded corners to simple corners.
    Flattened and darkened all of the tk stuff.
    
    Looks very nice now!
    Fixed the rest of the text colors.
    toolkit: tidy glsl code, and render inner and outer border
    Begin porting toolkit to use a fragment shader for rounded corners
    
    The borders aren't currently rendered
    Reduce shader boilerplate with a C program generating C code
    
    Ugly, I guess, but... less?
    Create a "smooth" shader, to replace some of the remaining code
    Remove SDL1 compatibility -D CLAGS, and sed so they aren't used
    Remove all C code meant to support SDL < 2.0.0
    More gettext.
    Basic tab completion for the Lua console
    Strip trailing whitespace
    Further toolkit safeguards
    Fix the toolkit's focus model
    
    Prior to this, text input would get stuck on or off depending on the
    last widget that handled it.
    
    Windows are now marked as exposed while they have input focus, which
    triggers focusGain for any input widgets (to re-enable text input),
    including those nested within tabbed windows.
    
    The toolkit tries to always have one window exposed at a time. When a
    new window is created (and isn't WINDOW_NOFOCUS) it will be exposed,
    while the currently-active window will be unexposed (disabling text
    input, etc., if enabled).
    Use proper wrapper function when setting focus manually
    Clean up and centralize widget focus gain/loss
    Avoid a crash if there are no visible windows
    Fixed a bug and better-documented window raise/lower
    Make widget size accessible outside the toolkit
    Automatically scale fullscreen windows to screen size
    Add toolkit functions for getting/setting window positions
    Support raising and lowering toolkit windows
    Automatically re-center windows when resolution changes
    Disable fake key repeat in the toolkit under SDL2
    
    I don't foresee any issues with this, aswe're getting real repeat events
    that are configured at the OS level, and unlike the gameplay input
    handler, the toolkit doesn't ignore real repeats.
    Do not generate fake repeating text input for SDL2
    Add support for SDL2 mouse wheel events
    * SDL2 textevents seem to work now for mouse input.
      This was done by adding focusGain and focusLose events to the widgets.
      Input now gets focus events that use the new textevent stuff.
      This should theoretically be able to be extended to UTF8 but we can't
      render it atm.
    * Added INGAME() for the player keybinding so it doesn't blow up.
    Don't undo player-initiated pause when closing toolkit windows
    unicode member doesn't exist under SDL2
    Implement basic width scaling for tooltips with long first lines
    Avoid resetting repeat count, etc. in the toolkit when a key is repeating
    Set keysym.unicode when generating raw input events
    
    Not doing so was causing uninitialized reads, which was typically benign,
    though it would spew garbage into any focused input widgets.
    * Initial work to get everything running on SDL2.
    * Fixed some crashes with player.swapShip(...) and the likes with no shipyard.
    * Buttons catch events.
    * Custom widgets must not bend down to the all encompassing "mouse functions return 1 if event is blocked".
    * Sanitized more toolkit return parameter for function pointers.
    * Handle modifier keys in the toolkit properly.
    * Revert key unregistering to hopefully stop keys from repeating when they shouldn't.
    * Ninja skills now avoid invalid memory read that can cause bad things to happen.
    * Improved toolkit key repeats, to facilitate modifier keys.
    Backwards-cycling focus was technically broken.
    You'll eat your events, and you'll like them!
    Having disabled buttons always call their respective functions anyhow was a very, very bad idea. Replaced with an optional flag.
    Added support for focusing and pressing disabled buttons (for receiving error messages).
    Added some toolkit functions for getting and setting focus.
    Added fancy hotkey support, for enhanced keyboard usability.
    * Made all the colours constant as they should be.
    * Fixed segfault.
    * Fixed how toolkit handles stuff so tabbed windows pass full events to their children windows.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Whitespace, typo and general style cleanup.
    Many, many typo fixes.
    * Spelling isn't bobbens' fortee.
    * Typos fix by c_korn.
    * Play sound when messing with sound slider.
    Support numpad enter in addition to regular enter key.
    * Use RGB colors, not RGR.
    * Fixed various issues with dialogues and the toolkit in general.
    * Minor optimization.
    * Do not render dead windows.
    * malloc + memset = calloc
    * Gave windows custom data.
    * Run function pointer on windows destroy and window kill.
    * Show the starting system in the background (with movement) at the main menu.
    * Sanitized mouse hiding/showing so it doesn't dissappear in some cases.
    * Fixed minor crash with backspace and input boxes.
    * Changed GL_POLYGON to GL_TRIANGLE_FAN for OpenGL ES compatibility.
    * Patch to use GLshort instead of GLint for compatibility with OpenGL ES by rookie1.
    * Event type is Uint32 now in SDL 1.3.
    * toolkit_clip -> gl_clipRect.
    * Changing entire reference system to bottom left based, should solve shit in the long run.
    * More or less working, however there's issues with custom widgets.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    Fixed a bunch of off-by-ones... on Nvidia drivers anyhow. Bloody OpenGL.
    * Slot sizes are more visual now.
    * Widgets now know if they are being focused.
    * When you disable a button and it's focus, it resets the window focus.
    Fixed keyboard tab-switching, now follows conventions.
    * Implemented tabbing across parent windows.
    * ctrl-tab now cycles backwards through toolkit widgets.
    * Tab seems to work again in tabbed windows.
    * Added key repeat to toolkit (barely used).
    * Made less transparent the alt text.
    * Fixed some off-by-ones.
    * Converted some GLfloat stuff with vertex to GLint.
    Changed from GL_FLOAT to GL_INT in toolkit rendering
    Toolkit uses int now instead of float
    * Fixed keybindings.
    * More segfault protection.
    * Alt text can no longer appear out of bounds.
    Scrollbar looks better now
    Removed bobbens-imaginary-rounded corners.
    * Fixed rendering order.
    * Custom widgets use userdata now.
    * Changed how equipment slots are rendered so it acts like another widget now.
    * Fixed bug with new widgets.
    * Moved widgets to linked list.
    * Fixed scroll in tabbed windows.
    * Made tooltips wider.
    * Tooltips should disappear properly now.
    * Should fix weirdness with map not unpausing.
    * Fixed toolkit locking on you.
    * You can now specify window event handler.
    * Text/colour tweaks by Deiz.
    * Fixed glScissors when scaling is being done.
    * Fullscreen is always at 0,0.
    * Implemented fullscreen windows.
    * Fixes some visual glitches.
    * Fixed segfault and memory corruption.
    * Using linked lists for toolkit.
    * Hack to fix segfault with ES missions.
    * Toolkit events should work as expected again.
    * Fixes some segfaults when selling ships.
    * Should fix remaining memory issues.
    * Fixed mouse movement issue with buttons.
    * Should fix the memory issue in the toolkit.
    * Made alt text a bit transparent.
    * Made the drawAltText code common.
    * Added concept of toolkit overlay renderings.
    * Entire widget input system makes sense (tm).
    * Landing window remembers last tab you had open.
    * Changed a bit the cosmetics of the tabbed window.
    * Fixed segfault when realloc moves memory.
    * Made some of the coord translations common.
    * Seems like tabbed windows work now.
    * Move to use tabs - not complete yet.
    * First revision of tabbed window widget, does nothing atm.
    * Added concept of window flags to ignore some functionality.
    * Added rawevent handlers for widgets.
    * Rewrote conf framework to be much more robust and better overall.
    * Toolkit is now free of glBegin/glPushMatrix.
    * Converted more toolkit opengl stuff to VBO.
    * Use glScissor instead of clipping planes.
    * Removed some more glBegin.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Improved handling of text repeats.
    * Key repeat handles text again.
    * Using x.org defaults for key repeats.
    * Fixed potential segfault in toolkit.
    * Added crude up/down arrow to move through console history.
    * Improved input widget handling by introducing text events.
    * Added gl_print*Raw functions to avoid some mission segfaults.
    * No longer have windows "ghost" when you exit at weird times.
    * Bug in toolkit could cause weird behaviour with mouse sometimes.
    * Improved map zoom handling.
    * Custom widget mouse movement function now gives dimensions.
    * More code clean up.
    * Should fix mods not working in widgets.
    * Should avoid the infinite loop in credits.
    * Reenabled mouse over in toolkit.
    * No longer using a toolkit global variable.
    * Fixed some outstanding issues.
    * Some more clean up.
    * Moved more stuff out of toolkit.
    * Added new get function for image arrays.
    * Fixed clicking in list/image array area.
    * Some code clean up.
    * Moved more stuff out of toolkit.
    * Fixed accept_fptr not working for windows.
    * Moved more stuff out of toolkit.
    * Split the image array widget.
    * Moved some stuff out of toolkit that i missed before.
    * Split the input widget
    * Split the list widget.
    * Split fader widget.
    * Split custom widget.
    * Split rect widget.
    * Split image widget.
    * First patch to try simplify and make modular the entire toolkit approach.
    * More abstractions for the key event handling.
    * Added flags to widgets to clean up some code.
    * Moved structs out of the union.
    * Cleaned up some toolkit code.
    * Do not use vnprintf for Lua stuff (avoids possible segfaults).
    * Avoid some other possible segfaults.
    * Doxygen.
    * Code clean up.
    * Some more nstd stuff.
    * Created nstd for portable SDLKey isalpha functions and the likes.
    * Limit the input widgets in a more sane compatible way.
    * More fixes to work with SDL 1.3.
    * Some stuff to start supporting SDL 1.3 ASAP.
    * More doxygen.
    * Lots and lots of doxygen.
    * More sanity checks.
    * Code clean up.
    * Removed unused and a bit buggy scrollbar (use fader instead).
    * Should fix even more issues with small resolution scaling.
    * Faders and Audio options by Camilo.
    * Put the round() in the font system to try to improve font quality on some system.
    * Might fix some of the problems some people have with displaying text.
    * Refuel button should appear more often now.
    * Scrolling seems to work fine for lists now.
    * Scrolling and scrollbar in lists seems to almost work now.
    * Cleaned up the scrollbar stuff a bit.
    * Doxygen.
    * Fixed possible key repeat blocking.
    * Code clean up.
    * Major toolkit change to simplify things a lot, makes it more object oriented.
    * Buttons with NULL function are now disabled by default.
    * Fixed stupid mistake in image array scrolling.
    * Fixed Image Arrays going out of sync.
    * Made toolkit_getList apply to Image Arrays too.
    * Use image arrays in shipyard.
    * Major improvements to Image Array.
    * Mouse Wheel is now used properly.
    * New widget: Image Array.
    * Polished outfits to make use of new widget.
    * Seperated dialogues from toolkit.
    * Input dialogues can now be cancelled and return NULL.
    * Changed some syntax.
    * Added some doxygen.
    * More warnings.
    * glTexList now works as expected and detects leaks.
    * Valgrind finally reports no memory leaks.
    * More memory related fixes.
    * Fixed some memleaks.
    * Simplified window position creation.
    * More commentarios on widget creation.
    * Allow to move or get window positions after creation.
    * Rumble can no longer "leak" over to menus and such.
    * Fixed outstanding bug with window_create(...).
    * Fixed button getting selected when it shouldn't.
    cosmetic patch -> gl_screen.[wh] = SCREEN_[WH] in most places
    patch by Nicholas Niro <nik_89@neuroponic.com> for older gcc
    forgot graphic... again...
    you can now actually refuel
    pause forced with toolkit, linux specific stuff for saving
    seems that the off-by-one was sw mesa issues
    minor map tweaks
    now using clipping planes for starmap for better results
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    dynamically change width of dialogues msg and yesno if text is long
    fixed toolkit
    allow null on toolkit_modifyText
    major commit, first fancy bar mission, alot of improvement
    introduced getListPos to get the position of the list, cleaned up mission stuff
    fixed silly bug with your shipyard, change disabled button
    nailed the memory leak and fixeud a stupid error
    some cleanup to try to find the segfault fault
    fixed the toolkit module in lua, fixed accept bug, segfaults :)
    you can now disable/enable buttons
    improved mission computer
    made the toolkit auto thingies more flexible in height
    added purple, can now change toolkit image colour
    renamed alert, YesNo dialogue_ instead of toolkit_.  added dialogue_input
    added new simple toolkit_YesNo confirmation dialogue
    you can specify default fptr for windows now
    branch:      naev
    fixed segfault when using 'enter' on a button with no trigger
    branch:      naev
    input widget will now scroll if full
    branch:      naev
    more error checking paranoia
    branch:      naev
    some hackish things, but input now works, you can set the player name on newgame
    branch:      naev
    almost working player input, need to hack font up first
    branch:      naev
    fixed outstanding memory write access issue
    branch:      naev
    added window_getImage
    branch:      naev
    mouse event for custom widgets has more control, better star map
    branch:      naev
    mouse events not taking into account custom window offset
    branch:      naev
    custom mouse events for custom widgets
    branch:      naev
    negative xpos value for text widgets was off
    branch:      naev
    fixed border issue in custom widgets
    branch:      naev
    map framework, changed systems name to systems_stack for coherency
    branch:      naev
    you can use shift/control to buy more outfits at a time
    branch:      naev
    added possibility for a custom widget
    branch:      naev
    added toolkit_alert as a way to warn the user of something
    branch:      naev
    small fix for the list selecting stuff when clicking on the white area
    branch:      naev
    new rectangle widget, more widget creation checking
    branch:      naev
    more list support, more shipyard features, allow NULL text in widget
    branch:      naev
    added rough outlines for shipyards and outfits
    branch:      naev
    can no longer focus unfocusable widgets
    branch:      naev
    click focus for lists
    branch:      naev
    mouse down changes focus
    branch:      naev
    keyboard events work with list
    branch:      naev
    now selected list stuff actually renders and you can focus it
    branch:      naev
    list widget renders, now just needs to work properly
    branch:      naev
    more opengl cruft cleaning in toolkit.c, rectangles this time
    branch:      naev
    added toolkit_drawOutline to clean up much opengl cruft in toolkit.c
    branch:      naev
    You can now work the windows with the keyboard only
    branch:      naev
    added basic toolkit focus ability
    branch:      naev
    added a window_modifyImage call
    branch:      naev
    allow toolkit to block input if needed
    branch:      naev
    allow buttons to have NULL pointer function, fixes some info segfaults
    branch:      naev
    can only board once, can steal credits :)
    branch:      naev
    fixed bug with addtext and negative position
    branch:      naev
    split toolkit input from game input to fix silly bugs
    branch:      naev
    made ai/toolkit compileable under C99 (naev isn't completely though)
    branch:      naev
    C correctiveness patch
    branch:      naev
    some code cleanup (MELEMENT sanity)
    added information and ship spec windows
    some more comments here and there
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] prepared for the upcoming toolkit_list
    fixed some sanity around turning pilot functions, now in pilot_face
    added basic rough on the edges hyperspace implementation
    branch:      naev
    [svn] added window_get to get windows based on their name
    added a small boarding menu
    branch:      naev
    [svn] windows now get a name embedded
    added empty commodity exchange
    tried to sanitize secondary weapon/weapon shooting
    changed pilot stack and star stack to not lower memory allocation
    fixed landing/takeoff to actually affect the system
    branch:      naev
    [svn] improved the font usade
    now you can print blocks of text
    added planet descriptions
    branch:      naev
    [svn] added support for images of planets
    cosmetic toolkit changes
    changed the gl_blit functions to work with doubles instead of Vector2d pointers
    took opportunity to clean up space.c xml (bringing it up to xml.h standard)
    cleaned up code
    branch:      naev
    [svn] moved colours out of opengl
    improved land graphics
    added more sane toolkit api
    branch:      naev
    [svn] Basic toolkit implementation done
    added gl_printMax and gl_printMid which was long overdue
    using flag system with gl_screen
    optional AA for primitives
    minor pause behaviour fix
    branch:      naev
    [svn] major syntax rewrite, big "what the hell was I thinking" in player.c
    made opengl.h struct names more intuitive
    branch:      naev
    [svn] Basic toolkit implementation (but ugly)
    Basic landing
    Pause bugfixes
    branch:      naev
    [svn] added beginning frame for toolkit
    added ability to pause/resume game
    nerfed lasers armour damage
    Intial port of missions to single lua state
    
    Does not properly implement loading of all needed libraries, so somewhat
    broken for now.
    Many, many typo fixes.
    lua headers are system headers, include them that way
    * MAJOR COMMIT - May bring breakage.
    * Removed global variables from nlua_misn.c, nlua_event.c and nlua_hook.c
    * Added tutorial button.
    * Added -Wredundant-decls and fixed all new warnings.
    * Made some nlua naming consistant.
    * Removed diff module from nlua_misn.
    * Split variables from nlua_misn.
    * Changed misn_lua to nlua_misn for easier lua module detection.
    * Actually load the diff library in mission Lua now.
    * Moved Lua pilot stuff into it's own file.
    * Pilots now use metatables.
    * Conditionalize the player Lua API.
    begin cleaning up lua code a bit
    misc fixes and you can now use lua as conditionals for missions
    more tab removal, fixed up mission var stuff
    logs more verbose and added a variable stack to missions
    initial support for hooks
    first import of mission stuff
    Include locale.h when using NLS
    * Added gettext.h
    * Define LOCALEDIR in configuration file.
    * Bind to gettext using variables.
    Initial mission log work completed.
    Initial mission log work completed.
    * Allow opening different info windows.
    * Autoweap auto-disables when you modify the weapon sets.
    * Revamped info menu, not finished yet though.
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    gettext for nlua modules.
    Use new __RW system and nlua_register() everywhere
    Put GUI in global lua state
    Add types to lua api docs, and other documentation improvements
    Replace LuaTexture with glTexture**
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Many, many typo fixes.
    * Spelling isn't bobbens' fortee.
    lua headers are system headers, include them that way
    * More LLVM (scan-build) fixes
    * Added GUI API to position the omsg.
    * Luadoc.
    * You can now open windows from the GUI.
    * Luadoc.
    * GUI can now catch mouse events if so inclined.
    Luadoc fixes.
    Luadoc fixes.
    * You can now set the position of the fps stuff.
    * Doxygen.
    * Commentaries.
    * Comments.
    * Luadoc.
    * More gui viewport code, nearly working.
    * You can now initialize the OSD.
    * Radar can be square now (well rectangular).
    * Luadoc.
    * Luadoc.
    * You can now define the message position from Lua.
    * Allow setting of planet/pilot targetting reticles through the Lua GUI module.
    * Hacked in basic Lua GUI module functionality.
    * Hackfully removed lots of stuff, it's still a horrible mess.
    * Reenable various stuff so it looks much better now.
    ndata is dead! Long live ndata!
    upgrade on mission map
    Fixed mission/event sorting order.
    Added priority to events.
    Sort events by ordering.
    Fixed events trying to reload Lua.
    Fixed event memory freeing.
    Got rid of dat/event.xml :D
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    added spfx utility containing sound play for now
    Removed unused leftover tutorial stuff.
    Using ngettext for plurals.
    More gettext fixes and translations.
    More gettext.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Set __env/__misn before each function call again
    
    I seem to have misunderstood how this was working. This should fix some crashes.
    Replace remaining uses of Lua globals with Lua environments.
    
    This fixes crashes in the tutorials (and probably other events).
    Use new __RW system and nlua_register() everywhere
    Set __RW for each env
    Make rescue script use global lua state
    Use global lua state to test syntax of event/mission
    Run music scripts in global lua state
    Make background script use global lua state
    Free event and mission lua envs when done with them
    Use new nlua_register() API in nlua_loadCamera()
    Correction to my earlier library loading hack; use it in evt and misn
    
    I forgot about this...
    Clean up __evt_delete and __misn_delete
    Remove __evt and __misn globals after they are used
    Events using common lua state
    
    Still need to fix some things
    * Give write access to bkg module for events and missions.
    * New planets get a nonzero radius.
    * Update radius when updating gfx.
    * Moved various path defines into ndata.h.
    * Wrapper for nsnprintf being used all over.
    Whitespace, typo and general style cleanup.
    Many, many typo fixes.
    * Hooks should save their arguments properl and also remove them when hooks get removed.
    * More clean up.
    * Implemented going back to main menu from Lua (from new tutorial module).
    * MAJOR COMMIT - May bring breakage.
    * Removed global variables from nlua_misn.c, nlua_event.c and nlua_hook.c
    * Added tutorial button.
    * An event can have a "none" trigger to avoid warnings.
    * Events load properly on new game.
    * API to start an event from data name.
    * Missed include.
    * Events get music module.
    * Missed include.
    * Events get music module.
    * Added API to see if a mission or event is active.
    * Fixed some false warnings from event parsing.
    * More strict event parsing.
    * Claimed hooks should always run first before non-claimed hooks.
    * Activate claims at diverse areas to recheck sanity and the likes.
    * Events save/load claims.
    * Added functionality to set claims.
    * Added the background, camera and tex modules to missions and events.
    * Fixed memleak when missions or events error out like crazy.
    * Kill the insane hooks.
    * Only save hooks of events that need saving.
    * Events should keep their IDs now and thus hooks should work with them.
    * Events can now be maybe to save themselves and reload with the evt.save() command.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Removed obsolete mission/event specific timers in favour of the hook.timers.
    * More indentation fixes.
    * Free timers before running the function to avoid a timer usage peak.
    * Free timers before running the function to avoid a timer usage peak.
    * Added  "load" event trigger. This allows events to be triggered when a new game is created or an old game is loaded.
    * Even more verbose conditional checks.
    * Fixing really minor possible segfaults and other misc issues detected with scan-build.
    * Added sample event for random npcs.
    * Event NPC stuff working now.
    * Fixed issue with hooks saving event hooks.
    * Added event land as start condition.
    * Morre corrections.
    * Improved nxml onlyNodes API.
    * Events also check for unknown nodes.
    * Also check to see if event is already running if unique.
    * Check events for uniqueness.
    * Better handling of hooks for events and missions.
    * Events can be unique.
    * Hooks now work in events.
    * Events get TK API too.
    * Made some nlua naming consistant.
    * Fancy new event system seems to work now.
    * Added some event only API.
    * Added event updating.
    * Cond is no longer obligatory for events.
    * Removed some warnings of not fully implemented stuff.
    * Event Lua code should run now.
    * Some code to run event Lua.
    * Some code clean up.
    * Events load and clean up.
    * Added very simple first event.
    * Initial commit of event subsystem.
    Fixed bracket placement.
    changed some commodities to standard, and support on map editor for it
    More gettext.
    Converted the "blackmarket" flag to a "blackmarket" service.
    
    This is cleaner, and it's an easy way to make adjusting this property
    in the editor possible. The "blackmarket" flag outside of the assets
    is still supported for compatibility.
    Preserve the blackmarket attribute when saving planets
    Changed planet classes from enum to plain strings.
    
    The Naev engine wasn't doing anything in particular with explicitly
    defined classes. If anything were to be done, it would be in Lua,
    and that only sees strings anyway. Just changing it to strings makes
    it more flexible without losing anything.
    * You can now configure where to save stuff with the editor instead of hardcoded relative paths.
    * sizeof(char) is always 1. No need to keep it around.
    * Memleak fixes and code clean up.
    Fixed some renaming bugs and reduced duplicate code.
    Clean-up and fixed some minor renaming bugs.
    * Wrapper for nsnprintf being used all over.
    remove capitals and spaces from file names.
    
    Conflicts:
    
            src/dev_planet.c
            src/dev_system.c
    * Fixed name filtering.
    set cleanName and free it after
    filter out characters unsupported by Windows.
    save assets using laid out structure
     - changes appear immediately on disk
    * Unsquare values when saving.
    removed all traces of the onMap system
    jump properties are saved and loaded.
    also, editor saves additional properties
    Don't write tech element for planets that lack services.
    Only save presence and a number of other elements if the planet is landable. Likewise, don't save the bar description if there is no bar.
    Save the land function, if it exists.
    Save the planet land function in the XML when using the universe editor.
    * Doxygen.
    * Explicitly save virtual assets as virtual.
    * Transitional commit for faction in presence.
      * This commit loads asset.xml as before.
      * This commit saves to a new asset.xml format.
    * Better handling of virtual/real assets, especially when saving asset.xml.
    * Removed prodfactor and disabled "dynamic" economy for now.
    * Planet's presence tag is not part of the general tag.
    * Save presence tags.
    * Updated the dev stuff to save properly using presence.
    * Tech unidiff is working.
    * Fixed tech loading.
    * Fixed tech saving.
    * Added test tech.
    * Tech stuff should load and write properly now.
    * Too much slave coding makes bobbens forget important stuff.
    Remove unused plasmaf code
    Detect AppImage environment and adjust paths
    Remove nzip.h. Should fix broken nightlies.
    Remove --nondata flag
    ndata is dead! Long live ndata!
    Added pilot_flags.h to src/Makefile.am.
    added spfx utility containing sound play for now
    fixed makefile.am
    fixed makefile.am
    Created nlua_shiplog, and moved log stuff out of nlua_mission.
    Updated example in shadowvigil.lua.
    Initial mission log work completed.
    Initial mission log work completed.
    Split economy into economy and commodity.
    working on the solar system screen
    Initial add of system map
    properly add localedir
    * Added gettext.h
    * Define LOCALEDIR in configuration file.
    * Bind to gettext using variables.
    Removed unused leftover tutorial stuff.
    Don't distribute src/shaders_c_gen.c and only compile it if it exists.
    BUILT_SOURCES seems necessary.
    Package shader files in distribution.
    Put both dependencies just in case.
    Use SDL for shaders_c_gen to hopefully fix compile on windows.
    Uses system extension if necessary.
    Don't install shaders_c_gen
    Fixed compilation due to double definition.
    Make autotools properly understand shaders_c_gen
    Made the openal stuff extern and added them in a separate file. Not sure why it worked in the first place (maybe differente AL_APIENTRY definition?)
    Make sure shaders.gen.h is generated before any files that depend on it
    Reduce shader boilerplate with a C program generating C code
    
    Ugly, I guess, but... less?
    Use glad instead of galogen
    
    Similar idea, but a more major projects that, among other things,
    handles hhrplatform.h.
    Replace opengl_ext.c with files generated using Galogen
    
    Looking at several OpenGL extension loading libraries, I like Galogen
    because it allows generating files for any choice of GL version and
    extensions. So when we (hopefully) switch to GL 3.2 Core, we can
    generate headers for such and it will be a compile error to use features
    that are removed in that version, or added by later versions.
    
    Generated with:
    ```
    galogen gl.xml --ver 3.0 \
                   --profile compatibility \
                   --exts ARB_texture_filter_anisotropic
    ```
    
    https://github.com/google/galogen
    Add some helper functions for dealing with shaders
    Add a Map Outfits Editor for selecting/unselecting entire systems
    
    Add the Map Editor window
            src/dev_mapedit.c
            src/dev_mapedit.h
            src/Makefile.am
    
    Add file name and description parameters to dsys_saveMap()
            src/dev_system.c
            src/dev_system.h
    
    Remove Save Map button from Universe Editor
            src/dev_uniedit.c
    
    Add an intermediate menu for Universe and Map Editors, that could accomodate other future editors
            src/menu.c
            src/menu.h
    Add a Map Outfits Editor for selecting/unselecting entire systems
    
    Add the Map Editor window
            src/dev_mapedit.c
            src/dev_mapedit.h
            src/Makefile.am
    
    Add file name and description parameters to dsys_saveMap()
            src/dev_system.c
            src/dev_system.h
    
    Remove Save Map button from Universe Editor
            src/dev_uniedit.c
    
    Add an intermediate menu for Universe and Map Editors, that could accomodate other future editors
            src/menu.c
            src/menu.h
    Fix gettext build on mac
    Use macOS-specific user directories.
    UTF-8 support added to the font rendering functions, however, no glyphs are actually generated yet so they don't render and get ignored.
    Added missing files.
    Use new __RW system and nlua_register() everywhere
    Display Commodities Tab using images for commodities
    Combine ai_extra.h into ai.h
    
    Use forward declaration of struct to deal with cyclical import.
    Remove unused base64 code
    Include nzip.h in the source tarball
    Remove pack. It is no longer used
    added nzip.c
    Added WIP Lua and saving/loading
    * Missing file.
    Added a new Lua API module for jumps.
    * Slots are now handled separately in xml.
    * Initial commit of ship stats, doesn't really do anything new yet.
    * Outsource damage types to XML.
    * Note: still buggy.
    * Implemented going back to main menu from Lua (from new tutorial module).
    * Initial revision of omsg, needs Lua API and rendering.
    * Added commodity metatable.
    * Added Lua metatable and bindings for outfits (barebones).
    * Finally properly incorporated windres to the build system.
    * Attempt two to build resource file on windows.
    * Split nstrnstr to nstring.c.
    * Split map find functionality to expand soonish.
    * Started to centralize the pilot ewarfare stuff.
    * Moved loading stuff into load.c.
    * Added infrastructure for reading save information.
    * Centralized the game start information.
    * New player should have the system he'll start in as a background when writing name.
    Initial work on merging my threadpool into naev.
    * Split player autonav stuff from player.[ch].
    * NAEV now also prints everything to it's internal console.
    * Added some initial stuff, nothing interesting yet.
    * Added all the heat framework.
    * Move pilot hook stuff into pilot_hook.[ch].
    * Separated the pilot cargo stuff into pilot_cargo.[ch].
    * Renamed some stuff to be more consistant.
    * Basic GUI list implementation, never added though.
    * Added basic weapon set manipulation stuff.
    * Split up pilot files a bit.
    * Added infrastructure to set system claims.
    * Added Lua camera module basics.
    * Initial commit of the camera model.
    * Added lua bindings for background functions.
    * Split star background stuff from space stuff.
    * Split the lua persistance/unpersistance from mission.c.
    * Hacked in basic Lua GUI module functionality.
    * Hackfully removed lots of stuff, it's still a horrible mess.
    * Reenable various stuff so it looks much better now.
    * Added Lua Colour module.
    * Added Lua GFX module.
    * Added texture library for Lua.
    * Split outfits code from land.c.
    * Move shipyardstuff out of land.c in a first attempt to thin land.c.
    * You can now generate ship csv too.
    * Basic core for generating csv output done.
    * Added a NAEV wrapper for libpng stuff.
    * Initial commit of tech stuff.
    * Initial commit of planet saving code.
    * Renamed sysedit uniedit.
    * Added sysedit for actually editting the interior of the systems.
    * Added basic sysedit files.
    * Added new files to compile chain.
    * It should all actually compile now.
    * Forgot to add a header to autotool system, should fix dist-bzip target.
    Fix automatic rebuilding after a static library has changed
    * Added my (dodgy) queue implementation.
    * Added npc.[ch] so it compiles again.
    * Autotools support by Unavowed.
    Replace remaining uses of Lua globals with Lua environments.
    
    This fixes crashes in the tutorials (and probably other events).
    Events using common lua state
    
    Still need to fix some things
    * Hooks should save their arguments properl and also remove them when hooks get removed.
    lua headers are system headers, include them that way
    * MAJOR COMMIT - May bring breakage.
    * Removed global variables from nlua_misn.c, nlua_event.c and nlua_hook.c
    * Added tutorial button.
    * Hooks can have arguments now.
    * Hooks should work with both events and missions now.
    * Made some nlua naming consistant.
    * Removed hook stuff from nlua_misn.c
    * Removed diff module from nlua_misn.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    You can now claim strings and not only systems.
    Replace remaining uses of Lua globals with Lua environments.
    
    This fixes crashes in the tutorials (and probably other events).
    Remove __evt and __misn globals after they are used
    Events using common lua state
    
    Still need to fix some things
    Silence a (tiny, infinitesimal) amount of gcc's -pedantic warnings.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    * Hooks should save their arguments properl and also remove them when hooks get removed.
    * An event can have a "none" trigger to avoid warnings.
    * API to start an event from data name.
    * Added API to see if a mission or event is active.
    * Claimed hooks should always run first before non-claimed hooks.
    * Added functionality to set claims.
    * Kill the insane hooks.
    * Only save hooks of events that need saving.
    * Events can now be maybe to save themselves and reload with the evt.save() command.
    * Removed obsolete mission/event specific timers in favour of the hook.timers.
    * Added  "load" event trigger. This allows events to be triggered when a new game is created or an old game is loaded.
    * Events have 10 timers by default.
    * Added sample event for random npcs.
    * Event NPC stuff working now.
    * Fixed issue with hooks saving event hooks.
    * Added event land as start condition.
    * Morre corrections.
    * Events can be unique.
    * Fancy new event system seems to work now.
    * Added some event only API.
    * Added event updating.
    * Some code to run event Lua.
    * Some code clean up.
    * Events load and clean up.
    * Added very simple first event.
    * Initial commit of event subsystem.
    * Do not fear the pointers - no pointer hiding!
    * Code clean up and fixed all threadpool warnings.
    Merged the threadpool and changed perlin to use the threadpool.
    Initial work on merging my threadpool into naev.
    Use new __RW system and nlua_register() everywhere
    lua headers are system headers, include them that way
    * Made some nlua naming consistant.
    * Split naev module from nlua.
    * Luadoc.
    Remove now unused functions related to fixed-function OpenGL
    Start moving to glVertexAttribPointer()
    
    This is required in modern OpenGL
    Remove fallback for not having VBO
    
    OpenGL without VBOs is deprecated. Presumably, any drivers that can
    handle shaders will be fine with VBOs.
    Added dynamic VBOs.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Show more compact opengl features at runtime.
    * Added gl_vboData.
    * Replaced the weapon minimap draw stuff with VBO stuff.
    * More VBO API.
    * opengl_render is now using VBO as backend.
    * More VBO improvements.
    * Much cleaner OpenGL VBO subsystem design.
    * Initial VBO framework.
    * Stars using VBO.
    * Doxygen fixes.
    * Doxygen.
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    branch:      naev
    my bash license insert code accidently modified the md5 files
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] Makefile tweakage
    images already loaded from datafile
    checks md5sum
    branch:      naev
    [svn] using long options
    first working pack version
    Get rid of some uninitialized warnings.
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    gettext for nlua modules.
    [Docs] Replace '=' with '=='
    Comparison is done with the latter, not the former.
    Correct lua doc for jump.get()
    Use new __RW system and nlua_register() everywhere
    Add types to lua api docs, and other documentation improvements
    Fix various param issues LDoc (appropriately) warns about
    Make LuaSystem an int instead of struct
    Use Vector2d instead of LuaVector
    Update outfits list when planet/etc. known status is changed via Lua
    
    The main trigger for this was bar NPCs giving tips about jumps, etc.
    
    In the future it may be a good idea to cache the currently-displayed
    outfits, and just iterate over the maps specifically, and update the
    quantities instead of rebuilding everything from scratch.
    Add the ability to get a jump's angle from Lua
    jump.setKnown() setting known by default seems saner than removing.
    Initialize things to appease scan-build.
    Fixed jump.setKnown() to work with systems as well as jumps.
    Added jump.hidden() and jump.exitonly() to get the respective jump point flags.
    Have jump.get() return the inverse (exit) jump point as well.
    Added jump.system() and jump.dest() for getting a jump's origin or destination system, respectively.
    One last s/p/j/
    And another typo fix!
    More typo fixes.
    Typo fixes.
    * Added read only jump lua methods.
    Fixed some bugs; store two system IDs instead of one and a jump ID.
    Renamed Lua isKnown methods to 'known', for consistency.
    * Compiles.
    Luadoc update.
    Removed unnecessary headers and renamed some variables.
    Added a new Lua API module for jumps.
    Many, many typo fixes.
    lua headers are system headers, include them that way
    Use logarithmic music and sound volume when using OpenAL.
    * Added -Wredundant-decls and fixed all new warnings.
    * Fixed some fps control weirdness in the display.
    * Added the ability to do timed sound situation changes.
    * Code clean up.
    * Added API to get time elapsed in song.
    * Made some nlua naming consistant.
    * New super flexible backend for sound with SDL_mixer implementation.
    * Rewrote conf framework to be much more robust and better overall.
    * More Lua hardening.
    * Split Lua music functions from C music stuff.
    * Sound/music volume faders are now set to current volume.
    * Properly added credits.
    * Better music handling.
    * Now changing volume levels actually works.
    * Lesson of the day: DO NOT CALL MIX_* FUNCTIONS FROM THE CALLBACKS.
    * Exposed some more music functionality.
    * Redid entire sound system with SDL_mixer.
    music is now controlled by lua \o/
    cleaned up some sound stuff, part one of fixing the sound system
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] added more sounds
    sound engine should be working ,but isn't tuned enough yet
    branch:      naev
    [svn] Added basic music support to game
    OpenAL and VorbisFile are new deps
    Added an individual escort orders menu (suggested in #1051).
    Replaced dockslot with index int.
    Modified the way escort launching is controlled so it can be monitored in real-time.
    
    The previous method was clunky and didn't allow monitoring changes
    to how many escorts you have deployed in real-time very well. So this
    is a HUGE overhaul in how that whole thing works. It solves a bug that
    prevented you from getting new fighters when your old fighters were
    destroyed, while still limiting how many you can launch at once.
    Have escorts use same jump gate as player
    Order escorts to jump when player jumps
    Do not persists escorts set through Lua
    Try to start merging leader concept into escort system
    
    Remove p->leader, and set p->parent and p->escorts
    * Persistant escorts now are working.
    * Have escort automatically get removed when disabled from escort list.
    * Added a parameter to choose whether to add to list when creating escort.
    * Save/load escorts.
    * Added function to prune dead escorts.
    * Added escort control ai Lua bindings.
    * Added much more escort stuff.
    Get rid of some uninitialized warnings.
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    fix in the collision algo
    made the polygonal collision a bit more robust
    Warnings
    use FABS instead of abs for float.
    made pointInPolygon static.
    corrected an off-by-one error
    update on polygon collision
    polygonal collision algorithm
    More gettext.
    * Speed up code a bit when not debugging.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Many, many typo fixes.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Make sure textures have transparency maps.
    * Ignore weird collisions in lines.
    * Some doxygen fixes.
    * More doxygen.
    * Code cleanup.
    * Beam weapons require spfx now.
    * Proper beam spfx usage.
    * Seems like LineSprite collisions finally work well.
    * LineSprite collisions look pretty solid now.
    * CollideLineSprite is almost working flawlessly.
    * Added some untested collision detection routines.
    * Improved the accuracy of collision explosions.
    * Doxygenized collision.[ch].
    * First attempt at a proper facing system.
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    branch:      naev
    moved variable declaration to beginning
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] major syntax rewrite, big "what the hell was I thinking" in player.c
    made opengl.h struct names more intuitive
    branch:      naev
    [svn] fixed long standing silly collision bug.  Pixel-Perfect collision should be Perfect now
    branch:      naev
    [svn] like always i forgot to add the files
    Removed executable file mode.
    Display Commodities Tab using images for commodities
    Fix warnings when building with clang
    * Wrapper for nsnprintf being used all over.
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    branch:      naev
    my bash license insert code accidently modified the md5 files
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] Makefile tweakage
    images already loaded from datafile
    checks md5sum
    branch:      naev
    [svn] using long options
    first working pack version
    Added ship rarity field.
    Ships can also use graphics overlay now.
    Do not include SDL_opengl.h
    Added caching for texture transparency maps
    
    When loading a texture that requests transparency mapping, the PNG data
    is hashed (MD5). If the cache dir has a file matching the MD5 hash, and
    its size is correct, it's loaded instead of generating the transparency
    map from scratch.
    
    If a cached map doesn't exist, the generated one will be written to the
    cache directory.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Many, many typo fixes.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Started to work on the targetting graphic framework.
    * Improved heavily how opengl textures handle memory.
    * Speed up image loading even more (do padding initially).
    * Show more compact opengl features at runtime.
    * Should fix nebula issues with NPOT textures.
    * Added new data to texture to help speed up rendering.
    * Added mipmap support.
    * Added ability to draw filled circles.
    * Removed immediate mode from circle drawing.
    * OpenGL code is now becomming modular!
    * Split glTexture from opengl.c.
    fix shipstats modification procedure for integers
    
    Before that, i was erroneously pointing into a forbidden region of
    memory and writing to it caused a segmetation fault.
    This went undetected because of a relative lack of integer stats
    tickling this branch of logic.
    
    I discovered the problem when playing with Hidden Jump Detector.
    (and now it works)
    
    Also, the problem is obvious if one compares to the same code for
    doubles.
    Fix warnings when building with clang
    Implemented launcher damage ship stat.
    Launcher fire rate should be implemented now.
    Made ship stats capitalization consistent.
    All outfits can now add shipstats with <stats> tags.
    Added flat armour/shield modifiers.
    Added flat armour/shield regeneration modifiers.
    Whitespace.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Fixed coloring of ship stats.
    Changed fabs to FABS throughout the code.
    misc update on mining
    Mass is a negative property of a ship.
    More gettext.
    Changed escape code for colors from '\e' to '\a' so xgettext plays well with it.
    Strip trailing whitespace
    Add engine_limit_rel, allowing outfits to modify the mass limit
    Allow damage types to associate themselves with arbitrary ship stats
    
    For the time being, these must be non-absolute doubles.
    Nebula resistance is not inverted
    Add a stress dissipation ship stat
    Added basic CSV generation to shipstats
    Replaced fuel_consumption stat with fuel_consumption characteristic.
    
    fuel_consumption is a flat variable, but ship stats are clearly
    meant to be midifiers. This resulted in the game telling the player
    that fuel_consumption was a modifier. It's now a (mandatory)
    characteristic of the ship instead. This also avoids the problem of
    the arbitrary 100 fuel default consumption.
    
    Ships haven't been updated yet. That will be done next commit.
    
    I also removed a bunch of ship info from the shipyard that is
    outdated (i.e. characteristics that are no longer used, and that are
    now determined by outfits and ship stats).
    Mark energy usage as inverted
    Replace energy_regen_flat with energy_usage.
    Added nebu_absorb_shield shipstat
    
    Added nebu_absorb_shield shipstat, as well as a prototype outfit, nebula_shielding0,
    that uses it.  If a ship has nebu_absorb_shield, it will be applied to nebula damage
    in the same way that dmg_absorb is applied to normal damage.  Removed nebula_dmg_shield,
    nebula_dmg_armor, since they were presumably meant to do the same thing, but didn't
    have any real code attached to them in the damage calcs.  The Thurion Integrity will
    need to be updated, since it uses the old values, and since they didn't do anything,
    I have no way of knowing what -80 and -97 were supposed to mean in that context.
    I also added a nebu_absorb_armor shipstat as a placeholder, but it doesn't do anything
    yet.
    * Hidden jump points can now be detected by ships that have the "hidden jump detect" ship stat.
    * Added a hidden jump scanner (activated) that provides said stat.
    * Reinstate <cpu> as common flat value.
    * Using <cpu_max> and <cpu_mod> as shipstat to increase/decrease maximum cpu.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Added a flat modifier for energy regeneration.
    * cpu_mod shipstat should actually work now.
    * Added flat CPU/Energy ship stats.
    * Added CPU multiplier ship stat, does nothing for now.
    * Use camelcase for shipstat as to be expected.
    * Wrapper for nsnprintf being used all over.
    Sentinel, not sentinal.
    fixed maps, pathfinding, and jump detection
    * Shield, armour, energy mod stats are now functional.
    * Added basic performance stats (not functional yet).
    
    Conflicts:
    
            src/ship.c
    * Retooled cruisers and carriers to core slot system.
    * Implemented turret tracking modifier stat.
    * Variable fuel consumption.
    * Fixed energy relative stats not working.
    * Stupid bobbens optimization was buggy.
    * Move crew and mass relative bonuses.
    * Danger when doing something like l += snprintf(&buf[l],MAX-l,...) as the size member is size_t and it will overwrite and fuck everything up.
    * Added energy and energy_rel mods.
    * Implemented shield/armour/energy mods.
    * Cosmetics.
    * Stat lookup must be in the same order as definition in struct.
    * Whitespace.
    * Added basic performance stats (not functional yet).
    * Added reverse thrusters outfit.
    * Instead of defining engine per mass, define absolute and use engine mass limit.
    * Implemented maximum engine limits for ships.
    * Colour entire sentence.
    * Colour coding for ship stats (perhaps shouldn't be used as abundantly for things like outfits).
    * Implemented instant jumping on new stats architecture.
    * Comments.
    * Removed unneeded #undef.
    * Implemented absolute doubles, integers and booleans for ship stats.
    * Fixed typo.
    * Added initial framework for non-double relative types of ship stats.
    * Cleaned up some stuff.
    * More comments.
    * Fancier displays, changed jam_counter for launch_lockon.
    * Should work fully now.
    * Should behave the same as before now.
    * Seems to work.
    * Better handling of stats, not entirely working yet.
    * Removed pointless pilot parameter from ListDesc.
    * Better handling of everything, still not done yet.
    * Initial commit of ship stats, doesn't really do anything new yet.
    Use new __RW system and nlua_register() everywhere
    Put GUI in global lua state
    lua headers are system headers, include them that way
    * Hacked in basic Lua GUI module functionality.
    * Hackfully removed lots of stuff, it's still a horrible mess.
    * Reenable various stuff so it looks much better now.
    More gettext.
    Add beam output to --devcsv
    Add launcher and ammo output to --devcsv
    Add a CSV containing ship names and their stats to devcsv
    Add modification output to devcsv
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    * Luadoc.
    * Put csv in a directory.
    * .gitignore the csv directory.
    * Made CSV generation messages nicer.
    * You can now generate ship csv too.
    * Forgot files.
    Switched to better local fonts and removed usage of system fonts.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    More structure work. Compiles and mostly unicode support is there, but still needs to generate caches and render.
    Initial support for unicode stashing - does not compile.
    Split ascii from unicode.
    Rename character -> glyph.
    * SHould handle colour restoration with multiple lines.
    * Made all the colours constant as they should be.
    * Use shared monospace font.
    Many, many typo fixes.
    * Fixed with a horrible hack a minor cosmetic problem in console.
    * Colour can go across lines in gui messages or omsg.
    * Use integer coordinates for font position.
    * Fixed spacing bug.
    * Doesn't work yet, not sure why.
    * Added gl_printHeightRaw - should avoid some segfaults with formatted strings from Lua.
    * Added gl_print*Raw functions to avoid some mission segfaults.
    * Extracted more common font code.
    * Doxygenized font.[ch].
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    added gl_printHeight
    branch:      naev
    C correctiveness patch
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] improved the font usade
    now you can print blocks of text
    added planet descriptions
    branch:      naev
    [svn] split font stuff from more pure opengl stuff
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Whitespace, typo and general style cleanup.
    * Doxygen.
    * Missed debugging check.
    * Fixed memory leak in queue.
    * Debugging changes.
    * Cosmetics.
    * Added my (dodgy) queue implementation.
    Give pilots access to space
    Remove unused SystemFleet
    Remove nonfunctional, unused function.
    * Strict checking of xml for fleets.
    * Removed obsolete guard flag.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Changed how flags are handled so we can easily add more of them.
    * Removed legacy fleet strength.
    * NPC pilots now jump in from jump points.
    * Removed pilot chance.
    * Removed almost all traces of fleetgroups.
    
    Unidiffs need to be edited before the enum can be edited.
    * Removed fleetgroups.
    * Dead/disabled/left pilots reduce the used presence.
    * Removed remnants of old security system.
    
    Lua sys:security() function is now marked obsolete. It, for now, returns friendly / all presence.
    * Fleet ratings are read in from XML
    * Made security dependent on mass.
    * Compiles cleanly - nothing works.
    * Sped up security calculations.
    * Rerun security calculations in when doing unidiffs.
    * Added flags to fleets.
    * Constness.
    * Cleaned up some Lua code.
    * You can now add/remove outfits from pilots with Lua.
    * Made the hyena fight easier in the tutorial.
    * Added fleet pilot creation abstraction.
    * Introduced the concept of FleetGroups.
    * Moved fleet stuff out of pilot.[ch].
    Changed fabs to FABS throughout the code.
    Removed speedup-based zooming.
    
    I found that the camera zooming in and out as the camera got reset
    when pirates were seen was nearly giving me a headache. Since the
    zooming out really serves no purpose now, I simply removed it.
    Sounds will be silenced if out of range of the camera's targeted pilot or position.
    Whitespace, typo and general style cleanup.
    * Bit fancier sound model, optionally force set to camera instead of track pilot.
    * Changed sound to be relative to the camera (and facing up) - makes me die a bit inside.
    * More paranoid check.
    * Attempt to fix camera wobbles in nebula.
    * "Fix" hyperspace jerky camera issue.
    * You can now set manual zoom control.
    * Fixed regression in pilot zoom.
    * Increase zoom when time compression is big.
    * You can now set camera speed.
    * Optimized and fixed star movement with the new camera system.
    * Improved the camera flying around model.
    * Added camera to console.
    * Finished update implementation of camera.
    * setTargetPos should work correctly now.
    * Much fancier camera model, much more in tune for doing fancy camera Lua API.
    * Made camera movement softer.
    * Much softer camera movement.
    * Added limits - but they seem to mess it all up more...
    * Fancier camera with velocity and dir stuff (a bit primitive still).
    * Bias limit should be always applied.
    * Hack so stars move properly.
    * Initial camera movement to expose bugs. It's pretty cool but the stars are wack.
    * Zoom moved into camera stuff.
    * Initial commit of the camera model.
    * Implemented group volume level.
    * Added sound_speedGroup.
    Use logarithmic music and sound volume when using OpenAL.
    * Do not play sounds when dt_mod is over 2.0.
    * Sound fix sounds sounding on reload.
    * Fixed some fps control weirdness in the display.
    * Added the ability to do timed sound situation changes.
    * Code clean up.
    * Sound pitch changes (on openal) with game sound change.
    * Store sound length.
    * Nebulae is plural, changed it all to nebula.
    * Made savegame more robust when loading inexistant missions.
    * Have environment change in medium.
    * Removed unused headers.
    * Implemented openal groups.
    * Tweaked API a bit.
    * Removed some hacks.
    * Fixed segfault with invalid sound backend.
    * Code clean up.
    * New super flexible backend for sound with SDL_mixer implementation.
    * Rewrote conf framework to be much more robust and better overall.
    * Pausing all sounds when pausing now.
    * Sound/music volume faders are now set to current volume.
    * Slightly cleaner implementation of channel pause/resume, fixes segfault with no sound.
    * Now changing volume levels actually works.
    * Improved sound system considerably, not used properly yet.
    * Added primitive positional sound.
    * Missiles now play their proper sound.
    * Redid entire sound system with SDL_mixer.
    big assorted patch, adds afterburner noise
    some sound cleanup and fixing potential bugs
    sound fix patch number 2, almost there :)
    cleaned up some sound stuff, part one of fixing the sound system
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    branch:      naev
    C correctiveness patch
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] you can now set the volume from CLI or conf file
    fixed possible segfault when switching musics
    branch:      naev
    [svn] rough sound seems to be working now without flaws
    branch:      naev
    [svn] added sound support base, for some reason seems to crash the game alot
    not in usage
    branch:      naev
    [svn] added more sounds
    sound engine should be working ,but isn't tuned enough yet
    branch:      naev
    [svn] Added basic music support to game
    OpenAL and VorbisFile are new deps
    Use a shader when rendering fonts
    Helper function for color uniforms
    Use shader in gl_renderRect()
    Add some helper functions for dealing with shaders
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Possible correction
    name/type -> logname/logtype
    Tweak
    Moved the @usage tags to above the params like the other Lua stuff.
    Slight docs tweak
    Implemented a travel log event.
    
    This also fixes some more problems, including one that prevented
    the shiplog system from being used outside of missions and one that
    prevented compilation from being successful.
    Fixed documentation of shiplog stuff
    comment fixed
    Removed logid from lua.  Logs now created/appended using the id string.
    Changed createLog() to accept nil as unlimited max length.
    Added max length to save/load.
    // removed
    Pruning mechanic added
    -- added
    changed integer -> boolean in comment string
    Replaced overwrite with a boolean to allow restarting of a log.
    Added a log identifier for creating logs - so that logs can be shared between relevant missions.
    comment added correctly for nlua markup
    Created nlua_shiplog, and moved log stuff out of nlua_mission.
    Updated example in shadowvigil.lua.
    * Fixed bug in RNG_1SIGMA and improve accuracy for other RNG_#SIGMAs as
    reported by Thunk.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Many, many typo fixes.
    * Check ndata version against binary.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Someone claims I confuse then/than, lies I say!
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Patch should make NAEV more windows friendly.
    * Much better OS compatibility macros now.
    * Minor clean ups.
    * More tweaks for FreeBSD.
    * Fixed 32 bit compiler warnings.
    * Doxygenized rng.[ch].
    * Now using normal distribution for accuracy on weapons (clamped).
    * Big fancy new "cloud" generator in place, will need heavy tweaking.
    removed warning on 32 bit
    instead of seeding the MT with a bit of random, we use full urandom
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    now using mersenne twister instead of rand()
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] moved everything to directories
    cleaned up Makefile
    improved AI
    branch:      naev
    [svn] more files yay
    Add attributes.h for portable attribute macros
    Unified some code.
    Removed NDATA_DEF define that basically was just the same as NDATA_PATHNAME right now.
    Support for mak einstall with ndata and can also run with installed ndata.
    Use "directory" consistently when referring to ndata
    Remove code references to zips and archives
    Detect AppImage environment and adjust paths
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Fix crash on exit
    rename ndata_filename to ndata_dir. It's always a directory now and never a file.
    Properly find ndata in the source directory
    Remove --nondata flag
    Remove unused function: ndata_notfound()
    /DEBUGING/DEBUGGING/
    Fix mac again?
    ndata is dead! Long live ndata!
    Use semvar syntax (e.g., 0.8.0-beta.2 instead of 0.8.0-beta2)
    Commented #else
    Don't translate ndata name.
    Remove all C code meant to support SDL < 2.0.0
    Added function to check if a character is a file separator, which should improve support for windows paths with backslashes and not forward slashes.
    More gettext.
    Look for ndata in macOS app bundle
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Do not include md5.h where it is not used
    Ignore SDL_CreateThread's return value with SDL <2.0.2
    Verify a zip is ndata by checking for start.xml
    Mark SDL_DetachThread as requiring SDL 2.0.2
    
    This will generate a warning and leave the thread hanging around, but
    that's better than not compiling on distros shipping older SDL2.
    Address more Clang warnings in ndata code
    Add drag-and-drop ndata loading under SDL2
    Never load the ndata zip via ndata_exists
    
    Given the current ndata model, this was a dangerous behaviour. Lua's
    include function is the only caller, and loading the ndata zip after
    other things have potentially been loaded from disk will readily cause
    crashes.
    Replace strcpy with strncpy, whitespace fixes
    Avoid a minor memory leak when closing the ndata
    Don't use redirection to create ndata
     - fixes bug where make ndata fails and an empty file is created
    Use "ndata.zip" instead of "ndata" for clarity
    * Some stuff is no longer const and needs to be handled as such.
    change names refering to "pack" and "cache" to something more appropriate for zips
    added nzip.c
    * Got no ndata to display properly.
    * Compiles sort of but blows up.
    * Fixed harmless ndata warnings.
    * sizeof(char) is always 1. No need to keep it around.
    * Added and using ndata_exists for lua voodoo.
    Fixed crashes when loading from packed ndata.
    Fixed some crashes when loading from laid-out files in remote dirs.
    Swap out the horrible hacks for something more elegant.
    * Use temporary variables to avoid calculation duplication.
    Recursing through directories without having a directory structure is awful.
    I wish there were another way, but this hideous pile of hackery seems to be the best solution for now.
    * Wrapper for nsnprintf being used all over.
    Warn players about migrating files from ~/.naev
    * Actually sort graphics by name when choosing in planet editor.
    * Handle much better opening raw files.
    * Use nfile_dirname not dirname.
    * Also try default compile-time defined location.
    * Try to use laid out files if we are specifying dirname before going into ndata detection.
    * Fixed silly mistake in the ndata detection scheme.
    * More flexible ndata stuff.
    Remove unused SDL_image header #includes
    * Simplified code.
    * Version parsing code is now in naev.c.
    * Sloppy code is sloppy (fixed running naev from ndata).
    * Check ndata version against binary.
    * Centralized the game start information.
    * New player should have the system he'll start in as a background when writing name.
    * Fixed SDL_RWops leak.
    * More load up optimization related to png.
    * Optimizing loading a bit.
    * No longer using SDL_image.
    * npng.c now handles PNG file loading and the likes.
    * Added graphical editor for planet graphics.
    * Crash when a file isn't found after ndata is loaded instead of showing "no ndata" with generic error.
    * Added nfile_dirname as portable substitute for dirname.
    * Now look for scripts in binary path after looking locally.
    Updated ndata-not-found error message.
    * Fixed warning on non-posix platforms.
    * Updated comments.
    * Put detection algorithm in comment.
    * Properly display ndata being used when it's not found.
    * Display ndata currently being used.
    * Whitespace.
    * Look for ndata under dirname of argv[0] on posix systems when all else fails.
    * Be less explosive of missing files.
    * Handle ndata not opening properly.
    * Should properly handle treating a directory as an ndata.
    * Display no ndata message when no ndata is found.
    * Fixed ndata detection with beta releases.
    * Rewrote conf framework to be much more robust and better overall.
    * Close SDL window for MessageBox on win32.
    * Add messagebox for windows users if no ndata is found.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Might avoid segfaults on some systems.
    * Cleans up file loading somewhat.
    * Removed casting.
    * Pilots can refuel you now if you ask for it.
    * Fixed race condition - closes issue 11.
    * By defining a data path you'll assure it's loaded.
    * Can now create SDL_RWops from packfile.
    * Using rwops for music to lower latency between changes.
    * Tried to make ndata and pack a bit more thread safe.
    * Doxygen.
    * Friendlier warning if ndata not found.
    * No longer need makefile when working in trunk, reads from directories directly.
    * Code clean up.
    * Doxygen.
    * Even more doxygen.
    * Fixed defining your ndata path in the Makefile.
    * Using Packcache now, loads _MUCH_ faster.
    * First large ndata patch.
    Renamed tk.merchant to tk.merchantOutfit in anticipation of more merchants someday.
    Moved outfit merchant API from outfit.merchant(...) to tk.merchant(...).
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    Apparently I broke everything (tk.msg required 3 arguments, when 2 is enough).
    Got rid of tk.msgImg, functionality is now in tk.msg as optional parameter.
    Use new __RW system and nlua_register() everywhere
    Make rescue script use global lua state
    Correction to my earlier library loading hack; use it in evt and misn
    
    I forgot about this...
    Run console in global lua state
    Add types to lua api docs, and other documentation improvements
    Fix various param issues LDoc (appropriately) warns about
    Correct luadoc
    * Actually have the height/width parameter of the imgMsg do something.
    Added popup with Text + Image
    Implemented a test usage in Start Event
    To test, just start a new character
    Luadoc fixes
    Handle list returning -1 when cancelled
    Check arg validity in tk.choice(), tk.list() before doing anything
    Add tk.list(), similar to tk.choice()
    lua headers are system headers, include them that way
    * You can now exit from tutorial without segfaulting.
    * More NAEV -> Naev.
    * tk.choice() should no longer segfault.
    * Commentaries.
    * Luadoc.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * tk.choice should make more sense and do what it advertises now.
    * Typo spotted by rudi_s.
    * Luadoc.
    * Updated documentation for tk.choice().
    * Fixed minor bug.
    * Patch by Barry for adding choice boxes to the Lua API.
    * Someone claims I confuse then/than, lies I say!
    * Made some nlua naming consistant.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Constness.
    * Cleaned up some Lua code.
    * Split tk from nlua.
    * Luadoc.
    Make SDL_mixer volume behave the same as OpenAL
    * Compression noise thingy seems to work.
    * Implemented group volume level.
    * Added sound_speedGroup.
    * Sound pitch changes (on openal) with game sound change.
    * Have environment change in medium.
    * Sound fade out instead of stopping, should fix most of the popping.
    * Implemented openal groups.
    * Tweaked API a bit.
    * Removed some hacks.
    * Fixed segfault with invalid sound backend.
    * Code clean up.
    * Compiles with OpenAL backend.
    * New super flexible backend for sound with SDL_mixer implementation.
    warnings
    update on the dogfight helper
    Added aiming lines to ease dogfight
    Use circles for out of range assets
    Eliminate a remaining call to glGetAttribLocation
    Remove `.program == 0` tests
    
    Shaders are now loaded earlier. This shouldn't be necessary then, unless
    there's an error loading one.
    Reduce shader boilerplate with a C program generating C code
    
    Ugly, I guess, but... less?
    Remove some legacy glDisable() calls
    Remove gl_drawCircleInRect()
    
    It doesn't really seem to be needed, and gl_clipRect() can serve the
    same role.
    Shader based beam rendering
    Create a "smooth" shader, to replace some of the remaining code
    Remove some calls to gl_vboDeactivate() and glShadeModel()
    
    These don't do anything, now that the relevant code uses shaders
    Use shader to draw smooth circles
    Anti-alias filled circles
    Update gl_renderCross to use shader and static vbo
    More generic vertex attributes
    Update gui.c to use shaders and static VBOs
    Use circle for gl_drawCircleLoop()
    Helper function for color uniforms
    Use gl_blitTextureInterpolate() to render the nebula
    Remove calls that are unneeded with shaders
    Replace opengl_ext.c with files generated using Galogen
    
    Looking at several OpenGL extension loading libraries, I like Galogen
    because it allows generating files for any choice of GL version and
    extensions. So when we (hopefully) switch to GL 3.2 Core, we can
    generate headers for such and it will be a compile error to use features
    that are removed in that version, or added by later versions.
    
    Generated with:
    ```
    galogen gl.xml --ver 3.0 \
                   --profile compatibility \
                   --exts ARB_texture_filter_anisotropic
    ```
    
    https://github.com/google/galogen
    Use shader to draw filled circles
    Use generic vertex attribute when rendering rectangles
    Store uniform indicies in globals
    
    Retrieving each time certainly isn't efficient, but this isn't much fun
    either.
    
    Perhaps a build script could automate this?
    Start moving to glVertexAttribPointer()
    
    This is required in modern OpenGL
    Fix buffer overflow in gl_initRender()
    Use shader for gl_blitTextureInterpolate()
    Use shader for gl_renderRectEmpty()
    Use shader in gl_renderRect()
    Use matrices instead of modifying VBOs in gl_blitTexture()
    Revert gl_blitTextureInterpolate to fixed-function pipeline version
    
    This version wasn't actually interpolating, so...
    
    This will probably need its own shader at some point.
    Migrate away from old OpenGL matrices in stars.vert
    Pass projection matrix to texture.vert using uniform
    
    The previous code relies on deprecated OpenGL matrix functionality.
    Pass color in a uniform
    Use a shader for texture blitting
    Add missing return
    Replace circle generator with a simpler algorithm
    
    Also re-enable the per-pixel gl_drawCircleEmpty and use it on Intel
    hardware, as it produces nicer results.
    Added a function for drawing circles with line loops
    
    This ought to produce nicer results than gl_drawCircleEmpty, which
    I've #if 0'd for the time being, as it's now unused but may be of some
    use in the future.
    * Wrapper for nsnprintf being used all over.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Whitespace, typo and general style cleanup.
    Many, many typo fixes.
    Remove trailing spaces in src/
    * Added function to translate screen coords to game coords.
    * Split the cross rendering stuff into a gl_render function.
    * Fixed bug with rendering circles in rectangles (info map).
    * Initial commit of the camera model.
    * Should most likely in all possibilty possibly maybe fix the map circle bug.
    * Tried to fix some issue with circles on the map.
    * toolkit_clip -> gl_clipRect.
    * Fixed sprite rendering.
    * Changing entire reference system to bottom left based, should solve shit in the long run.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Player lands and takes off with an animation.
    * Added generate coordinate translation function.
    * Render side bar when scrolling up in log.
    * Added possibility to disable interpolation.
    * Set starting zoom to max.
    * gl_blitTexture is now global
    * Added function to blit sprites scaling.
    * Minor correctness patch.
    * Fix off by one error.
    * Slightly fancier but equally stupid circle technique.
    * Should fix all interpolation issues.
    * Should fix issues with alpha interpolation and interpolation in general.
    * Should fix some ship engine glow corruption.
    * Removed unneeded call.
    * Fixed the interpolation.
    * Fixed typo.
    * Interpolation now works properly.
    * Better documentation.
    * Added rendering with interpolation functions.
    * Fixed minor display issue.
    * Rough dynamic zoom implemented.
    * Sped up rendering with new tex data.
    * Drawing filled circles in rects now works again.
    * Added mipmap support.
    * Added ability to draw filled circles.
    * Removed immediate mode from circle drawing.
    * Converted more glBegin to VBO.
    * Added gl_renderRect.
    * Removed more glBegin and friends.
    * Default to white to avoid some visual glitches.
    * More VBO API.
    * opengl_render is now using VBO as backend.
    * Not using quads for rendering.
    * Removed gui_xoff/yoff externs.
    * Cleaned up camera stuff.
    * OpenGL code is now becomming modular!
    * Merged all the rendering into one function.
    * Made it so opengl.h has all the opengl headers in it.
    * Split drawing functions from opengl.c.
    Replaced all references to SCU/STP/STU to cycles/periods/seconds.
    
    This unifies the code with the in-game dialog and should hopefully
    prevent confusion regarding what terms to use.
    
    (Recap: these abbreviations were removed from in-game use long ago
    due to confusion that is likely to happen as a result of them looking
    similar.)
    Converted some comments. Is that what you meant, bobbens?
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    Use new __RW system and nlua_register() everywhere
    Add types to lua api docs, and other documentation improvements
    Replace LuaTime with ntime_t*
    Made add() and sub() time methods destructive
    * Minor fix for time.fromnumber().
    lua headers are system headers, include them that way
    * Typo fixing patch by Paul Wise.
    * Luadoc.
    More time changes. Pretty time should always display two decimal places of precision with no zero-padding of STP.
    * Fixed time.str().
    * Added lua API to convert a time to and from a number.
    * Added __tostring as part of the time metatable.
    * Actually push the time metatable.
    * Added ==, <= and < as lua time metatable operators.
    * New time system. As seen on wiki.
    Revert "* Actually do it in stu."
    
    This reverts commit cea8398b9414bcdfe6c027fc6a123e32e38837ec.
    * Actually do it in stu.
    Added a function to incrmeent the time through the API.
    * Commentaries.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Made some nlua naming consistant.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Split naev module from nlua.
    * Luadoc.
    * Split nlua_time from nlua.
    Whitespace.
    Don't include unless OpenAL is being used.
    Using ngettext for plurals.
    More gettext.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Revert "Call getfenv in nlua_pcall() eliminating the need to pass the"
    
    This reverts commit 79e36c0c1bbca2aa5fa2922651dd303bc7b87882.
    Call getfenv in nlua_pcall() eliminating the need to pass the
    environment as an argument
    Use new __RW system and nlua_register() everywhere
    Set __RW for each env
    Use nlua_pcall() almost everywhere
    Run music scripts in global lua state
    * New planets get a nonzero radius.
    * Update radius when updating gfx.
    * Moved various path defines into ndata.h.
    * Wrapper for nsnprintf being used all over.
    * strncpy paranoia.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Many, many typo fixes.
    * Music Lua errors should produce stack traces now.
    * Cleaned up unused code.
    * Naev should clean up a bit better after itself.
    Use logarithmic music and sound volume when using OpenAL.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Whitespace.
    * Fixed some fps control weirdness in the display.
    * Added the ability to do timed sound situation changes.
    * Code clean up.
    * Added API to get time elapsed in song.
    * Fixed segfaults with nosound enabled.
    * Made some nlua naming consistant.
    * Implemented fadein/fadeout.
    * Fixed outstanding issues with openal music.
    * Rechoose upon stopping.
    * Made pause/resume/stop/play blocking.
    * Removed some hacks.
    * Fixed segfault with invalid sound backend.
    * Code clean up.
    * Properly starts up the OpenAL audio and promptly blows up.
    * Compiles with OpenAL backend.
    * New super flexible backend for sound with SDL_mixer implementation.
    * Rewrote conf framework to be much more robust and better overall.
    * Fixed warnings.
    * More Lua hardening.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Constness.
    * Cleaned up some Lua code.
    * Should compile again.
    * Split Lua music functions from C music stuff.
    * Fixed race condition - closes issue 11.
    * Avoid possible segfault.
    * Sound/music volume faders are now set to current volume.
    * Can now create SDL_RWops from packfile.
    * Using rwops for music to lower latency between changes.
    * Properly added credits.
    * Make sure music doesn't stall.
    * More music improvements.
    * New song.
    * Better music handling.
    * Added pilot_rmHostile.
    * music_choose now accepts NULL as a parameter.
    * Avoid possible out of bounds memory access.
    * No longer need makefile when working in trunk, reads from directories directly.
    * Code clean up.
    * Doxygen.
    * Using Packcache now, loads _MUCH_ faster.
    * First large ndata patch.
    * Changed misn_lua to nlua_misn for easier lua module detection.
    * More code clean up and optimizations.
    * Now changing volume levels actually works.
    * Lesson of the day: DO NOT CALL MIX_* FUNCTIONS FROM THE CALLBACKS.
    * Exposed some more music functionality.
    * music.c is doxygenized.
    * Increased default volumes by a bit.
    * Fixed bugs introduced by assert in WARN/ERR change.
    * Redid entire sound system with SDL_mixer.
    * Wrapping around luaL_newstate and luaopen_base.
    * New CFLAG: -Wshadow.
    * Fixed all new warnings.
    * Fixed another segfault with music system when disabled.
    * Fixed possible buffer overflows with strncpy
    Improved music handling
    music is now controlled by lua \o/
    big assorted patch, adds afterburner noise
    cleaned up some sound stuff, part one of fixing the sound system
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    branch:      naev
    some music playing sanity
    branch:      naev
    C correctiveness patch
    branch:      naev
    can now play if sound doesn't work
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] should fix the libvorbis 1.1.2 issues
    branch:      naev
    [svn] even more music error checking, damn segfaults
    branch:      naev
    [svn] more music error checking
    branch:      naev
    [svn] more music checking
    branch:      naev
    [svn] you can now set the volume from CLI or conf file
    fixed possible segfault when switching musics
    branch:      naev
    [svn] added support for not POSIX systems with open/read/write with packfile system
    branch:      naev
    [svn] should fix segfault with libvorbis 1.1.2
    branch:      naev
    [svn] rough sound seems to be working now without flaws
    branch:      naev
    [svn] added more sounds
    sound engine should be working ,but isn't tuned enough yet
    branch:      naev
    [svn] Added basic music support to game
    OpenAL and VorbisFile are new deps
    * New planets get a nonzero radius.
    * Update radius when updating gfx.
    * Moved various path defines into ndata.h.
    * Flexible font sizing.
    * Added omsg API to player module.
    * Update in render (all render based).
    * Initial revision of omsg, needs Lua API and rendering.
    Use OpenGL 3.1 and GLSL 1.40
    
    This should expand compatibility somewhat, hopefully fixing the issue in
    Windows in https://github.com/naev/naev/issues/1157 and the macOS issue
    in https://github.com/naev/naev/issues/1258.
    Ships can also use graphics overlay now.
    Changed min window width from 1280 to 960.
    
    Prevents 4:3 resolutions from scaling down unnecessarily.
    Increased minimum resolution to 1280x720 (upscales).
    Try to respect manually set scaling.
    Revert "Increased minwh from 600 to 720, actually scale based on it properly."
    
    This reverts commit cb98c5ac8eee8cc77042e21a9a3ef2e13758459d.
    Increased minwh from 600 to 720, actually scale based on it properly.
    
    Fixes #1052
    Revert "Use glu to retrieve error strings"
    
    This reverts commit 65a1d81da731557f159dad342a2f27d9ca58897c.
    
    BTAxis reported compile issues under Windows due to this.
    
    This is really only for convenience and saving code, so it can be
    reverted if it turns out to no longer be convenient...
    Use glu to retrieve error strings
    
    We're already linking against it; so we might as well use it
    Reduce shader boilerplate with a C program generating C code
    
    Ugly, I guess, but... less?
    Updated gl_checkError spec.
    Use OpenGL 3.2 Core Profile
    Remove now unused functions related to fixed-function OpenGL
    Remove wrappers around legacy OpenGL matrix functions
    Use glad instead of galogen
    
    Similar idea, but a more major projects that, among other things,
    handles hhrplatform.h.
    Replace opengl_ext.c with files generated using Galogen
    
    Looking at several OpenGL extension loading libraries, I like Galogen
    because it allows generating files for any choice of GL version and
    extensions. So when we (hopefully) switch to GL 3.2 Core, we can
    generate headers for such and it will be a compile error to use features
    that are removed in that version, or added by later versions.
    
    Generated with:
    ```
    galogen gl.xml --ver 3.0 \
                   --profile compatibility \
                   --exts ARB_texture_filter_anisotropic
    ```
    
    https://github.com/google/galogen
    Enable vsync only when conf.vsync is set
    Remove fallback for not having VBO
    
    OpenGL without VBOs is deprecated. Presumably, any drivers that can
    handle shaders will be fine with VBOs.
    Pass projection matrix to texture.vert using uniform
    
    The previous code relies on deprecated OpenGL matrix functionality.
    Implement matrix functions as an alternative to the legacy GL ones
    
    This is not immediately better, but a step toward eliminating deprecated
    OpenGL functionality.
    Remove all C code meant to support SDL < 2.0.0
    Input widget text input box should now appear at the right position.
    More gettext.
    Fixed the small screen upscaling code.
    Fixed viewport getting smaller and smaller issue.
    Simplified code, fixed mouse position with scale factor.
    Partially fixed scaling factor.
    Comment.
    Strip trailing whitespace
    Make minimize on focus loss configurable
    Mark the main window as resizable
    Initial commit of resizing and fake fullscreen
    
    All of this is exclusive to SDL2.
    
    SDL_WINDOW_FULLSCREEN_DESKTOP allows Naev's window to be the size of
    the current screen without setting video mode (and thereby turning off
    other screens, messing up background window positioning, etc.), but to
    use it, we need to be able to resize the GL viewport on demand.
    
    The work required to allow that also permits dynamic resizing while
    playing, as long as a few other things are also reinitialized (a minor
    issue).
    * Minor optimization.
    Detect Intel hardware specifically
    * We don't actually need an OpenGL renderer, just do everything with OpenGL context.
    * Actually create opengl context and a bit of error checking.
    * Properly detect vsync with SDL2.
    * Use SDL for handling OpenGL extensions.
    * Fixed warning.
    * Seems to load and run now, keyboard input is broken though.
    * Almost there.
    * Initial work to get everything running on SDL2.
    * Wrapper for nsnprintf being used all over.
    * Fix by ssuomine to support fully libpng 1.5.
    * Memory leak fix by raptor.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Fix some minor nigh-impossible crashes; remove pointless initializations and such.
    Many, many typo fixes.
    Remove trailing spaces in src/
    * Fixed new gcc -Wunused-but-set-variable warnings.
    Remove unused SDL_image header #includes
    * FIxed issue with VSYNC using SDL < 1.3.0.
    * Moved more matrix calls to our gl_matrix wrappers.
    * More gl_matrix wrappers.
    * Whitespace.
    * Fixed Clang report.
    * More defensive coding.
    * Removed hack that isn't needed anymore.
    * Changing entire reference system to bottom left based, should solve shit in the long run.
    * More or less working, however there's issues with custom widgets.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Support SDL before SDL_GL_SWAP_CONTROL was introduced.
    * Show more compact opengl features at runtime.
    * glHint for the hell of it.
    * Force the opengl driver to pack bytes for the screenshot.
    * Finally fixed the screenshot function after like 4 years.
    * Fixing really minor possible segfaults and other misc issues detected with scan-build.
    * Smarter resolution choosing.
    * More FSAA fixes.
    * FSAA should work again.
    Improved error handling
    * Made the -DDEBUG and -DDEBUG_PARANOID common cflags.
    * OpenGL errors now print the name of the function where that happened.
    * More code properness.
    * Trying to rewrite load functions.
    * Added compression extension support.
    * Cleaned up code for mipmaping some.
    * Support for user disabling mipmaps.
    * Fixed texture leak detection.
    * Rewrote conf framework to be much more robust and better overall.
    * Moved most of the matrix stuff into opengl_matrix.
    * Fixed gl_hasVersion (thanks zid).
    * More VBO improvements.
    * OpenGL code is now becomming modular!
    * Doxygen.
    * Split up the big scary gl_init into multiple subfunctions.
    * Removed some unused stuff.
    * Split glTexture from opengl.c.
    * Split drawing functions from opengl.c.
    * Sped up gl_hasVersion a bit.
    * Moved extension handling code out of opengl.c.
    * Using a bit more vertex arrays.
    * NAEV should now be endian-neutral.
    * Correctness.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Removed some unneeded stuff.
    * Have it not segfault at least.
    * More sanity checks for angles.
    * Some  more proper opengl texture initialization.
    * Checking for vertex buffer objects.
    * Use less compression - speeds up a lot.
    * OpenGL extensions are now loaded instead of linked.
    * More attempts to fix nebulae on windows.
    * Cleaned up write_png.
    * Converted SDL_SavePNG to something more similar to gl_prepareSurface.
    * Minor optimizations.
    * Some clean up.
    * Scalefactor included by popular request.
    * Implemented planet bribing.
    * Small cosmetic patch.
    * Changed runtime check to compiletime.
    * Using more ndata_rwops where applicable.
    * Ripped the GUI stuff out of player.c and put it in gui.c.
    * Game now backs up saves.
    * Code clean up.
    * Warn user if saving fails.
    * Some stuff to start supporting SDL 1.3 ASAP.
    * Doxygen.
    * Minor formatting.
    * Code clean up.
    * Small code clean up.
    * Never try to create a screen above the player's resolution unless he forces it to.
    * Should fix even more issues with small resolution scaling.
    * Added flags to image creation to control transparency mapping.  Should speed up theloading some and reduce memory usage.
    * Fixed some recently introduced issues with the scaling.
    * Doxygen.
    * More commentaries.
    * Code cleanup.
    * Doxygen.
    * Fixed some mistakes left in since last commit.
    * Code clean up.
    * Doxygen.
    * Scales window when size is too small to not have stuff get cut out.
    * More doxygen.
    * Doxygen fixes.
    * First large ndata patch.
    * Doxygen.
    * More FSAA awareness.
    * Added support for FSAA.
    * Use desktop resolution if fullscreen mode is set without specifying dimensions.
    * Added options for enabling vsync.
    * Actively ask for doublebuffering now.
    * Beam weapons now properly use graphics.
    * Check for GL_ARB_fragment_program instead of GL_ARB_fragment_shader.
    * More doxygen stuff.
    * Removed unused gl_blitRotate().
    * Added gl_blitScale().
    * More correction in gl_freeTexture().
    * More warnings.
    * glTexList now works as expected and detects leaks.
    * Valgrind finally reports no memory leaks.
    * More memory related fixes.
    * Fixed some memleaks.
    * Rumble can no longer "leak" over to menus and such.
    * Set requirement to real value.
    * Check for multitexture abilities.
    * Check for texture leaks.
    * Almost working nebulae except for a major graphical glitch.
    * Now will initialize nebulae.
    * Nebulae use a smaller more optimal format, reducing size.
    * Added SDL_SavePNG.
    * Cleaned up code a bit.
    * Coded "ingame" viewer for targets.
    * Now only loading once shared graphics.
    corrects a small desviation on all sprites
    cosmetic patch -> gl_screen.[wh] = SCREEN_[WH] in most places
    fixed outstanding bugs in opengl textures
    fixed opengl blitting stuff a bit
    patch by Nicholas Niro <nik_89@neuroponic.com> for older gcc
    unnoticeable changes
    some opengl cleanup
    finally added opengl error checking in DEBUG builds
    fixed double free (someone should have told me to not free the ListModes)
    check for shaders (not used yet), fixed fullscreen issues
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    a bit of cleanup
    branch:      naev
    skip drawing if onscreen (gl_drawCircleInRecT)
    branch:      naev
    fixed broken gl_drawCircleInRect
    branch:      naev
    added basic map support, added gl_drawCircle, added cYellow
    branch:      naev
    fixed issue with spritesheets that don't have sx==sy
    branch:      naev
    optimized getSpriteFromDir a bit
    branch:      naev
    added fade to white when hyperspacing, still needs sound though
    branch:      naev
    will now try to adjust to closest fullscreen mode if one asked for isn't available
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] cosmetic changes
    got rid of bzero and strndup
    branch:      naev
    [svn] Added basic music support to game
    OpenAL and VorbisFile are new deps
    branch:      naev
    [svn] split font stuff from more pure opengl stuff
    branch:      naev
    [svn] added support for images of planets
    cosmetic toolkit changes
    changed the gl_blit functions to work with doubles instead of Vector2d pointers
    took opportunity to clean up space.c xml (bringing it up to xml.h standard)
    cleaned up code
    branch:      naev
    [svn] moved colours out of opengl
    improved land graphics
    added more sane toolkit api
    branch:      naev
    [svn] Basic toolkit implementation done
    added gl_printMax and gl_printMid which was long overdue
    using flag system with gl_screen
    optional AA for primitives
    minor pause behaviour fix
    branch:      naev
    [svn] minor opengl rendering tweaks
    branch:      naev
    [svn] major syntax rewrite, big "what the hell was I thinking" in player.c
    made opengl.h struct names more intuitive
    branch:      naev
    [svn] Basic toolkit implementation (but ugly)
    Basic landing
    Pause bugfixes
    branch:      naev
    [svn] changed font from FreeSans.ttf to font.ttf, will be more comfortable in the future
    branch:      naev
    [svn] switched to commonwealth spelling (armor -> armour)
    implemented seeker missiles and ammo
    implemented secondary weapons
    branch:      naev
    [svn] fixed long standing silly collision bug.  Pixel-Perfect collision should be Perfect now
    branch:      naev
    [svn] rudimentary screenshot taking
    put some data info in start.xml
    branch:      naev
    [svn] More cosmetic patches!
    branch:      naev
    [svn] GUI's NAV and WEAPON monitors are now used, just need to add MISC
    branch:      naev
    [svn] Brought render script up to date
    added new ship (still needs target image)
    GUI API should be complete
    branch:      naev
    [svn] fixed minor offset bug
    branch:      naev
    [svn] targetting graphic now displays color based on the targetted pilot
    branch:      naev
    [svn] More input error checking and safety
    branch:      naev
    [svn] fixed bug with configuration files
    branch:      naev
    [svn] some cosmetic changes
    misc minor fixes
    branch:      naev
    [svn] bug fixes
    fleet improvements
    per pixel collision
    branch:      naev
    [svn] bugfix
    branch:      naev
    [svn] added basic gui framework
    branch:      naev
    [svn] some new pack features (list files)
    radial collision detection
    proper adding of the shooting system all about
    branch:      naev
    [svn] outfit loading, not properly used yet
    branch:      naev
    [svn] more ai api
    minor code changes
    more AI concepts
    branch:      naev
    [svn] improved ai API
    fixed minor memory leaks
    cleaned up a bit
    branch:      naev
    [svn] oops forgot to free buffer
    branch:      naev
    [svn] tweaks to default font
    branch:      naev
    [svn] added star system support/loading
    added planets
    more minor tweaks and fixes
    general happiness
    branch:      naev
    [svn] Makefile tweakage
    images already loaded from datafile
    checks md5sum
    branch:      naev
    [svn] moved everything to directories
    cleaned up Makefile
    improved AI
    branch:      naev
    [svn] removed python dir
    Vector2d now uses polar coordinates
    minor tweaks
    branch:      naev
    [svn] few comments
    few optimizations
    branch:      naev
    [svn] minor fixes
    dynamic keybind loading from configuration file
    sample configuration file added
    branch:      naev
    [svn] moving background
    improved opengl workings
    minor tweaks
    branch:      naev
    [svn] cosmetic changes, minor fixes
    branch:      naev
    [svn] gl_print the printf for opengl now works! :)
    branch:      naev
    [svn] minor tweaks
    creation of start of AI infrastructure
    branch:      naev
    [svn] added lua dep
    lua parses config file
    minor debug message tweakage
    branch:      naev
    [svn] more files yay
    branch:      naev
    [svn] working libxml at ship.c
    fixed all memory leakage
    branch:      naev
    [svn] good blitting system, pilot/ship outline
    branch:      naev
    [svn] blits, opengl loads properly, looking good
    little mistake in lua shake
    added Lua function to make the camera shake
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    Use new __RW system and nlua_register() everywhere
    Use new nlua_register() API in nlua_loadCamera()
    Correction to my earlier library loading hack; use it in evt and misn
    
    I forgot about this...
    Run console in global lua state
    Add types to lua api docs, and other documentation improvements
    Fix various param issues LDoc (appropriately) warns about
    Use Vector2d instead of LuaVector
    Make LuaPilot an int instead of a struct, simplifying things
    Remove trailing spaces in src/
    lua headers are system headers, include them that way
    Luadoc fixes.
    Luadoc fixes.
    * You can now set camera speed.
    * camera.set() now focuses on the player.
    * Added Lua camera module basics.
    Remove vectcpy(), and replace it with simple assignments
    * Added vec2.dist2().
    * Using different solid update techniques for different objects.
    * physics.h provides a max speed function.
    * Lower the runge-kutta step when working with high speeds.
    * Made the speed limit internal part of the runge-kutta function.
    * Fixed issues with minbrakedist.
    * Changed internal representation of direction velocity and turn from deg/s to rad/s.
    * Using more sane drag function.
    * UV vector decomposition code by HatlessAtlas.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Improved physics model.
    * Interference now affects targetting and communication.
    * Added concept of distress signals.
       * Ships under attack generate distress signals.
       * If someone gets the signal, and player is attacking player loses faction.
       * Limited by interference.
    * Fixed rare and elusive segfault bug in ai.
    * More doxygen.
    * Doxygen fixes.
    * Changed some colours around.
    * Fixed stupidity in physics.h
    * Added the line thing for planets also.
    * Doxygen.
    * Doxygen.
    * Added dot product.
    * Using atan2 instead of atan.
    * Added vect_reflect().
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    branch:      naev
    made limit_speed to act abruptly, much nicer when afterburning now
    seperated speed limiting into physics
    branch:      naev
    C correctiveness patch
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] added new GUI by default
    branch:      naev
    [svn] bug fixes
    support for different AI Profiles
    branch:      naev
    [svn] bug fixes
    fleet improvements
    per pixel collision
    branch:      naev
    [svn] some new pack features (list files)
    radial collision detection
    proper adding of the shooting system all about
    branch:      naev
    [svn] rudimentary shooting system, needs work
    branch:      naev
    [svn] improved ai API
    fixed minor memory leaks
    cleaned up a bit
    branch:      naev
    [svn] added star system support/loading
    added planets
    more minor tweaks and fixes
    general happiness
    branch:      naev
    [svn] moved everything to directories
    cleaned up Makefile
    improved AI
    branch:      naev
    [svn] temporary commit before playing with cpio
    branch:      naev
    [svn] basics of the AI implemented
    branch:      naev
    [svn] removed python dir
    Vector2d now uses polar coordinates
    minor tweaks
    branch:      naev
    [svn] few comments
    few optimizations
    branch:      naev
    [svn] cosmetic changes, minor fixes
    branch:      naev
    [svn] just uploading working copy
    branch:      naev
    [svn] good blitting system, pilot/ship outline
    branch:      naev
    [svn] blits, opengl loads properly, looking good
    branch:      naev
    [svn] initial import
    Fixed planet.radius docs (was wrongly identified as planet.name)
    Implemented a travel log event.
    
    This also fixes some more problems, including one that prevented
    the shiplog system from being used outside of missions and one that
    prevented compilation from being successful.
    Removed unnecessary debug string.
    
    It seems clear that the function works. No need to print a message
    every time it runs anymore.
    Added npc person to give economy information, which then gets added to the player's knowledge.
    Fixed several instances of assuming that planet.faction always returns a faction.
    
    The function actually returns nil if the planet has no faction (i.e. Eirok),
    so code that relied on this broke whenever the player landed on such a
    planet. I've done a grep for these and I think I've fixed every one,
    preventing Lua errors in the News and NPC events most notably but also
    preventing possible (albeit unlikely) mission errors.
    Made it so the Lua couldn't shouldn't crash when planets have improperly defined textures.
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    gettext for nlua modules.
    [Docs] Replace '=' with '=='
    Comparison is done with the latter, not the former.
    Converted the "blackmarket" flag to a "blackmarket" service.
    
    This is cleaner, and it's an easy way to make adjusting this property
    in the editor possible. The "blackmarket" flag outside of the assets
    is still supported for compatibility.
    Use new __RW system and nlua_register() everywhere
    Add types to lua api docs, and other documentation improvements
    Fix various param issues LDoc (appropriately) warns about
    Fixed planet.commoditiesSold().
    Fix bug in planet comparison I caused
    Replace LuaCommodity with Commodity
    Make LuaSystem an int instead of struct
    Replace LuaColor with glColor
    Replace LuaTexture with glTexture**
    Make LuaFaction an int instead of struct
    Replace LuaOutfit with Outfit*
    Make LuaPlanet an int instead of struct
    Replace LuaShip with Ship*
    Use Vector2d instead of LuaVector
    Update outfits list when planet/etc. known status is changed via Lua
    
    The main trigger for this was bar NPCs giving tips about jumps, etc.
    
    In the future it may be a good idea to cache the currently-displayed
    outfits, and just iterate over the maps specifically, and update the
    quantities instead of rebuilding everything from scratch.
    Improved handling of saves with invalid locations
    Expose planet radius via the Lua API
    
    One mission (Waste dump) uses planet size as a criteria, and since planet
    graphics are loaded on-demand, scanning dozens or hundreds of planets'
    graphics is very expensive. Radius is a nice, cached property that works
    nearly as well.
    Add a function for getting land override status from Lua
    Re-run landing Lua if the land override is changed
    Changed planet classes from enum to plain strings.
    
    The Naev engine wasn't doing anything in particular with explicitly
    defined classes. If anything were to be done, it would be in Lua,
    and that only sees strings anyway. Just changing it to strings makes
    it more flexible without losing anything.
    Removed setBlackmarket function from the Lua API.
    
    The proper way to adjust whether a planet is a black market is now
    with unidiffs. I can't justify a Lua function that makes a planet a
    black market or legal market only for the current session.
    * Made it clear it's not permanent.
    Changed "black market" to a flag, not a variable.
    
    To conform with the rest of the code.
    Added a Lua function for setting whether a planet is a black market.
    Added a Lua function to get whether a planet is a "black market".
    * Fixed memory leak.
    Iterate over externally-defined services.
    * Force land permission on completion of FLF base mission.
    * Luadoc.
    * Introduce read only planet lua methods.
    Renamed Lua isKnown methods to 'known', for consistency.
    Created a planet_setFlag wrapper to avoid marking virtual assets as known.
    Update a number of the luaL_valid* functions to support strings in addition to their native data types.
    * Made all the colours constant as they should be.
    can check and set a planets known flag from lua.
    * Added planet.getLandable().
    * Refactored code.
    * Cleaned up code.
    * Luadoc linebreaks.
    * Removed obsolete API. planet.get() is no longer valid.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    * Lua can now force allow the player to land.
    Added planetL_colour to get a planet's colour.
    * Added planet.canLand().
    * Added more planet API: getAll and system.
    Remove trailing spaces in src/
    lua headers are system headers, include them that way
    Fixed Luadoc typo.
    * Fixed cases where the "__save" member of a table would cause segfaults.
    Proper return condition so 0 planets doesn't cause a segfault.
    * Cosmetics.
    * Added API to get what ships, outfits and commodities are sold at a planet.
    * More robust checking to avoid segfault when using planet.get() with a planet that isn't placed in any system.
    * Fixed Clang report.
    * Increased lua system robustness.
    * Made the planet Lua stuff also much more robust vs addition of planets.
    * Made the Lua Systems metatables safe when adding new systems and causing the system array to realloc.
    * Luadoc.
    * Added API to get images of planets.
    * Better invalid parameter Lua checking.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Fixed bug in planet.get(true) returning landed system always.
    * Avoid segfault with planet.get and invalid planets.
    * Updated Lua API to reflect current function usage.
    * Luadoc.
    * Updated Lua API to handle new services.
    * Services are more specifically defined now.
    * Luadoc.
    * Added planet.cur() and system.cur() to phase out the .get() variants with no parameters.
    * Damn I'm sloppy today.
    * Fixed some Luadoc typos.
    * Changed API for services.
    * Made some nlua naming consistant.
    * Constness.
    * Added CLI specific API for starting missions.
    * Added Lua error.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Should check for type, not userdata.
    * Added luaL_checkplanet.
    * Constness.
    * Cleaned up some Lua code.
    * Luadoc.
    * Luadoc.
    * Luadoc.
    * Split space into planet and system.
    WHitespace.
    Rewrote so that unidiff now recalculates entire economy, but doesn't erase player knowledge.
    Fixed unidiff issue - applying a unidiff of any time would wipe the players economy history (including in any new saves)
    Working economy with list widget on map
    Warnings.
    Fixed issue with period not being read.
    Removed some externs.
    Fixed warnings.
    Split economy into economy and commodity.
    support for standard commodities
    Added economy information to the map
    Added economy statistics and last purchase price, including saving of economy data
    Removed tabs, replaced with 3 spaces
    reworked economy so that it becomes configurable from xml
    Further tidying up ready for pull request into main branch
    Cleaned up code, and refactored the sinusoidal economy part
    Adding simusoidal economy parameters
    added the miners faction
    Destroyable asteroids
    Add gfx_store field to commodity object
    Modify the economy updating model
    
    Galaxy-modifying functions (adding or removing planets, etc.) now only
    queue an economy update, with the caller being responsible for running
    the update via economy_execQueued.
    
    The main benefit is that diffs now only cause one economy update, when
    they prevously did an update for each jump or planet. Economy updates
    were the single largest time-sink when loading, particularly if a
    diff cleanup was necessary.
    Colourize prices based on affordability in several places
    * Try to fix the bloody credits mess.
    * Reduced code by grouping the tech search for items stuff.
    * Added ability to search for comodities.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Instead of hardcoding 32 for credits2str buf length, added #define to make it much more sane.
    * Initial commit of tech stuff.
    * 64 bit credits for everyone \o/.
    * Better money handling, credits shouldn't overflow anymore.
    * First patch to try to add a dynamic economy.  Economy is static atm.
    * Some code clean up.
    * Fixed a memory leak.
    * Using unsigned int for prices instead of signed int.
    * More doxygen.
    * New nice fancy cargo graphic for when jettisoning cargo.
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    branch:      naev
    can now buy/sell commodities, but they're all the same price
    branch:      naev
    basic commodity support added (not used yet)
    branch:      naev
    improved  alot of things for shipyard, including shipyard
    branch:      naev
    split the credit functions and improved boarding
    more whitespace fixes
    Added star images to the system map
    * Made all the colours constant as they should be.
    * Made it so there's two background layers, front and back. This is just position relative to stars.
    * Backgrounds will autosort themselves so they always render properly (based on move).
    * Hack so stars move properly.
    * Support for script to set backgrounds.
    * Two separate move parameters were ridiculous.
    * Renamed background_cleanup background_clear.
    * Implemented background images, not usable yet.
    * Split star background stuff from space stuff.
    Added an individual escort orders menu (suggested in #1051).
    removed tabs
    Replaced dockslot with index int.
    Switched dockpilot to id based.
    Fixed the problem with escorts (I think).
    
    Not tested thoroughly yet, but I think this should fix the problem of
    escorts causing segfaults when their origin ship dies. A cursory test
    shows that this seems to work.
    
    This also causes pilot.setLeader to remove "deployed" status from the
    origin ship.
    Modified the way escort launching is controlled so it can be monitored in real-time.
    
    The previous method was clunky and didn't allow monitoring changes
    to how many escorts you have deployed in real-time very well. So this
    is a HUGE overhaul in how that whole thing works. It solves a bug that
    prevented you from getting new fighters when your old fighters were
    destroyed, while still limiting how many you can launch at once.
    Add mechanism for persisting pilots on jump; use for escorts
    
    This has the advantage that damage is persisted, and the same mechanism
    can potentially be used for other purposes (enemy ships in a mission).
    Have escorts use same jump gate as player
    Changed escape code for colors from '\e' to '\a' so xgettext plays well with it.
    More gettext.
    fixed -Wshadow warning
    Slight simplification
    
    Passing NULL to realloc behaves like malloc
    Make escort_command return 1 when nescorts=0
    Correct lua_pop() call
    Order escorts to jump when player jumps
    Make escort_command take Lua stack index
    Remove unused SystemFleet
    Use messaging API to command escorts
    Do not persists escorts set through Lua
    Remove PILOT_ESCORT flag
    
    Not used; can just test ->parent against 0
    Use pilot.leader() instead of create() argument for escort leader
    Try to start merging leader concept into escort system
    
    Remove p->leader, and set p->parent and p->escorts
    Revert "Call getfenv in nlua_pcall() eliminating the need to pass the"
    
    This reverts commit 79e36c0c1bbca2aa5fa2922651dd303bc7b87882.
    Set player as leader of his escorts
    
    Really, more extensive changes should be made to the escort code to deal
    with this fleet concept; I'll do that... "later"
    Call getfenv in nlua_pcall() eliminating the need to pass the
    environment as an argument
    Use new __RW system and nlua_register() everywhere
    Use nlua_pcall() in escort_command()
    Compiles now; runtime errors (and still  only ai.c)
    Make LuaPilot an int instead of a struct, simplifying things
    fixed the escort attack function
    Combine ai_extra.h into ai.h
    
    Use forward declaration of struct to deal with cyclical import.
    Prevent escorts from jumping away
    * Wrapper for nsnprintf being used all over.
    Many, many typo fixes.
    It's its not it's
    * Fixed Clang report.
    * Changed how flags are handled so we can easily add more of them.
    * Major refactoring of the pilot. It is now all contained in a struct.
    * Dead/disabled/left pilots reduce the used presence.
    * Some changes to coloring for player messages.
    * Fixed segfault.
    * Automatically reload outfits.
    * Fighter bays work again.
    * Compiles cleanly - nothing works.
    * Avoid sending escorts to kill your same faction.
    * Fixed memory issues with escorts.
    * Now properly track the deployment.
    * Persistant escorts now are working.
    * Have escort automatically get removed when disabled from escort list.
    * Added a parameter to choose whether to add to list when creating escort.
    * Save/load escorts.
    * Added function to prune dead escorts.
    * Allocate enough memory.
    * Make escort structure more advanced.
    * Pilots now deploy properly, still needs persistance.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Doxygen.
    * Escorts should no longer segfault.
    * Doxygen fixes.
    * Fixed possible segfault.
    * Added escort control ai Lua bindings.
    * Fixed some escort ai issues.
    * Escorts can now return to ship.
    * Escorts and fighter bays start to work well.
    * Added much more escort stuff.
    Shouldn't attempt to compile if no openal support
    Made the openal stuff extern and added them in a separate file. Not sure why it worked in the first place (maybe differente AL_APIENTRY definition?)
    * Add alpha channel to everything.
    * PNG metadata loading is working.
    * More load up optimization related to png.
    * Optimizing loading a bit.
    * No longer using SDL_image.
    * npng.c now handles PNG file loading and the likes.
    * Added a NAEV wrapper for libpng stuff.
    Renamed "dumb"/"dumbfire" rockets to "unguided".
    
    The term "dumbfire" (which doesn't seem to be in common use outside
    of a select few video games) comes from the term "dumb", which is
    ableist on two counts: firstly, it's sanist because the meaning
    "dumbfire" is derived from is "stupid" or "of low intelligence".
    Secondly, the term "dumb" actually originates from ableism against
    mute people, albeit in the German language rather than English.
    
    The term is imprecise, anyway, so I've changed it to the more precise
    and non-ableist term, "unguided".
    All outfits can now add shipstats with <stats> tags.
    Added flat armour/shield modifiers.
    Added flat armour/shield regeneration modifiers.
    Added unique outfit property.
    Outfits use rarity images too.
    Simplified rarity image selection logic.
    It is now possible to add overlay layers to outfits.
    Fixed issue with period not being read.
    Removed some externs.
    Fixed warnings.
    update on polygon collision
    polygonal collision algorithm
    First pass at putting jam functionality into scramblers.
    
    It doesn't work right. The numbers are wrong. Need some help on that.
    Removed the "Asterokiller" distinction.
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Make everything fuel related an int
    Tag everything related to fuel and using double with DELETETHIS_
    Destroyable asteroids
    Fix typo
    Remove obsolete bolt CPU value
    Rework beams in accordance with the Beam Revamp proposal
    
    Beam refire delays now scale with how long they're fired, relative to
    their maximum duration. They can only be fired again once they reach
    full charge, however.
    Replace hard-coded ammo AI types with an enum
    Square launchers' ew_target for comparison against squared hide values
    Remove all traces of the vestigial non-shipstat nebu_absorb_shield
    Optionally load outfits' default weapon group from XML
    Remove obsolete hide_rel attribute
    Add a priority element to outfit XML for last-resort sorting
    Added nebu_absorb_shield shipstat
    
    Added nebu_absorb_shield shipstat, as well as a prototype outfit, nebula_shielding0,
    that uses it.  If a ship has nebu_absorb_shield, it will be applied to nebula damage
    in the same way that dmg_absorb is applied to normal damage.  Removed nebula_dmg_shield,
    nebula_dmg_armor, since they were presumably meant to do the same thing, but didn't
    have any real code attached to them in the damage calcs.  The Thurion Integrity will
    need to be updated, since it uses the old values, and since they didn't do anything,
    I have no way of knowing what -80 and -97 were supposed to mean in that context.
    I also added a nebu_absorb_armor shipstat as a placeholder, but it doesn't do anything
    yet.
    added "ship.getSlots" lua function
    * Reinstate <cpu> as common flat value.
    * Using <cpu_max> and <cpu_mod> as shipstat to increase/decrease maximum cpu.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Scripted temperature thresholds for afterburners.
    * Afterburners support start, on, and end sounds.
    * Still needs to be done via the generic activated outfit framework.
    * Some code for heat on afterburners. Todo:
    ** Show afterburner heat.
    ** Don't toggle afterburner when used via weapon group.
    * Map planets too.
    * Added local maps.
    * hide_rel is replaced by ew_hide.
    * Modifiers can use energy_loss.
    * Merge master into slots, part deux.
    Make outfit hide modifiers relative.
    * Limit set on char not int.
    * More generic implementation for limiting outfits to 1 per ship.
    * Causes segfault at startup.
    * Typo in comment.
    * Implemented hide modification for modification outfits.
    * Scramblers work as intended now.
    * Added a scale factor for evasion (compared to hide). This ensures that pilots are always detected fuzzily before they are scanned, even when they're stationary.
    * Fixed outfit_getType(...).
    * Afterburners have cooldown and duration (not used yet).
    * Made all the colours constant as they should be.
    Removed now-obsolete "turret ammo" type, as regular ammo is handled properly in turrets.
    maps load data, also can be added without crashing.
    adjusted OutfitMapData for new map system.
    is in seperate file due to include loop.
    * Added outfit_cooldown(...) and outfit_duration(...).
    * Added duration and cooldown options for active outfits (not used yet).
    * Implemented jammers as per BTAxis wishes.
    * Doxygen.
    * Removed legacy mass_rel, crew_rel crap (use ship stats).
    * Do relative health/movement upgrades through ship stats.
    * Added absorption to modifications "absorb".
    * Changed how stuff is handled and implemented.
    * Relative bonuses are applied after absolute ones.
    * Slots are now handled separately in xml.
    * Respect properties when equipping.
    * Moved outfit property to the outfit slot itself.
    * Outfits can be active (not able to activate them yet).
    * Better handling of everything, still not done yet.
    * Initial commit of ship stats, doesn't really do anything new yet.
    * Whitespace.
    * Vulgar implementation of jump delay.
    * Added API to get the list of the outfits a pilot has.
    * Weapon set auto-handle now sets secondary weapons according to the secondary flag in XML, not according to weapon type.
    * Outsource damage types to XML.
    * Note: still buggy.
    * Using fancy damage struct to prepare for generic disabling implementation.
    * Using fancy damage struct to prepare for generic disabling implementation.
    * Removed old missile lockon.
    Minor fixes and dead code clean-up.
    Minor fixes and dead code clean-up.
    * Whitespace.
    * Whitespace.
    Many, many typo fixes.
    Added a function to see if an outfit matches a slot's type without taking size into account.
    * Fixed fugly code.
    Allow separate nebula damage modifiers for shield and armour.
    * Nebula resistance should be nebula damage.
    * Added nebula resistance.
    * Try to fix the bloody credits mess.
    * Implemented more ship stats.
    * Search stuff for outfits.
    * Added swivel weapons, may need more swivel.
    * Added concept of turret tracking and thus dynamic lead angle based on ewarfare.
    * Missile and beam weapon turning should work well again.
    * Changed obsolete accuracy mods to heat mods.
    * Enabled lead angle.
    * Implemented mass limit for afterburners.
    * Polished up the relative crew stuff.
    * Outfits use heatup now. May still need more tweaking love, but it looks ok for now.
    here is my boarding android mod, right now, there are 2 models the mk I nad the mk2, which give you 20% and 35% more crew to increase your chance of success when boarding a ship.
    I'm still using the cargo_pod gfx, because i dont have any better graphics :X
    
    here is a summary of what i changed:
            modified:   dat/outfit.xml, added outfits Boarding Androids Mk I and II (tanks Deiz for the hillarious descriptions)
            modified:   dat/tech.xml,   added the Boarding AndroidsI&II to: High Tech Upgrades, Low Tech Upgrades; added Boarding Android Mk I to Basic Outfits 2.
            modified:   src/board.c,    changed board_tryStel(...) to use the modified crew value of the pilot and not the static one f the ship
            modified:   src/info.c,     changed ship_update(...) to use the modified crew value of the pilot.
            modified:   src/outfit.c,   added functionality to load <crew_rel> xml nodes .
            modified:   src/outfit.h    added variable double crew_rel to pilot.u.mod
            modified:   src/pilot.c     changed init to init the initial crew.
            modified:   src/pilot.h     added variable double crew to struct Pilot.
            modified:   src/pilot_outfit.c changed Pilot_calcStats stats to change pilot->crew acording to temp->u.mod.crew_rel
    * Load heat up parameter.
    * Removed references to "old" accuracy.
    * Implemented damage absorption, not set however.
    * Renamed outfit_isWeapon to outfit_isForward to make sense (tm).
    * Seem to have fixed the fire rate bug.
    * Added ability to add GUI outfits.
    Systems slot renamed to Utility.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    Migrating from High, Medium, Low + Heavy, Standard, Light to Weapon, Systems, Structure + Heavy, Medium, Light
    * Slot sizes now indicated in the equipment window for outfits.
    * Outfits get designated default sizes now.
    * You can only equip outfits that fit slot size now, however there is no slot size indication.
    * Ships check for outfit slot sizes too.
    * Initial implementation of slot size types.
    * Generating properly the outfit bolt weapon stats.
    * Basic core for generating csv output done.
    * Fixed display glitch showing -100% detection and cloaking when it should be 0%.
    * Added ship stats for ew_detect and ew_hide.
    * Formatting.
    * Moving unidiff to new tech system.
    * Tech should free properly.
    * Added stuff to get outfits from tech.
    * Initial commit of tech stuff.
    * Armour bonuses are now relative not absolute.
    * Implemented energy usage modifiers for turrets/forward.
    * Prepared the ground for more stats.
    * Implemented accuracy stats.
    * Disable unused stats.
    * Stats are working again.
    * Using more generic functions for ShipStats stuff.
    * Moved shipstats to outfit.h.
    * Added many more stats.
    * Display slot type in outfit shopping window.
    * Simplified launchers and ammo.
    * Afterburners are only relative now.
    * Changed subtype to typename.
    * Also sort the player's equipment outfits.
    * Using qsort() for sorting outfits.
    * Introduced type and subtype overrides.
    * Should no longer be able to drive stats negative with modifications.
    * Made movement upgrades somewhat relative.
    * Added relative mass.
    * Tweaked armour values.
    * Added outfit to Fighter Bays.
    * Automatically add ammo if available.
    * Added amounts to launchers.
    * All outfits have short descriptions.
    * Added concept of short description for outfits.
    * Load CPU.
    * Compiles cleanly - nothing works.
    * Implemented <sound_hit>.
    * Using gfx_end instead of hues.  Weapons render with gfx_end.
    * Bolt weapons can now work with HSV colourspace (only hue) if you are so inclined.
    * Fixed misinitialization.
    * Added blowup properties to outfits so they blowup when they time out.
    * New outfit.
    * Fixed a silly typo bug in weapon.c.
    * Ammunition can now have accuracy (missiles and such).
    * Added support for different armour/shield hit animations.
    * First implementation of Licenses.
    * Improved outfit loading some.
    * Have FighterBays and Launchers actually link to their ammo (prevents realloc after loading though).
    * Fixed some escort ai issues.
    * Escorts can now return to ship.
    * Escorts work, sort of.
    * Added much more escort stuff.
    * Made outfit_getTech return outfits, not names.
    * Code cleanup.
    * Beam weapons require spfx now.
    * Proper beam spfx usage.
    * Added sounds to beam weapons.  Sound system needs overhaul for it to be better.
    * Beam weapons now properly use graphics.
    * Beam weapons now use delay and duration.
    * Finished doxygenization of outfits.
    * Split beam/bolt loading logic.
    * Making some more room for beam weapons.
    * Made outfit.h sexier.
    * Doxygenized outfit.h.
    * Redid entire sound system with SDL_mixer.
    * Improves enemy ai: they hit a lot now.
    * Improves turret ai: should also hit a lot now.
    * Improved the global attack() ai.
    * Updated TODO.
    * Missiles can now resist jamming.
    * Jammers now loaded (not used yet).
    * Pilots now keep track of how many weapons are locked onto them.
    * Knockback now dependent on DamageType.
    * AI now calculates optimal distance when shooting.
    * Switched weapon timer method to something more sane.
    * Put turrets before misiles.
    * Outfit_getTech now sorts by type and price.
    * map.c: Fixed segfault when landing.
    * New Outfit: Star Map.
    * No longer using int ids for outfit.xml outfit types.
    * Added new damage types:  Ion and Radiation.
    big assorted patch, adds afterburner noise
    switched from damage_armour and friends to just damage and damagetype
    rumble of the afterburners is now in outfit.xml
    mods can now add cargo, added cargo pod as an example, fixed rmOutfit bug
    preparing for adding fuel into game
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    branch:      naev
    added afterburners
    branch:      naev
    added stare outfit graphics
    branch:      naev
    added support for modification upgrades and a few examples
    branch:      naev
    energy matters and is actively used now
    branch:      naev
    implemented special techs
    branch:      naev
    preliminary tech support (only raw, no special tech yet)
    branch:      naev
    bolt->blt not wpn and added a new ship and outfit (outfit needs gfx)
    branch:      naev
    can now buy outfits
    branch:      naev
    added outfit information window
    branch:      naev
    added turrets
    branch:      naev
    gave outfits/ships prices
    branch:      naev
    now compiles with -std=c99, also fixed major union alignment issue
    branch:      naev
    missiles now have a lockon time
    branch:      naev
    you can define spfx per outfit, fixed major memory issue
    branch:      naev
    C correctiveness patch
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] added more sounds
    sound engine should be working ,but isn't tuned enough yet
    branch:      naev
    [svn] major syntax rewrite, big "what the hell was I thinking" in player.c
    made opengl.h struct names more intuitive
    branch:      naev
    [svn] AI can now use secondary weapons
    branch:      naev
    [svn] switched to commonwealth spelling (armor -> armour)
    implemented seeker missiles and ammo
    implemented secondary weapons
    branch:      naev
    [svn] fixed AI landing (still too loose for my tast though)
    cleaned up some code
    more xml macros
    branch:      naev
    [svn] rudimentary shooting system, needs work
    branch:      naev
    [svn] yeah, forgot the new stuff
    Remove SDL1 compatibility -D CLAGS, and sed so they aren't used
    Fix the toolkit's focus model
    
    Prior to this, text input would get stuck on or off depending on the
    last widget that handled it.
    
    Windows are now marked as exposed while they have input focus, which
    triggers focusGain for any input widgets (to re-enable text input),
    including those nested within tabbed windows.
    
    The toolkit tries to always have one window exposed at a time. When a
    new window is created (and isn't WINDOW_NOFOCUS) it will be exposed,
    while the currently-active window will be unexposed (disabling text
    input, etc., if enabled).
    Make widget size accessible outside the toolkit
    Add toolkit functions for getting/setting window positions
    Support raising and lowering toolkit windows
    Automatically re-center windows when resolution changes
    * Fixed some crashes with player.swapShip(...) and the likes with no shipyard.
    Added some toolkit functions for getting and setting focus.
    * Gave windows custom data.
    * Show the starting system in the background (with movement) at the main menu.
    * Fixed keybindings.
    * You can now specify window event handler.
    * Hack to fix segfault with ES missions.
    * Move to use tabs - not complete yet.
    * Added crude up/down arrow to move through console history.
    * No longer have windows "ghost" when you exit at weird times.
    * Should avoid the infinite loop in credits.
    * No longer using a toolkit global variable.
    * Split the image array widget.
    * Moved some stuff out of toolkit that i missed before.
    * Split the input widget
    * Split the list widget.
    * Split fader widget.
    * Split custom widget.
    * Split rect widget.
    * Split image widget.
    * First patch to try simplify and make modular the entire toolkit approach.
    * Do not use vnprintf for Lua stuff (avoids possible segfaults).
    * Lots and lots of doxygen.
    * More sanity checks.
    * Code clean up.
    * Removed unused and a bit buggy scrollbar (use fader instead).
    * Faders and Audio options by Camilo.
    * Refuel button should appear more often now.
    * Major toolkit change to simplify things a lot, makes it more object oriented.
    * Made toolkit_getList apply to Image Arrays too.
    * Use image arrays in shipyard.
    * New widget: Image Array.
    * Polished outfits to make use of new widget.
    * Seperated dialogues from toolkit.
    * Changed some syntax.
    * Added some doxygen.
    * Simplified window position creation.
    * More commentarios on widget creation.
    * Allow to move or get window positions after creation.
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    introduced getListPos to get the position of the list, cleaned up mission stuff
    added missions to info window
    fixed the toolkit module in lua, fixed accept bug, segfaults :)
    you can now disable/enable buttons
    added purple, can now change toolkit image colour
    renamed alert, YesNo dialogue_ instead of toolkit_.  added dialogue_input
    added new simple toolkit_YesNo confirmation dialogue
    you can specify default fptr for windows now
    branch:      naev
    almost working player input, need to hack font up first
    branch:      naev
    added window_getImage
    branch:      naev
    mouse event for custom widgets has more control, better star map
    branch:      naev
    custom mouse events for custom widgets
    branch:      naev
    map framework, changed systems name to systems_stack for coherency
    branch:      naev
    you can use shift/control to buy more outfits at a time
    branch:      naev
    added possibility for a custom widget
    branch:      naev
    added toolkit_alert as a way to warn the user of something
    branch:      naev
    new rectangle widget, more widget creation checking
    branch:      naev
    added rough outlines for shipyards and outfits
    branch:      naev
    click focus for lists
    branch:      naev
    keyboard events work with list
    branch:      naev
    list widget renders, now just needs to work properly
    branch:      naev
    added a window_modifyImage call
    branch:      naev
    allow toolkit to block input if needed
    branch:      naev
    can only board once, can steal credits :)
    branch:      naev
    split toolkit input from game input to fix silly bugs
    branch:      naev
    some code cleanup (MELEMENT sanity)
    added information and ship spec windows
    some more comments here and there
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] added window_get to get windows based on their name
    added a small boarding menu
    branch:      naev
    [svn] windows now get a name embedded
    added empty commodity exchange
    tried to sanitize secondary weapon/weapon shooting
    changed pilot stack and star stack to not lower memory allocation
    fixed landing/takeoff to actually affect the system
    branch:      naev
    [svn] improved the font usade
    now you can print blocks of text
    added planet descriptions
    branch:      naev
    [svn] split font stuff from more pure opengl stuff
    branch:      naev
    [svn] added support for images of planets
    cosmetic toolkit changes
    changed the gl_blit functions to work with doubles instead of Vector2d pointers
    took opportunity to clean up space.c xml (bringing it up to xml.h standard)
    cleaned up code
    branch:      naev
    [svn] moved colours out of opengl
    improved land graphics
    added more sane toolkit api
    branch:      naev
    [svn] Basic toolkit implementation done
    added gl_printMax and gl_printMid which was long overdue
    using flag system with gl_screen
    optional AA for primitives
    minor pause behaviour fix
    branch:      naev
    [svn] Basic toolkit implementation (but ugly)
    Basic landing
    Pause bugfixes
    branch:      naev
    [svn] added beginning frame for toolkit
    added ability to pause/resume game
    nerfed lasers armour damage
    Look for ndata in macOS app bundle
    Use macOS-specific user directories.
    Removed warning.
    Unified some code.
    Moved nsetenv to src/env.c
    Detect AppImage environment and adjust paths
    warnings
    Remove now unused functions related to fixed-function OpenGL
    Remove wrappers around legacy OpenGL matrix functions
    Add a function for rotating a matrix around the z axis
    Rewrite gl_Matrix4_Scale() and gl_Matrix4_Translate() to be faster
    
    Gprof was showing gl_Matrix4_Mult() as the third most expensive function
    in the game. Now, neither of these functions ranks particularly high.
    Use matrices instead of modifying VBOs in gl_blitTexture()
    Pass projection matrix to texture.vert using uniform
    
    The previous code relies on deprecated OpenGL matrix functionality.
    Implement matrix functions as an alternative to the legacy GL ones
    
    This is not immediately better, but a step toward eliminating deprecated
    OpenGL functionality.
    * Moved more matrix calls to our gl_matrix wrappers.
    * More gl_matrix wrappers.
    * Added rotation, but it sucks because it's not linear like the translation (scaling isn't either, but not as used).
    * Added gl_matrixMode API to substitute glMatrixMode.
    * Implemented matrix scaling.
    * Moved most of the matrix stuff into opengl_matrix.
    Keep logging to stdout/stderr even when logging to a file or not in a console. This makes it a lot easier to grab Naev's output inside a test.
    
    Also, this removes the windows specific unbuffered console output by manually forcing line buffering.
    Get rid of some uninitialized warnings.
    Do not use uninitialized value in logprintf()
    
    Signed-off-by: Stephen M. Cameron <stephenmcameron@gmail.com>
    Fix issue with newlines in log print mentioned in #776
    Fixed warning/error messages.
    Whitespace.
    Changed escape code for colors from '\e' to '\a' so xgettext plays well with it.
    More gettext.
    Can now use gettext with LOG, WARN, ERR, and DEBUG.
    Make NAEV write to stderr and stdout, then on close, copy them over to
    yyyy-mm-dd_hh-mm-ss_std[err/out].
    
    This enables the developper to keep track of evolutions between multiple
    runs, but also to (auto-)reload stderr and stdout after each run,
    instead of searching for 2 new files each time, which is quite a pain...
    Renamed stdout and stderr files so out/err pairs for a NAEV run are
    grouped and sorted by date.
    Fix compile errors when the flag -Werror=format-security is set
    Add cross-platform log redirection when not running from a terminal
    
    As --datapath and datapath.lua must be respected, output is initially
    copied into memory, and either flushed to disk or deleted once configs
    have been loaded.
    
    Redirection is only done is conf.redirect_file is enabled and Naev is
    not connected to a terminal.
    
    The files go into ${datapath}/std-{out,err}_YYYY-MM-DD_hh-mm-ss.txt,
    and the logs for a session are deleted if stderr is empty.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    * Forgot to add file.
    Give pilots access to space
    Add some convenience fields to JumpPoint
    Added symbols for faction text on the map screen, and for ship stats
    
    This is an accessibility feature for those who are colorblind. You
    no longer need color vision to see this information.
    
    Based on the idea we had before to use emojis, but using ASCII instead.
    The biggest advantage of this is that it can just be directly inserted
    into the text rather than having to worry about positioning the symbols
    manually.
    Split economy into economy and commodity.
    Added npc person to give economy information, which then gets added to the player's knowledge.
    Working on adding a person in the bar to give economy information
    Added economy statistics and last purchase price, including saving of economy data
    Adding simusoidal economy parameters
    Planet types.
    Added support for exclusion zones.
    
    I also had to clean up some code (magic numbers in particular, replaced
    with an enum). There is an example exclusion zone in Lapis.
    Replaced the polygon definition of asteroid fields with simple circles.
    
    I kind of get why it was implemented that way: you can define all kinds
    of wacky shapes real easily. But in the vast majority of cases don't
    need that, and it makes defining asteroid fields needlessly complicated.
    In the few cases where complicated shapes might be needed, it's easy
    enough to approximate shapes with a series of circles.
    
    The code is much simpler, too.
    
    Display in the map editor has been removed at least temporarily.
    Hopefully should add it back in later.
    Added damage checks for asteroids.
    
    Asteroids now take "armour" damage until they lose said "armour",
    rather than being instantly destroyed.
    Removed an unnecessary check.
    Re-lowered simulation time, down to 30 seconds.
    
    I increased this to 2 minutes a while back and now I'm kinda eating my words
    on that one because my system has a massive delay with the 2 minute
    simulation. 😅 Lowered it to 30 seconds, which is still double what
    it originally was but much less extreme.
    * aera -> area
    Fixed a bug that allowed you to buy maps with no new information.
    
    The bug was caused when there were destroyed assets within the map.
    Whether or not the asset actually existed was not being checked,
    so you could always buy the map again and again, wasting your
    credits. Fixed by considering any planet that either doesn't exist
    or is outside of the planetname_stack to be "known". This fixes the
    problem and doesn't seem to have any unintended side-effects.
    
    Big thanks to both bobbens and BTAxis for helping me navigate the
    code on this one.
    Fixed a bug that allowed you to buy maps with no new information.
    
    The bug was caused when there were destroyed assets within the map.
    Whether or not the asset actually existed was not being checked,
    so you could always buy the map again and again, wasting your
    credits. Fixed by considering any planet that either doesn't exist
    or is outside of the planetname_stack to be "known". This fixes the
    problem and doesn't seem to have any unintended side-effects.
    
    Big thanks to both bobbens and BTAxis for helping me navigate the
    code on this one.
    Decreased simulation time to just 2 minutes.
    Increased simulation time on warp-in from 15 seconds to 5 minutes.
    
    This makes it so that you're not effectively guaranteed to warp into
    the middle of a battle zone, which can be a problem if you're
    in hostile territory.
    modifications on asteroids
    made mining more user-friendly
    Converted the "blackmarket" flag to a "blackmarket" service.
    
    This is cleaner, and it's an easy way to make adjusting this property
    in the editor possible. The "blackmarket" flag outside of the assets
    is still supported for compatibility.
    Enabled mining and added variety to the fields
    Destroyable asteroids
    Fixed minor memory leaks.
    Made asteroid fields ID a string.
    manage different kinds of asteroids
    Added player-rendered debris
    added management of non-convex fields
    Made required changes
    Added a new field, corrected Euler and added the stabilization step
    corrected a crash, added radar display of asteroids and display on map editor
    added graphical variation among asteroids
    added decorative asteroids
    Remove unused SystemFleet
    Minor whitespace and fixes and s/\t/   /g
    Improved handling of saves with invalid locations
    Changed planet classes from enum to plain strings.
    
    The Naev engine wasn't doing anything in particular with explicitly
    defined classes. If anything were to be done, it would be in Lua,
    and that only sees strings anyway. Just changing it to strings makes
    it more flexible without losing anything.
    Changed "black market" to a flag, not a variable.
    
    To conform with the rest of the code.
    Added the capability for "black market" planets.
    
    Quite simply, a "black market" planet ignores licenses: the player
    can buy anything from a black market planet, regardless of what
    licenses would normally be required. Black market planets are
    indicated by the <blackmarket/> XML tag.
    Properly prevent exit-only jumps from being targeted
    * You can change asset faction with unidiff now.
    * Horrible code duplication to get around the fact that jump point XML is only parsed when adding a jump.
    #defined a maximum for planet service flags sto avoid hardcoding elsewhere.
    Prune presences as necessary when applying unidiffs.
    * New planets get a nonzero radius.
    * Update radius when updating gfx.
    * Moved various path defines into ndata.h.
    save more.
    Recalculate presences when changing things in the editor.
    * Removed all references to asteroids. Not implemented, will never be implemented this way.
    Created a planet_setFlag wrapper to avoid marking virtual assets as known.
    * More logical position.
    * Minor cosmetics and constantness.
    * Made parameter in jump_get const.
    * More usage of jump_getTarget.
    * Added jump_getTarget.
    fixed a comment
    fixed a comment
    * Made all the colours constant as they should be.
    remove jump point type in favor of flags
    removed all traces of the onMap system
    * Removed unneeded planet flags.
    reset planet and jump known flags on load.
    exiting a game and reloading without exiting naev caused
    previously known planets and jump points to remain known.
    the known flags are now reset
    can unidiff jump points
    whitespace
    more jump stuff
    system map respects unknown jump points
    initial commit for hidden jump points.
    jump points can be discovered, and known state is saved
    planets are now on maps.
    support for asset hide flag. also, interference
    whitespace
    planets are now remembered
    added planet flags
    * You can toggle spawning of specific factions now.
    * Added planet.getLandable().
    * Refactored code.
    * Cleaned up code.
    * Lua can now force allow the player to land.
    Made the function that gets a planet class from its char non-static; Added functions to get a service's bit from its name and vice versa.
    Minor fixes and dead code clean-up.
    Minor fixes and dead code clean-up.
    * Improved handling of stuff - like them tricksy planet landing colours and such.
    * Update space land messages with faction changes.
    * Basic implementation works, probably quirky all over.
    * Initial implementation of landing lua. Not actually used yet.
    Many, many typo fixes.
    Scale map faction circles based on faction presence.
    Ensure a planet's system is truly reachable prior to returning it (avoids getting the tutorial systems from the main galaxy, etc.)
    * Try to fix the bloody credits mess.
    Return distance (or angle) when getting the nearest asset.
    Added function for getting assets nearest to an angle extending from a given pair of coordinates.
    * More NAEV -> Naev.
    * Added API to get price at a system (both C and Lua).
    * Planets can be unknown theoretically.
    * Finds and sorts systems with partial matches.
    * You can now select planets and jumps from the overlay map.
    * Doxygen.
    * Made the planet Lua stuff also much more robust vs addition of planets.
    * Made the Lua Systems metatables safe when adding new systems and causing the system array to realloc.
    * Added support for per-system backgrounds.
    * Split star background stuff from space stuff.
    * Removed obsolete extern.
    * Made code more elegant.
    * Map searching is case insensitive.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * player.teleport() should no longer segfault with invalid parameters.
    * Luadoc and Doxygen.
    * Implemented the basic advanced mission markers as per the proposal.
    * Using decrease function in spawn scripts.
    * Using planet radius now instead of graphic size for planet size assumptions.
    * Load planet graphics on demand.
    * Simulate system for 15 seconds before player enters.
    * Doxygen.
    * Pilots now lose presence when disabled or deleted.
    * It seems like the faction spawning scripts can work now.
    * Removed unneeded declaration.
    * Better handling of virtual/real assets, especially when saving asset.xml.
    * Removed prodfactor and disabled "dynamic" economy for now.
    * Reword Scheduler struct to be more obvious.
    * Removed obsolete fleet stuff.
    * Tech unidiff is working.
    * Tech stuff should load and write properly now.
    * Fixed issue with planet saving.
    * Initial commit of planet saving code.
    * You can now add new planets.
    * Allow creation of new planets online.
    * Fancier jump reconstruction algorithm which takes into account AUTOPOS flag among other things.
    * Automagically adding autopos tag to all jump points.
    * Automagicalyl adding radius tag to all systems.
    * Reconstruct jump routes when systems realloc.
    * You can now add new systems.
    * Fixed bug with NPC ships jumping in facing weird directions.
    * NPC pilots now jump in from jump points.
    * Tweaked it so the player enters at the appropriate jump point.
    * Displaying triangles correctly for jump points.
    * Moved nav_hyperspace and nav_planet to pilot instead of player struct.
    * Give the jump points heading.
    * Using new jump point system, behaves exactly the same as the old system.
    * JumpPoints need target systems.
    * Added first implementation of Jump Points.
    * Added new files to compile chain.
    * It should all actually compile now.
    * Added function for saving star systems.
    * Added comments.
    * Removed fleetgroups.
    * Added fleet chaining.
    * Dead/disabled/left pilots reduce the used presence.
    * Moved presence prototypes to their own section.
    * Removed remnants of old security system.
    
    Lua sys:security() function is now marked obsolete. It, for now, returns friendly / all presence.
    * Using new scheduler.
    
    Currently does not respect cap or spawn at start.
    * Using new presence struct, and related changes.
    
    faction_nstack is no longer externed in space.c.
    Using faction_isFaction() call instead.
    Added public system_getPresence() function, which returns the presence for a faction in a system.
    * Renamed addPresence with system_ prefix.
    * Systems no longer filled for unreal planets.
    * Added spillage.
    * Renamed planet to asset.
    
    "Unreal" assets are allowed. An asset is "unreal" if it has no <pos> tag.
    planet.xml has been renamed to asset.xml
    Checks are in place to ensure that "unreal" assets are not used where only "real" assets should be.
    * Changed presence to be read from XML.
    * Added per-faction presence view.
    * Services are more specifically defined now.
    * Changed security to presence
    
    It now shows guard/hostile presence for systems.
    * Verbosity++.
    * Allow initializing/rendering stars outside of internal space functions.
    * Nebulae is plural, changed it all to nebula.
    * Made savegame more robust when loading inexistant missions.
    * Added system safety.
    * Map interface heavily changed.
    * Constness.
    * Cleaned up some Lua code.
    * Now draws fancier markers.
    * Implemented planet bribing.
    * Completely changed spawn algorithm to make more sense and try to balance ships.
    * Whitespace patch.
    * Using either fleets or fleetgroups when loading starsystems.
    * Moved fleet stuff out of pilot.[ch].
    * Cleaned up code some.
    * Introduced idea of system_getIndex().
    * Economy now dynamically fluctuates a bit.
    * First patch to try to add a dynamic economy.  Economy is static atm.
    * Some code clean up.
    * Fixed a memory leak.
    * Missions destinations are now marked when selecting missions at mission computer.
    * Implemented bribing.
    * Added ai.isbribed().
    * Fixed major outstanding bugs in flag usage.
    * Fixed major outstanding bugs in weapon_hit stuff.
    * Tweaked entire hyperspace distance system to be more sane.
    * Implemented fleet addition/removal.
    * First release of the unidiff system.
    * Major rewrite and clean up in space.c.  Hopefully won't introduce bugs.
    * Removed dependency of the spawn_timer on SDL_GetTicks().
    * Added boolean to control spawn.
    * More doxygen and code cleanup.
    * More doxygen.
    * Added planet_getClass().
    * Display whether or not a system has nebulae.
    * Load gfx_exterior for planets only on demand now.
    * Restructuring to prepare for nebulae puffs.
    * Added space_renderOverlay().
    * Nebulae are now drawn ingame.
    * Added nebu_density and nebu_volatility parameters to star systems.
    * Missions can now mark systems.
    * Moved A* jump pathfinding from space.c to map.c.
    * Code uses flags for systems now to allow missions to mark them.
    * Pathfinding will avoid unknown systems.
    * Major upgrade, you don't already know all systems location.
    * Formalized Space Station types.
    you can sort of load games, still need to fix issues though
    added A* algorithm to get paths between systems
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    implemented ability to figure out where a planet is located
    improved space.getPlanet() mission lua
    improved lua api for missions by alot
    major improvement -> use ids for factions instead of pointers
    branch:      naev
    planets now have commodities, but you can't do anything with them yet :)
    branch:      naev
    implemented special techs
    branch:      naev
    allow menu when hyperspacing (cancel fancy hyperspace effects when paused)
    branch:      naev
    added possibility to deny landing, updated TODO a bit
    branch:      naev
    added new station, added actual empire ships and fights with the collective
    branch:      naev
    fixed wierd new warnings and added more thingies (especially factions)
    branch:      naev
    added spawning, will need tweaking
    branch:      naev
    C correctiveness patch
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] prepared for the upcoming toolkit_list
    fixed some sanity around turning pilot functions, now in pilot_face
    added basic rough on the edges hyperspace implementation
    branch:      naev
    [svn] added the spaceport bar (no missions or hirelings available yet)
    branch:      naev
    [svn] game now uses planet services (they aren't implemented yet though)
    took out an accidental DEBUG i left in
    branch:      naev
    [svn] improved the font usade
    now you can print blocks of text
    added planet descriptions
    branch:      naev
    [svn] added support for images of planets
    cosmetic toolkit changes
    changed the gl_blit functions to work with doubles instead of Vector2d pointers
    took opportunity to clean up space.c xml (bringing it up to xml.h standard)
    cleaned up code
    branch:      naev
    [svn] major syntax rewrite, big "what the hell was I thinking" in player.c
    made opengl.h struct names more intuitive
    branch:      naev
    [svn] Added planet targetting and landing framework
    split update / render completely into two different functions (for toolkit)
    branch:      naev
    [svn] rudimentary screenshot taking
    put some data info in start.xml
    branch:      naev
    [svn] fixed AI landing (still too loose for my tast though)
    cleaned up some code
    more xml macros
    branch:      naev
    [svn] more ai functions
    some ai tweaks
    more ai protection
    branch:      naev
    [svn] bug fixes
    support for different AI Profiles
    branch:      naev
    [svn] bug fixes
    fleet improvements
    per pixel collision
    branch:      naev
    [svn] added star system support/loading
    added planets
    more minor tweaks and fixes
    general happiness
    branch:      naev
    [svn] moved everything to directories
    cleaned up Makefile
    improved AI
    branch:      naev
    [svn] cosmetic changes, minor fixes
    branch:      naev
    [svn] more files yay
    * Forgot files.
    Removing remaining uses of lightuserdata
    
    There two places are the only ones where it was being used.
    
    This fixes Naev with Luajit on aarch64:
    https://github.com/Kong/openresty-patches/pull/47/files
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    gettext for nlua modules.
    Fixed typo.
    Some luadoc stuff.
    You can now claim strings and not only systems.
    Set __env/__misn before each function call again
    
    I seem to have misunderstood how this was working. This should fix some crashes.
    Replace remaining uses of Lua globals with Lua environments.
    
    This fixes crashes in the tutorials (and probably other events).
    Revert "Call getfenv in nlua_pcall() eliminating the need to pass the"
    
    This reverts commit 79e36c0c1bbca2aa5fa2922651dd303bc7b87882.
    Call getfenv in nlua_pcall() eliminating the need to pass the
    environment as an argument
    Use new __RW system and nlua_register() everywhere
    Use nlua_pcall() almost everywhere
    Remove __evt and __misn globals after they are used
    Events using common lua state
    
    Still need to fix some things
    Add types to lua api docs, and other documentation improvements
    Make LuaSystem an int instead of struct
    * Minor fix for planet tutorial.
    * Comment.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Wrapper for nsnprintf being used all over.
    * Always delete events when you run evt.finish() (wtf did I not before?).
    * Mention npc id.
    Many, many typo fixes.
    * Using macro for done.
    lua headers are system headers, include them that way
    * Event Lua errors should produce stack traces now.
    * Fixed cases where the "__save" member of a table would cause segfaults.
    * Create warnings.
    * Same for evt.claim().
    * Remove evt.misnStart (superseded by naev.missionStart).
    * Implemented going back to main menu from Lua (from new tutorial module).
    * MAJOR COMMIT - May bring breakage.
    * Removed global variables from nlua_misn.c, nlua_event.c and nlua_hook.c
    * Added tutorial button.
    * No longer segfault when event fails to launch mission.
    * Changed mission error handling for billionth time, should be sane (tm).
    * Changed how we handle the bloody return parameter and friends so it should bloody work (mission_start and mission_init).
    * Fixed issue with starting mission from event and then running hooks.
    * Fixed memory leak.
    * Dangerous commit - changes how mission_start and mission_init work to allow claims to be passed on from event to mission.
    Luadoc fixes.
    Luadoc fixes.
    * Fixed claim functions.
    * Added mission API to claim.
    * Events can now be maybe to save themselves and reload with the evt.save() command.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Removed obsolete mission/event specific timers in favour of the hook.timers.
    * Better error handling for missions and events especially within hooks.
    * Better Lua stack balancing when mission is spitting out errors.
    * Fixing really minor possible segfaults and other misc issues detected with scan-build.
    * Added sample event for random npcs.
    * Fixed minor bug.
    * Added NPC bindings to events.
    * Fixed obscure segfault.
    * More segfault safety.
    * More correctness in code.
    * Events can be unique.
    * Hooks should work with both events and missions now.
    * Luadoc.
    * Fancy new event system seems to work now.
    * Added some event only API.
    Fixed issue with period not being read.
    Removed some externs.
    Fixed warnings.
    Fix memory leaks in sysedit and avoid loading empty tech groups
    Added some functions to tech.c to facilitate tech editing.
    * Reduced code by grouping the tech search for items stuff.
    * Added ability to search for comodities.
    * tech_getShipArray header.
    * Added concept of tech group pointer.
    * Added API to handle arrays of techs.
    * Moving unidiff to new tech system.
    * Fixed tech loading.
    * Fixed tech saving.
    * Added test tech.
    * Loading outfits from tech group now.
    * Tech stuff should load and write properly now.
    * Tech should free properly.
    * Added stuff to get outfits from tech.
    * Initial commit of tech stuff.
    Use new __RW system and nlua_register() everywhere
    Rename Lua_article to LuaArticle and make it an int instead of struct
    Fixed some lua
    Added WIP Lua and saving/loading
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    gettext for nlua modules.
    Use new __RW system and nlua_register() everywhere
    Make background script use global lua state
    Correction to my earlier library loading hack; use it in evt and misn
    
    I forgot about this...
    Run console in global lua state
    Add types to lua api docs, and other documentation improvements
    Replace LuaColor with glColor
    * Made all the colours constant as they should be.
    lua headers are system headers, include them that way
    * Allow creating a new colour from an old one.
    * Fixed bug in colour __eq.
    * Luadoc.
    * Change colour load priority.
    * Added Lua Colour module.
    Make pilot_cargoAddRaw ignore free space
    
    This fixes an issue where the player's cargo could be lost on load. If
    a player had n tons of cargo and then reduced their capacity below n
    and quit, on next load they would lose any cargo over the limit, with
    mission cargo being handled no differently.
    
    As a side note, pilot_cargoAdd now takes a mission ID parameter, and
    most calls to pilot_cargoAddRaw have been replaced for safety.
    Remove trailing spaces in src/
    * Oops, forgot files (like always).
    Use glad instead of galogen
    
    Similar idea, but a more major projects that, among other things,
    handles hhrplatform.h.
    Fix render bugs on the system edit background grid
    replaced some sprintf with nsnprintf.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Removed common showing outfit code and unified in src/land_outfits.c
    Temporary moved slottypes to ImageArrayCell.
    Abstracted image array stuff to cell where it is possible to set alt text.
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Fixed the rest of the text colors.
    removed tabs
    warnings
    Warning.
    Removed the ugly uses of cDConsole as a color for headers.
    
    Replaced those all with black; headers don't need to be a different
    color and it honestly looks nicer without one.
    Fixed dependence on now deleted function, changed how ast exclusions show.
    Use shader to draw smooth circles
    Added support for exclusion zones.
    
    I also had to clean up some code (magic numbers in particular, replaced
    with an enum). There is an example exclusion zone in Lapis.
    Added display of asteroid fields in sysedit
    Replaced the polygon definition of asteroid fields with simple circles.
    
    I kind of get why it was implemented that way: you can define all kinds
    of wacky shapes real easily. But in the vast majority of cases don't
    need that, and it makes defining asteroid fields needlessly complicated.
    In the few cases where complicated shapes might be needed, it's easy
    enough to approximate shapes with a series of circles.
    
    The code is much simpler, too.
    
    Display in the map editor has been removed at least temporarily.
    Hopefully should add it back in later.
    Remove SDL1 compatibility -D CLAGS, and sed so they aren't used
    Remove all C code meant to support SDL < 2.0.0
    SOLVED #826 : removed debug logs after issue is solved
    Debug log on dev_sysedit and dev_system
    Added support for non-convex fields by drawing subsets.
    Render Icon + Triangles-Fan + Marker ; Non-OK for non-convex fields
    Streamlined the asteroid render function.
    Adjusted indicator triangle position, size and orientation.
    Fixed bug : use of VBO : must be created and destroyed...
    Bugged take at displaying asteroids fields in the System Editor
    Make all buttons for closing editors labelled "Exit" with shortcut "X"
    
    Universe Editor
            src/dev_uniedit.c
    
    System Editor
            src/dev_sysedit.c
    Make all buttons for closing editors labelled "Exit" with shortcut "X"
    
    Universe Editor
            src/dev_uniedit.c
    
    System Editor
            src/dev_sysedit.c
    Changed escape code for colors from '\e' to '\a' so xgettext plays well with it.
    More gettext.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    corrected a crash, added radar display of asteroids and display on map editor
    Replace memcpy with struct assignment
    Strip trailing whitespace
    Memory leak fixes
    Add support for SDL2 mouse wheel events
    Modify the economy updating model
    
    Galaxy-modifying functions (adding or removing planets, etc.) now only
    queue an economy update, with the caller being responsible for running
    the update via economy_execQueued.
    
    The main benefit is that diffs now only cause one economy update, when
    they prevously did an update for each jump or planet. Economy updates
    were the single largest time-sink when loading, particularly if a
    diff cleanup was necessary.
    Add a circle representing system radius to sysedit
    Improved handling of saves with invalid locations
    Have system editor respect autosave setting
    
    Note that renames explicitly ignore autosave, because the renaming process
    immediately writes files to disk.
    Further keyboard improvements for the editor
    Improve keyboard usability in the editor
    Fix memory leaks in sysedit and avoid loading empty tech groups
    Fix a memory leak when generating asset tech lists in sysedit
    Fix an invalid read and several memory leaks in the editor
    Changed planet classes from enum to plain strings.
    
    The Naev engine wasn't doing anything in particular with explicitly
    defined classes. If anything were to be done, it would be in Lua,
    and that only sees strings anyway. Just changing it to strings makes
    it more flexible without losing anything.
    * Added a check box to the galaxy editor for automatically saving changes.
    * Reworked the jump point unidiff format.
    ** All jump point parameters are now attributes, not subnodes, in keeping with the existing unidiff syntax.
    ** x and y parameters are optional, if omitted the jump point will be auto-positioned.
    ** hide parameter is optional.
    ** type parameter is optional and can be either "hidden" or "exitonly".
    * sizeof(char) is always 1. No need to keep it around.
    * Memleak fixes and code clean up.
    * Fixed position of hide box in the planet editor.
    Refactored the planet service editor's list generation a bit.
    Teeny optimization.
    * Reduced the input filter for description widgets.
    Properly recalculate presences and update the uniedit sidebar.
    Filter planet names when attempting to delete their XML files.
    * Custom widgets must not bend down to the all encompassing "mouse functions return 1 if event is blocked".
    * Sanitized more toolkit return parameter for function pointers.
    Purge the braces!
    * Save planets after dragging them to a new position.
    * Save newly created planets.
    * Planet name is now shown in edit window header.
    * Sanity checks and such.
    Fixed some renaming bugs and reduced duplicate code.
    * New planets get a nonzero radius.
    * Update radius when updating gfx.
    * Moved various path defines into ndata.h.
    * New planets get a nonzero radius.
    * Comments.
    Clean-up and fixed some minor renaming bugs.
    * Wrapper for nsnprintf being used all over.
    * Okay, so you use strdup to do that. Right.
    * Hacked up a semi-functional multi-line input widget.
    * Cursor doesn't properly follow the text.
    * Gloriously blows up because of bad memory management.
    * Comment.
    * Added basic system properties to the system edit dialog.
    save moved planets
    save more.
    save planet after rename
    save assets using laid out structure
     - changes appear immediately on disk
    Recalculate presences when changing things in the editor.
    * Sanified zooming in the editor.
    * Moved default hide values for assets and jump points into defines.
    Fixed jump default hide and added planet default hide in the editor.
    Fixed the squaring and sqrt-ing of values in the editor.
    Fixed jump default hide and added planet default hide in the editor.
    Fixed the squaring and sqrt-ing of values in the editor.
    * Freeing memory but forgetting to set pointer to NULL leaves garbage.
    * Minor formatting.
    // comments are inferior. Bow down to the /* */ master race.
    appease the bobbens
    move faction header back into .c
    change // to /* */
    * Made all the colours constant as they should be.
    * Increased grid size to 1000. Makes more sense with big systems.
    * Made it easier to select stuff.
    * Minor cosmetics.
    * Fixed bug where jump point flags don't get cleared properly.
    remove jump point type in favor of flags
    checkboxes can be unchecked.
    jumps can return to normal type
    checkboxes are pretty
    * Actually sort graphics by name when choosing in planet editor.
    * whitespace paranoia.
    removed all traces of the onMap system
    * Can double click to edit jumps.
    remove a jump point type
    a highway jump point is just a regular one with a hide value of 0.
    this simplifies things a bit.
    jumps have 3 onMap options.
    0 - not visible on map
    1 - visible on map, no data about target
    2 - visible on map, target system is potentialy known
    editor can edit jump properties
    whitespace
    editor handles additional planet properties
    * LLVM fixes.
    * Added planet.getLandable().
    * Refactored code.
    * Cleaned up code.
    Free tmp after using.
    Added tech editing to the planet editor.
    Don't run faction_name or areEnemies on invalid factions.
    Don't run faction_name or areEnemies on invalid factions.
    Added a button to the planet description window; Luadoc.
    Added a window to the planet editor for displaying planet descriptions.
    Colourize the background of the current landing or space image.
    When saving the land graphic, also modify the planet's gfx_exterior so the graphic is immediately usable.
    Double-click opens the planet editor.
    Whitespace, typo and general style cleanup.
    Get the appropriate type instead of casting ints (which may overflow and cause a mess).
    Save the edited planet implicitly, rather than explicitly.
    * Switched around service lists for convenience.
    Save and restore list positions when adding and removing services.
    Do a two-pane layout for planet services instead of using a superfluous child window.
    x * y+z != x * (y+z)
    Added a proper planet editor to the system editor.
    Many, many typo fixes.
    * Create new planets in the editor centered in the screen.
    * Show system radius at the bottom of the system editor.
    * Fixed scale button issues and more informative error messages.
    * Added some minor checking if player scales by weird values.
    * Allow scaling of systems in the system editor.
    * System editor can now zoom out to 100x.
    * Fixed rendering of dev_sysedit.c
    * Fixed another rendering bug.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Should fix segfault due to system editor not expecting non-planet images in the planet image section.
    * Fixed segfault in system editor when creating a new planet.
    * Load planet graphics on demand.
    * New planets are real not virtual.
    * Do not render nor select non-real assets in the system editor.
    * Auto select used planet graphic.
    * By default system editor should be maxed zoom out.
    * Grid is now toggleable.
    * Made grid colour in system editor darker.
    * Added 500x500 grid in the system editor.
    * Fixed mouse position reporting.
    * Fix segfault.
    * Indicate cursor position in the system editor map.
    * Display system name in system editor title.
    * Apply closes planet property editor.
    * Fixed saving new graphics for planets.
    * Added graphical editor for planet graphics.
    * Reorganized buttons a bit.
    * Fixed double free in the GFX button function in the system editor.
    * Buttons are now context sensitive in the system editor.
    * Terribly hacky way to make the planet Class tag non-empty for new planets.
    * Terribly hacky way to change a planet's appearance in the editor.
    * Quickly hacked in some functionality for btaxis.
    * Fixed issue with planet saving.
    * Initial commit of planet saving code.
    * Fixed bug with selecting a planet/jump multiple times.
    * Display text under stuff in the system editor map.
    * You can now add new planets.
    * Removed annoying AUTPOS dialogue.
    * You can see selection in system editor now.
    * Changed all mouse zoom models.
    * Default zoom in system editor is 2x amplification.
    * Handle selected stuff in the system editor.
    * Handle autopos jumps in the editor.
    * You can now drag both jumps and planets around.
    * You can drag planets around.
    * Added API to handle selection in the system editor.
    * Sysedit should not zoom map.
    * You can see stuff now in the system editor map.
    * Renamed sysedit uniedit.
    * Added sysedit for actually editting the interior of the systems.
    * New systems have a default radius.
    * You can now rename systems in the editor.
    * Have buttons and hotkeys only work when actions make sense.
    * Added base for system property editor.
    * Added rename binding.
    * Fixed memory leak when renaming names collide in the editor.
    * You can now rename systems.
    * Give new systems default star values.
    * Added some keybinding support to the editor.
    * Adding and removing jumps in the editor seems to work.
    * Reconstruct jumps when closing the editor.
    * Automagically select new system when creating one.
    * Added overlay to system editor.
    * Should fix a possible segfault.
    * Fixed memleak introduced last commit.
    * Avoid name collisions when creating new systems.
    * You can now add new systems.
    * You can now see selected systems in the editor.
    * Fixed segfault in the editor related to system removal.
    * Unapply unidiffs before entering the editor.
    * Click select+drag works.
    * Do not start dragging when CTRL clicking.
    * Implemented save button.
    * Better handling of removing last selected system.
    * Should fix selection bug.
    * Changed selection wording.
    * Selection and dragging seems to work well, however you can't really see what's selected yet.
    * System editor behavers more like the map now.
    * The editor has colours and the likes now.
    * Editor should render systems and shouldn't segfault anymore.
    * You can now enable devmode, which does absolutely nothing \o/.
    * Add a bit of custom widget infrastructure for the system editor.
    * Added basic sysedit files.
    Renamed "dumb"/"dumbfire" rockets to "unguided".
    
    The term "dumbfire" (which doesn't seem to be in common use outside
    of a select few video games) comes from the term "dumb", which is
    ableist on two counts: firstly, it's sanist because the meaning
    "dumbfire" is derived from is "stupid" or "of low intelligence".
    Secondly, the term "dumb" actually originates from ableism against
    mute people, albeit in the German language rather than English.
    
    The term is imprecise, anyway, so I've changed it to the more precise
    and non-ableist term, "unguided".
    Implemented ammo_capacity ship stat.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Fixed bracket placement.
    remove the ugly mass hack in bomber ai
    Corrected calculated range with dumbfire rockets.
    
    They have relative velocity like bolts. Added a check to account for this.
    Replaced dockslot with index int.
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Modified the way escort launching is controlled so it can be monitored in real-time.
    
    The previous method was clunky and didn't allow monitoring changes
    to how many escorts you have deployed in real-time very well. So this
    is a HUGE overhaul in how that whole thing works. It solves a bug that
    prevented you from getting new fighters when your old fighters were
    destroyed, while still limiting how many you can launch at once.
    added the miners faction
    made mining more user-friendly
    gettext for pilot stuff.
    More clang warning fixes.
    Reverted 63960aa and 60540c2.
    
    These changes collectively caused outfits to have shorter cooldown
    periods when you didn't use them as long. But this change was made
    with the intention of also adding 6a4bf10, which was rejected upstream.
    Without that, all this does is create an advantage to doing several
    short bursts of activating the outfit, or even having some sort of
    keyboard macro do it for you. I don't think there's any possible
    reason to want to implement this kind of thing on purpose.
    Made the AI wider use missiles
    Made the AI handle the afterburner
    Changed the inrange computation method
    Fix a crash when beams persisted after pilot death
    
    I believe this was due to improper handling in pilot_outfitOff, but
    I've added a check for paranoia's sake in pilot_stopBeam as well.
    
    The outfit_* functions used in pilot_outfitOff return -1 for beams,
    so a sufficiently-negative stimer turns into a large positive value,
    which is presumably what kept the beams going after pilot destruction.
    Cancel active cooldown when firing weapons.
    Rework beams in accordance with the Beam Revamp proposal
    
    Beam refire delays now scale with how long they're fired, relative to
    their maximum duration. They can only be fired again once they reach
    full charge, however.
    Replace hard-coded ammo AI types with an enum
    Reapply ammo mass fix that was clobbered by a bad merge (1d285e35)
    
    Ammo is now added to ship mass as it should be, and subtracted when
    fired.
    Use XML-sourced weapon group in autoweap
    
    The lowest weapon group that an outfit appears in is cached, as it will be
    returned through Lua for use by the GUI
    Disable only the current weapon set's active outfits
    Ignore empty fighter bays when firing a weapon set
    Fixed most outfits being broken by a recent change.
    
    More specifically, I didn't realize that o->stimer could be
    "infinity" and that most outfits have it set to this. This was
    causing a problem with the formula I was using, understandably
    (in real math, the result would be infinity, though apparently the
    result in this case was "-nan"; either way, it's a problem). This
    has been fixed by only using the new formula if o->stimer is not
    INFINITY, and otherwise using the old way of just using the full
    cooldown every time.
    Fixed stats not being recalculated when outfits turned off.
    
    This was driving me nuts: the "emergency" shield booster worked
    while it was cooling down if you deactivated it early because of
    this, and worse, it kept draining your shield when deactivated while
    landing, making you stuck there if there wasn't an outfitter on the
    planet! It's fixed, now; there were a couple places where stats
    weren't being recalculated where they should have been.
    Make deactivating an outfit early cause a shorter cooldown.
    
    Previously, deactivating an outfit early caused you to have to wait
    for the full cooldown. This doesn't make sense. I changed it to make
    the cooldown amount proportional to the time the outfit was running.
    Made comments gender neutral, for accuracy
    Replace pilot equality checks with pilot_isPlayer() macro.
    Active outfits should be disabled and not toggleable when a ship is disabled.
    Typo fix.
    Remove sseveral ssuperfluouss Ss and add them to this commit messsage.
    Some say that sanity checks should go first.
    Refactored the afterburner patches a bit.
    * Scripted temperature thresholds for afterburners.
    * Afterburners support start, on, and end sounds.
    * Still needs to be done via the generic activated outfit framework.
    * Comment.
    * Added a sound for afterburner disengage.
    * Small number tweak.
    * Some code for heat on afterburners. Todo:
    ** Show afterburner heat.
    ** Don't toggle afterburner when used via weapon group.
    * Added jump scanner to techs.
    * Afterburning aborts autonav.
    * Jammers report positive CPU need.
    * Jammers use energy_loss, not energy_regen.
    Re-add proper afterburn shake - seems wonky, though.
    afterburners are more closely integrated with active outfits.
    pilot_outfitOffAll() call site
    moved outfit off code into functions
    afterburners actualy burn when activated by weapon group.
    abstracted player_afterburn for all pilots
    afterburners actualy burn when activated by weapon group.
    abstracted player_afterburn for all pilots
    * Fixed weapons.
    * Should fix segfault in some situations with empty weapon sets.
    * Be more explicit about fire group handling for primary/secondary.
    * Simplified code a bit.
    * Removed unneeded superfluous code.
    * Jammers now work.
    As multiple launchers can share the same ammo type, handle launchers when creating weapons, not ammo.
    * OK, so outfits *seem* to work, but there's shit that still needs to get ironed out.
    * Active outfits should work, needs testing.
    * Doxygen.
    * Changing weapon set type crushes level settings.
    * Only change weapon sets can actually have non-0 level.
    * Don't abuse the API.
    * Report if a weaponset is unused, makes more sense.
    * More work in the path of getting it all working.
    * Moving to new weapon set type things, halfway there.
    * Cheat sheet in comments.
    * LLVM.
    * Improved deactivate modification logic.
    * Active outfits should stop if out of energy.
    * Active modification outfits should work, just don't think you can set them.
    * Prepare to handle active stuff.
    * Initial commit of ship stats, doesn't really do anything new yet.
    * Actually make secondary weapon check check the secondary weapon bit.
    * Weapon set auto-handle now sets secondary weapons according to the secondary flag in XML, not according to weapon type.
    * Lockon should be implemented.
    Whitespace, typo and general style cleanup.
    Many, many typo fixes.
    * No shooting while doing hyperspace procedures.
    * Fixed fighter bays not launching.
    Remove trailing spaces in src/
    It's its not it's
    * Fixed new gcc -Wunused-but-set-variable warnings.
    * Fixed loaded game indicate weapon is primary when it is not.
    * Cleaned up Deiz' inrange stuff.
    inrange works independently of autoweap.
    * Fixed minor bug.
    * When you remove an outfit your weapon list gets sanitized.
    * Launchers also distribute shots among launchers.
    * On load of player ships, set weapon set to default one.
    * Properly display weapon set information upon loading.
    * Weapons only shoot when in range by default.
    * Weapon sets will do heat load balancing.
    * More CLANG fixes.
    Separated out rate modifier code into its own function.
    * More comments and documentation for weapon sets.
    * Explicitly set all weapon modes.
    * Typo.
    Fix secondary weapons and leftover slot level inheritance.
    * Removed DEBUGs that shouldn't be there.
    * Fixed weapon sets changing when they shouldn't.
    * Fixed memory leak.
    * Fixed Clang report.
    * Fixed implementation, feels totally wonky though.
    * Implemented accuracy and fire rate mods for heat.
    * Launchers and bolt weapons add heat now.
    * Fixed broken weapon set switching.
    * You can now hold fire groups and they will shoot.
    * Fixed segfault.
    * Weapon sets should not be nameless.
    * Fixed segfault.
    * Weapon sets should not be nameless.
    * Fixed corner cases in need of updating.
    * Added functionality to get all the onboard weapons.
    * Fixed typo.
    * You can set fire mode for weapon sets now.
    * Only add weapons to weapon sets.
    * Cleaned up all secondary stuff, moved to different secondary weapon system.
    * Simplified code.
    * You can now modify your weapon set.
    * Visual indication of weapn slots.
    * Create weapon set window (not usable yet).
    * Weapon sets can have names now.
    * FIxed weapn range calculations.
    * Calculate weapon set ranges.
    * Minor improvements to the auto weapon set function.
    * Autoweapo more.
    * Weapon sets are somewhat working for NPC now.
    * Set default weapon modes.
    * Fixed compilation.
    * Start to create function to auto set the weapon sets.
    * Implemented weapon levels and fixed shootStop.
    * Some clean up and the likes.
    * Some clean up to try to move to the new weapon set system.
    * Clean up and code moving.
    * Forgot files in the last commit.
    Improved string handling in the map editor.
    dos2unix
    Add a Map Outfits Editor for selecting/unselecting entire systems
    
    Add the Map Editor window
            src/dev_mapedit.c
            src/dev_mapedit.h
            src/Makefile.am
    
    Add file name and description parameters to dsys_saveMap()
            src/dev_system.c
            src/dev_system.h
    
    Remove Save Map button from Universe Editor
            src/dev_uniedit.c
    
    Add an intermediate menu for Universe and Map Editors, that could accomodate other future editors
            src/menu.c
            src/menu.h
    Add a Map Outfits Editor for selecting/unselecting entire systems
    
    Add the Map Editor window
            src/dev_mapedit.c
            src/dev_mapedit.h
            src/Makefile.am
    
    Add file name and description parameters to dsys_saveMap()
            src/dev_system.c
            src/dev_system.h
    
    Remove Save Map button from Universe Editor
            src/dev_uniedit.c
    
    Add an intermediate menu for Universe and Map Editors, that could accomodate other future editors
            src/menu.c
            src/menu.h
    player.cinematics() will also close the overlay.
    * Fixed overlay markers not behaving properly.
    * Added support for point markers on the overlay map.
    * Autonav to a position works.
    * Refresh the map overlay when player changes system.
    * Added some initial stuff, nothing interesting yet.
    Use new __RW system and nlua_register() everywhere
    Make LuaFaction an int instead of struct
    Minor fixes and dead code clean-up.
    Use ints (factions) instead of LuaFactions where possible, added luaL_validfaction.
    lua headers are system headers, include them that way
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Made some nlua naming consistant.
    * Added luaL_checkfaction.
    * Luadoc.
    * Doxygen.
    * Doxygen fixes.
    * Added the faction metatable and stuff to use it.
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    gettext for nlua modules.
    Use new __RW system and nlua_register() everywhere
    Run music scripts in global lua state
    Correction to my earlier library loading hack; use it in evt and misn
    
    I forgot about this...
    Run console in global lua state
    Add types to lua api docs, and other documentation improvements
    * Commentaries.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Combat music plays for at least 15 seconds.
    * Added API to get time elapsed in song.
    * Made some nlua naming consistant.
    * Fixed warnings.
    * More Lua hardening.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Luadoc.
    * Implemented more tags in Luadoc.
    * Using own taglet now.
    * Luadoc.
    * Split Lua music functions from C music stuff.
    Fixed some Lua documentation.
    
    Some things were documented wrong or poorly, so I've improved that.
    Also found and fixed a possible segfault along the way (where it
    tried to free something that could be NULL; fixed by simply checking
    if it's NULL before freeing).
    Fixed several strings and lack of gettext usage.
    Added npc person to give economy information, which then gets added to the player's knowledge.
    Working on adding a person in the bar to give economy information
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    gettext for nlua modules.
    Use new __RW system and nlua_register() everywhere
    Add types to lua api docs, and other documentation improvements
    Replace LuaCommodity with Commodity
    Correct commodity.get() luadoc example
    src/nlua_commodity.c: Grammar fix of Warning msg
    Update a number of the luaL_valid* functions to support strings in addition to their native data types.
    Many, many typo fixes.
    Remove trailing spaces in src/
    lua headers are system headers, include them that way
    * Luadoc.
    * Added API to get price at a system (both C and Lua).
    * Added commodity metatable.
    spfx uses array framework.
    whitespace
    Fixed crashing when critical files not found.
    Fixed error messages referring to wrong file when not found.
    Made it so that even if critical files are not found, the game tries to load.
    Remove wrappers around legacy OpenGL matrix functions
    Remove all C code meant to support SDL < 2.0.0
    More gettext fixes and translations.
    More gettext.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    * Initial work to get everything running on SDL2.
    * New planets get a nonzero radius.
    * Update radius when updating gfx.
    * Moved various path defines into ndata.h.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Many, many typo fixes.
    * Changed spfx load memory model.
    * Enforce a minimum fps for the update of the rumble simulation.
    * Use real_dt when updating haptic devices not dt.
    * More tweaks to rumble.
    * Tweaked rumble as per KAHR-Alpha's suggestions.
    * Cosmetics.
    * Tweaked parameters for shake.
    * New shake model (based on spring and dampener).
    * Fixed bug with shake model projection.
    * Do not clear rumble when pausing.
    * Using gl_viewport for rumble.
    * Removed unused variables.
    * Smoother transition out of rumble.
    * Rumble is slower (shouldn't induce spasms anymore).
    * Stricter pasrsing of spfx.xml.
    * Minor correction.
    * Correctness with haptic.
    * Fixed spfx.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Default matrix mode is now GL_PROJECTION. No longer need to always change.
    * Animations were backwards.
    * Faster memory allocation algorithms.
    * Fixed more potential bugs.
    * More bugs detected with scan-build.
    * Fixing really minor possible segfaults and other misc issues detected with scan-build.
    * Increased allocation values to try to make game more fluid with higher numbers of pilots.
    * Make reticles be on target when paused.
    * Targetting reticles "rumble".
    * Fixed some rumble issues.
    * Fixed rumble on strange resolutions.
    * Rumble corrections.
    * Nebulae is plural, changed it all to nebula.
    * Made savegame more robust when loading inexistant missions.
    * Added gl_renderRect.
    * Removed more glBegin and friends.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Debris implemented.
    * Make rumble half as strong on the GUI.
    * Fixed memory leak.
    * Don't try to start haptic subsystem when there's no joystick.
    * SPFX no longer hardcoded.
    * Converted last sprintf to snprintf.
    * Made force feedback system a bit more robust.
    * Should compile with SDL 1.2 again.
    * Improved force feedback system.
    * Made force feedback a bit more sophisticated.
    * First simple implementation of force feedback.
    * Tweaked entire rumble system.
    * Pilot death explosions now give knockback and rumble as expected.
    * Lowered the velocity of the rumble.
    * Added flags to image creation to control transparency mapping.  Should speed up theloading some and reduce memory usage.
    * Gave plasma a special effect.
    * Added and using shield hit graphics.
    * Some code clean up.
    * More doxygen.
    * Added sanity check to spfx_add.
    * Render spfx in reverse order.
    * Fixed bug when exiting with rumble not cleared.
    * More doxygen and code cleanup.
    * Tweaked the rumble even more.
    * Weakened the rumble effect.
    * New nice fancy cargo graphic for when jettisoning cargo.
    * More memory related fixes.
    * Fixed some memleaks.
    * Rumble can no longer "leak" over to menus and such.
    * Lowered the effects of rumble a bit.
    * Rumble no longer affects nebulae.
    * spfx_clear() also clears rumble now.
    * Switched SPFX timers to something more sane.
    cosmetic patch -> gl_screen.[wh] = SCREEN_[WH] in most places
    split cinematics mode to spfx
    get ready to... RUMBLE!  (added rumble for afterburning among others)
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    fixed segfault bug
    fixed another couple bugs
    branch:      naev
    added some code to hopefully help prevent dt intervals that are too big
    branch:      naev
    enemy pilots can now die
    branch:      naev
    simplification of spfx_destroy (and speedup)
    branch:      naev
    you can define spfx per outfit, fixed major memory issue
    branch:      naev
    added explosions with a primitive special effect system
    Added the capability for "black market" planets.
    
    Quite simply, a "black market" planet ignores licenses: the player
    can buy anything from a black market planet, regardless of what
    licenses would normally be required. Black market planets are
    indicated by the <blackmarket/> XML tag.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    * Code clean up, making internal functions static.
    * Moved land button sizes to be global and not local to reduce copying.
    * Move shipyardstuff out of land.c in a first attempt to thin land.c.
    Give pilots access to space
    Replace jump_getTarget() with JumpPoint.returnJump where appropriate.
    
    Hurray for less looping!
    Don't allow the ship computers to access info the player doesn't have
    
    Namely,
    1. AutoNav shouldn't disable until a hostile ship's identity is no longer hidden
    2. Targeting hostile ships shouldn't select ships who's identity is hidden.
    Implemented ammo_capacity ship stat.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Potential unused variables.
    fixed lua pilot.face
    Removed recommendations to use `_` as a variable.
    
    `_` is used by gettext, so using `_` as a throwaway variable name
    can mess things up. Instead something like "i" should be used.
    Made nodisable and nodeath compatible
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    added the possibility for the manual control AI to shoot while landing
    Replaced all references to SCU/STP/STU to cycles/periods/seconds.
    
    This unifies the code with the in-game dialog and should hopefully
    prevent confusion regarding what terms to use.
    
    (Recap: these abbreviations were removed from in-game use long ago
    due to confusion that is likely to happen as a result of them looking
    similar.)
    Warnings.
    Removed some unused variables.
    More music fix
    Fixed friendly/hostile setting.
    
    The previous system was very hodge-podge and had a lot of duplicated
    checks, leading to some inconsistent behavior. I've consolidated all
    checks to the setHostile / setFriendly / isHostile / isFriendly
    functions.
    
    This fixes a bug where a pilot that was set as friendly but became
    hostile due to aggression was impossible to target with the "target
    nearest hostile" button.
    Revert "remove friendly flag when setting hostile flag and viceversa."
    
    This reverts commit 6627951afe6dd223ff3475a24275f9cfe8884296.
    
    Silly bobbens, tricks are for kids.
    remove friendly flag when setting hostile flag and viceversa.
    Fixed several strings and lack of gettext usage.
    First pass at putting jam functionality into scramblers.
    
    It doesn't work right. The numbers are wrong. Need some help on that.
    Fixed clang warning ("&vp != NULL" evaluates always to true anayway)
    Fix ldoc build
    Fixed up the Brushed GUI to show weapsets properly.
    
    A few things are a part of this:
    
    1. The Lua API didn't support grabbing the current weapset ID (only the
       name), so I added this to the Lua API.
    
    2. There was a bug in the weapset value of activated outfits caused by
       a variable not being initialized at the start, which led to unassigned
       activated outfits being listed as an arbitrary slot (1 in all cases
       that I saw but it seems that value isn't a guarantee in any way). Fixed
       that by initializing the weapset variable of structurals and utilities
       when pilots are created.
    
    3. Activated outfits in weapset 10 now show up as "0" instead of "10" (matching
       the key it is assigned to by default).
    
    4. The ID of the current weapon set is shown next to the radar; weapon set 10
       is shown as "0" for the same reason as for activated outfits.
    
    5. Only weapons in the current weapon sets are shown now.
    Fix pilot.land() without planet argument; matching description
    Replaced dockslot with index int.
    Switched dockpilot to id based.
    Fixed the problem with escorts (I think).
    
    Not tested thoroughly yet, but I think this should fix the problem of
    escorts causing segfaults when their origin ship dies. A cursory test
    shows that this seems to work.
    
    This also causes pilot.setLeader to remove "deployed" status from the
    origin ship.
    Modified the way escort launching is controlled so it can be monitored in real-time.
    
    The previous method was clunky and didn't allow monitoring changes
    to how many escorts you have deployed in real-time very well. So this
    is a HUGE overhaul in how that whole thing works. It solves a bug that
    prevented you from getting new fighters when your old fighters were
    destroyed, while still limiting how many you can launch at once.
    Make everything fuel related an int
    Tag everything related to fuel and using double with DELETETHIS_
    changed the way pirates and FLF spawn
    changed the way spawn position is chosen
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    gettext for nlua modules.
    Changed escape code for colors from '\e' to '\a' so xgettext plays well with it.
    Make pilot.hyperspace() push a jump userdata as the task's target
    Fix bug in pilot.land() caused by 0d1ca1d1d359064cd213c2c3e8ecb8d7dfdb2fb9
    Remove unused SystemFleet
    Use messaging API to command escorts
    Do not persists escorts set through Lua
    Remove PILOT_ESCORT flag
    
    Not used; can just test ->parent against 0
    Try to start merging leader concept into escort system
    
    Remove p->leader, and set p->parent and p->escorts
    Make pilot.setLeader() accept nil
    Fix pilot.follow()
    Make addRaw() return pilot, instead of single element table
    Make pilot.msg() accept a table of recievers
    Fix pilot.msg() bug
    Remove now unused variables
    Remove comm handlers for now
    
    This wasn't a very clean way of doing thinks, and is separable from the
    other messaging code. This can be done later.
    Replace pilot.handleMsg() with ai.messages()
    Setting the leader should also set the leader of all followers
    Whitespace fix
    Test if leader->leader exists in pilotL_setLeader()
    Fix/improve Lua docs
    Implement pilot.setLeader() pilot.leader() and pilot.followers()
    
    This, plus the messaging API, should be just enough to allow fleet AI.
    Add optional "cond" argument to commRegister()
    Implement pilot.commRegister()
    Messaging API; still semi-broken
    Replace pilot.memory() and pilot.memoryCheck() with one function, taking
    advantage of the single Lua state.
    Remove TaskData, now that everything is in one Lua state
    Use new __RW system and nlua_register() everywhere
    Fix __RW handling and use it for pilot API
    Compiles now; runtime errors (and still  only ai.c)
    Fix memoryCheck() and memory() when called from same Lua state as AI
    Add types to lua api docs, and other documentation improvements
    Fix various param issues LDoc (appropriately) warns about
    Remove vectcpy(), and replace it with simple assignments
    Make LuaSystem an int instead of struct
    Replace LuaColor with glColor
    Make LuaFaction an int instead of struct
    Replace LuaOutfit with Outfit*
    Make LuaPlanet an int instead of struct
    Replace LuaShip with Ship*
    Use Vector2d instead of LuaVector
    Make LuaPilot an int instead of a struct, simplifying things
    Remove ai.incombat() and add combat to pilot.flags()
    Expose manual control status via pilot.flags()
    Expose manual control status via pilot.flags()
    Remove pilot.player() function, as it is a duplicate of player.pilot()
    tried to explain better the effect of the parameters
    draft of pd controller
    bugfix
    Combine ai_extra.h into ai.h
    
    Use forward declaration of struct to deal with cyclical import.
    Replace some ai functions with pilot.flags()
    Strip trailing whitespace
    Make pilot.flags() support more pilot flags
    * Round instead of floor the crew.
    Added crew stat to the Lua API.
    
    This can allow custom boarding code to take advantage of this number.
    I was in particular thinking of using it for the bounty missions, but
    it could be used in other places too.
    All Lua API functions should take and return degrees, not radians
    Improve pilot.weapsetHeat() Luadoc
    Add a boolean param to pilot.setFriendly() and pilot.setHostile()
    
    Note that the friendly flag is largely ignored by the AI, which will
    remain hostile if the player has shot it or is hostile on a factional
    basis.
    Update the equipment tab when adding/removing outfits from the player's ship
    Prevents pilots from randomly jumping in via hidden jumps
    
    Also fixed the behaviour of ignore_rules so that it actually works,
    rather than always forcing pilots to take off from a planet.
    Add pilot.spaceworthy() to the Lua API
    Return cooldown braking status in pilot.cooldown()
    Make pilot_cargoAddRaw ignore free space
    
    This fixes an issue where the player's cargo could be lost on load. If
    a player had n tons of cargo and then reduced their capacity below n
    and quit, on next load they would lose any cargo over the limit, with
    mission cargo being handled no differently.
    
    As a side note, pilot_cargoAdd now takes a mission ID parameter, and
    most calls to pilot_cargoAddRaw have been replaced for safety.
    Luadoc for charge in pilot.weapset()
    Rework beams in accordance with the Beam Revamp proposal
    
    Beam refire delays now scale with how long they're fired, relative to
    their maximum duration. They can only be fired again once they reach
    full charge, however.
    Add jumps to pilot.stats()
    Add damage absorption to the pilot.stats() table
    Luadoc for pilot.actives() change
    Sort active outfits by their lowest weapon groups
    Internal thrust needs to be divided by mass, not sqrt()'d
    Change pilot->cpu to an int.
    This avoids the player being told they have -0 CPU and can't fly their ship.
    * Return the real thrust value, not the squared value.
    * pilot.stats() now reports fuel consumption.
    refactor the lua call for limiting a ships maximum speed
    add a lua call to limit a pilots speed
    * Lua scripts may now use warn() to print to console and stderr.
    * pilot.rmOutfit() can now remove all core outfits if passed "cores" as its argument.
    * Added a helper script for quickly equipping a pilot's cores.
    * Reorganized tech.xml a bit, no functional change.
    * pilot.rmOutfit("all") no longer removes required (i.e. core) outfits. This is generally the desired behavior for this usage of the function.
    * Miscellaneous tutorial fixes.
    * Added additional check for outfit to match.
    * Luadoc.
    Correct/remove some comments.
    Added pilot.weaponsetHeat(), for getting the mean and peak heat of a weapon set.
    Implemented in C for performance reasons, due to being called fairly frequently by the AI.
    More unification and integration of the cooldown mechanic.
    * Launchers should now lock on faster.
    * Luadoc
    * Minor correctness.
    Luadoc.
    pilot.cooldown() is read-only, pilot.setCooldown() is for modification.
    * Added a Lua function for manipulating a pilot's temperature.
    * Scripted temperature thresholds for afterburners.
    Added pilot.cooldown() for setting cooldown from Lua.
    Missing @luafunc
    * Added heat to pilot.actives().
    * Slim GUI now shows heat for afterburners.
    Did a ton of HTML clean-up in src/ and the Luadoc templates to be 100% standards-compliant.
    Henceforth, bobbens is banned from editing HTML.
    Line-length pedantry and typo fix.
    * Comment.
    Revert "* Explicitly set player's AI back to NULL when removing manual control."
    
    This reverts commit 37f67e75b1db308b34d3b6025016f236ac2759ba.
    * Follow breaks when target to follow is not available.
    * Follow breaks when target to follow is not available.
    * Typo.
    * Luadoc typo.
    * Added a variant of pilot.face() that ends when the target is faced.
    * Explicitly set player's AI back to NULL when removing manual control.
    * Warn when explicitly setting pilot to jump out EXITONLY jump.
    * free( NULL ); is NOP.
    * Fixed horrible Deiz hack (tm).
    Luadoc fix.
    * Values must be a float.
    * Return turn rate in grad, not rad.
    Fix Luadoc.
    * Afterburners work, double-tap seems broken again.
    * Merge thingy.
    When the param is a faction, there's always only one faction.
    * Jammers seem to work.
    * Replaced more jump_get with jump_getTarget.
    * Minor cosmetics and optimization.
    ai won't go the wrong way down one way streets anymore
    * Made all the colours constant as they should be.
    * Luadoc.
    * Added speed_max to documentation.
    * Typos patch by thilo.
    * Code compiles again.
    * Actives and weaponsets shouldn't overlap.
    * API to get active outfit status.
    * Lazy bobbens can't fix shit.
    * Flip second argument for pilot.inrange(...).
    * You can toggle spawning of specific factions now.
    * Added Lua binding to set invincibility of a pilot towards the player.
    * Implemented jammers as per BTAxis wishes.
    * Properly display stuff with 0. maxes (avoid divide by 0.).
    * Properly display stuff with 0. maxes (avoid divide by 0.).
    * Doxygen.
    * Luadoc.
    * Overwrite default outfits when adding.
    * Use the ship outfit slot as a reference and do not duplicate data.
    * Fixed segfault with fighter bays not having damage types, reported by gartral.
    * Added API to get the list of the outfits a pilot has.
    * Outsource damage types to XML.
    * Note: still buggy.
    * pilot.disable() now uses new infrastructure.
    * Improved pilot.setHealth.
    * Split disable code into a new function, prepare for disable recovery.
    * pilot.setHealth() now handles stress damage as an optional parameter.
    * Fixed the stress from pilot.health().
    * Bobbens fail - fixed broken pilot.health().
    * pilot.health() now returns stress.
    * Using fancy damage struct to prepare for generic disabling implementation.
    * pilot.disable() now uses new infrastructure.
    * Improved pilot.setHealth.
    * Split disable code into a new function, prepare for disable recovery.
    * pilot.setHealth() now handles stress damage as an optional parameter.
    * Fixed the stress from pilot.health().
    * Bobbens fail - fixed broken pilot.health().
    * pilot.health() now returns stress.
    * Using fancy damage struct to prepare for generic disabling implementation.
    * Fixed sloppy coding, reported by green dog.
    * Cosmetics.
    * Should fix segfaults and fun.
    * Added API to get whether or not a missile is in an arc.
    * Added fuel_max as a pilot.stat.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    * Added lockon parameter for seekers.
    pilot.get() takes factions or tables of factions now.
    Removed duplicate pilot colour determination code.
    Many, many typo fixes.
    * Shoot while hyperspacing is not optional and off by default.
    * Added pilot flag so it never dies, but does take damage.
    lua headers are system headers, include them that way
    * Fixed minor memory leak.
    Modify pilot.addOutfit() to allow outfits to be added with fewer sanity checks.
    * Fixed new gcc -Wunused-but-set-variable warning.
    * pilot.hyperspace(nil) should work now.
    * Typo fixing patch by Paul Wise.
    Return -1 for tracking turrets when there's no target.
    * Fixed pilot.memory.
    * Added pilot.memoryCheck.
    * Fixed cases where the "__save" member of a table would cause segfaults.
    * More elegant fix.
    pilot.addRaw() was missing @luafunc
    Fixed a segfault when attempting to make pilots jump into systems with no jump points.
    Don't return internal STU from the Lua API.
    * Added pilot.temp( p ) to get pilot temperature.
    Luadoc
    Return the number of removed outfits with pilot.rmOutfit()
    AI sanity check is no longer necessary in pilot.add()
    Added pilot.addRaw(), an API function that allows pilots to be constructed from ships, AIs and factions instead of predefined fleets.
    Add the boardable flag to the pilot.flags() API function.
    Proper sanity check when attempting to force added pilots to take off in a system without friendly planets.
    * Weapon sets will do heat load balancing.
    * Fixed more uninitialized warnings.
    * More LLVM (scan-build) fixes
    Fixed pilot.cargoRm() and pilot.cargoAdd()
    * Added API to get pilot flags.
    Fixed pilotL_weapset returning incorrect delay percentages when using fire rate modifier outfits.
    Added two new Lua API functions, for enabling or disabling the ability to jump or land for each pilot.
    Added pilot.setActiveBoard(), allowing a ship to be boarded while not disabled; minor Luadoc clean up.
    * Luadoc.
    * Fixed minor parameter handling mistake in pilot.land.
    * Set camera on player setPos.
    * Runaway is jumping by default (under manual control), added nojump variant.
    * cargoAdd and cargoRm only accept positive quantity values.
    * Luadoc.
    * You can now get weapon tracking information.
    * Minor optimization, no need to push nils.
    * Spelling errors.
    * physics.h provides a max speed function.
    * Lower the runge-kutta step when working with high speeds.
    * Using more sane drag function.
    * Bobbens has alzheimers.
    * Added binding for a pilot's navigational targets.
    * Fixed pilot.get().
    Fixed bug that broke parameterless pilot.get()
    * pilot.get() can now get disabled ships too.
    * Update player GUI with manual control land target.
    * Get the ammo damage type for launchers.
    * Luadoc.
    * Get the ammo damage type for launchers.
    * Luadoc.
    * Return weapon type and weapon damage type.
    * Clear weapons too when running pilot.clear().
    * Implemented hilighting of pilots.
    * Optimized blend func a bit.
    * Added support for overriding ewarfare visibility.
    * Fixed Clang report.
    * Changed API a bit for pilot.addOutfit and fixed Clang report.
    * Changed accuracy model caused by heat.
    * Added the heat accuracy and fire rate functions.
    * Added the heat accuracy and fire rate functions.
    * Normalize the temp value of pilot.stats() to be 0:2 value.
    * Fixed compile.
    * Return temperature from pilot.weapslot().
    * Separated the pilot cargo stuff into pilot_cargo.[ch].
    * Renamed some stuff to be more consistant.
    * Luadoc.
    * Luadoc.
    * Need cast to double.
    * Switched around left and left_p in pilot.weapset().
    * Organize outfits by level in pilot.weapset().
    * Display relative ammo also.
    * pilot.weapset(true) is working properly.
    * pilot.weapset(true) is working properly.
    * Added functionality to get all the onboard weapons.
    * Renamed player.secondary player.weapset.
    * Cleaned up all secondary stuff, moved to different secondary weapon system.
    * Added jump delay to pilot.stats.
    Duplicated player.cargoList() in the pilot module, Slim GUI can now indicate whether targeted ships have cargo.
    Luadoc fixes.
    * Renamed max_speed to speed_max.
    * Added max_speed stat for the practical maximum speed.
    * Add mass as a pilot stat.
    * Renamed max_speed to speed_max.
    * Added max_speed stat for the practical maximum speed.
    * Add mass as a pilot stat.
    * Fixed broken pilot.get.
    * Fixed broken pilot.get.
    * Fixed obscure bug with pilot target not being valid.
    * Fixed obscure bug with pilot target not being valid.
    * Code clean up, added concept of autoweap.
    Moved cargo-related API functions out of the player module and into the pilot module. They operate on any pilot now.
    Duplicated player.cargoList() in the pilot module, Slim GUI can now indicate whether targeted ships have cargo.
    Luadoc fixes.
    * Weapon sets are somewhat working for NPC now.
    * Minor optimization.
    Added API functions to get a pilot's hostility to the player as well as the corresponding colour (for consistency).
    * Pilot.dir() is now radians.
    * Player can now be manually controlled.
    * Added API to make a pilot invisible.
    * Made the planet Lua stuff also much more robust vs addition of planets.
    * Made the Lua Systems metatables safe when adding new systems and causing the system array to realloc.
    * Luadoc.
    * pilot.secondary() should no longer segfault.
    * Added function to check if in range.
    * You can now get pilot maximum fuel.
    * Luadoc.
    * Added function to get stats of a pilot.
    * Added function to get lockons.
    * Luadoc.
    * Added function to get nav targets of the pilot.
    * Added "hooks" for target and nav computer changing in the GUI lua stuff.
    * Ready return was inverted for pilot.secondary().
    * Added binding to get secondary weapon of a pilot.
    * pilot.health now returns disabled status also.
    * Added binding to get the target of a pilot.
    * Renamed getHealth and getEnergy as health and energy respectively.
    * Added pilot conditionals (read-only).
    * Renamed getHealth and getEnergy as health and energy respectively.
    * Added pilot conditionals (read-only).
    * Better invalid parameter Lua checking.
    * Added function to check faction of a pilot.
    * You can now set pilot global hooks.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * You can only equip outfits that fit slot size now, however there is no slot size indication.
    * Initial implementation of slot size types.
    * Luadoc.
    * Added face binding to pilot control stuff.
    * By default pilot.goto() is now precise.
    * By default pilot.goto() is now precise.
    * Added ability to disable velocity compensation in pilot.goto().
    * Added ability to disable velocity compensation in pilot.goto().
    * Added new parameter to pilot.add to allow overriding the jump point behaviour.
    * Luadoc.
    * pilot.getEnergy() only returns one value.
    
    Signed-off-by: Edgar Simo <bobbens@gmail.com>
    Added getEnergy and setEnergy to the pilot API module.
    * Fixed memory access issues with pilot.clear().
    * Fix p:hyperspace() not working correctly with no parameters.
    * Cleaner code.
    * No removing the bloody player from Lua.
    * Make sure angle isn't negative.
    * Make sure angle isn't negative.
    * Added hook infrastructure for returning parameters.
    * Added generic "board" and "hail" hooks.
    * Fixed issue not allowing NPC pilots to land.
    * Fixed many "static landing" issues where the distance from planet center was static.
    * Using planet radius now instead of graphic size for planet size assumptions.
    * Fixes pilots not jumping properly with manual control and hyperspace targets.
    * Added land to manual control.
    * You can force a pilot to jump to a certain system now.
    * Handle case trying to create pilot in system with no usable jumps nor planets.
    * Random pilots only jump in from systems with presence of their faction.
    * Fixed segfault and stupid condition.
    * Randomly spawning ships will take off now.
    * You can now create pilots taking off.
    * AI now handles taking off.
    * Trader ai uses generic as base.
    * Generic ai template now has distress function.
    * Generic ai template has minimum aggro distance.
    * Updated all AIs to use create_post() which handles some creation stuff.
    * Changed how flags are handled so we can easily add more of them.
    * Fixed bug in pilot.add() causing segfault.
    * Fixed broken pilot.add() requiring 2nd parameter to be non-string or explicit nil.
    * Changed the "def" hardcoded value to nil for pilot.add's AI parameter.
    * Updated missions using "def" so that they now use nil.
    * Updated pilot.add() to handle bigsystems well, note this breaks API.
    * ai.pushtask() no longer has a pos argument.
    * Added subtasks with similar api to normal tasks.
     * Subtasks are tied to their task and allow mini state machines.
    * Major refactoring of the pilot. It is now all contained in a struct.
    * Added Lua API to remove hooks from a pilot.
    * Removed pilot chance.
    * Dead/disabled/left pilots reduce the used presence.
    * Hail sound works.
    * Luadoc.
    * Luadoc.
    * Implemented pilots hailing player.
    * Fixed issues found by the reenabling of the warnings.
    * p:attack() now attacks nearest target.
    * More tweaking function names.
    * Added follow function.
    * Luadoc.
    * You can now specify if you want the pilot to brake or not with goto().
    * Using @luasee (Luadoc).
    * Added manual control for AI.
    * Fixed some long standing bugs in AI.
    * Decreased code footprint in nlua_pilot.c
    * Misc fixes.
    * Luadoc.
    * Should fix some logic flaws.
    * Luadoc.
    * You can now make it so pilots don't get disabled.
    * Removed pilot.shipName() in favour of pilot:ship():name().
    * pilot:exists() returns false for dead ships.
    * pilot.shipName() now returns the name of the ship, if you want the ship's name use pilot:ship():name() instead.
    * Renamed pilot.alive to pilot.exists since it makes more sense.
    * Use grad for pilot.setDir.
    * Added API to get and set directions of pilots.
    * Fixed typo in luadoc.
    * Added API to remove pilots.
    * Renaming pilot.warp() pilot.setPos().
    * Luadoc.
    * pilot.warp() no longer clears velocity.
    * New setVel function in the pilot API.
    * Luadoc.
    * Changed naming scheme to be more consistant.
    * Fixed spawn bug with pilot.add().
    * Can refuel pilots now.
    * Added pilot:id() API.
    * pilot.add First ship is now exactly located.
    * Accidently left in a warning.
    * Forgot to recalculate stats after removing all outfits.
    * More code clean up.
    * Added ship Lua API.
    * Fixed scripts for changes.
    * Created helper script for easy inclusion in the unique code.
    * Forgot to recalculate stats.
    * Do not warn if outfit can't be added through p:addOutfit().
    * Functions to get CPU and stuff.
    * Added equipment script to equip pilots.
    * More bindings for pilots.
    * Added invincibility status to pilots.
    * getHealth function should be sane again.
    * Added binding to get pilot health.
    * Luadoc.
    * Do not add ammo if failed to add outfit.
    * Attempts to fix disappearing ship / segfault bug.
    * Raw outfit functions no longer call calcStats.
    * Minor correction.
    * Documentation update.
    * Added API to set pilot health or set noboard state.
    * Fixed uniques and the nlua_pilot outfit stuff.
    * Minor tweak.
    * Minor formatting.
    * Should make it so that when the onjump pilot hook is activated it won't
       detect the pilot activating it as an existing pilot.
    * Compiles cleanly - nothing works.
    * Made some nlua naming consistant.
    * Code clean up.
    * Fixed uninitialized variable.
    * Add pilot enter delay when creating with Lua.
    * Luadoc.
    * No longer die silently if pilot becomes invalid.
    * Allow the pilot Lua API to ignore interference.
    * Added pilot.comm().
    * pilot.broadcast() now uses the pilot_broadcast function.
    * Added player_messageRaw to try to reduce segfaults in Lua player.msg().
    * Raise error if fleet not found.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Another attempt at fixing the nan bug.
    * Removed some of the dir warnings.
    * More correct.
    * Luadoc update.
    * Added luaL_checkvector.
    * Added luaL_checkpilot.
    * Constness.
    * Cleaned up some Lua code.
    * You can now remove all of a pilot's outfits.
    * You can now specify if the pilot is jumping in with pilot.add().
    * Fixed documentation.
    * Fixed documentation bug.
    * Allow Lua API to change pilot AI.
    * Lua API clean up.
    * Luadoc.
    * Luadoc.
    * Split vec2 from nlua_space.
    * You can now add/remove outfits from pilots with Lua.
    * Made the hyena fight easier in the tutorial.
    * New mission.  Last of the new campaign.
    * Tweaked other missions/campaign to be based on completing this one.
    * More robust checking of ship hostileness.
    * Missions now enforce hostile/friendly status in some missions.
    * Mark enemies as hostile in patrol missions.
    * Much more Lua API added.
    * Dvaered patrol missions now actually force you to kill hostiles.
    * Clean up and doxygen.
    * New Lua bindings.
    * Added tutorial.
    * Tweaked entire hyperspace distance system to be more sane.
    * Allow passing parameters to pilot ai on creation.
    * Added the faction metatable and stuff to use it.
    * Fixed all sorts of minor bugs preventing campaign from working.
    * Added Pilot:setFaction().
    * Fixed warning on compile.
    * Added Pilot:alive() and Pilot:broadcast().
    * When creating a new pilot with pilot.add(), pretend to enter from hyperspace if distance is big from planet.
    * More functionality added.
    * Clear velocity when doing Pilot:warp().
    * Moved Lua pilot stuff into it's own file.
    * Pilots now use metatables.
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    Use new __RW system and nlua_register() everywhere
    Have nlua_loadCli() use new env API
    Correction to my earlier library loading hack; use it in evt and misn
    
    I forgot about this...
    Run console in global lua state
    lua headers are system headers, include them that way
    * Removed the mission start cli stuff as it's obsoleted by naev.startMission().
    * Changed mission error handling for billionth time, should be sane (tm).
    * Changed how we handle the bloody return parameter and friends so it should bloody work (mission_start and mission_init).
    * Dangerous commit - changes how mission_start and mission_init work to allow claims to be passed on from event to mission.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Left out the cli specific API last commit.
    Fix warnings when building with clang
    Remove now unused functions related to fixed-function OpenGL
    Replace opengl_ext.c with files generated using Galogen
    
    Looking at several OpenGL extension loading libraries, I like Galogen
    because it allows generating files for any choice of GL version and
    extensions. So when we (hopefully) switch to GL 3.2 Core, we can
    generate headers for such and it will be a compile error to use features
    that are removed in that version, or added by later versions.
    
    Generated with:
    ```
    galogen gl.xml --ver 3.0 \
                   --profile compatibility \
                   --exts ARB_texture_filter_anisotropic
    ```
    
    https://github.com/google/galogen
    Start moving to glVertexAttribPointer()
    
    This is required in modern OpenGL
    Remove fallback for not having VBO
    
    OpenGL without VBOs is deprecated. Presumably, any drivers that can
    handle shaders will be fine with VBOs.
    More gettext.
    Added dynamic VBOs.
    calloc > (malloc + memset)
    Whitespace, typo and general style cleanup.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Show more compact opengl features at runtime.
    * Fixing really minor possible segfaults and other misc issues detected with scan-build.
    * More error checks.
    * Fixed fake OpenGL VBO backend.
    * Added mipmap support.
    * Added ability to draw filled circles.
    * Removed immediate mode from circle drawing.
    * Implemented multitexture in the VBO.
    * Replaced last of the glBegin stuff in nebulae with VBO.
    * Fixed memory leak.
    * Added gl_vboData.
    * Replaced the weapon minimap draw stuff with VBO stuff.
    * Doxygen.
    * More VBO API.
    * opengl_render is now using VBO as backend.
    * More VBO improvements.
    * Much cleaner OpenGL VBO subsystem design.
    * Initial VBO framework.
    * Stars using VBO.
    added spfx utility containing sound play for now
    Use new __RW system and nlua_register() everywhere
    Put GUI in global lua state
    lua headers are system headers, include them that way
    * Hacked in basic Lua GUI module functionality.
    * Hackfully removed lots of stuff, it's still a horrible mess.
    * Reenable various stuff so it looks much better now.
    Should fix translations.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    ndata is dead! Long live ndata!
    Got rid of dat/unidiff.xml in favour of laid out representation in dat/unidiff/.
    Switched to better local fonts and removed usage of system fonts.
    Got rid of dat/event.xml :D
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    It is now possible to add overlay layers to outfits.
    polygonal collision algorithm
    Add some helper functions for dealing with shaders
    Use defines for font paths.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    manage different kinds of asteroids
    Map decorators for Naev, with one as example
    Display Commodities Tab using images for commodities
    * Added and using ndata_exists for lua voodoo.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Swap out the horrible hacks for something more elegant.
    Recursing through directories without having a directory structure is awful.
    I wish there were another way, but this hideous pile of hackery seems to be the best solution for now.
    * Some fixes to ndata loading and sanity.
    * New planets get a nonzero radius.
    * Update radius when updating gfx.
    * Moved various path defines into ndata.h.
    Warn players about migrating files from ~/.naev
    * Actually sort graphics by name when choosing in planet editor.
    * Display ndata currently being used.
    * Removed casting.
    * Can now create SDL_RWops from packfile.
    * Using rwops for music to lower latency between changes.
    * No longer need makefile when working in trunk, reads from directories directly.
    * Code clean up.
    * Doxygen.
    * Using Packcache now, loads _MUCH_ faster.
    * First large ndata patch.
    Fixed issue with period not being read.
    Removed some externs.
    Fixed warnings.
    Use new __RW system and nlua_register() everywhere
    Replace LuaCommodity with Commodity
    lua headers are system headers, include them that way
    * Added commodity metatable.
    * You can now define different text/music using the intro code.
    * Added introductory text.
    more whitespace fixes
    Added star images to the system map
    Initial add of system map
    Made ship store graphics square to be able to share overlays with outfits.
    Removed common showing outfit code and unified in src/land_outfits.c
    Temporary moved slottypes to ImageArrayCell.
    Moved quantity into the imagearraycell.
    Abstracted image array stuff to cell where it is possible to set alt text.
    Removed whitespace.
    Removed unnecessary parenthesis.
    Fixed up uses of "NA" -> "N/A"
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Added symbols for faction text on the map screen, and for ship stats
    
    This is an accessibility feature for those who are colorblind. You
    no longer need color vision to see this information.
    
    Based on the idea we had before to use emojis, but using ASCII instead.
    The biggest advantage of this is that it can just be directly inserted
    into the text rather than having to worry about positioning the symbols
    manually.
    Updated map_system for new coloring.
    Further tidying up
    tidied up code
    Tidied up exit
    Got purchase working
    Added star images to the system map
    Outfits now partly added
    testing
    working on the solar system screen
    Initial add of system map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Whitespace
    Removed logid from lua.  Logs now created/appended using the id string.
    Initial mission log work completed.
    Initial mission log work completed.
    You can now claim strings and not only systems.
    Replace remaining uses of Lua globals with Lua environments.
    
    This fixes crashes in the tutorials (and probably other events).
    Remove __evt and __misn globals after they are used
    Intial port of missions to single lua state
    
    Does not properly implement loading of all needed libraries, so somewhat
    broken for now.
    Turn player_missions in an array of pointers
    Top-level comments should be outside the enums.
    Let's go more than a little enum-crazy.
    * Removed superfluous function in favour of previously existing one.
    * Missions can now trigger in space.
    Many, many typo fixes.
    * MAJOR COMMIT - May bring breakage.
    * Removed global variables from nlua_misn.c, nlua_event.c and nlua_hook.c
    * Added tutorial button.
    * Added API to see if a mission or event is active.
    * Doxygen.
    * Changed how we handle the bloody return parameter and friends so it should bloody work (mission_start and mission_init).
    * Dangerous commit - changes how mission_start and mission_init work to allow claims to be passed on from event to mission.
    * Added functionality to set claims.
    * Luadoc and Doxygen.
    * Implemented the basic advanced mission markers as per the proposal.
    * Removed obsolete mission/event specific timers in favour of the hook.timers.
    * Increased timer limit to 10, should be removed completely eventually.
    * Doxygen.
    * Added sample event for random npcs.
    * Implemented mission priority and order mission lists.
    * Added API to set mission priority.
    * Starting to add framework for new bar.
    * Automatically create OSD if not explicitly created.
    * Properly load OSD now.
    * OSD mission bindings.
    * Improved the mission allocation system.
    * Made availability for mission a common struct.
    * Constness.
    * Added CLI specific API for starting missions.
    * Now draws fancier markers.
    * Changed misn_lua to nlua_misn for easier lua module detection.
    * Missions destinations are now marked when selecting missions at mission computer.
    * Aborted missions should also drop cargo.
    * Sanitized dealing with mission cargo a bit.
    * You can now define a start mission in start.xml.
    * Added tutorial skeleton.
    * Implemented bribing.
    * Added ai.isbribed().
    * Fixed major outstanding bugs in flag usage.
    * Fixed major outstanding bugs in weapon_hit stuff.
    * Some doxygen fixes.
    * Added mission timers.
    * Added commodity land mission checks.
    * Some doxygen for land.c.
    * Implemented outfits/shipyard/land missions.
    * More properly landing cleanup.
    * Fixed bug with exiting while landing and switching pilots causing space warping.
    * Doxygen.
    * Cleaned up xml loading a bit.
    * You can now specify a previous mission as a requirement.
    * New CFLAG: -Wshadow.
    * Fixed all new warnings.
    * Missions can now mark systems.
    misc fixes and you can now use lua as conditionals for missions
    now completed missions and mission variables are also loaded, missing current missions
    save the completed missions
    fixed the annoying as hell mission disappearing when no carge space
    missions actually can use flags now
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    unique missions are now actually unique :)
    now track cargo missions give you so they get cleaned up on abort
    major commit, first fancy bar mission, alot of improvement
    introduced getListPos to get the position of the list, cleaned up mission stuff
    fixed the toolkit module in lua, fixed accept bug, segfaults :)
    fixed segfault and proper hook cleanup
    game now tries to load up the missions properly, except lua needs more bindings :)
    major improvement -> use ids for factions instead of pointers
    missions loading now, now used yet
    give active missions ids and use ids for removing hooks
    mission cleanup stuff, use the stack now
    first import of mission stuff
    Give pilots access to space
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    Use new __RW system and nlua_register() everywhere
    Add types to lua api docs, and other documentation improvements
    * Wrapper for nsnprintf being used all over.
    lua headers are system headers, include them that way
    Luadoc fixes.
    Luadoc fixes.
    * Made some nlua naming consistant.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Constness.
    * Cleaned up some Lua code.
    * Luadoc.
    * Luadoc.
    * Luadoc.
    * Added luadoc stuff for diff module.
    * Removed diff module from nlua_misn.
    Use new __RW system and nlua_register() everywhere
    Run music scripts in global lua state
    Many, many typo fixes.
    lua headers are system headers, include them that way
    * Made some nlua naming consistant.
    * Split Lua music functions from C music stuff.
    Add attributes.h for portable attribute macros
    * OSD messages get sorted by mission priority.
    * Lowered cargo mission priority.
    * Should save and load current active osd message now.
    * OSD now handles multiline.
    * Added functions to get OSD data.
    * Initial OSD revision.
    You can now claim strings and not only systems.
    Minor fixes and dead code clean-up.
    Minor fixes and dead code clean-up.
    * Claimed hooks should always run first before non-claimed hooks.
    * Added functionality to save/load claims from xml.
    * Added global simple API to enable/clear/reset claims.
    * Added infrastructure to set system claims.
    UTF-8 support added to the font rendering functions, however, no glyphs are actually generated yet so they don't render and get ignored.
    Regenerate lists when selling/buying.
    Allow counting how many outfits of a type the player has including equipped ones.
    You can only buy 1 of a unique outfit.
    You can not sell unique outfits.
    Added Lua API to open merchant interfaces to arbitrary outfits.
    Made outfit buying/selling window more independent.
    Outfits use rarity images too.
    Simplified rarity image selection logic.
    Ships can also use graphics overlay now.
    It is now possible to add overlay layers to outfits.
    Removed common showing outfit code and unified in src/land_outfits.c
    Temporary moved slottypes to ImageArrayCell.
    Moved quantity into the imagearraycell.
    Abstracted image array stuff to cell where it is possible to set alt text.
    More "NA" fixes.
    Fixed up uses of "NA" -> "N/A"
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Fixed the rest of the text colors.
    Added translation targets for ALL the xml.
    More translation thoughout the game.
    warnings
    Compare strings against translated version of "None" for other languages.
    Removed the ugly uses of cDConsole as a color for headers.
    
    Replaced those all with black; headers don't need to be a different
    color and it honestly looks nicer without one.
    Fixed several strings and lack of gettext usage.
    Extended some heights to make missing texts show up.
    Remove SDL1 compatibility -D CLAGS, and sed so they aren't used
    Fixed that code (mistake), plus also added to equipment tab.
    Include mass of missiles in launcher shop stats.
    Add two hooks fired when the player buys and sells an outfit
    
    Hooks
            src/nlua_hook.c
    
    Outifts trade panel
            src/land_outfits.c
    
    Add sample event for testing new hooks
            dat/scripts/debug/debug.lua
            dat/events/_test/test_landed.lua
            dat/event.xml
    Add two hooks fired when the player buys and sells an outfit
    
    Hooks
            src/nlua_hook.c
    
    Outifts trade panel
            src/land_outfits.c
    
    Add sample event for testing new hooks
            dat/scripts/debug/debug.lua
            dat/events/_test/test_landed.lua
            dat/event.xml
    Changed escape code for colors from '\e' to '\a' so xgettext plays well with it.
    More gettext.
    Converted the "blackmarket" flag to a "blackmarket" service.
    
    This is cleaner, and it's an easy way to make adjusting this property
    in the editor possible. The "blackmarket" flag outside of the assets
    is still supported for compatibility.
    Replace memcpy with struct assignment
    Avoid regenerating the land tabs over top of themselves
    
    This was only occurring when hooks caused a GUI reload, which is
    somewhat unsafe, but this seems like a useful precaution to take.
    Don't rely on macro to provide outer parens
    Remove obsolete error preventing outfit purchase
    Highlight needed licenses in red when buying outfits
    Buying or selling None is prohibited by law.
    Fix a few issues discovered by Clang
    Remove fuel cost and make refueling wholly-automated
    
    This was discussed earlier in IRC. My feeling is that fuel costs add nothing,
    yet can potentially strand new players and render saves unusable.
    
    There were also several issues with fuel being zeroed when removing fuel pods
    and engines, leading to fuel loss while experimenting with loadouts.
    Enhance filtering in the land window's outfits and equipment tabs
    
    This is a fairly monstrous commit, and unfortunately due to some necessary
    toolkit changes, wasn't able to be broken up into smaller chunks.
    
    A semi-itemized list of changes is as follows:
    
       tabwin:
          Provide both old and new tab IDs when calling onChange functions
    
       imagearray:
          Add a simple struct and toolkit_saveImageArrayData to permit easy
          saving of selection and scroll position.
    
       player:
          player_getOutfits & co. now return Outfit** instead of char**
    
       equipment:
          Added incremental text search, change the embedded tabwin into a dummy
          that just regenerates a single image array instead of maintaining five
          separate ones.
    
       land_outfits:
          Added incremental text search, as well as tab-based filtering identical
          to the equipment tab's, with some minor cleanup along the way.
    Colourize prices based on affordability in several places
    Changed "black market" to a flag, not a variable.
    
    To conform with the rest of the code.
    Added the capability for "black market" planets.
    
    Quite simply, a "black market" planet ignores licenses: the player
    can buy anything from a black market planet, regardless of what
    licenses would normally be required. Black market planets are
    indicated by the <blackmarket/> XML tag.
    Multiply displayed outfit price by the buy/sell modifier
    * Whitespace.
    Various small fixes: Set Focuse to keyboard useable widgets in the landing dialog. Saved cursor position in mission computer. Fixed possible access to unalocated memory.
    As maps are fairly abstract, supply a better error message.
    Added search shortcut to outfitter and shipyard.
    Fixed up widths and offsets in the map find window.
    * Finished local map implementation.
    * Added local map.
    * Wrapper for nsnprintf being used all over.
    Updated call-sites of buttons where soft-disable fall-through is desirable.
    Large revamp and unification of the various error-printing functions in the land window.
    Gave hotkeys to a large chunk of the land window's buttons, as well as the YesNo dialogue.
    s/Takeoff/Take Off/ where appropriate.
    * Made all the colours constant as they should be.
    adjust functions to use the new map type
    Whitespace, typo and general style cleanup.
    Fixed low-resolution issues with the outfitter and shipyard.
    Many, many typo fixes.
    * Fixed some uninitialized stuff.
    Fixed a bug where player.addOutfit() wouldn't update the equipment list without a shipyard.
    * Fixed Clang report.
    * Added ability to add GUI outfits.
    * Should fix segfault with player.addOutfit() with land hooks.
    * Render the mod text at outfit window properly.
    * Fixed ammo going poof.
    * Fixed invalid memory write.
    * Minor code clean up.
    Fixed a crash related to hard-coding credit and outfit update behaviour
    Slot types are now represented in image arrays. Fixed a bunch of off-by-ones along the way.
    player_addOutfit updates the image arrays as necessary. outfits_updateEquipmentOutfits simplifies updating by hard-coding the wid names.
    * Instead of hardcoding 32 for credits2str buf length, added #define to make it much more sane.
    * Split outfits code from land.c.
    Events using common lua state
    
    Still need to fix some things
    Intial port of missions to single lua state
    
    Does not properly implement loading of all needed libraries, so somewhat
    broken for now.
    * Split the lua persistance/unpersistance from mission.c.
    Remove now unused functions related to fixed-function OpenGL
    Remove wrappers around legacy OpenGL matrix functions
    Add a function for rotating a matrix around the z axis
    Use matrices instead of modifying VBOs in gl_blitTexture()
    Pass projection matrix to texture.vert using uniform
    
    The previous code relies on deprecated OpenGL matrix functionality.
    Implement matrix functions as an alternative to the legacy GL ones
    
    This is not immediately better, but a step toward eliminating deprecated
    OpenGL functionality.
    * Moved more matrix calls to our gl_matrix wrappers.
    * More gl_matrix wrappers.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Added rotation, but it sucks because it's not linear like the translation (scaling isn't either, but not as used).
    * Added gl_matrixMode API to substitute glMatrixMode.
    * Implemented matrix scaling.
    * Moved most of the matrix stuff into opengl_matrix.
    Don't crash on tech groups being freed when there are none.
    Using ngettext for plurals.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Fix memory leaks in sysedit and avoid loading empty tech groups
    * Minor segfault protection.
    * New planets get a nonzero radius.
    * Update radius when updating gfx.
    * Moved various path defines into ndata.h.
    Added some functions to tech.c to facilitate tech editing.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Minor fixes and dead code clean-up.
    Minor fixes and dead code clean-up.
    Many, many typo fixes.
    Remove trailing spaces in src/
    * Fixed more uninitialized warnings.
    * Reduced code by grouping the tech search for items stuff.
    * Added ability to search for comodities.
    * Fixed invalid free.
    * Simplified code.
    * Added getShipArray.
    * Doxygen.
    * A bit fancier memory allocation in tech.
    * Added concept of tech group pointer.
    * Added API to handle arrays of techs.
    * Strict parsing of dat/tech.xml.
    * Clang.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Fixed tech not freeing xml document when it was supposed to.
    * Fixed yet another memory leak.
    * Tech unidiff is working.
    * Moving unidiff to new tech system.
    * Fixed planet saving broken with last tech commit.
    * Tech stuff seems to work.
    * Fixed tech loading.
    * Fixed tech saving.
    * Added test tech.
    * Loading outfits from tech group now.
    * Fixed segfault on exit.
    * Tech stuff should load and write properly now.
    * Tech should free properly.
    * Added stuff to get outfits from tech.
    * Seems to load tech groups properly now.
    * Initial commit of tech stuff.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    More gettext.
    Added a new field, corrected Euler and added the stabilization step
    Remove vectcpy(), and replace it with simple assignments
    * Wrapper for nsnprintf being used all over.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Many, many typo fixes.
    Remove trailing spaces in src/
    It's its not it's
    * Check ndata version against binary.
    * Changed retarded stupid behaviour.
    * More simple fast linear happy hippy physics model for the ship stabilization systems.
    * Using different solid update techniques for different objects.
    * physics.h provides a max speed function.
    * Lower the runge-kutta step when working with high speeds.
    * Made the speed limit internal part of the runge-kutta function.
    * Fixed issues with minbrakedist.
    * Changed internal representation of direction velocity and turn from deg/s to rad/s.
    * Using more sane drag function.
    * UV vector decomposition code by HatlessAtlas.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Should compile on FreeBSD again.
    * Minor cosmetic changes.
    * Improved physics model.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * More sanity checks for angles.
    * Code clean up.
    * Improved angle_diff.
    * Much better OS compatibility macros now.
    * Code clean up.
    * Doxygen fixes.
    * More tweaks for FreeBSD.
    * Doxygen.
    * Added dot product.
    * Added vect_reflect().
    patch by Nicholas Niro <nik_89@neuroponic.com> for older gcc
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    trying to work with a PID system for smart missiles
    branch:      naev
    minor cosmetic patch
    branch:      naev
    made limit_speed to act abruptly, much nicer when afterburning now
    seperated speed limiting into physics
    branch:      naev
    added explosions with a primitive special effect system
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] Cleaned up some funky old code
    Added possibility to disable ships (no death yet)
    New data specific file start that allows the player's starting pos and such to be defined
    branch:      naev
    [svn] More cosmetic patches!
    branch:      naev
    [svn] multiple enemies now supported
    bug fixes
    you can get other ship's health now from AI
    branch:      naev
    [svn] bug fixes
    support for different AI Profiles
    branch:      naev
    [svn] bug fixes
    fleet improvements
    per pixel collision
    branch:      naev
    [svn] added message system
    fixed spinning laser bug
    branch:      naev
    [svn] fixed potential bug
    branch:      naev
    [svn] rudimentary shooting system, needs work
    branch:      naev
    [svn] improved ai API
    fixed minor memory leaks
    cleaned up a bit
    branch:      naev
    [svn] added star system support/loading
    added planets
    more minor tweaks and fixes
    general happiness
    branch:      naev
    [svn] moved everything to directories
    cleaned up Makefile
    improved AI
    branch:      naev
    [svn] temporary commit before playing with cpio
    branch:      naev
    [svn] basics of the AI implemented
    branch:      naev
    [svn] removed python dir
    Vector2d now uses polar coordinates
    minor tweaks
    branch:      naev
    [svn] cosmetic changes, minor fixes
    branch:      naev
    [svn] just uploading working copy
    branch:      naev
    [svn] good blitting system, pilot/ship outline
    branch:      naev
    [svn] initial import
    Removed unused leftover tutorial stuff.
    Don't prompt the player to name their starting ship if it has a default name.
    * Added start position to tutorial node in start.xml.
    * You can define starting event, tutorial can get it's own event/mission.
    * New time system. As seen on wiki.
    * Centralized the game start information.
    * New player should have the system he'll start in as a background when writing name.
    Made outfit buying/selling window more independent.
    Removed common showing outfit code and unified in src/land_outfits.c
    Temporary moved slottypes to ImageArrayCell.
    Enhance filtering in the land window's outfits and equipment tabs
    
    This is a fairly monstrous commit, and unfortunately due to some necessary
    toolkit changes, wasn't able to be broken up into smaller chunks.
    
    A semi-itemized list of changes is as follows:
    
       tabwin:
          Provide both old and new tab IDs when calling onChange functions
    
       imagearray:
          Add a simple struct and toolkit_saveImageArrayData to permit easy
          saving of selection and scroll position.
    
       player:
          player_getOutfits & co. now return Outfit** instead of char**
    
       equipment:
          Added incremental text search, change the embedded tabwin into a dummy
          that just regenerates a single image array instead of maintaining five
          separate ones.
    
       land_outfits:
          Added incremental text search, as well as tab-based filtering identical
          to the equipment tab's, with some minor cleanup along the way.
    Added the capability for "black market" planets.
    
    Quite simply, a "black market" planet ignores licenses: the player
    can buy anything from a black market planet, regardless of what
    licenses would normally be required. Black market planets are
    indicated by the <blackmarket/> XML tag.
    Large revamp and unification of the various error-printing functions in the land window.
    player_addOutfit updates the image arrays as necessary. outfits_updateEquipmentOutfits simplifies updating by hard-coding the wid names.
    * Split outfits code from land.c.
    Switched to better local fonts and removed usage of system fonts.
    Use defines for font paths.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Replace memcpy with struct assignment
    * New planets get a nonzero radius.
    * Update radius when updating gfx.
    * Moved various path defines into ndata.h.
    * Wrapper for nsnprintf being used all over.
    * SHould handle colour restoration with multiple lines.
    Appease the scan-build gods (and avoid some nasty implementation-defined behaviour).
    * Made all the colours constant as they should be.
    * More LLVM fixes.
    Many, many typo fixes.
    * Colour can go across lines in gui messages or omsg.
    * Better placement on multiple font sizes.
    * Added fade out for omsg.
    * Flexible font sizing.
    * Fixed assorted bugs, seems to work more or less ok now.
    * Added omsg API to player module.
    * Update in render (all render based).
    * Avoid segfaults.
    * Messages get chopped up and rendered now.
    * Initial revision of omsg, needs Lua API and rendering.
    Fixed the rest of the text colors.
    Fixed warnings.
    More warnings.
    Removed the ugly uses of cDConsole as a color for headers.
    
    Replaced those all with black; headers don't need to be a different
    color and it honestly looks nicer without one.
    Remove gl_drawCircleInRect()
    
    It doesn't really seem to be needed, and gl_clipRect() can serve the
    same role.
    Remove SDL1 compatibility -D CLAGS, and sed so they aren't used
    Remove all C code meant to support SDL < 2.0.0
    SOLVED #826 : removed debug logs after issue is solved
    Added extensive logging upon entering Universe Editor ; restored Hakoi.xml
    Make all buttons for closing editors labelled "Exit" with shortcut "X"
    
    Universe Editor
            src/dev_uniedit.c
    
    System Editor
            src/dev_sysedit.c
    Add a Map Outfits Editor for selecting/unselecting entire systems
    
    Add the Map Editor window
            src/dev_mapedit.c
            src/dev_mapedit.h
            src/Makefile.am
    
    Add file name and description parameters to dsys_saveMap()
            src/dev_system.c
            src/dev_system.h
    
    Remove Save Map button from Universe Editor
            src/dev_uniedit.c
    
    Add an intermediate menu for Universe and Map Editors, that could accomodate other future editors
            src/menu.c
            src/menu.h
    Make all buttons for closing editors labelled "Exit" with shortcut "X"
    
    Universe Editor
            src/dev_uniedit.c
    
    System Editor
            src/dev_sysedit.c
    Add a Map Outfits Editor for selecting/unselecting entire systems
    
    Add the Map Editor window
            src/dev_mapedit.c
            src/dev_mapedit.h
            src/Makefile.am
    
    Add file name and description parameters to dsys_saveMap()
            src/dev_system.c
            src/dev_system.h
    
    Remove Save Map button from Universe Editor
            src/dev_uniedit.c
    
    Add an intermediate menu for Universe and Map Editors, that could accomodate other future editors
            src/menu.c
            src/menu.h
    Changed escape code for colors from '\e' to '\a' so xgettext plays well with it.
    More gettext.
    Map decorators for Naev, with one as example
    Strip trailing whitespace
    Add support for SDL2 mouse wheel events
    Optimize the map by skipping out-of-bounds names and systems
    Modify the economy updating model
    
    Galaxy-modifying functions (adding or removing planets, etc.) now only
    queue an economy update, with the caller being responsible for running
    the update via economy_execQueued.
    
    The main benefit is that diffs now only cause one economy update, when
    they prevously did an update for each jump or planet. Economy updates
    were the single largest time-sink when loading, particularly if a
    diff cleanup was necessary.
    Have system editor respect autosave setting
    
    Note that renames explicitly ignore autosave, because the renaming process
    immediately writes files to disk.
    Further keyboard improvements for the editor
    Improve keyboard usability in the editor
    Widen uniedit's presence display so Independent: ... doesn't wrap
    Combined uniedit search types and made search incremental
    Substantially rework the map's rendering
    
    The map is now rendered through more passes, so that e.g. faction disks
    don't partially obscure jump routes.
    
    Indicators for the current and destination system pulsate every second,
    as does the entire player jump path (albeit more gently).
    Fix an invalid read and several memory leaks in the editor
    Add system and asset search to the universe editor
    * Proper header.
    * Added a check box to the galaxy editor for automatically saving changes.
    Fixed widget overlap in the star system editor
    * Hacked in a "Save Map" button for the universe editor.
    ** Save Map button will save a map outfit file to dat/outfits/maps/.
    ** Systems included in the map are those systems selected with ctrl+click.
    ** Hidden jumps and exit-only jumps are not included in the map.
    * Reworked the jump point unidiff format.
    ** All jump point parameters are now attributes, not subnodes, in keeping with the existing unidiff syntax.
    ** x and y parameters are optional, if omitted the jump point will be auto-positioned.
    ** hide parameter is optional.
    ** type parameter is optional and can be either "hidden" or "exitonly".
    * Missed a couple.
    * sizeof(char) is always 1. No need to keep it around.
    Remove useless call.
    Properly recalculate presences and update the uniedit sidebar.
    * Custom widgets must not bend down to the all encompassing "mouse functions return 1 if event is blocked".
    * Sanitized more toolkit return parameter for function pointers.
    Re-added an explicit save button to the universe editor.
    Fixed some renaming bugs and reduced duplicate code.
    Get correct widget's value.
    * New planets get a nonzero radius.
    * Update radius when updating gfx.
    * Moved various path defines into ndata.h.
    * New planets get a nonzero radius.
    * Comments.
    Clean-up and fixed some minor renaming bugs.
    * Wrapper for nsnprintf being used all over.
    * Removed unused variable.
    * Added basic system properties to the system edit dialog.
    dat/ssys, not dat/assets
    save moved planets
    save more.
    Pause the main menu when in the editor.
    Update the sidebar when presence changes.
    Recalculate presences when changing things in the editor.
    * Fixed new systems not appearing under the mouse cursor when zoomed.
    * Sanified zooming in the editor.
    * More constants moved into defines.
    * Moved default hide values for assets and jump points into defines.
    Fixed jump default hide and added planet default hide in the editor.
    Fixed jump default hide and added planet default hide in the editor.
    1.25 is the new 1.6
    * Adjust default hide value for jump points.
    * New jumps now have a default hide value of 0.7.
    * Initialize jump point hide properly.
    * LLVM fixes.
    Whitespace, typo and general style cleanup.
    Many, many typo fixes.
    * Increased default new system radius to 10k.
    * Removed unneeded 'None' which BTAxis so much hates from the uni editor.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Handle case there's no virtual assets available to add to a system.
    * Can add virtual assets now.
    * Added basic support for removing virtual assets.
    * Display presence in universe editor.
    * Double click will open a system now.
    * Fixed issue with planet saving.
    * Changed all mouse zoom models.
    * Default zoom in system editor is 2x amplification.
    * You can now open systems (and not do much with them).
    * Renamed sysedit uniedit.
    * Added sysedit for actually editting the interior of the systems.
    added lua function to create gatherable object and hook for gathering
    Fixed multi-calculation of price.
    
    This was causing price differences to be wildly exaggerated. Of
    course making it so that prices are generated once would fix this
    but why not just make it so that it's not a problem? So I did that.
    It now resets the price to base before modding it.
    Split economy into economy and commodity.
    support for standard commodities
    Added economy information to the map
    Added economy statistics and last purchase price, including saving of economy data
    Removed tabs, replaced with 3 spaces
    reworked economy so that it becomes configurable from xml
    Further tidying up ready for pull request into main branch
    Cleaned up code, and refactored the sinusoidal economy part
    Adding simusoidal economy parameters
    added the miners faction
    Destroyable asteroids
    Add gfx_store field to commodity object
    Modify the economy updating model
    
    Galaxy-modifying functions (adding or removing planets, etc.) now only
    queue an economy update, with the caller being responsible for running
    the update via economy_execQueued.
    
    The main benefit is that diffs now only cause one economy update, when
    they prevously did an update for each jump or planet. Economy updates
    were the single largest time-sink when loading, particularly if a
    diff cleanup was necessary.
    Colourize prices based on affordability in several places
    * Try to fix the bloody credits mess.
    * Reduced code by grouping the tech search for items stuff.
    * Added ability to search for comodities.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Instead of hardcoding 32 for credits2str buf length, added #define to make it much more sane.
    * Initial commit of tech stuff.
    * 64 bit credits for everyone \o/.
    * Better money handling, credits shouldn't overflow anymore.
    * First patch to try to add a dynamic economy.  Economy is static atm.
    * Some code clean up.
    * Fixed a memory leak.
    * Using unsigned int for prices instead of signed int.
    * More doxygen.
    * New nice fancy cargo graphic for when jettisoning cargo.
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    branch:      naev
    can now buy/sell commodities, but they're all the same price
    branch:      naev
    basic commodity support added (not used yet)
    branch:      naev
    improved  alot of things for shipyard, including shipyard
    branch:      naev
    split the credit functions and improved boarding
    * Moved loading stuff into load.c.
    * Added infrastructure for reading save information.
    * Cleaned up naming in save.h.
    * Dehacked some hacks (savegame code in menu.c).
    Add a "continue" button in the Death menu
    added filesystem abstraction and path based stuff
    you can sort of load games, still need to fix issues though
    missions save code, global save function
    Warnings.
    Remove all C code meant to support SDL < 2.0.0
    More gettext.
    Can now use gettext with LOG, WARN, ERR, and DEBUG.
    Make SDL_mixer volume behave the same as OpenAL
    * More correctness.
    * SDL2_mixer seems to compile now.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Many, many typo fixes.
    * Minor code tweaks.
    * Cosmetics.
    * Fixed sdl mixer stuff a bit.
    * Fixed stupid loop conditions in SDL mixer backend.
    * Compression noise thingy seems to work.
    * Set speed in sdl mixer groups.
    * Implemented group volume level.
    It's its not it's
    * Added sound_speedGroup.
    * Number of voices to use for sound is now a configuration option (to lower cpu usage if wanted).
    * Do not play sounds when dt_mod is over 2.0.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Someone claims I confuse then/than, lies I say!
    * Fix SDL_mixer volume levels.
    * Make sure volume levels are always sane.
    * Sound pitch changes (on openal) with game sound change.
    * Store sound length.
    * Have environment change in medium.
    * Unified the debug startup sound messages.
    * Some initial usage of the EFX API.
    * Sound fade out instead of stopping, should fix most of the popping.
    * Should fix engine noise popping.
    * Added group pause/resume support to sdlmix backend.
    * Implemented openal groups.
    * Tweaked API a bit.
    * Fixed possible race condition.
    * Removed some hacks.
    * Fixed segfault with invalid sound backend.
    * Code clean up.
    * Compiles with OpenAL backend.
    * New super flexible backend for sound with SDL_mixer implementation.
    Removed warning.
    Unified some code.
    Moved nsetenv to src/env.c
    Detect AppImage environment and adjust paths
    Make faction scripts run in global lua state
    Run equip scripts in global lua state
    Added support for some faction unidiffs.
    
    The diffs are as follows:
    
    * Making a faction invisible or invisible (for factions that have
      been destroyed or created)
    
    * Changing faction alignments (e.g. making the Empire and the FLF
      enemies mid-game, or making the FLF and Dvaered neutral mid-game)
    
    Use of this to make the Collective invisible once it is defeated has
    been added.
    Moved checks for alliance or hostility to player into Lua code.
    
    This makes it much more flexible, and also allows translations.
    Currently, the actual behavior is unchanged.
    Made standing text something defined in Lua.
    
    So now, different factions can have different terms for different amounts
    of standing, and these text representations can now be localized.
    Added setPlayerStanding Lua function (and a corresponding C function).
    
    Gets rid of having to mod the standing to -standing + whatever you
    want. You can now just set the standing straight to what you want.
    This is needed for my proposal to change how standing is handled,
    but even without that, it's useful in some places (e.g. for cheating,
    and for missions like flf_pre02 which either immediately make you an
    enemy or immediately make you not an enemy).
    
    Like modPlayerRaw, this function doesn't pass through any Lua code
    before setting the standing; it's just a direct modification.
    * Compiles again.
    save factions known status.
    factions can be known
    
    Conflicts:
    
            src/faction.c
    
    factions can be known.
    appease the bobbens
    move faction header back into .c
    change // to /* */
    save factions known status.
    factions can be known
    
    Conflicts:
    
            src/faction.c
    
    factions can be known.
    * Made all the colours constant as they should be.
    Read a faction's <equip> from XML, store in faction struct.
    * Change modPlayerRaw to modPlayerSIngle, added new modPlayerRaw.
    * Removed deprecated player.modFaction* and player.getFaction.
    * Factions can now use Lua to mess with actual faction hits.
    * Separate faction real name and shortname. This is to differenciate what to display and what is real.
    * It seems like the faction spawning scripts can work now.
    * Made faction_isFaction public.
    * Made faction_isFaction public.
    * Added faction_getGroup.
    
    int* faction_getGroup(int *n, int which)
    It returns an array of faction ids, depending on which.
    * Some player_message colouring.
    * Doxygen.
    * Use tiny logo for GUI.
    * Added faction standings to info window.
    * Added colours to factions
    * Added system safety.
    * Map interface heavily changed.
    * Much more Lua API added.
    * Dvaered patrol missions now actually force you to kill hostiles.
    * Major upgrade adding all sorts of new featurse to communication window.
    * Faction rating and combat rating are now continuous.
    * Fixed new player inheriting last loaded player's faction standings.
    * Added faction logos.
    * Display faction logos on land.
    * outfit.c: Cleaned up some code.
    * Added faction_modPlayerRaw and the misn binding for it.
    * Unified colouring schemes.
    * All factions you are enemies with will appear as hostile too.
    * Factions now can have long names.
    * Removed alliance deal, now each faction states it's allies/enemies.
    * Added many new not-used factions.
    * Map now displays faction standing.
    missions increase/lower faction, fixed bug with factions
    yes, you can lose faction now, fixed ai to set you as hostile
    first player faction patch
    also store alliance as a number, more aux functions for factions
    major improvement -> use ids for factions instead of pointers
    branch:      naev
    C correctiveness patch
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] faction system almost fully implemented
    fleets almost fully implemented (just need randomized start positions)
    major bugfix in weapon.c
    branch:      naev
    [svn] much more error checking in the xml
    fleets are built in - just need to do something with them
    minor tweaks and fixes
    branch:      naev
    [svn] added faction support
    documentation tweaks
    ndata is dead! Long live ndata!
    Sprinkle in some array_create_size usage
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Increase button sizes for find dialogs.
    Increased Load menu button size
    Fixed the rest of the text colors.
    Initial mission log work completed.
    Initial mission log work completed.
    Replaced all references to SCU/STP/STU to cycles/periods/seconds.
    
    This unifies the code with the in-game dialog and should hopefully
    prevent confusion regarding what terms to use.
    
    (Recap: these abbreviations were removed from in-game use long ago
    due to confusion that is likely to happen as a result of them looking
    similar.)
    Warnings.
    Load unidiff from most recent save to be able to show the planet properly (e.g. sindbad)
    One more
    Some missed cases
    Added economy statistics and last purchase price, including saving of economy data
    Changed escape code for colors from '\e' to '\a' so xgettext plays well with it.
    More gettext.
    More gettext.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Strip trailing whitespace
    version is int[3], not char* and must be turned back into a string
    * Properly display beta version in the load menu.
    Resize load_saves array downwards when last save is invalid
    * More hotkeys! ヽ(^。^)ノ
    Slot sanitizing won't need to be done within 0.6.x saves
    Add escorts when loading a game
    
    This prevents the fighter bay from being reloaded with new fighters
    when the current ones are still deployed in space.
    * Enable version diff check again.
    * Whitespace.
    * Update ship stats when sanitizing.
    Added WIP Lua and saving/loading
    First "working" but WIP news
    * Fixed everything.
    add core outfits to additional ships without crashing
    Improve core outfit adding.
    add core outfits to ships from old saves.
    * Swap around backups and main saves if they are out of place.
    * Wrapper for nsnprintf being used all over.
    Added support for loading backup saves, so manual intervention isn't needed if a player gets stuck.
    * XDG patch by aanderson.
    user data should go into $XDG_DATA_HOME (.local/share by default)
     - .naev/saves -> ~/.local/share/naev/saves
     - .naev/screenshots -> ~/.local/share/naev/screenshots
    
    user preferences should go into $XDG_CONFIG_HOME (.config by default)
     - .naev/conf.lua -> ~/.config/naev/conf.lua
     - .naev/conf.lua.backup -> ~/.config/naev/conf.lua.backup
    
    cached data should go to $XDG_CACHE_HOME (.cache by default)
     - .naev/gen -> ~/.cache/naev
    Better languaging.
    * Moved "load" hooks to a place player.takeoff() will work (hacks ftw).
    * Added "load" hook.
    * Actually better to heal elsewhere.
    * Start out with ship at full health and such so gui doesn't look ugly on load.
    * Load ship default GUI if current one is invalid.
    * Load ship default GUI if current one is invalid.
    Fix some minor nigh-impossible crashes; remove pointless initializations and such.
    * Do not back up right after loading.
    Update window_addList behavior
    
    All but one point that calls window_addlist with a selected item
    changed handler calls that handler immediately after.  Update this
    to be the default behavior if there's a default item passed in.
    
    The caller in the options window had to be slightly re-worked, but
    it turned out to be a cleaner solution.
    Many, many typo fixes.
    * Seems like pulseaudio has a poor API design and therefore you shouldn't clean up especially if other libs are using it except at the end.
    * Warn depending on SELECTED save not FIRST save.
    * Fixed more uninitialized things.
    * More LLVM (scan-build) fixes
    * Fixed various issues with dialogues and the toolkit in general.
    * MAJOR COMMIT - May bring breakage.
    * Removed global variables from nlua_misn.c, nlua_event.c and nlua_hook.c
    * Added tutorial button.
    * Warn if save version mismatches.
    Changed time displays to use hSTU - 1 hSTU is 1% of a STP.
    * Saner, more precise and safer way of saving dates.
    * Fixed bug in load game information loading.
    * Display load game stats.
    * Fixed minor memory leak in load window.
    * Moved loading stuff into load.c.
    * Added infrastructure for reading save information.
    * More specific error.
    * Using naev_version instead of manual printing for better handling of -beta1.
    GUI can now be set through the equipment screen.
    * Moved gui_load out of src/pilot.c because it's ugly and a hack that barely works.
    * Kill the insane hooks.
    * Events can now be maybe to save themselves and reload with the evt.save() command.
    * Do not run event/mission hooks when game starts landed.
    * Added gui hook when player cargo changes.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Start off landed.
    * Added  "load" event trigger. This allows events to be triggered when a new game is created or an old game is loaded.
    * Major refactoring of the pilot. It is now all contained in a struct.
    * Added function for saving star systems.
    * Cleaned up naming in save.h.
    * Dehacked some hacks (savegame code in menu.c).
    * Fix faction colour in messages when loading a new game.
    * Load game menu closes with esc.
    * Added welcome message again.
    * Should fix all strict ubuntu warnings now.
    * Detect saves with 2 character names.
    * Added option to disable savegame compression.
    * Fancy new event system seems to work now.
    Generalize file back up as nfile_backupIfExists.
    * Events actually trigger now.
    * Check to make sure game doesn't get deleted after opening load game menu.
    * Moved placement of the "Del" button in the load window.
    Add a "continue" button in the Death menu
    * Persistant escorts now are working.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Seems like rename() behaves differently on implementations, should fix that.
    * Const.
    * Split variables from nlua_misn.
    * Shouldn't segfault if save is corrupted.
    * Should have gone in with last patch.
    * Fixed issue with unidiffs not removing properly.
    * Game now backs up saves.
    * Code clean up.
    * Warn user if saving fails.
    * Doxygen.
    * Use compression when saving.
    * Makes save files much more readable (good thing?).
    * First large ndata patch.
    * Moved xml.h to nxml.h.
    * Added more complicated xml parse functions in nxml.c.
    * First patch to try to add a dynamic economy.  Economy is static atm.
    * Some code clean up.
    * Fixed a memory leak.
    * Fixed game not saving.
    * If ndata isn't found, try to be a bit more robust in finding it.
    * Closing menus first before running hooks on new game so that dialogues seem in game.
    * Added introductory text.
    * Using remove() instead of unlink() for more portability.
    * Major toolkit change to simplify things a lot, makes it more object oriented.
    * Version bump to 0.3.0.
    * Reduced calls to xmlCleanupParser(), only one for all the loading now.
    * Some commentaries so no one makes the same mistake.
    * Fixed diffs not saving properly.
    * First release of the unidiff system.
    * Doxygenization.
    * Seperated dialogues from toolkit.
    * Changed some syntax.
    * Added some doxygen.
    * Need to run enter and takeoff hooks on load game.
    * Major upgrade, you don't already know all systems location.
    * Added possibility to delete savegames
    ended up writing my own saver, alot cleaner, alot faster, alot easier, silly me
    pluto still refuses to cooperate, mission/hook save disabled atm
    missions are now loaded! still need to load hooks for them to work
    player faction standings are now saved and loaded
    now completed missions and mission variables are also loaded, missing current missions
    minor leak fix and improvement for load menu
    you can now save and partially load games (mission data is lost)
    save version in savegame
    added filesystem abstraction and path based stuff
    pause forced with toolkit, linux specific stuff for saving
    you can sort of load games, still need to fix issues though
    save player variables
    fixed a couple of bugs with saving system
    missions save code, global save function
    Allow counting how many outfits of a type the player has including equipped ones.
    Removed common showing outfit code and unified in src/land_outfits.c
    Temporary moved slottypes to ImageArrayCell.
    Abstracted image array stuff to cell where it is possible to set alt text.
    Made dogfight aiming helper per-ship rather than global for the player.
    
    This allows you to enable the dogfight aiming helper for some ships
    but not all. Seems to make it more reliable too. Useful if, say, you
    have some ships where you need it but some others only use turreted
    weapons.
    Added a "slow mode" for accessibility.
    
    This was something we mused about before: the idea of adding a "slow
    mode" as an accessibility feature. Slow mode is pretty simple, it
    simply halves all speed in space compared to what it would normally
    be. This is helpful for people who have difficulty with motor control
    or otherwise have trouble running the game at normal speed (much like
    an easy mode).
    Removed unused leftover tutorial stuff.
    Improved start-of-game tutorial, replacing the menu tutorial
    
    I decided to do this because the classic tutorial is quite long, and
    yet the intro text I had previously added is inadequate. This new
    tutorial is designed to be a nice middle-ground.
    
    As before, the tutorial is optional, offered to you at the start of
    the game. Unlike before, you go through an entire mission
    demonstrating all the important game mechanics, rather than just
    having a bunch of information thrown at you.
    
    This makes the tutorials (which I haven't recommended to anyone in
    years) obsolete, so the "Tutorial" button and old tutorial mission
    have been removed.
    update on the dogfight helper
    Fixed the music so it plays combat music correctly.
    
    There were a few parts to this. In a nutshell:
    
    1. Fixed the way enemies are counted so that disabled pilots are properly
       accounted for (previously a disabled and then destroyed enemy would
       decrease the enemy counter twice, for instance).
    
    2. Removed the unnecessary requirement for the enemy becoming hostile
       to be the first enemy before setting combat music. (Lua already takes
       care of this, so the check in C was redundant.)
    
    3. Fixed choose_combat Lua function so that if it finds that it's already
       playing, it still marks itself as the last music played (important because
       otherwise "ambient" is always set to "last" when jumping in, and music for
       missions ends up getting set before "idle" plays but after "ambient";
       if previous system had been playing combat music it would catch this and
       then not record itself as the "last" type, leading to ambient being "last"
       even though combat really was).
    
    TL;DR: combat music now plays correctly, 100% of the time. No strange cases
    of ambient music when you're fighting a gigantic horde of pirates.
    player_dt_default make function
    Fixed a bad read with speed adjustment.
    Modified the way escort launching is controlled so it can be monitored in real-time.
    
    The previous method was clunky and didn't allow monitoring changes
    to how many escorts you have deployed in real-time very well. So this
    is a HUGE overhaul in how that whole thing works. It solves a bug that
    prevented you from getting new fighters when your old fighters were
    destroyed, while still limiting how many you can launch at once.
    Removed ship location altogether.
    
    This was discussed on #719: ship swapping really doesn't add anything
    to the game, so this simply removes that feature. Ships no longer have
    a location, they just travel around the galaxy with you like outfits
    do.
    
    I believe this probably also fixes #719, though it's hard to tell
    for sure. The reason I think it might have fixed it is because that
    bug seemed to be most easily triggered by following a transport
    immediately with a swap. I suspect that somewhere the copying of the
    "loc" string of ships was going wrongly, so if that is indeed the
    case, the fact that that variable has been entirely removed should
    fix it. This is just speculation, though, and it's impossible to
    tell for sure.
    
    The NPC tip about having to transport ships has also been removed,
    since it is no longer true.
    made mining more user-friendly
    Move PlayerShip_t into player.h and expose the player stack
    Move PlayerOutfit_t into player.h and speed up player_getOutfits
    Replace active cooldown key with autobrake
    
    This is another commit that ended up being larger than intended due to
    adjacent diffs. It can be broken down into three separate things:
    
    Autobrake is triggered by the same key that used to handle cooldown.
    On the first press, it triggers braking if moving, cooldown otherwise.
    If pressed while already braking, cooldown starts when braking ends.
    
    player_restoreControl is now the go-to function for aborting autonav,
    cooldown, and all other control-monopolizing states.
    
    Lastly, a number of VMOD(vel) < MIN_VEL_ERR calls have been replaced
    with a handy macro.
    Fix comment describing the autonav timer
    Revoke land authorization if reputation dips too low
    
    This is a minor exploit, and based on discussions on IRC, the landing model
    may end up being fully revamped in the future. Regardless, I think this fix
    is useful for the time being.
    Enhance filtering in the land window's outfits and equipment tabs
    
    This is a fairly monstrous commit, and unfortunately due to some necessary
    toolkit changes, wasn't able to be broken up into smaller chunks.
    
    A semi-itemized list of changes is as follows:
    
       tabwin:
          Provide both old and new tab IDs when calling onChange functions
    
       imagearray:
          Add a simple struct and toolkit_saveImageArrayData to permit easy
          saving of selection and scroll position.
    
       player:
          player_getOutfits & co. now return Outfit** instead of char**
    
       equipment:
          Added incremental text search, change the embedded tabwin into a dummy
          that just regenerates a single image array instead of maintaining five
          separate ones.
    
       land_outfits:
          Added incremental text search, as well as tab-based filtering identical
          to the equipment tab's, with some minor cleanup along the way.
    add core outfits to ships from old saves.
    Player must have all core outfit slots filled for takeoff.
    * Corrected comment.
    * Comments and removed silly =9 value (doesn't make sense now that we use enums).
    Let's go more than a little enum-crazy.
    Added a discrete cooldown mode for pilots.
    * Lua command for turning off player saving.
    afterburners actualy burn when activated by weapon group.
    abstracted player_afterburn for all pilots
    afterburners actualy burn when activated by weapon group.
    abstracted player_afterburn for all pilots
    * Removed unneeded flag.
    * Afterburners work, double-tap seems broken again.
    * Ignore key repeats for weapon groups.
    Axed player_valid* sanity check functions.
    
    One was just a clunky wrapper around jp_isKnown(), and it turns out a non-real asset will never be marked known in the first place.
    Skip over unknown jumps to avoid getting stuck. Added generic known/inrange wrapper function for consistency.
    Added autonav-to-planet and made some small polish tweaks to the autonav.
    * Clean up and refactorization.
    * Added option to get filtered outfits from the player.
    * Moving equipment stuff to allow multiple outfit lists.
    * Stop reverse thrusting when the reverse key is not pressed down.
    * Moved getting price of ship to pilot_worth.
    * Fixed possible bug with credits_t.
    Many, many typo fixes.
    Put tc_max into the player struct instead of externing.
    Created another player sound group for non-GUI sounds (just hyperspace noises for now).
    * Play sound when messing with sound slider.
    Improved the autonav timer.
    * Try to fix the bloody credits mess.
    * Credits are 64 bits for everyone.
    Use a char for the player flags instead of doing bit shifts on an int.
    Preliminary mouse flying implementation.
    * Don't display superfluous "preparing for hyperspace" messages (fixes issue 94)..
    * Trying to move stuff out of the update itself.
    * Properly fixed the warning and unified player_sound nomenclature.
    Signed-off-by: Edgar Simo <bobbens@gmail.com>
    * Attempt to fix various issues like crash with menu_main.
    * Cleared up menu_main usage.
    * Allow takeoff to be forced at any moment.
    * Added player.swapShip().
    * Changed API slightly for player.newShip().
    * MAJOR COMMIT - May bring breakage.
    * Removed global variables from nlua_misn.c, nlua_event.c and nlua_hook.c
    * Added tutorial button.
    * Preliminary cinematics mode support.
    Added click-based actions to the mouse input handler.
    Neglected to commit updated header with afterburner improvement.
    * You can now select planets and jumps from the overlay map.
    * Removed duplicate code with player setting target.
    Retain doublespeed setting across autonav.
    * Split player autonav stuff from player.[ch].
    * Doxygen.
    * You can now set the disallow landing message.
    * Added API to disallow or allow player to land.
    * Autonav to a position works.
    * Renamed startAutonav and abortAutonav to autonavStart and autonavAbort.
    * You can now hold fire groups and they will shoot.
    * Removed player references to secondary weapons.
    * You can now activate or switch weapon sets.
    Moved cargo-related API functions out of the player module and into the pilot module. They operate on any pilot now.
    GUI can now be set through the equipment screen.
    * Added -Wredundant-decls and fixed all new warnings.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Cleaned up externs and useless parameters for pilot_newShip().
    Added preemption to the autoface and untarget functions.
    * Removed unused player code due to having ai jump exactly like the player now.
    * First attempt at new autopilot.
    * Moved nav_hyperspace and nav_planet to pilot instead of player struct.
    * Major refactoring of the pilot. It is now all contained in a struct.
    Autonav button added to map, map rendering issue fixed.
    * Hail sound works.
    * Better money handling, credits shouldn't overflow anymore.
    * Implemented autohail.
    * You can now specify default ship name.
    * Do not allow player to name two ships with same name.
    * Added keybind to clear target by popular demand (read BTAxis).
    * Rough draft of equipment land tab, not done yet.
    * Added hyperspace sounds.
    * Events can be unique.
    * Player engines should always make sound.
    * Update player sound/zoom with new update function.
    * Using dt for pilot thinking/rendering.
    * Zoom should be gradual.
    * Should fix all the issues with stranded fighters and multiple
      fighters.
    * Persistant escorts now are working.
    * Added hook types.
    * Added player_messageRaw to try to reduce segfaults in Lua player.msg().
    * New keybindings to cycle through hostiles (forwards and backwards).
    * Interference now affects targetting and communication.
    * Added concept of distress signals.
       * Ships under attack generate distress signals.
       * If someone gets the signal, and player is attacking player loses faction.
       * Limited by interference.
    * Fixed rare and elusive segfault bug in ai.
    * New firemodes, allows ships to shoot only turrets, forward mounts or both with primary weapons.
    * Move ai to use firemodes.
    * Improve bomber code.
    * Added keybindings for targetting escorts.
    * Ripped the GUI stuff out of player.c and put it in gui.c.
    * Have player keep track of hostiles it has in system.
    * Added keybinding to cycle through secondary weapons backwards.
    * Ugly hack to make sure engine sounds sound when toolkit is open, proper fix
       would involve fixing SDL_mixer...
    * Interference is generated and renders wonderfully, needs internal mechanism first.
    * Code clean up.
    * Added license menu.
    * First implementation of Licenses.
    * Give reason behind autonav abort.
    * Better handling of player_flags and sounds when exiting game.
    * Sanitized dealing with mission cargo a bit.
    * Implemented bribing.
    * Added ai.isbribed().
    * Fixed major outstanding bugs in flag usage.
    * Fixed major outstanding bugs in weapon_hit stuff.
    * Added target_prev keybind.
    * Added communication framework.
    * Faction rating and combat rating are now continuous.
    * Introduced autonav.
    * Use memset for pilot initialization.
    * Your shipyard now follows same style as the normal shipyard.
    * You can now sell your ships.
    * First patch to bring more control to beam weapons.
    * Input dialogues can now be cancelled and return NULL.
    * More doxygen stuff.
    * input.c is doxygenized.
    * pilot.c is doxygenized partially.
    * Split engine sounds and GUI sounds for player.
    * player.c has more doxygen now.
    * Fixed some issues in sound.c.
    * Split player rendering properly into GUI and player.
    * Now render particles when flying in nebulae.
    added more nazi flags: -Wmissing-prototypes -Winline -Wcast-align -Wmissing-declarations -fno-inline
    big assorted patch, adds afterburner noise
    added PLAYER_CREATING flag to finally fix all creation/death issues
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    unique missions are now actually unique :)
    now track cargo missions give you so they get cleaned up on abort
    improve land gui
    changed everything to use player->credits instead of player_credits
    can now change ships once you've boughten them :)
    added alot of your ships stuff and cleaned up some code
    branch:      naev
    player gets all the ships he buys saved in a stack, just need to be able to change them
    branch:      naev
    You can now name your ship too
    branch:      naev
    player death implemented
    branch:      naev
    added afterburners
    branch:      naev
    can now buy/sell commodities, but they're all the same price
    branch:      naev
    you now need permission to land
    branch:      naev
    make money selling stuff, and more buying stuff checking
    branch:      naev
    changed some player variable names, immproved outfit buying/selling
    branch:      naev
    split newShip from player_new so you can now buy ships free (for now)
    branch:      naev
    split boarding from player.c to board.c
    branch:      naev
    C correctiveness patch
    branch:      naev
    added player_name
    added combat rating which is based on mass of pilots killed
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] prepared for the upcoming toolkit_list
    fixed some sanity around turning pilot functions, now in pilot_face
    added basic rough on the edges hyperspace implementation
    branch:      naev
    [svn] windows now get a name embedded
    added empty commodity exchange
    tried to sanitize secondary weapon/weapon shooting
    changed pilot stack and star stack to not lower memory allocation
    fixed landing/takeoff to actually affect the system
    branch:      naev
    [svn] added reverse command
    branch:      naev
    [svn] planet target is now rendered behind ships and weapons
    branch:      naev
    [svn] pulled input out of player, file was getting too big
    more preperations for the toolkit
    branch:      naev
    [svn] Cleaned up some funky old code
    Added possibility to disable ships (no death yet)
    New data specific file start that allows the player's starting pos and such to be defined
    branch:      naev
    [svn] More cosmetic patches!
    branch:      naev
    [svn] added new GUI by default
    branch:      naev
    [svn] More input error checking and safety
    branch:      naev
    [svn] fixed silly hostility bug
    branch:      naev
    [svn] bug fixes
    support for different AI Profiles
    branch:      naev
    [svn] added message system
    fixed spinning laser bug
    branch:      naev
    [svn] added basic gui framework
    branch:      naev
    [svn] missing weapon.c/weapon.h
    more pilot modularity
    layers work properly
    branch:      naev
    [svn] improved ai API
    fixed minor memory leaks
    cleaned up a bit
    branch:      naev
    [svn] moved everything to directories
    cleaned up Makefile
    improved AI
    branch:      naev
    [svn] minor fixes
    dynamic keybind loading from configuration file
    sample configuration file added
    branch:      naev
    [svn] more files yay
    branch:      naev
    [svn] just uploading working copy
    More gettext.
    Add nlua_pushenv() function
    
    Use in various cases where the full environment table is pushed to the
    stack.
    Use new __RW system and nlua_register() everywhere
    Events using common lua state
    
    Still need to fix some things
    Intial port of missions to single lua state
    
    Does not properly implement loading of all needed libraries, so somewhat
    broken for now.
    * Updated documentation.
    Make LuaSystem an int instead of struct
    Replace LuaTime with ntime_t*
    Make LuaFaction an int instead of struct
    Make LuaPlanet an int instead of struct
    Replace LuaShip with Ship*
    * Wrapper for nsnprintf being used all over.
    * Nitpicking.
    Added support for writing and reading XML jump data from save files.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Many, many typo fixes.
    * Spelling isn't bobbens' fortee.
    Remove trailing spaces in src/
    * Minor fix on Lua saving tables.
    * Fixed new gcc -Wunused-but-set-variable warning.
    Revert "* Save all tables, no need for __save anymore."
    
    This reverts commit 218c97173d71600231af2d20842a5de276ac8a1c.
    * Save all tables, no need for __save anymore.
    * Time can be saved/loaded from Lua.
    * Date hooks work and do not erase themselves.
    * Cargo missions should be fully working to an extent now (times are messed up).
    * Made the planet Lua stuff also much more robust vs addition of planets.
    * Made the Lua Systems metatables safe when adding new systems and causing the system array to realloc.
    * Split the lua persistance/unpersistance from mission.c.
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    gettext for nlua modules.
    Use new __RW system and nlua_register() everywhere
    Add types to lua api docs, and other documentation improvements
    Replace memcpy with struct assignment
    * Wrapper for nsnprintf being used all over.
    * Fixed really minor memleak - cppcheck.
    Many, many typo fixes.
    lua headers are system headers, include them that way
    * Luadoc.
    * Cleaned up to newer Lua standards.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Don't warn when var.pop() is used on non-existing variable.
    * Should fix all strict ubuntu warnings now.
    * Made some nlua naming consistant.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * More correctness.
    * Correctness patch.
    * Luadoc.
    * Forgot to change header.
    * Properly documented the nlua_var mod.
    * Split variables from nlua_misn.
    Reverted sound speed cap.
    Change the sound speed based on base time rate.
    
    Requested by bobbens: this makes it so that sound plays at 1x if
    you're at your ship's base time rate, etc.
    Uniform load messages.
    Using ngettext for plurals.
    More gettext.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Make SDL_mixer volume behave the same as OpenAL
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Revert "* Best way to fight a hack is with a bigger hack! Sound #0 is silence."
    
    This reverts commit b05873becfb5a7bb37e2fc06263989e6050fd5b3.
    Revert "* The previous hack wasn't quite big enough. Made it a little bigger."
    
    This reverts commit 82348d598f554801340b99403b778c106e4c8122.
    * The previous hack wasn't quite big enough. Made it a little bigger.
    * Best way to fight a hack is with a bigger hack! Sound #0 is silence.
    * Wrapper for nsnprintf being used all over.
    Check for invalid pilot target.
    Sounds will be silenced if out of range of the camera's targeted pilot or position.
    player.p doesn't always exist, namely at the menu and after death.
    out of range sounds do not play
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Whitespace, typo and general style cleanup.
    Put tc_max into the player struct instead of externing.
    Tweaked compression noise crossfade so it's also dependent on maximum compression.
    * Compression noise should pause.
    * No errors without compression noise.
    * Compression noise thingy seems to work.
    * Added compression sound.
    * Implemented group volume level.
    It's its not it's
    * Added sound_speedGroup.
    * Minor tweaks and stuff.
    * Checks should be greater or equal to.
    Use logarithmic music and sound volume when using OpenAL.
    * Sound only exits if it has been initialized.
    * Doxygen.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Sound fix sounds sounding on reload.
    * Load sounds before initializing music.
    * More warning messages.
    * Made sound selection system a bit smarter.
    * Someone claims I confuse then/than, lies I say!
    * Fixed some fps control weirdness in the display.
    * Added the ability to do timed sound situation changes.
    * Code clean up.
    * Fixed segfaults with nosound enabled.
    * Fixed warning.
    * Sound pitch changes (on openal) with game sound change.
    * Store sound length.
    * Fixed warning.
    * Have environment change in medium.
    * Sound fade out instead of stopping, should fix most of the popping.
    * Implemented openal groups.
    * Tweaked API a bit.
    * Formatting.
    * Minor tweaks and changes.
    * Fixed possible race condition.
    * Removed deprecated reserve channel function.
    * Polished code a lot, still not working as expected.
    * Removed some hacks.
    * Fixed segfault with invalid sound backend.
    * Code clean up.
    * Properly starts up the OpenAL audio and promptly blows up.
    * Compiles with OpenAL backend.
    * New super flexible backend for sound with SDL_mixer implementation.
    * Might fix some cackling heard with some sounds.
    * Fixed minor memory leak.
    * Should support ogg sounds now.
    * Fixed misinitialization.
    * Rewrote conf framework to be much more robust and better overall.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Changing sound distance function based on Renderwahn's suggestion.
    * This time setting sound fade between old and new value.
    * Have sound fade out faster.
    * Pausing all sounds when pausing now.
    * Should actually fix wrong side sound.
    * Should fix some issues with positional sound.
    * Sound/music volume faders are now set to current volume.
    * Using more ndata_rwops where applicable.
    * Fixed long standing bug with sound volumes.
    * Slightly cleaner implementation of channel pause/resume, fixes segfault with no sound.
    * Disabled the unable to play sound warnings to not scare people on the last
       collective missions.
    * Avoid possible out of bounds memory access.
    * No longer need makefile when working in trunk, reads from directories directly.
    * Code clean up.
    * Doxygen.
    * Using Packcache now, loads _MUCH_ faster.
    * First large ndata patch.
    * Now changing volume levels actually works.
    * Lesson of the day: DO NOT CALL MIX_* FUNCTIONS FROM THE CALLBACKS.
    * Tweaked the positional sound a bit.
    * Fixed some outstanding sound issues.
    * Warn if SDL_Mixer version differs.
    * Disable sound and music if fail to initialize.
    * Display sound driver on init also.
    * Fixed possible race condition.
    * Improved sound_exit correctness.
    * Sound should be fully positional.
    * Stopped beams should play sound_off and stop primary sound.
    * Improved sound system considerably, not used properly yet.
    * input.c is doxygenized.
    * pilot.c is doxygenized partially.
    * Split engine sounds and GUI sounds for player.
    * player.c has more doxygen now.
    * Fixed some issues in sound.c.
    * sound.c is now fully doxygenized.
    * player.c is now partially doxygenized.
    * Increased default volumes by a bit.
    * Added some verbosity.
    * Added primitive positional sound.
    * Missiles now play their proper sound.
    * Redid entire sound system with SDL_mixer.
    * New CFLAG: -Wshadow.
    * Fixed all new warnings.
    * Fixed segfaults when running game muted.
    added more nazi flags: -Wmissing-prototypes -Winline -Wcast-align -Wmissing-declarations -fno-inline
    make sounds play fully
    forgot alut_exit
    added alut as a dep, kill me but it does load sound awesomely
    big assorted patch, adds afterburner noise
    some sound cleanup and fixing potential bugs
    sound cleans up better, fixed segfaults
    third sound patch, sound enabled by default again
    sound fix patch number 2, almost there :)
    cleaned up some sound stuff, part one of fixing the sound system
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    branch:      naev
    C correctiveness patch
    branch:      naev
    can now play if sound doesn't work
    branch:      naev
    added more full sound error handling
    branch:      naev
    merchant vessles now go hyperspace
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] you can now set the volume from CLI or conf file
    fixed possible segfault when switching musics
    branch:      naev
    [svn] removed a bit of debugging that shouldn't be there
    branch:      naev
    [svn] minor sound tweaks
    branch:      naev
    [svn] rough sound seems to be working now without flaws
    branch:      naev
    [svn] added sound support base, for some reason seems to crash the game alot
    not in usage
    branch:      naev
    [svn] added more sounds
    sound engine should be working ,but isn't tuned enough yet
    branch:      naev
    [svn] Added basic music support to game
    OpenAL and VorbisFile are new deps
    Translate window titles when possible.
    Removed unused variables.
    Removed CPU indication from the Info screen.
    
    It's not useful while out in space.
    More space on the Info screen.
    Made info screen buttons bigger.
    Changed the reward text to appear below the "Reward:" header
    Made dogfight aiming helper per-ship rather than global for the player.
    
    This allows you to enable the dogfight aiming helper for some ships
    but not all. Seems to make it more reliable too. Useful if, say, you
    have some ships where you need it but some others only use turreted
    weapons.
    Fixed up Weapons screen layout
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Fixed a bug that caused ship log entries to get truncated when viewed
    
    Was caused by using a buffer that was only 256 bytes, too small for
    long messages. I upped it to 5000, which should be high enough to
    avoid any problems.
    Made the log delete button less destructive.
    
    I didn't notice this before: the log "delete" button deletes logs
    (not log entries, but entire logs) by category. That's fine I suppose,
    but it was willing to delete ALL logs, which we probably don't want.
    I've changed it to always only delete one specific log, with a warning
    that all log entries in said log will be deleted and that it cannot
    be undone.
    Fixed spacing and other code style issues.
    added ability to add manual shiplog entries
    Changed list-click to a button. (Fixes a bug.)
    Changed list-click to a button. (Fixes a bug.)
    Fixed the rest of the text colors.
    Fixed bracket placement.
    Fixed up lots of style errors, removed travel log at least partly
    
    Please look over this, but I had a go at removing the travel logs.
    Didn't do any testing beyond making sure it compiles. I was exhausted
    by all the things I was compelled to fix and just had to stop. I
    *think* I removed the travel log stuff though.
    
    A note on style: you consistently get a lot of style wrong and it's
    a pain to correct. Please take a look at some of the fixes I've made
    here and make further adjustments following this.
    
    In addition to the kinds of style errors I fixed, I also noticed you
    using printf to print warnings. You should *not* do this; Naev has a
    macro specifically designed for warnings, the `WARN` macro. You should
    *always* use macros like this (`WARN`, `DEBUG`, or `ERR` depending
    on the situation) for a whole host of reasons, not least of which is
    that these macros do more than just print a message. You need to fix
    all of these uses of `printf`. It's never something you should be using
    in Naev code.
    
    🕵️
    Added dialogue window when clicking on a selected log message, so can see all the message
    Ship log implemented and examples in some missions
    Initial mission log work completed.
    Ship log implemented and examples in some missions
    Initial mission log work completed.
    Added translation targets for ALL the xml.
    More translation thoughout the game.
    Removed the ugly uses of cDConsole as a color for headers.
    
    Replaced those all with black; headers don't need to be a different
    color and it honestly looks nicer without one.
    update on the dogfight helper
    Time Rate -> Time Dilation
    Added "time rate" to ship info.
    Make everything fuel related an int
    Tag everything related to fuel and using double with DELETETHIS_
    More gettext.
    Some doxygen documentation fixes
    Made standing text something defined in Lua.
    
    So now, different factions can have different terms for different amounts
    of standing, and these text representations can now be localized.
    Turn player_missions in an array of pointers
    * Cancel gets cut off in GUI window.
    * Fixed GUI override message.
    Multiply absorption by 100 in the info window
    Display absorption in the equipment and info windows
    Change pilot->cpu to an int.
    This avoids the player being told they have -0 CPU and can't fly their ship.
    * Text getting chopped off, made longer.
    BUGFIX: In the info screen, the slots could overlap the quit button and the special abilities could get cut off for some ships, e.g. the Peacemaker
    Made comments gender neutral, for accuracy
    * sizeof(char) is always 1. No need to keep it around.
    * Tweaked GUI override to not be so silly.
    * Added numbers to weapon set names in the info window.
    * Wrapper for nsnprintf being used all over.
    Put the GUI-setting functions into the info window.
    only known factions on the factions list
    only known factions on the factions list
    * Claims should be properly reset when you abort a mission.
    * Improved switching logic, should be more "natural".
    * Update text properly and restore position in list for weapon outfitting.
    * More work in the path of getting it all working.
    * Moving to new weapon set type things, halfway there.
    * Tabwins can now have tabs at the top or at other crazy places.
    * Display ship stats in info window.
    * Render active outfits as blue.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Whitespace, typo and general style cleanup.
    Fix some minor nigh-impossible crashes; remove pointless initializations and such.
    Update window_addList behavior
    
    All but one point that calls window_addlist with a selected item
    changed handler calls that handler immediately after.  Update this
    to be the default behavior if there's a default item passed in.
    
    The caller in the options window had to be slightly re-worked, but
    it turned out to be a cleaner solution.
    Many, many typo fixes.
    * Fixed another minor memory leak.
    * Fixed new gcc -Wunused-but-set-variable warnings.
    * Don't let the player change all his weapon sets to weapon groups.
    * Weapons only shoot when in range by default.
    Clarify automatic weapon group warning.
    * Fixed issue with warnings on cargo jettison.
    * Fixed issue with warnings on cargo jettison.
    Changed time displays to use hSTU - 1 hSTU is 1% of a STP.
    * Toggles are the wrong way.
    * Toggles are the wrong way.
    * Fixed typo mistake that causes segfault when pressing escape to rename a weapon (issue #72).
    * Fixed typo mistake that causes segfault when pressing escape to rename a weapon (issue #72).
    * New time system. As seen on wiki.
    * Display actual maximum velocity.
    * Should have corrected units and capitalization now.
    * Fixed turn not being displayed in deg.
    * Polished up the relative crew stuff.
    here is my boarding android mod, right now, there are 2 models the mk I nad the mk2, which give you 20% and 35% more crew to increase your chance of success when boarding a ship.
    I'm still using the cargo_pod gfx, because i dont have any better graphics :X
    
    here is a summary of what i changed:
            modified:   dat/outfit.xml, added outfits Boarding Androids Mk I and II (tanks Deiz for the hillarious descriptions)
            modified:   dat/tech.xml,   added the Boarding AndroidsI&II to: High Tech Upgrades, Low Tech Upgrades; added Boarding Android Mk I to Basic Outfits 2.
            modified:   src/board.c,    changed board_tryStel(...) to use the modified crew value of the pilot and not the static one f the ship
            modified:   src/info.c,     changed ship_update(...) to use the modified crew value of the pilot.
            modified:   src/outfit.c,   added functionality to load <crew_rel> xml nodes .
            modified:   src/outfit.h    added variable double crew_rel to pilot.u.mod
            modified:   src/pilot.c     changed init to init the initial crew.
            modified:   src/pilot.h     added variable double crew to struct Pilot.
            modified:   src/pilot_outfit.c changed Pilot_calcStats stats to change pilot->crew acording to temp->u.mod.crew_rel
    * Clamp just in case.
    * Allow opening different info windows.
    * Separated the pilot cargo stuff into pilot_cargo.[ch].
    * Renamed some stuff to be more consistant.
    * Visual weapon set names should match the actual weapon sets.
    * Autoweap auto-disables when you modify the weapon sets.
    * Finished legend.
    * Info window positioning.
    * Fixed typo.
    * You can set fire mode for weapon sets now.
    * Added checkbox to automatically handle weapons
    * Made weapon set list longer.
    * Allow renaming of weapon sets.
    * Visual indication of weapn slots.
    * Create weapon set window (not usable yet).
    * More autonav blocking stuff.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Instead of hardcoding 32 for credits2str buf length, added #define to make it much more sane.
    * Implemented the basic advanced mission markers as per the proposal.
    * More graphics fixes (info standings window).
    * Fixed some bugs with images especially spaceport bar.
    * Toolkit image widget now has dimensions parameter.
    * Hailing planets no longer has them take up more than the window.
    * Increased credits minimum buffer to 32. Fixed code to use 32 always.
    * Major refactoring of the pilot. It is now all contained in a struct.
    * Info menu now toggles open/close.
    * Info window closes with esc.
    * More segfault protection.
    * Should avoid possible segfaults.
    * Fix jettisoning cargo not updating info ship window.
    * Fixed rounding issue with some values in info standing screen.
    * Whoops patch by Deiz.
    * Shininess, by Deiz.
    * Jettisoning mission cargo will now abort the mission (with proper dialogue).
    * Display credits.
    * Added faction standings to info window.
    * Added ship info to info window.
    * Equipment screen looks sexy again.
    * Info is starting to take shape.
    * Revamped info menu, not finished yet though.
    Include filename in shader compile errors
    last of the clang warnings
    Use a shader when rendering fonts
    Helper function for color uniforms
    Use shader in gl_renderRect()
    Improvements to opengl_shader.c
    Add some helper functions for dealing with shaders
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Made OSD color match everything else.
    
    Wasn't noticeable but just for completion's sake.
    Changed OSD colors to something colorblind-friendly.
    
    Instead of green and white, it's now white and gray.
    * Use safe string functions.
    Recalc dimensions when changing active mission.
    Fixed OSD not calculating dimensions on game start.
    Modified the OSD to compact itself to hide old information.
    
    This change does a couple of things to make the OSD much more readable
    when you have a whole bunch of missions you've completed but haven't
    collected your reward for:
    
    1. Earlier "steps" of the OSD are not shown; when you complete an
       objective it disappears, so that the first highlighted objective
       is always the first one listed.
    
    2. Multiple OSD entries that would render exactly the same are compacted
       together, and the number of them you have is shown in the title.
    
    This is mainly helpful for an FLF-aligned player; missions done in
    Frontier space aren't "finished" until the player lands on Sindbad, so
    previously you would have a huge cluster of old OSDs that were no longer
    relevant. With this change, these old missions collapse down into a
    smaller number of shorter entries, allowing the player to see the
    ones that are more important. But the change can help in other cases as
    well, e.g. if multiple cargo missions to the same planet have been
    accepted.
    More gettext.
    Strip trailing whitespace
    Fully remove the OSD panel if it's empty
    * More OSD sorting criteria.
    * I don't always use pointers, but when I do, I sort the array they're in so they don't point to what I want them to point.
    * Optimized a bit.
    * Optimizations and warnings.
    * Fixed same loop iterate used twice.
    * Sort by items too in the gui_osd.
    * OSD are now an array and not a linked list.
    * OSD are now properly sorted to avoid flickering.
    * Wrapper for nsnprintf being used all over.
    * Minor change in allocation scheme.
    * Made all the colours constant as they should be.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    * Fixed OSD werdness for realz.
    * Proper fix for last patch.
    * OSD tweaks to fix issue.
    * OSD messages get sorted by mission priority.
    * Lowered cargo mission priority.
    * Standardized the black background hilight.
    * Added black background hilight to OSD.
    * Should save and load current active osd message now.
    * Comment typo.
    * Doxygen.
    * Fixed some memory issues.
    * Fixed typo.
    * Luadoc.
    * More correctness.
    * Fancier formatting.
    * OSD now handles multiline.
    * Added functions to get OSD data.
    * More OSD tweaks.
    * Implemented rendering.
    * Fixed double free.
    * Initial OSD revision.
    Added some color saturation
    Changed the gray text shade to a lighter color.
    Fixed the rest of the text colors.
    Updated the tk text colors (no black)
    Simplified colors and modified image array selection colors.
    
    This gets rid of some variants of text coloring and defines them
    in a different way. The "dark" versions are removed; intending to
    replace that with outlines of some kind.
    Found which color is this poor-contrast green and made it darker.
    
    It was cDConsole.
    Fixed color so that inert object text is legible again.
    More gettext.
    dragging the zalek branch kicking and screaming into modern naev
    * Wrapper for nsnprintf being used all over.
    * Added primary color definitions.
    * Jump line colors are now properly set.
    * Made all the colours constant as they should be.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    New colour (cDRestricted) for font use, primarily.
    * Added restricted colour.
    Many, many typo fixes.
    It's its not it's
    * More NAEV -> Naev.
    * Standardized the black background hilight.
    * Added black background hilight to OSD.
    * Doxygen.
    * Implemented hilighting of pilots.
    * Optimized blend func a bit.
    * Clang bug fix.
    Added a colour blending function.
    * Added RGB->HSV routines.
    * Manipulate targetting graphics in HSV space.
    * Added aqua as a colour.
    * Changed Sirius faction colour to aqua.
    * Set factions for various planets as a guideline for future editing.
    * Distinguish purple font more from red in comm.
    Updated font palette.
    * Put STRCASECMP in nstd.h.
    Updated cFontPurple
    Added a new palette for fonts.
    * Some changes to coloring for player messages.
    * Added a map neutral colour.
    
    Right now, it's 30% grey.
    The neutral colour has been reset to the previous value.
    * Using 30% grey for the neutral colour.
    * Changed neutral colour to orange.
    
    For better visibility in the map screen.
    * Independent is now Cyan.
    Added Proteron system, fixed Peacemaker target, added Peacemaker to presences.
    * Added some more colours.
    * Should fix windows issue.
    * Should fix compilation warning.
    * Added more colours
    * Added a routing to convert names to colours
    * Bolt weapons can now work with HSV colourspace (only hue) if you are so inclined.
    * Added HSV->RGB converter.
    * Changed target planet colour.
    * Trying to make target on minimap more noticeable.
    * More marker tweaks.
    * Now draws fancier markers.
    * Made fuel colour more different from nebulae colour.
    * Major rewrite to xml.h increasing sanity checks.
    * Gui can now handle overlays.
    * Changed some colours around.
    * Fixed stupidity in physics.h
    * Added the line thing for planets also.
    * Doxygenized colour.c.
    * Fixed typo mistake in nfile.c doxygen.
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    added purple, can now change toolkit image colour
    branch:      naev
    added blue/darkblue
    branch:      naev
    no need for trans colour with ACOLOUR
    branch:      naev
    added cTrans (transparent colour)
    branch:      naev
    added basic map support, added gl_drawCircle, added cYellow
    branch:      naev
    now selected list stuff actually renders and you can focus it
    branch:      naev
    some code cleanup (MELEMENT sanity)
    added information and ship spec windows
    some more comments here and there
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] new target graphics!
    new hyena graphic!
    split more colour stuff from player.c to colour.c
    minor gui tweak
    branch:      naev
    [svn] added support for images of planets
    cosmetic toolkit changes
    changed the gl_blit functions to work with doubles instead of Vector2d pointers
    took opportunity to clean up space.c xml (bringing it up to xml.h standard)
    cleaned up code
    branch:      naev
    [svn] moved colours out of opengl
    improved land graphics
    added more sane toolkit api
    Use new __RW system and nlua_register() everywhere
    lua headers are system headers, include them that way
    * Made some nlua naming consistant.
    * Removed diff module from nlua_misn.
    * Added API to immediately close a comm window after it opens (for use with hail hooks).
    * Can't open small menu when comm menu is open to avoid possible segfaults.
    * Implemented planet bribing.
    * Added communication framework.
    Don't allow the ship computers to access info the player doesn't have
    
    Namely,
    1. AutoNav shouldn't disable until a hostile ship's identity is no longer hidden
    2. Targeting hostile ships shouldn't select ships who's identity is hidden.
    Make it impossible to target unknown or out of range objects
    Might work?
    
    Untested.
    Made required changes
    Correctly initialize ew_evasion
    Make escorts always visible to parent
    Increase minimum sensor range from 1500 to 2250
    Properly squared most ewarfare values and tweaked the mass formula
    Made comments gender neutral, for accuracy
    * Hidden jump points can now be detected by ships that have the "hidden jump detect" ship stat.
    * Added a hidden jump scanner (activated) that provides said stat.
    * Use camelcase for shipstat as to be expected.
    Movement no longer affects sensor range.
    Revert to the simpler sensor range model.
    Sounds will be silenced if out of range of the camera's targeted pilot or position.
    fix squaring
    don't factor mass twice.
    optimization
    moving fast makes it easier to fuzzy detect you.
    nurf effect of speed. take mass into account.
    dulled relativity
    dulled relativity
    pilot detection and tracking uses relitivity.
    * Made default sensor range a define as this is a potentially tweakable number.
    * Replaced unhelpful comment with a better one.
    * Implemented hide modification for modification outfits.
    * Scramblers work as intended now.
    * Added a scale factor for evasion (compared to hide). This ensures that pilots are always detected fuzzily before they are scanned, even when they're stationary.
    Squared values used in the planet and jump inRange functions so that hide values (sourced from XML) are linear.
    Hidden jumps should be visible, if known.
    Interference is already factored into sense.
    Increased base sensor range to 7500, from 5000. Mean system radius is 18000, so the new baseline lets players see 17% of that area.
    virtual assets are never in range
    remove jump point type in favor of flags
    * More verbose comment on distance calculations.
    * Use pilot detection rate for pilot_inRange as poked by BTAxis.
    remove a jump point type
    a highway jump point is just a regular one with a hide value of 0.
    this simplifies things a bit.
    added warning for unknown jump point types
    whitespace
    jump properties are saved and loaded.
    also, editor saves additional properties
    more jump stuff
    initial commit for hidden jump points.
    jump points can be discovered, and known state is saved
    support for asset hide flag. also, interference
    "improvements" cause crashes. actual improvement.
    improved planet range formula
    whitespace
    adjusted planet range
    planets are now remembered
    pilot_inRangePlanet now works.
    gives 25 times bonus sensor range because planets are very large.
    adjusts bonus for nebula interference
    * Retooled cruisers and carriers to core slot system.
    * Implemented turret tracking modifier stat.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    * Alternative missile lock timer formulas.
    * Halved all lock targets to compensate for lack of evasion.
    * Doxygen.
    * Weakened lead angle modulation.
    * Added concept of turret tracking and thus dynamic lead angle based on ewarfare.
    * Changed mass ewarfare algorithm to not drop off as fast.
    * Simplified velocity evasion, made linear.
    * Simplified ewarfare heat equation.
    * Tweaked heat algorithm, now it makes sense (tm).
    * Added heat to ewarfare.
    * Moved sensor and range code into the electronic warfare module.
    * More centralization of electronic warfare.
    * Started to centralize the pilot ewarfare stuff.
    Don't undo player-initiated pause when closing toolkit windows
    * pause_delay is no-op, removed.
    * Added toggle 2x speed keybind.
    pause forced with toolkit, linux specific stuff for saving
    branch:      naev
    added some code to hopefully help prevent dt intervals that are too big
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] added beginning frame for toolkit
    added ability to pause/resume game
    nerfed lasers armour damage
    Have nlua_loadCli() use new env API
    * Added cli_warn to all Lua bits.
    Minor fixes and dead code clean-up.
    Minor fixes and dead code clean-up.
    lua headers are system headers, include them that way
    * NAEV now also prints everything to it's internal console.
    * Left out the cli specific API last commit.
    Use new __RW system and nlua_register() everywhere
    lua headers are system headers, include them that way
    * Made some nlua naming consistant.
    * Split variables from nlua_misn.
    Fix some memory leaks
    Fixed warning/error messages.
    Uniformized the "Out of Memory" message variants.
    More gettext.
    Suppress some PNG colour profile warnings, for the time being
    * Almost there.
    * Handle interlaced pngs if necessary.
    Axed PNG error handling for the time being. Corrupt nebula images should not cause crashes.
    * Minor libpng correctness.
    * Fixed new gcc -Wunused-but-set-variable warning.
    * Doxygen.
    * Fixed Clang report.
    * Defensive coding.
    * Comments.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Add alpha channel to everything.
    * Only use POT if needPOT is true.
    * PNG metadata loading is working.
    * Speed up image loading even more (do padding initially).
    * More load up optimization related to png.
    * Optimizing loading a bit.
    * Fixed memleak.
    * No longer using SDL_image.
    * npng.c now handles PNG file loading and the likes.
    * Added a NAEV wrapper for libpng stuff.
    Moved outfit merchant API from outfit.merchant(...) to tk.merchant(...).
    Error out with empty merchants.
    Added Lua API to open merchant interfaces to arbitrary outfits.
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    gettext for nlua modules.
    Use new __RW system and nlua_register() everywhere
    Add types to lua api docs, and other documentation improvements
    Replace LuaTexture with glTexture**
    Replace LuaOutfit with Outfit*
    Correct outfit.get() luadoc example
    Expose ship and outfit prices via the Lua API
    Add slot property information to outfit.slot()
    Update a number of the luaL_valid* functions to support strings in addition to their native data types.
    * Added outfit.icon()...
    Many, many typo fixes.
    lua headers are system headers, include them that way
    * Added Lua metatable and bindings for outfits (barebones).
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Fixed crashed when no slots are loaded on exiting.
    Fixed crashing when critical files not found.
    Fixed error messages referring to wrong file when not found.
    More gettext.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    * Release mode shouldn't crash anymore.
    * Slots are now handled separately in xml.
    ndata is dead! Long live ndata!
    Sprinkle in some array_create_size usage
    upgrade on mission map
    Fixed mission/event sorting order.
    Fixed oredering?
    Use name when sorting missions as last resort.
    Sort missions by priority.
    Warn if unable to read from mission file.
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Fixed crashing when critical files not found.
    Fixed error messages referring to wrong file when not found.
    Whitespace
    Implemented a travel log event.
    
    This also fixes some more problems, including one that prevented
    the shiplog system from being used outside of missions and one that
    prevented compilation from being successful.
    Removed logid from lua.  Logs now created/appended using the id string.
    Created nlua_shiplog, and moved log stuff out of nlua_mission.
    Updated example in shadowvigil.lua.
    Fixed up lots of style errors, removed travel log at least partly
    
    Please look over this, but I had a go at removing the travel logs.
    Didn't do any testing beyond making sure it compiles. I was exhausted
    by all the things I was compelled to fix and just had to stop. I
    *think* I removed the travel log stuff though.
    
    A note on style: you consistently get a lot of style wrong and it's
    a pain to correct. Please take a look at some of the fixes I've made
    here and make further adjustments following this.
    
    In addition to the kinds of style errors I fixed, I also noticed you
    using printf to print warnings. You should *not* do this; Naev has a
    macro specifically designed for warnings, the `WARN` macro. You should
    *always* use macros like this (`WARN`, `DEBUG`, or `ERR` depending
    on the situation) for a whole host of reasons, not least of which is
    that these macros do more than just print a message. You need to fix
    all of these uses of `printf`. It's never something you should be using
    in Naev code.
    
    🕵️
    Initial mission log work completed.
    Initial mission log work completed.
    Removed unused leftover tutorial stuff.
    Using ngettext for plurals.
    More gettext fixes and translations.
    More gettext.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Set __env/__misn before each function call again
    
    I seem to have misunderstood how this was working. This should fix some crashes.
    Replace remaining uses of Lua globals with Lua environments.
    
    This fixes crashes in the tutorials (and probably other events).
    Messaging API; still semi-broken
    Use new __RW system and nlua_register() everywhere
    Set __RW for each env
    Use global lua state to test syntax of event/mission
    Free event and mission lua envs when done with them
    Events using common lua state
    
    Still need to fix some things
    Intial port of missions to single lua state
    
    Does not properly implement loading of all needed libraries, so somewhat
    broken for now.
    Remove unused base64 code
    Turn player_missions in an array of pointers
    * New planets get a nonzero radius.
    * Update radius when updating gfx.
    * Moved various path defines into ndata.h.
    * Wrapper for nsnprintf being used all over.
    * Minor change of allocation scheme.
    * Minor code sexification.
    * Removed superfluous function in favour of previously existing one.
    * Missions can now trigger in space.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Whitespace, typo and general style cleanup.
    Many, many typo fixes.
    "Teh" ain't no word I ever heard of.
    * Bar missions should work with naev.missionStart().
    * OSD messages get sorted by mission priority.
    * Lowered cargo mission priority.
    * MAJOR COMMIT - May bring breakage.
    * Removed global variables from nlua_misn.c, nlua_event.c and nlua_hook.c
    * Added tutorial button.
    * Do not warn about mission chance if it is not available.
    * Added API to see if a mission or event is active.
    * Changed mission error handling for billionth time, should be sane (tm).
    * Fixed warning about mission failing when it just uses misn.finish.
    * More string mission parsing.
    * Changed how we handle the bloody return parameter and friends so it should bloody work (mission_start and mission_init).
    * Should fix some error values being wrong.
    * Dangerous commit - changes how mission_start and mission_init work to allow claims to be passed on from event to mission.
    * Missions can save/load claims.
    * Added functionality to set claims.
    * Fixed memleak when missions or events error out like crazy.
    * Fixed bug with missions that have multiple mission cargos not cleaning up properly.
    * Split the lua persistance/unpersistance from mission.c.
    * Some error checking when removing mission cargo.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Fixed issues with markers not loading properly.
    * Implemented the basic advanced mission markers as per the proposal.
    * Should save and load current active osd message now.
    * Removed obsolete mission/event specific timers in favour of the hook.timers.
    * Cleaned up timer handling code.
    * Free timers before running the function to avoid a timer usage peak.
    * Free timers before running the function to avoid a timer usage peak.
    * Major refactoring of the pilot. It is now all contained in a struct.
    * Even more verbose conditional checks.
    * Only set title/description when creating mission.
    * Fixing really minor possible segfaults and other misc issues detected with scan-build.
    * Set mission title by default to mission.xml name.
    * Should fix some warnings.
    * Event NPC stuff working now.
    * Fixed issue with hooks saving event hooks.
    * Added event land as start condition.
    * Morre corrections.
    * Improved nxml onlyNodes API.
    * Events also check for unknown nodes.
    * Display unknown nodes in missions.
    * Fix minor marker bug.
    * Fixed minor marker glitch.
    * Also save ship Lua data in missions.
    * Warn if chance is not set in mission.xml (set 100 in case you don't need it).
    * Fixed mission appearance.
    * Don't check against faction if there is no factions set for mission.
    * Better handling of mission end conditions.
    * Implemented mission priority and order mission lists.
    * Fixed memory issues and memory leaks.
    * Memory should be set to 0.
    * Better handling of hooks for events and missions.
    * Fixed percentage to make sense for bar missions.
    * 100 chance = always.
    * Fixed boolean expression.
    * Starting to add framework for new bar.
    * Fixed some memory issues.
    * Automatically create OSD if not explicitly created.
    * Properly load OSD now.
    * Destroy OSD when cleaning up mission.
    * Should save and load OSD information.
    * OSD mission bindings.
    * Added the conditionaly subsystem to replace the mission checkCond stuff.
    * Improved the mission allocation system.
    * If DEBUGGING, check Lua syntax of each mission.
    * If DEBUGGING, check Lua syntax of each mission.
    * No longer segfault if mission is missing.
    * Constness.
    * Added CLI specific API for starting missions.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Fixed Lua stack unbalance.
    * Keys can now be either numbers or strings.
    * Lowerd an error to warning.
    * Automatically save embedded tables of a table with "__save".
    * Save tables in mission Lua if they have 't["__save"] = true'.
    * Mission will now save and load faction variables.
    * Constness.
    * Cleaned up some Lua code.
    * Added marker types to Lua API.
    * Mission now saves marker types.
    * Now draws fancier markers.
    * Should compile again.
    * Some nlua sanitizing.
    * No longer trigger hooks/missions when player dies.
    * Don't update mission stuff if player is dead.
    * Cleaned up code some.
    * Introduced idea of system_getIndex().
    * Minor code clean up.
    * Balance stack after conditional expression.
    * More doxygen.
    * Even more doxygen.
    * First large ndata patch.
    * Moved xml.h to nxml.h.
    * Added more complicated xml parse functions in nxml.c.
    * Fixed issue #4 ("Too many missions" without any active mission).
    * Some code clean up.
    * Some more clean up.
    * Replaced malloc.h with stdlib.h, as the former is deprecated
    * Missions destinations are now marked when selecting missions at mission computer.
    * Aborted missions should also drop cargo.
    * Now jet cargo when cargo mission fails.
    * Should fix empty missions.
    * Should fix the extremely rare case of segfault on accept mission.
    * Remove mission cargo if it doesn't make sense.
    * Try to deal with missions not cleaning up properly.
    * Force missions to remove cargo properly.
    * Doxygen.
    * Sanitized dealing with mission cargo a bit.
    * Fixed issue with mission timers.
    * You can now define a start mission in start.xml.
    * Added tutorial skeleton.
    * Fixed misn.accept() not clearing missions at mission computer.
    * Reduced calls to xmlCleanupParser(), only one for all the loading now.
    * Fixed all sorts of minor bugs preventing campaign from working.
    * Fixed segfault when having active mission.
    * Mission timers should save and load properly now.
    * Added mission timers.
    * Added commodity land mission checks.
    * Some doxygen for land.c.
    * Implemented outfits/shipyard/land missions.
    * More properly landing cleanup.
    * Fixed bug with exiting while landing and switching pilots causing space warping.
    * Doxygen.
    * Fixed bug that converted an 100% chance mission to 0%.
    * Can now save/load planet/system data.
    * Step one of updating lua api to use metatables.
    * Fixed small memleak.
    * Cleaned up xml loading a bit.
    * You can now specify a previous mission as a requirement.
    * Removed alliance deal, now each faction states it's allies/enemies.
    * Added many new not-used factions.
    * Fixed some memleaks.
    * No longer calling luaopen directly.
    * Removed unsafe functions from mission lua envs.
    * Added include function to load other lua files.
    * Wrapping around luaL_newstate and luaopen_base.
    * New CFLAG: -Wshadow.
    * Fixed all new warnings.
    * Missions can now mark systems.
    * It turns out pairs is in the lua base library and we need that.
    added more nazi flags: -Wmissing-prototypes -Winline -Wcast-align -Wmissing-declarations -fno-inline
    music is now controlled by lua \o/
    misc fixes and you can now use lua as conditionals for missions
    ended up writing my own saver, alot cleaner, alot faster, alot easier, silly me
    pluto still refuses to cooperate, mission/hook save disabled atm
    missions are now loaded! still need to load hooks for them to work
    be a bit more tricky when generating mission ids
    cleanup and fixes
    added pluto library, added base64 encode/decode routines, saving lua active mission states
    now completed missions and mission variables are also loaded, missing current missions
    save the completed missions
    fixed the annoying as hell mission disappearing when no carge space
    missions save code, global save function
    added first mission that uses time limits
    missions actually can use flags now
    started :retabbing (spaces only) and fixed some xml issues
    can't grab a unique mission if already is running
    unique missions are now actually unique :)
    now track cargo missions give you so they get cleaned up on abort
    major commit, first fancy bar mission, alot of improvement
    introduced getListPos to get the position of the list, cleaned up mission stuff
    improved lua api for missions by alot
    fixed segfault, cosmetic patch
    fixed the toolkit module in lua, fixed accept bug, segfaults :)
    fixed segfault and proper hook cleanup
    fixed minor memony leak
    more functions, fixed invalid memory free
    game now tries to load up the missions properly, except lua needs more bindings :)
    load mission factions and such
    simplification
    missions loading now, now used yet
    run create function when creating a mission
    give active missions ids and use ids for removing hooks
    mission cleanup stuff, use the stack now
    first import of mission stuff
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Fixed crash when trying to open system with no background.
    Added symbols for faction text on the map screen, and for ship stats
    
    This is an accessibility feature for those who are colorblind. You
    no longer need color vision to see this information.
    
    Based on the idea we had before to use emojis, but using ASCII instead.
    The biggest advantage of this is that it can just be directly inserted
    into the text rather than having to worry about positioning the symbols
    manually.
    Fixed bracket placement.
    Added star images to the system map
    Avoid uninitialized read
    With the shader implementation, don't keep copy of stars on CPU
    Remove `.program == 0` tests
    
    Shaders are now loaded earlier. This shouldn't be necessary then, unless
    there's an error loading one.
    Reduce shader boilerplate with a C program generating C code
    
    Ugly, I guess, but... less?
    Some improvements to the star rendering code
    Remove some calls to gl_vboDeactivate() and glShadeModel()
    
    These don't do anything, now that the relevant code uses shaders
    Correction to indexing
    Pass a single brightness value to stars shader, not vec4 color
    Use generic vertex attributes when rendering stars
    Scale stars based on scalefactor
    star_vertexVBO should be static
    Use shader in gl_renderRect()
    Migrate away from old OpenGL matrices in stars.vert
    Somewhat neater vectorization in stars.vert
    Add TODO line
    More vectorized code
    Remove some lines
    Shader-based background_renderStars()
    
    For some reason, I can't get the boundry repeating to work
    Always update star coordinates
    
    I don't think this is necessary; it will be moved to the shader anyway
    Re-order background_renderStars() to not modify VBO twice
    
    Closer to how it will work when moved to shader
    Use fmod() in background_renderStars()
    
    Ultimately, this should be moved to the shader
    Use simple shader when rendering stars
    
    It should be possible to move more of the logic to the shader
    More gettext.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Revert "Call getfenv in nlua_pcall() eliminating the need to pass the"
    
    This reverts commit 79e36c0c1bbca2aa5fa2922651dd303bc7b87882.
    Call getfenv in nlua_pcall() eliminating the need to pass the
    environment as an argument
    Use new __RW system and nlua_register() everywhere
    Set __RW for each env
    Use nlua_pcall() in a couple more places, and make it more robust
    Make background script use global lua state
    Replace memcpy with struct assignment
    * Wrapper for nsnprintf being used all over.
    It turns out that very short lines look terrible.
    Fix some lies.
    Override velocity-based star streaking during hyperspace.
    Made star streaks shorter; they now kick in at high speed instead of just at high dt_mod.
    * Made all the colours constant as they should be.
    * Comments.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Whitespace, typo and general style cleanup.
    Fix some minor nigh-impossible crashes; remove pointless initializations and such.
    background: remove duplicated attempt to close bkg_def_L
    
    'bkg_def_L' was already closed a couple of lines above.
    
    Signed-off-by: Nicolas Kaiser <nikai@nikai.net>
    Many, many typo fixes.
    * Puffs should behave properly like stardust stuff now.
    * Background Lua errors should produce stack traces now.
    * Naev should clean up a bit better after itself.
    * Stars should never bug out black on _REALLLY_ fast ships.
    * Changed star streaking under time compression to make more sense (tm).
    * Comment.
    * Tweaked values and fixed glitches with time compression star stuff.
    * Stars blur like in hyperspace when time compression is at work.
    * Made it so there's two background layers, front and back. This is just position relative to stars.
    * Backgrounds will autosort themselves so they always render properly (based on move).
    * Cosmetics.
    * Might fix star movement when render and update desync.
    * Correctness.
    * Minor optimization.
    * Optimized and fixed star movement with the new camera system.
    * Hack so stars move properly.
    * Initial commit of the camera model.
    * Fixed background images.
    * Fixed segfault on death.
    * Render stars ontop of images to try to make them more visible.
    * Fixed background image zoom.
    * Background images should scale properly now.
    * Support for script to set backgrounds.
    * Happy with the background movement now.
    * Fixed rendering position.
    * Fixed stupid memory mistake.
    * Fixed stupid segfaults.
    * Two separate move parameters were ridiculous.
    * Don't forget to free images as part of the background images.
    * Renamed background_cleanup background_clear.
    * Implemented background images, not usable yet.
    * Split star background stuff from space stuff.
    Use new __RW system and nlua_register() everywhere
    Replace LuaOutfit with Outfit*
    lua headers are system headers, include them that way
    * Added Lua metatable and bindings for outfits (barebones).
    Use new __RW system and nlua_register() everywhere
    lua headers are system headers, include them that way
    * Made some nlua naming consistant.
    * Split rnd from nlua.
    * Luadoc.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Made it so the Lua couldn't shouldn't crash when planets have improperly defined textures.
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    gettext for nlua modules.
    Use new __RW system and nlua_register() everywhere
    Make background script use global lua state
    Correction to my earlier library loading hack; use it in evt and misn
    
    I forgot about this...
    Run console in global lua state
    Add types to lua api docs, and other documentation improvements
    Fix various param issues LDoc (appropriately) warns about
    Replace LuaTexture with glTexture**
    Add optional radian support back to tex.spriteFromDir
    
    It might make sense to do this in other areas, since radians are often
    easier to work with when dealing with functions like atan2().
    All Lua API functions should take and return degrees, not radians
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added support for spritesheet loading with tex module (should be more natural probably).
    Remove trailing spaces in src/
    lua headers are system headers, include them that way
    Luadoc fixes.
    Luadoc fixes.
    * Lua is 1 based index.
    * Added function to get sprite from direction.
    * Luadoc.
    * Removed uneeded #include.
    * Luadoc.
    * Added texture library for Lua.
    Fixed headers that misspelled their include guards with two underscores.
    * Using fancy damage struct to prepare for generic disabling implementation.
    * Using fancy damage struct to prepare for generic disabling implementation.
    * Implemented damage absorption, not set however.
    * Implemented accuracy stats.
    * Added explosions.  Currently only used on pilot deaths.
    Remove fontconfig from dependencies
    Fixed gl_printHeightRaw so that text doesn't get cut off.
    Switched to better local fonts and removed usage of system fonts.
    Unified the high contrast printing code.
    Get rid of some uninitialized warnings.
    Excepted semi-transparent text from getting outlines.
    Added some comments noting where the implementation could be improved.
    Updated the tk text colors (no black)
    Added outlines to text.
    Simplified colors and modified image array selection colors.
    
    This gets rid of some variants of text coloring and defines them
    in a different way. The "dark" versions are removed; intending to
    replace that with outlines of some kind.
    Fixed warnings.
    Fixed color so that inert object text is legible again.
    Fix some memory leaks
    Reduce shader boilerplate with a C program generating C code
    
    Ugly, I guess, but... less?
    Use GL_RED as internalformat for font textures
    
    It seems using GL_ALPHA here isn't allowed any more, in favor of GL_RED.
    Use OpenGL 3.2 Core Profile
    Include fontconfig.h only when USE_FONTCONFIG is set
    Remove some calls to gl_vboDeactivate() and glShadeModel()
    
    These don't do anything, now that the relevant code uses shaders
    Update call to gl_vboActivateOffset() in font.c
    Use a shader when rendering fonts
    Use GL_TRIANGLE_STRIP for font rendering
    Fix some undefined behavior caught by ubsan
    Allow building without fontconfig
    Changed escape code for colors from '\e' to '\a' so xgettext plays well with it.
    More gettext.
    Fixed issues with font vbo changing while rendering.
    Try to force freetype to render as grayscale.
    Warn if font is not rendering as grayscale.
    Do not use bitmap fonts.
    Fixed small out of bounds read issue.
    Minor default font tweaks. Not entirely sure how fontconfig finds stuff and how to set it up though :/
    Let the user define their own fonts if the prefer.
    Added TODO.
    Comments.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Glyph cache texture size is now a define.
    Keep character advancement in float.
    We can get away with just ALPHA and no LUMINANCE.
    Bumped look up table to 512.
    Removed special treatment of ascii.
    Fixed limiting text width when printing.
    Fixed infinite loop when adding glyph.
    Unicode is alive!
    ASCII works as intended, unicode is still not rendering.
    Seems to work except  for the fact that no text renders now.
    Use VBO.
    Getting there.
    More structure work. Compiles and mostly unicode support is there, but still needs to generate caches and render.
    Initial support for unicode stashing - does not compile.
    font_limitSize now supports utf8.
    Split ascii from unicode.
    Rename character -> glyph.
    UTF-8 support added to the font rendering functions, however, no glyphs are actually generated yet so they don't render and get ignored.
    Fixed font display when scaling.
    Correction to include
    
    <> should be used for system headers, rather than ""
    Fix off-by-one in font width measurement
    * New planets get a nonzero radius.
    * Update radius when updating gfx.
    * Moved various path defines into ndata.h.
    * Don't reset restore colour when storing.
    * SHould handle colour restoration with multiple lines.
    * Made all the colours constant as they should be.
    * Use shared monospace font.
    * LLVM.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Whitespace, typo and general style cleanup.
    Typo fix.
    Default case for font colour codes so invalid codes don't result in garbage being returned.
    Added escape code for cDRestricted.
    * Improved handling of stuff - like them tricksy planet landing colours and such.
    * Fixed with a horrible hack a minor cosmetic problem in console.
    * Fixed new gcc -Wunused-but-set-variable warning.
    * Typo fixing patch by Paul Wise.
    * gl_printTextRaw should now respect colour along lines.
    * Fint major font rendering latent issue.
    * Colour can go across lines in gui messages or omsg.
    * NAEV now also prints everything to it's internal console.
    * Doxygen.
    * Patch to use GLshort instead of GLint for compatibility with OpenGL ES by rookie1.
    * Changing entire reference system to bottom left based, should solve shit in the long run.
    * Default matrix mode is now GL_PROJECTION. No longer need to always change.
    * font_limitSize wasn't handling escape sequences, fixued that.
    * Added black as a colour.
    * Added black as a colour.
    * Added console and dark console colours to font escape codes.
    * Reinstated map grey.
    
    Also made it capital to follow bobbens' "conventions".
    * Comments.
    * Fixed usage of uninitialized variables.
    Updated cFontPurple
    Added a new palette for fonts.
    * Some changes to coloring for player messages.
    * Added a map neutral colour.
    
    Right now, it's 30% grey.
    The neutral colour has been reset to the previous value.
    * Using brighter blue.
    * Try to better handle fonts.
    * Comments.
    * Some player_message colouring.
    * I suck at coding, seriosuly.
    * Hack so NPOT works with fonts.
    * Fixed too long lines.
    * Changed to wrapping textures.
    * Use integer coordinates for font position.
    * More correctness.
    * Add warning just in case.
    * Adjust font size if needed.
    * Try to avoid texture overflows.
    * Implemented escape codes for text.
    * Fixed mistake in coords - moved to triangles.
    * Fixed spacing bug.
    * Rendering works again - rendertext seems broken.
    * Almost working, texture coordinates seem off.
    * Doesn't work yet, not sure why.
    * More segfault protection.
    * Accidently left in a DEBUG.
    * Fonts scale at scaled resolutions for better results.
    * Added gl_printHeightRaw - should avoid some segfaults with formatted strings from Lua.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Some code clean up.
    * Fixes last patch which was atrociously bad.
    * Some font optimizations.
    * Added gl_print*Raw functions to avoid some mission segfaults.
    * Changed vsprintf to vsnprintf to be safe.
    * No longer need makefile when working in trunk, reads from directories directly.
    * Code clean up.
    * Doxygen.
    * First large ndata patch.
    * Put the round() in the font system to try to improve font quality on some system.
    * Some more control.
    * Some minor font tweaks.
    * Seem to make fonts look even better.
    * Cleaned up the font stuff a bit.
    * Greatly increased font quality.
    * Fixed some font regressions.
    * Dunno why I even made them while (1) loops in the first place.
    * Extracted more common font code.
    * Unified some font stuff.
    * Doxygenized font.[ch].
    * More doxygen and code cleanup.
    * Removed extra offset added to gl_printHeight.
    * Removed unused variable.
    cosmetic patch -> gl_screen.[wh] = SCREEN_[WH] in most places
    finally added opengl error checking in DEBUG builds
    fixed off by one memory issue
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    fixed invalid char generated from '\t' and removed tabs from missions
    major commit, first fancy bar mission, alot of improvement
    added gl_printHeight
    i think i finally fixed gl_printText properly :)
    branch:      naev
    reproved that AUTOHINTER freefont is a billion times better then DEFAULT
    branch:      naev
    fixed a major regression in gl_printText
    branch:      naev
    gl_printText is much more strict on width, with more checking
    branch:      naev
    actually fixed entirely the font width issues
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] improved the font usade
    now you can print blocks of text
    added planet descriptions
    branch:      naev
    [svn] split font stuff from more pure opengl stuff
    Make rescue script use global lua state
    lua headers are system headers, include them that way
    * Made some nlua naming consistant.
    * Split tk from nlua.
    * Luadoc.
    You can now equip unique outfits infinitely (only one per ship).
    Unique outfits once obtained always have a quantity of 1.
    Crew is necessary to be spaceworthy.
    Implemented ammo_capacity ship stat.
    Implemented launcher lockon ship stat.
    Implemented launcher damage ship stat.
    Launcher fire rate should be implemented now.
    All outfits can now add shipstats with <stats> tags.
    Added flat armour/shield modifiers.
    Added flat armour/shield regeneration modifiers.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Added symbols for faction text on the map screen, and for ship stats
    
    This is an accessibility feature for those who are colorblind. You
    no longer need color vision to see this information.
    
    Based on the idea we had before to use emojis, but using ASCII instead.
    The biggest advantage of this is that it can just be directly inserted
    into the text rather than having to worry about positioning the symbols
    manually.
    Fixed bracket placement.
    Changed fabs to FABS throughout the code.
    First pass at putting jam functionality into scramblers.
    
    It doesn't work right. The numbers are wrong. Need some help on that.
    Replaced dockslot with index int.
    Switched dockpilot to id based.
    Fixed the problem with escorts (I think).
    
    Not tested thoroughly yet, but I think this should fix the problem of
    escorts causing segfaults when their origin ship dies. A cursory test
    shows that this seems to work.
    
    This also causes pilot.setLeader to remove "deployed" status from the
    origin ship.
    Removed a now unnecessary comment line.
    Modified the way escort launching is controlled so it can be monitored in real-time.
    
    The previous method was clunky and didn't allow monitoring changes
    to how many escorts you have deployed in real-time very well. So this
    is a HUGE overhaul in how that whole thing works. It solves a bug that
    prevented you from getting new fighters when your old fighters were
    destroyed, while still limiting how many you can launch at once.
    Consider deployed fighters when refilling escorts with Active Cooldown.
    
    There's one more kink to fix: it seems fighters are often left
    considered "deployed" after destruction. Will investigate this next.
    Fixed the method of ammo refilling.
    Make pilot_calcStats calculate fuel in a simpler way
    
    Will fix the bug with activated outfits destroying all carried fuel and will make fuel tanks behave in a more understandable way.
    Make everything fuel related an int
    Tag everything related to fuel and using double with DELETETHIS_
    gettext for pilot stuff.
    Replace memcpy with struct assignment
    Made the AI handle the afterburner
    Use ship base stat instead of 1.0 for calculating of diminishing returns
    
    When the ship was configured with some stat over 100, using more than
    one modifier outfit for that stat actually resulted in a lower value
    than the ship's base value. This fixes that.
    Strip trailing whitespace
    Fix outfit CPU test (negative CPU is consumption)
    Add engine_limit_rel, allowing outfits to modify the mass limit
    Calculate energy_tau after ship stats have been applied
    beamid is an unsigned int
    Replace ship mass with ship plus core outfit mass in most places
    
    The only notable exception is transport cost, because that would allow
    players to alter the cost by de-equipping their ship.
    
    As a side effect, this also encourages appropriate equipping, as ships
    with overly-light core outfits will overheat more quickly.
    Reapply ammo mass fix that was clobbered by a bad merge (1d285e35)
    
    Ammo is now added to ship mass as it should be, and subtracted when
    fired.
    Square launchers' ew_target for comparison against squared hide values
    Remove all traces of the vestigial non-shipstat nebu_absorb_shield
    Factor outfits' absorb into pilots' dmg_absorb
    Reset more values when healing pilots
    Properly squared most ewarfare values and tweaked the mass formula
    Remove duplicate ewarfare value initialization
    Change pilot->cpu to an int.
    This avoids the player being told they have -0 CPU and can't fly their ship.
    Replaced fuel_consumption stat with fuel_consumption characteristic.
    
    fuel_consumption is a flat variable, but ship stats are clearly
    meant to be midifiers. This resulted in the game telling the player
    that fuel_consumption was a modifier. It's now a (mandatory)
    characteristic of the ship instead. This also avoids the problem of
    the arbitrary 100 fuel default consumption.
    
    Ships haven't been updated yet. That will be done next commit.
    
    I also removed a bunch of ship info from the shipyard that is
    outdated (i.e. characteristics that are no longer used, and that are
    now determined by outfits and ship stats).
    Don't skip the rest of the loop when setting the ship's afterburner
    Remove stat-specific code from pilot_canEquip
    
    Since it was decided to allow players to create non-spaceworthy ships
    in the equipment screen, this function no longer cares about stats,
    only slot sizes and a handful of edge cases.
    Replace energy_regen_flat with energy_usage.
    * Improved the speed limiter to be sane. Ship speed will not be reduced below 0 anymore, instead thrust will be adjusted if necessary.
    cleanup some whitespaces
    refactor the lua call for limiting a ships maximum speed
    Added nebu_absorb_shield shipstat
    
    Added nebu_absorb_shield shipstat, as well as a prototype outfit, nebula_shielding0,
    that uses it.  If a ship has nebu_absorb_shield, it will be applied to nebula damage
    in the same way that dmg_absorb is applied to normal damage.  Removed nebula_dmg_shield,
    nebula_dmg_armor, since they were presumably meant to do the same thing, but didn't
    have any real code attached to them in the damage calcs.  The Thurion Integrity will
    need to be updated, since it uses the old values, and since they didn't do anything,
    I have no way of knowing what -80 and -97 were supposed to mean in that context.
    I also added a nebu_absorb_armor shipstat as a placeholder, but it doesn't do anything
    yet.
    * Used define for great justice (removed repetitive code).
    Made the report generation less fancy and hopefully more maintainable
    Removed constraints when adding outfits to a ship.
    
    Change has effected the equip scripts aswell, but that had no advarse
    effects.
    Made some refractoring in the process, name and comment changes.
    The way I build the report is the most lazy way I could think of
    without storing the checks in an array/data struct with the appropriate
    string, and without writing a custom string writing function.
    * sizeof(char) is always 1. No need to keep it around.
    * Cargo space should make sense (tm).
    * CPU should be sane now.
    * Do not zero cpu for no reason.
    * Reset CPU properly.
    * Reinstate <cpu> as common flat value.
    * Using <cpu_max> and <cpu_mod> as shipstat to increase/decrease maximum cpu.
    * Llama now gets a CPU penalty as well.
    * cpu_mod now also multiplies ship cpu, not just the capacity.
    * Reset health properly when testing stats.
    * Code clean up and polish.
    * Changed wording: negative -> insufficient.
    * Try to formalize being able to equip crap better.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Flat CPU modifier shouldn't modify cpu_max.
    * Added a flat modifier for energy regeneration.
    * cpu_mod shipstat should actually work now.
    * Added flat CPU/Energy ship stats.
    Ammo can now be looted from ships when boarding (only takes what you can carry and what's compatible).
    Fixed a crash when boarding ships with cargo.
    * Added pilot_healLanded().
    Remove a few pilot flags and replace them with counters in the pilot struct.
    * Some code for heat on afterburners. Todo:
    ** Show afterburner heat.
    ** Don't toggle afterburner when used via weapon group.
    * hide_rel is replaced by ew_hide.
    * Uniformity of calls.
    * Stuff should be after pilots get set.
    * Use camelcase for shipstat as to be expected.
    * Modifiers can use energy_loss.
    * Jammers report positive CPU need.
    * Jammers use energy_loss, not energy_regen.
    Make outfit hide modifiers relative.
    Revert to the simpler sensor range model.
    * Wrapper for nsnprintf being used all over.
    fix squaring
    * Limit set on char not int.
    * Fixed segfault.
    * More generic implementation for limiting outfits to 1 per ship.
    * Causes segfault at startup.
    dulled relativity
    afterburners are more closely integrated with active outfits.
    * Implemented hide modification for modification outfits.
    * Scramblers work as intended now.
    * Added a scale factor for evasion (compared to hide). This ensures that pilots are always detected fuzzily before they are scanned, even when they're stationary.
    check for afterburner before we check if its active
    * Fixed double-tap afterburn.
    * Afterburners work, double-tap seems broken again.
    * q has been removed.
    Squared values used in the planet and jump inRange functions so that hide values (sourced from XML) are linear.
    * Jammers now work.
    Due to active outfits, ammo was no longer added to pilot mass. Apparently, shooting ammo never reduced your mass in past, either.
    fixed maps, pathfinding, and jump detection
    * Cooldown should not count as on.
    * OK, so outfits *seem* to work, but there's shit that still needs to get ironed out.
    * Doxygen.
    * Added missile lockon hook.
    * Removed pointless legacy obsolete quantity from outfit slots (it was always 1 anyway).
    * Implemented jammers as per BTAxis wishes.
    * Added tutorials for missiles and disabling.
    * Added a shield nullifier outfit.
    * Shield, armour, energy mod stats are now functional.
    * Variable fuel consumption.
    * LLVM.
    * Removed legacy mass_rel, crew_rel crap (use ship stats).
    * Fixed shit.
    * Do relative health/movement upgrades through ship stats.
    * Added energy and energy_rel mods.
    * Implemented shield/armour/energy mods.
    * Added absorption to modifications "absorb".
    * Better ship stat checks.
    * cosmetics.
    * Fixed your friendly neighbourhood NaNs from appearing in fuel (and possibly energy/armour/shield).
    * bobbens is good at math.
    * Instead of defining engine per mass, define absolute and use engine mass limit.
    * Implemented maximum engine limits for ships.
    * Changed how stuff is handled and implemented.
    * Relative bonuses are applied after absolute ones.
    * Use the ship outfit slot as a reference and do not duplicate data.
    * For pilot sanity check make sure outfits fit.
    * Outfits can be active (not able to activate them yet).
    * Active outfits only use stuff when activated.
    * Should behave the same as before now.
    * Seems to work.
    * Better handling of stats, not entirely working yet.
    * Better handling of everything, still not done yet.
    * Initial commit of ship stats, doesn't really do anything new yet.
    * Added API to get whether or not a missile is in an arc.
    * Somewhat sexier and more readable code (slightly optimized).
    * Alternative missile lock timer formulas.
    * Halved all lock targets to compensate for lack of evasion.
    * Lockon formula should make sense (tm).
    * Lockon should properly saturate now.
    * Fixed bug with decay still adding lockon.
    * Lockon decays if target is not in arc.
    * Added missile arcs.
    * Minor code optimization.
    * Lockon only affects seekers.
    * Lockon should be implemented.
    Whitespace, typo and general style cleanup.
    Many, many typo fixes.
    It's its not it's
    Allow separate nebula damage modifiers for shield and armour.
    * Nebula resistance should be nebula damage.
    * Added nebula resistance.
    Added a helper function, made sure appropriate Lua functions are called when ship mass changes.
    * Fixed bugs in calculation of ship stats.
    * Implemented more ship stats.
    * More centralization of electronic warfare.
    * Started to centralize the pilot ewarfare stuff.
    * Changed obsolete accuracy mods to heat mods.
    * Clean up.
    * Polished up the relative crew stuff.
    here is my boarding android mod, right now, there are 2 models the mk I nad the mk2, which give you 20% and 35% more crew to increase your chance of success when boarding a ship.
    I'm still using the cargo_pod gfx, because i dont have any better graphics :X
    
    here is a summary of what i changed:
            modified:   dat/outfit.xml, added outfits Boarding Androids Mk I and II (tanks Deiz for the hillarious descriptions)
            modified:   dat/tech.xml,   added the Boarding AndroidsI&II to: High Tech Upgrades, Low Tech Upgrades; added Boarding Android Mk I to Basic Outfits 2.
            modified:   src/board.c,    changed board_tryStel(...) to use the modified crew value of the pilot and not the static one f the ship
            modified:   src/info.c,     changed ship_update(...) to use the modified crew value of the pilot.
            modified:   src/outfit.c,   added functionality to load <crew_rel> xml nodes .
            modified:   src/outfit.h    added variable double crew_rel to pilot.u.mod
            modified:   src/pilot.c     changed init to init the initial crew.
            modified:   src/pilot.h     added variable double crew to struct Pilot.
            modified:   src/pilot_outfit.c changed Pilot_calcStats stats to change pilot->crew acording to temp->u.mod.crew_rel
    * Implemented damage absorption, not set however.
    * Removed some unused cruft.
    * Renamed outfit_isWeapon to outfit_isForward to make sense (tm).
    * Fixed broken turrets. I really need to fix some naming schemes...
    * Properly fixed a Clang report, you should now be able to equip again.
    * Seem to have fixed the fire rate bug.
    * Clang is picky.
    * Added all the heat framework.
    * Separated the pilot cargo stuff into pilot_cargo.[ch].
    * Renamed some stuff to be more consistant.
    * Cleaned up all secondary stuff, moved to different secondary weapon system.
    * Clean up and code moving.
    * Split up pilot files a bit.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    made mining more user-friendly
    Changed the inrange computation method
    Rework beams in accordance with the Beam Revamp proposal
    
    Beam refire delays now scale with how long they're fired, relative to
    their maximum duration. They can only be fired again once they reach
    full charge, however.
    Active outfits should be disabled and not toggleable when a ship is disabled.
    * Merge master into slots, part deux.
    moved outfit off code into functions
    afterburners actualy burn when activated by weapon group.
    abstracted player_afterburn for all pilots
    afterburners actualy burn when activated by weapon group.
    abstracted player_afterburn for all pilots
    * More work in the path of getting it all working.
    * Moving to new weapon set type things, halfway there.
    * Proper way of setting default for players in range weapon set parameter.
    * When you remove an outfit your weapon list gets sanitized.
    * On load of player ships, set weapon set to default one.
    * Weapons only shoot when in range by default.
    * Weapon sets will do heat load balancing.
    Separated out rate modifier code into its own function.
    * Fixed memory leak.
    * You can now hold fire groups and they will shoot.
    * Fixed typo.
    * You can set fire mode for weapon sets now.
    * Cleaned up all secondary stuff, moved to different secondary weapon system.
    * Visual indication of weapn slots.
    * Create weapon set window (not usable yet).
    * Weapon sets can have names now.
    * Calculate weapon set ranges.
    * Set default weapon modes.
    * Start to create function to auto set the weapon sets.
    * Implemented weapon levels and fixed shootStop.
    * Some clean up and the likes.
    * Some clean up to try to move to the new weapon set system.
    * Forgot files in the last commit.
    Use new __RW system and nlua_register() everywhere
    Make background script use global lua state
    lua headers are system headers, include them that way
    * Added lua bindings for background functions.
    Refer to macOS as 'macOS' everywhere
    Fix #define clang warnings
    * Fixed some warnings due to behaviour changes with sdl2-config.
    * I'm told windows is not as mean these days.
    * NAEV should now be endian-neutral.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * See if this fixes windows build.
    * Allow compile-time define of whether pack.c uses FILE* or int fd.
    * Some macro updates.
    * Much better OS compatibility macros now.
    Use new __RW system and nlua_register() everywhere
    Use Vector2d instead of LuaVector
    lua headers are system headers, include them that way
    * Made some nlua naming consistant.
    * Added luaL_checkvector.
    * Makes more sense now.
    * Split vec2 from nlua_space.
    Remove __NLUA_RW, using __NLUA_CURENV instead
    Replace remaining uses of Lua globals with Lua environments.
    
    This fixes crashes in the tutorials (and probably other events).
    Revert "Call getfenv in nlua_pcall() eliminating the need to pass the"
    
    This reverts commit 79e36c0c1bbca2aa5fa2922651dd303bc7b87882.
    Call getfenv in nlua_pcall() eliminating the need to pass the
    environment as an argument
    Renamed __RW to __NLUA_RW to be more obvious what it is.
    Add nlua_pushenv() function
    
    Use in various cases where the full environment table is pushed to the
    stack.
    Use new __RW system and nlua_register() everywhere
    Fix __RW handling and use it for pilot API
    Set __RW for each env
    Do not define nlua_errTrace() in header, since it is now used only in nlua.c
    Write nlua_pcall() and NLUA_CHECKRW()
    Remove wrappers around code needed for creating lua states
    Have conf use global lua state
    Create nlua_register() function
    Add nlua_setenv and nlua_getenv function
    
    They behave like getglobal and setglobal, but use a sandboxed
    environment instead of gloal state
    WIP change to use one Lua state; does not yet compile
    
    Starting with ai.c
    Many, many typo fixes.
    * Using macro for done.
    lua headers are system headers, include them that way
    * Added function to get stacktrace from Lua.
    * Some nlua sanitizing.
    * Split tk from nlua.
    * Luadoc.
    * Split rnd from nlua.
    * Luadoc.
    * Split naev module from nlua.
    * Luadoc.
    * Split nlua_time from nlua.
    * No longer calling luaopen directly.
    * Removed unsafe functions from mission lua envs.
    * Added include function to load other lua files.
    * Wrapping around luaL_newstate and luaopen_base.
    begin cleaning up lua code a bit
    * Formatting.
    * Added my (dodgy) queue implementation.
    * Added local maps.
    adjusted OutfitMapData for new map system.
    is in seperate file due to include loop.
    Revert "Use glu to retrieve error strings"
    
    This reverts commit 65a1d81da731557f159dad342a2f27d9ca58897c.
    
    BTAxis reported compile issues under Windows due to this.
    
    This is really only for convenience and saving code, so it can be
    reverted if it turns out to no longer be convenient...
    Use glu to retrieve error strings
    
    We're already linking against it; so we might as well use it
    Reduce shader boilerplate with a C program generating C code
    
    Ugly, I guess, but... less?
    Do not include SDL_opengl.h
    Use glad instead of galogen
    
    Similar idea, but a more major projects that, among other things,
    handles hhrplatform.h.
    Replace opengl_ext.c with files generated using Galogen
    
    Looking at several OpenGL extension loading libraries, I like Galogen
    because it allows generating files for any choice of GL version and
    extensions. So when we (hopefully) switch to GL 3.2 Core, we can
    generate headers for such and it will be a compile error to use features
    that are removed in that version, or added by later versions.
    
    Generated with:
    ```
    galogen gl.xml --ver 3.0 \
                   --profile compatibility \
                   --exts ARB_texture_filter_anisotropic
    ```
    
    https://github.com/google/galogen
    Pass projection matrix to texture.vert using uniform
    
    The previous code relies on deprecated OpenGL matrix functionality.
    Add some helper functions for dealing with shaders
    Remove all C code meant to support SDL < 2.0.0
    Input widget text input box should now appear at the right position.
    More explanation since I'm dumb and misunderstand my own code every time.
    Simplified code, fixed mouse position with scale factor.
    Initial commit of resizing and fake fullscreen
    
    All of this is exclusive to SDL2.
    
    SDL_WINDOW_FULLSCREEN_DESKTOP allows Naev's window to be the size of
    the current screen without setting video mode (and thereby turning off
    other screens, messing up background window positioning, etc.), but to
    use it, we need to be able to resize the GL viewport on demand.
    
    The work required to allow that also permits dynamic resizing while
    playing, as long as a few other things are also reinitialized (a minor
    issue).
    Detect Intel hardware specifically
    * We don't actually need an OpenGL renderer, just do everything with OpenGL context.
    * Actually create opengl context and a bit of error checking.
    * Almost there.
    Many, many typo fixes.
    * More or less working, however there's issues with custom widgets.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Smarter resolution choosing.
    * More FSAA fixes.
    Improved error handling
    * Made the -DDEBUG and -DDEBUG_PARANOID common cflags.
    * OpenGL errors now print the name of the function where that happened.
    * Rewrote conf framework to be much more robust and better overall.
    * Moved most of the matrix stuff into opengl_matrix.
    * Initial VBO framework.
    * Stars using VBO.
    * Removed some unused stuff.
    * Split glTexture from opengl.c.
    * Made it so opengl.h has all the opengl headers in it.
    * Split drawing functions from opengl.c.
    * Moved extension handling code out of opengl.c.
    * NAEV should now be endian-neutral.
    * Scalefactor included by popular request.
    * Implemented planet bribing.
    * Should fix even more issues with small resolution scaling.
    * Added flags to image creation to control transparency mapping.  Should speed up theloading some and reduce memory usage.
    * Fixed some recently introduced issues with the scaling.
    * Doxygen.
    * More commentaries.
    * Code cleanup.
    * Doxygen.
    * Scales window when size is too small to not have stuff get cut out.
    * Added support for FSAA.
    * Use desktop resolution if fullscreen mode is set without specifying dimensions.
    * Added options for enabling vsync.
    * Fixed some doxygen mistakes.
    * More doxygen stuff.
    * Removed unused gl_blitRotate().
    * Added gl_blitScale().
    * Rumble can no longer "leak" over to menus and such.
    * Check for multitexture abilities.
    * Check for texture leaks.
    * Almost working nebulae except for a major graphical glitch.
    * Now will initialize nebulae.
    * Nebulae use a smaller more optimal format, reducing size.
    * Added SDL_SavePNG.
    * Cleaned up code a bit.
    * Coded "ingame" viewer for targets.
    * Now only loading once shared graphics.
    fixed opengl blitting stuff a bit
    unnoticeable changes
    some opengl cleanup
    finally added opengl error checking in DEBUG builds
    check for shaders (not used yet), fixed fullscreen issues
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    branch:      naev
    no need for trans colour with ACOLOUR
    branch:      naev
    added basic map support, added gl_drawCircle, added cYellow
    branch:      naev
    C correctiveness patch
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] split font stuff from more pure opengl stuff
    branch:      naev
    [svn] added support for images of planets
    cosmetic toolkit changes
    changed the gl_blit functions to work with doubles instead of Vector2d pointers
    took opportunity to clean up space.c xml (bringing it up to xml.h standard)
    cleaned up code
    branch:      naev
    [svn] moved colours out of opengl
    improved land graphics
    added more sane toolkit api
    branch:      naev
    [svn] Basic toolkit implementation done
    added gl_printMax and gl_printMid which was long overdue
    using flag system with gl_screen
    optional AA for primitives
    minor pause behaviour fix
    branch:      naev
    [svn] major syntax rewrite, big "what the hell was I thinking" in player.c
    made opengl.h struct names more intuitive
    branch:      naev
    [svn] Basic toolkit implementation (but ugly)
    Basic landing
    Pause bugfixes
    branch:      naev
    [svn] switched to commonwealth spelling (armor -> armour)
    implemented seeker missiles and ammo
    implemented secondary weapons
    branch:      naev
    [svn] rudimentary screenshot taking
    put some data info in start.xml
    branch:      naev
    [svn] More cosmetic patches!
    branch:      naev
    [svn] GUI's NAV and WEAPON monitors are now used, just need to add MISC
    branch:      naev
    [svn] Brought render script up to date
    added new ship (still needs target image)
    GUI API should be complete
    branch:      naev
    [svn] targetting graphic now displays color based on the targetted pilot
    branch:      naev
    [svn] bug fixes
    fleet improvements
    per pixel collision
    branch:      naev
    [svn] added message system
    fixed spinning laser bug
    branch:      naev
    [svn] moved everything to directories
    cleaned up Makefile
    improved AI
    branch:      naev
    [svn] minor fixes
    dynamic keybind loading from configuration file
    sample configuration file added
    branch:      naev
    [svn] moving background
    improved opengl workings
    minor tweaks
    branch:      naev
    [svn] cosmetic changes, minor fixes
    branch:      naev
    [svn] gl_print the printf for opengl now works! :)
    branch:      naev
    [svn] more files yay
    branch:      naev
    [svn] just uploading working copy
    branch:      naev
    [svn] working libxml at ship.c
    fixed all memory leakage
    branch:      naev
    [svn] good blitting system, pilot/ship outline
    branch:      naev
    [svn] blits, opengl loads properly, looking good
    Optimize the map by skipping out-of-bounds names and systems
    * Added planet.getLandable().
    * Refactored code.
    * Cleaned up code.
    Many, many typo fixes.
    Use Naev's RNG(), not rand()
    Added a function for randomly shuffling arrays.
    * Added RGB->HSV routines.
    * Manipulate targetting graphics in HSV space.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Fixed warning.
    * GUI now aproximates graphical health bars with least squares linear aproximation.
    * Added nmath to handle more math aspects of naev.
    Change the sound speed based on base time rate.
    
    Requested by bobbens: this makes it so that sound plays at 1x if
    you're at your ship's base time rate, etc.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Don't undo player-initiated pause when closing toolkit windows
    * pause_delay is no-op, removed.
    * Major refactoring of the pilot. It is now all contained in a struct.
    * Better handling of sound pausing/resuming.
    * Sound pitch changes (on openal) with game sound change.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Pausing all sounds when pausing now.
    * Small code clean up.
    * Pause engine sounds when pausing.
    * Even more doxygen.
    * Removed all non-dt timers from stuff that should be dt based.
    * Converted the outfit timers to the dt system.
    * Added toggle 2x speed keybind.
    * Doxygen.
    * Fixed bug in weapon system timers.
    * Removed dependency of the spawn_timer on SDL_GetTicks().
    * Added boolean to control spawn.
    * Switched SPFX timers to something more sane.
    * Switched weapon timer method to something more sane.
    * Renamed pilots and mpilots to pilot_nstack and pilot_mstack.
    * src/pilot.c: binary search works on ints near max.
    pause forced with toolkit, linux specific stuff for saving
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    branch:      naev
    added some code to hopefully help prevent dt intervals that are too big
    branch:      naev
    added spawning, will need tweaking
    branch:      naev
    added explosions with a primitive special effect system
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] removed hard forcing of player speed and instead it uses incremental slowdown
    fixed bug where pausing while hyperspacing gave instant travel
    branch:      naev
    [svn] Basic toolkit implementation (but ugly)
    Basic landing
    Pause bugfixes
    branch:      naev
    [svn] added beginning frame for toolkit
    added ability to pause/resume game
    nerfed lasers armour damage
    Add attributes.h for portable attribute macros
    Might as well make nfile_dirname return const char* while I'm at it.
    Made nfile_dirname take a const char* as parameter to strongly indicate that it won't be modified.
    Comment _nfile_path_macro
    Detect AppImage environment and adjust paths
    Rework nfile_concatpaths parameters to catch more errors during build.
    ndata is dead! Long live ndata!
    Added function to check if a character is a file separator, which should improve support for windows paths with backslashes and not forward slashes.
    Added support for fontconfig and finding system fonts.
    Changed nfile/ndata/nzip API to use size_t when makes sense.
    Make NAEV write to stderr and stdout, then on close, copy them over to
    yyyy-mm-dd_hh-mm-ss_std[err/out].
    
    This enables the developper to keep track of evolutions between multiple
    runs, but also to (auto-)reload stderr and stdout after each run,
    instead of searching for 2 new files each time, which is quite a pain...
    Swap out the horrible hacks for something more elegant.
    save assets using laid out structure
     - changes appear immediately on disk
    * XDG patch by aanderson.
    user data should go into $XDG_DATA_HOME (.local/share by default)
     - .naev/saves -> ~/.local/share/naev/saves
     - .naev/screenshots -> ~/.local/share/naev/screenshots
    
    user preferences should go into $XDG_CONFIG_HOME (.config by default)
     - .naev/conf.lua -> ~/.config/naev/conf.lua
     - .naev/conf.lua.backup -> ~/.config/naev/conf.lua.backup
    
    cached data should go to $XDG_CACHE_HOME (.cache by default)
     - .naev/gen -> ~/.cache/naev
    * Added nfile_dirExists, use it for creating directories.
    * Added nfile_dirname as portable substitute for dirname.
    * Now look for scripts in binary path after looking locally.
    Add a generic file writing function nfile_writeFile.
    Generalize file back up as nfile_backupIfExists.
    * No longer need makefile when working in trunk, reads from directories directly.
    * Code clean up.
    * Doxygen.
    * Create .naev/conf if not found.  Left empty though.
    * If ndata isn't found, try to be a bit more robust in finding it.
    * Now will initialize nebulae.
    * Nebulae use a smaller more optimal format, reducing size.
    misc fixes and prompt before overwriting pilot
    you can now save and partially load games (mission data is lost)
    added filesystem abstraction and path based stuff
    Added popup with Text + Image
    Implemented a test usage in Start Event
    To test, just start a new character
    Minor whitespace and fixes and s/\t/   /g
    [v2] add dialogue_listPanel/dialogueListPanelRaw
    
    This creates 2 new dialogue types, specifically for popping up a
    dialogue_list with more information than what is contained in the
    actual list.
    * Added list dialogue.
    * Patch by Barry for adding choice boxes to the Lua API.
    * Do not use vnprintf for Lua stuff (avoids possible segfaults).
    * Fixed minor flag bug.
    * Small menu should no longer open over dialogues.
    * Seperated dialogues from toolkit.
    Translate window titles when possible.
    Fixed button
    Increase button sizes for find dialogs.
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Fixed the rest of the text colors.
    Simplified colors and modified image array selection colors.
    
    This gets rid of some variants of text coloring and defines them
    in a different way. The "dark" versions are removed; intending to
    replace that with outlines of some kind.
    Removed the ugly uses of cDConsole as a color for headers.
    
    Replaced those all with black; headers don't need to be a different
    color and it honestly looks nicer without one.
    Fixed several strings and lack of gettext usage.
    Prevent an occasional bad read when searching for outfits
    
    I wasn't able to reproduce it, but I ran into an AddressSanitizer
    error that appeared to be caused by accessing slist[i-1] when i was
    0. How this happened, I haven't a clue. But I've added a check to
    make sure that i > 0 before doing this.
    Updated the search's display of mass
    More gettext.
    Changed escape code for colors from '\e' to '\a' so xgettext plays well with it.
    Strip trailing whitespace
    Fix memory leaks and uninitialized value in map find
    Move the map_find_t typedef into map_find.h
    Colourize all planet results in the map find based on landability
    
    This forces landability to be computed via Lua, which is somewhat
    expensive, though it shouldn't take more than a few milliseconds.
    * Sanitized hidden jump point handling.
    * jumpDist and adjacentSystems now by default IGNORES hidden jump points, if
      you want to actually handle them, there is a new hidden parameter that lets
      you change the behaviour to how it was beforeish, except it now is
      consistant.
    Added search shortcut to outfitter and shipyard.
    Fixed up widths and offsets in the map find window.
    * Wrapper for nsnprintf being used all over.
    * Make sure planets are known when searching.
    * More LLVM fixes.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Whitespace, typo and general style cleanup.
    Use map grey instead of black, for uniformity.
    Colour-code planets in the planet search.
    * Fixed warnings.
    Doxygen cleanups
    
    Fix missing doxygen statements
    [v2] map_find: add Outfit Details to Outfit Search
    * Fixed more uninitialized things.
    * More LLVM (scan-build) fixes
    * Only do exact match if there's a single match.
    * Fixed minor memory leak in search window.
    * You can now search ships too.
    * Outfit searching works 100%.
    * Code simplification and fix of memory leak.
    * Using fugly globals to look up techs and thus do faster multiple searches (and simplify some stuff).
    * Search only looks for outfits known to be sold.
    * Can search outfits, not find where they are and shows all outfits in game.
    * Distances are now properly calculated.
    * Handle only known system paths when searching.
    * Handle no found paths when searching.
    * Made map search results window larger.
    * Planet searching now works fully (still missing distance calculations though).
    * Bigger window for search results.
    * Search results displayed, can choose target.
    * Finds and sorts systems with partial matches.
    * Handle exact match differently.
    * Exact planet/system search should work as before.
    * Cosmetics.
    * Made search targets mutually exclusive.
    * Store and load old checkbox values.
    * Find window is more sexy now.
    * Starting to look ok.
    * Split map find functionality to expand soonish.
    Whitespace.
    fixed crosscompiling for openal binaries.
    should fix any errors if building without openal.
    Use logarithmic music and sound volume when using OpenAL.
    * Might fix an issue with Mac OS X.
    * More code properness.
    * Trying to rewrite load functions.
    * Compiles with OpenAL backend.
    Fix warnings when building with clang
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Changed escape code for colors from '\e' to '\a' so xgettext plays well with it.
    Made wcwidth static (only win32).
    Windows doesn't need alloca.h
    Added implementation of wcwidth for windows.
    Removed warnings.
    UTF-8 support added to the font rendering functions, however, no glyphs are actually generated yet so they don't render and get ignored.
    Simplified colors and modified image array selection colors.
    
    This gets rid of some variants of text coloring and defines them
    in a different way. The "dark" versions are removed; intending to
    replace that with outlines of some kind.
    Fixed color so that inert object text is legible again.
    Do not include SDL_opengl.h
    * Added primary color definitions.
    * Jump line colors are now properly set.
    * Made all the colours constant as they should be.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    New colour (cDRestricted) for font use, primarily.
    * Added restricted colour.
    Many, many typo fixes.
    It's its not it's
    * Standardized the black background hilight.
    * Added black background hilight to OSD.
    * Doxygen.
    * Implemented hilighting of pilots.
    * Optimized blend func a bit.
    * Changed includes that can give issues on mac os x.
    * Changed includes that can give issues on mac os x.
    Added a colour blending function.
    * Added RGB->HSV routines.
    * Manipulate targetting graphics in HSV space.
    * Added aqua as a colour.
    * Changed Sirius faction colour to aqua.
    * Set factions for various planets as a guideline for future editing.
    Added a new palette for fonts.
    * Some changes to coloring for player messages.
    * Added a map neutral colour.
    
    Right now, it's 30% grey.
    The neutral colour has been reset to the previous value.
    glColour is now packed and uses floats
    * Added more colours
    * Added a routing to convert names to colours
    * Added HSV->RGB converter.
    * More marker tweaks.
    * Now draws fancier markers.
    * Major rewrite to xml.h increasing sanity checks.
    * Gui can now handle overlays.
    * Changed some colours around.
    * Fixed stupidity in physics.h
    * Added the line thing for planets also.
    * Doxygenized glColour.
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    added purple, can now change toolkit image colour
    branch:      naev
    added blue/darkblue
    branch:      naev
    no need for trans colour with ACOLOUR
    branch:      naev
    added cTrans (transparent colour)
    branch:      naev
    added basic map support, added gl_drawCircle, added cYellow
    branch:      naev
    now selected list stuff actually renders and you can focus it
    branch:      naev
    C correctiveness patch
    branch:      naev
    some code cleanup (MELEMENT sanity)
    added information and ship spec windows
    some more comments here and there
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] new target graphics!
    new hyena graphic!
    split more colour stuff from player.c to colour.c
    minor gui tweak
    branch:      naev
    [svn] added support for images of planets
    cosmetic toolkit changes
    changed the gl_blit functions to work with doubles instead of Vector2d pointers
    took opportunity to clean up space.c xml (bringing it up to xml.h standard)
    cleaned up code
    branch:      naev
    [svn] moved colours out of opengl
    improved land graphics
    added more sane toolkit api
    Added support for exclusion zones.
    
    I also had to clean up some code (magic numbers in particular, replaced
    with an enum). There is an example exclusion zone in Lapis.
    Replaced the polygon definition of asteroid fields with simple circles.
    
    I kind of get why it was implemented that way: you can define all kinds
    of wacky shapes real easily. But in the vast majority of cases don't
    need that, and it makes defining asteroid fields needlessly complicated.
    In the few cases where complicated shapes might be needed, it's easy
    enough to approximate shapes with a series of circles.
    
    The code is much simpler, too.
    
    Display in the map editor has been removed at least temporarily.
    Hopefully should add it back in later.
    Write <type> field of <asteroid> in dsys_saveSystem
    
    Before this, "save all" in the universe editor was removing the <type>
    tag. Now, it leaves the xml unchanged.
    SOLVED #826 : removed debug logs after issue is solved
    Added extensive logging upon entering Universe Editor ; restored Hakoi.xml
    Debug log on dev_sysedit and dev_system
    Add a Map Outfits Editor for selecting/unselecting entire systems
    
    Add the Map Editor window
            src/dev_mapedit.c
            src/dev_mapedit.h
            src/Makefile.am
    
    Add file name and description parameters to dsys_saveMap()
            src/dev_system.c
            src/dev_system.h
    
    Remove Save Map button from Universe Editor
            src/dev_uniedit.c
    
    Add an intermediate menu for Universe and Map Editors, that could accomodate other future editors
            src/menu.c
            src/menu.h
    Add a Map Outfits Editor for selecting/unselecting entire systems
    
    Add the Map Editor window
            src/dev_mapedit.c
            src/dev_mapedit.h
            src/Makefile.am
    
    Add file name and description parameters to dsys_saveMap()
            src/dev_system.c
            src/dev_system.h
    
    Remove Save Map button from Universe Editor
            src/dev_uniedit.c
    
    Add an intermediate menu for Universe and Map Editors, that could accomodate other future editors
            src/menu.c
            src/menu.h
    More gettext.
    Made required changes
    added decorative asteroids
    Fix compile errors when the flag -Werror=format-security is set
    * You can now configure where to save stuff with the editor instead of hardcoded relative paths.
    * Hacked in a "Save Map" button for the universe editor.
    ** Save Map button will save a map outfit file to dat/outfits/maps/.
    ** Systems included in the map are those systems selected with ctrl+click.
    ** Hidden jumps and exit-only jumps are not included in the map.
    * sizeof(char) is always 1. No need to keep it around.
    * Memleak fixes and code clean up.
    Fixed some renaming bugs and reduced duplicate code.
    Clean-up and fixed some minor renaming bugs.
    * Wrapper for nsnprintf being used all over.
    remove capitals and spaces from file names.
    
    Conflicts:
    
            src/dev_planet.c
            src/dev_system.c
    * Removed unneeded function (quiets warning).
    * Fixed name filtering.
    set cleanName and free it after
    filter out characters unsupported by Windows.
    save more.
    * Removed all references to asteroids. Not implemented, will never be implemented this way.
    * Unsquare values when saving.
    * Bit more formalized saving scheme.
    * Save exitonly property.
    remove jump point type in favor of flags
    hide value saves for jump points.
    removed all traces of the onMap system
    jump properties are saved and loaded.
    also, editor saves additional properties
    more jump stuff
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Don't save jump position when autopos flag is set. Set a default radius instead of requiring explicit declaration.
    * Doxygen.
    * Added support for per-system backgrounds.
    * Updated the dev stuff to save properly using presence.
    * Fancier jump reconstruction algorithm which takes into account AUTOPOS flag among other things.
    * No longer automagically add tags.
    * Automagically adding autopos tag to all jump points.
    * Automagicalyl adding radius tag to all systems.
    * Using new jump point system, behaves exactly the same as the old system.
    * Generate random jump point information for now.
    * Comments and put fleets last.
    * Sort jumps too by system name.
    * Sorting planets alphabetically also now.
    * Sort systems alphabetically.
    * Added new files to compile chain.
    * It should all actually compile now.
    * Missing two files.
    Strip trailing whitespace
    Allow damage types to associate themselves with arbitrary ship stats
    
    For the time being, these must be non-absolute doubles.
    * Added proper header guards.
    * Outsource damage types to XML.
    * Note: still buggy.
    zigzag AI
    Renamed "dumb"/"dumbfire" rockets to "unguided".
    
    The term "dumbfire" (which doesn't seem to be in common use outside
    of a select few video games) comes from the term "dumb", which is
    ableist on two counts: firstly, it's sanist because the meaning
    "dumbfire" is derived from is "stupid" or "of low intelligence".
    Secondly, the term "dumb" actually originates from ableism against
    mute people, albeit in the German language rather than English.
    
    The term is imprecise, anyway, so I've changed it to the more precise
    and non-ableist term, "unguided".
    Implemented launcher damage ship stat.
    Launcher fire rate should be implemented now.
    Removed "stupid", "idiot", "moron" occurrences.
    
    These are also sanist terms, so I replaced them with better terms,
    like "fool" (the term with the same literal meaning in contemporary
    usage), or generalist insults like "asshole".
    Fixed bracket placement.
    Suppress a warning about an uninitialized value
    Warnings.
    Fixed friendly/hostile setting.
    
    The previous system was very hodge-podge and had a lot of duplicated
    checks, leading to some inconsistent behavior. I've consolidated all
    checks to the setHostile / setFriendly / isHostile / isFriendly
    functions.
    
    This fixes a bug where a pilot that was set as friendly but became
    hostile due to aggression was impossible to target with the "target
    nearest hostile" button.
    default to using polygons with weapon collision, only fallback if not possible.
    Changed fabs to FABS throughout the code.
    update on polygon collision
    polygonal collision algorithm
    Reduce shader boilerplate with a C program generating C code
    
    Ugly, I guess, but... less?
    Remove some legacy glDisable() calls
    OK, we got it!
    
    I repurposed Jam Resistance to be used as "tracking" and adjusted
    the numbers. Seems to work pretty decently well.
    Made beams aim at asteroids.
    
    Involved even more work than I thought, but done! Beams now aim at
    asteroids (if no pilot target is selected).
    Better I think?
    
    Needs some more testing.
    Might work?
    
    Untested.
    Added beams damaging asteroids.
    Shader based beam rendering
    Create a "smooth" shader, to replace some of the remaining code
    First pass at putting jam functionality into scramblers.
    
    It doesn't work right. The numbers are wrong. Need some help on that.
    Made turret weapons aim at asteroids (if no pilot target selected).
    
    This makes it easier to mine asteroids with turret weapons, and it
    makes sense that it would work this way.
    
    Pilots have priority for being aimed at over asteroids since battles
    where asteroids are accidentally selected could happen, and
    accidentally firing at an enemy when mining asteroids is less
    harmful than accidentally firing at an asteroid when defending  yourself.
    Added support for exclusion zones.
    
    I also had to clean up some code (magic numbers in particular, replaced
    with an enum). There is an example exclusion zone in Lapis.
    Added damage checks for asteroids.
    
    Asteroids now take "armour" damage until they lose said "armour",
    rather than being instantly destroyed.
    Removed the "Asterokiller" distinction.
    made mining more user-friendly
    More gettext.
    Destroyable asteroids
    Hopefully this will fix the rare segfault in pilot_stopBeam()
    
    This was happening when the pilot firing the beam had been destroyed.
    Avoid coercing const to non-const
    Remove vectcpy(), and replace it with simple assignments
    Fixed an aim issue
    Changed the inrange computation method
    bugfix
    changed the aim method
    Combine ai_extra.h into ai.h
    
    Use forward declaration of struct to deal with cyclical import.
    * Give also damage done by the attacker in the hook.
    Rework beams in accordance with the Beam Revamp proposal
    
    Beam refire delays now scale with how long they're fired, relative to
    their maximum duration. They can only be fired again once they reach
    full charge, however.
    Replace hard-coded ammo AI types with an enum
    Rework and optimize distress
    
    This was meant to be two commits, but the changed lines were adjacent.
    The main gameplay change here is that pilots will notice attacks that
    happen near them and react appropriately, regardless of whether the
    victim has broadcast a distress yet. This should make player piracy in
    inhabited systems significantly more difficult.
    
    The second part of this is a few small optimizations to pilot_distress,
    only running several of the checks if the player is the attacker.
    Prevent nebula damage from resetting shield timers
    * Wrapper for nsnprintf being used all over.
    Avoid serious memory issues.
    * Consider ammo jam resistance.
    * Better handling of smart seeker slow down caused by jammers.
    * Jammers now work.
    * Made all the colours constant as they should be.
    Little bit of clean-up, more logical variable naming.
    Removed now-obsolete "turret ammo" type, as regular ammo is handled properly in turrets.
    As multiple launchers can share the same ammo type, handle launchers when creating weapons, not ammo.
    Comment was lying before. Now it isn't. Aiming still fails to factor in speed differential, it seems.
    * Beams disable damage should be per second, not per frame.
    * Added flag to make pilot invincible to the player's shots.
    * OK, so outfits *seem* to work, but there's shit that still needs to get ironed out.
    * Implemented jammers as per BTAxis wishes.
    * Initial commit of ship stats, doesn't really do anything new yet.
    * Outsource damage types to XML.
    * Note: still buggy.
    * Using fancy damage struct to prepare for generic disabling implementation.
    * Using fancy damage struct to prepare for generic disabling implementation.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    * Fixed missiles not hitting their target.
    * Removed old missile lockon.
    Whitespace, typo and general style cleanup.
    Many, many typo fixes.
    * Fixed more uninitialized warnings.
    * Have weapons get rendered properly when newly created.
    * Should fix rare segfault.
    When colouring radar projectiles, actually get hostility.
    * Fixed improper transition with swivel.
    * Added swivel weapons, may need more swivel.
    * Weakened lead angle modulation.
    * Added concept of turret tracking and thus dynamic lead angle based on ewarfare.
    * Using different solid update techniques for different objects.
    * Made the speed limit internal part of the runge-kutta function.
    * Fixed issues with minbrakedist.
    * Using more sane drag function.
    * Changed obsolete accuracy mods to heat mods.
    * Enabled lead angle.
    * Should check if it compiles...
    * AI pilots always hit their target.
    * Removed references to "old" accuracy.
    * Split the ammo weapon creation stuff from weapon_create.
    * Weapon turret improved aiming patch by HatlessAtlas.
    * Moved bolt creation stuff out of weapon_create.
    * Implemented damage absorption, not set however.
    * Made beam ids unsigned to make the population happy.
    * Fixed missile lock not getting reset on pilot.clear().
    * Fixed Clang report.
    * Fix voodoo.
    * Fixed possible issue.
    * Fixed implementation, feels totally wonky though.
    * Implemented accuracy and fire rate mods for heat.
    * Initial commit of the camera model.
    Fixed radar weapon colouring, once and for all.
    * Fixed beam rendering.
    Fix a long-standing, unbelievably trivial bug.
    * Default matrix mode is now GL_PROJECTION. No longer need to always change.
    * Removed totally obsolete, unknown and unused weapon safety (sorry Deiz).
    * Implemented weapon lockon and evasion.
    * Can't hit invisible stuff.
    * implemented land/takeoff without visual cue.
    * Major refactoring of the pilot. It is now all contained in a struct.
    * Faster memory allocation algorithms.
    * Some changes to coloring for player messages.
    * Shooting disabled ships no long triggers combat music.
    * Luadoc.
    * More bugs detected with scan-build.
    * You can no longer get negative accuracy.
    * Increased targetting computer accuracy.
    * Fixed accuracy.
    * Better focus handling in equipment window.
    * Fixed accuracy giving 2x the bonus/malus.
    * Increased allocation values to try to make game more fluid with higher numbers of pilots.
    * Added damage modifier concept to weapons.
    * Make sure damage can't go negative.
    * Keep as positive for displaying reasons.
    * Implemented accuracy stats.
    * Dumbfires by player or escorts should show up as neutral now.
    * Simplified launchers and ammo.
    * Missiles don't hit while locking on.
    * Jammed missiles don't go straight anymore.
    * Added invincibility status to pilots.
    * Remove friendly status when pilot got hit.
    * Someone claims I confuse then/than, lies I say!
    * Fixed some beam weapon visuals.
    * If weapon destroys shield display armour hit sprite.
    * Improved physics model.
    * Fixed beam weapons.
    * Compiles cleanly - nothing works.
    * New super flexible backend for sound with SDL_mixer implementation.
    * Turrets should aim better.
    * Bribed ships shouldn't hit player anymore.
    * Implemented <sound_hit>.
    * Beams now use zoom.
    * Interpolate shots from start, not falloff.
    * Save some cycles by only interpolating if needed.
    * Using gfx_end instead of hues.  Weapons render with gfx_end.
    * Better handling of hues in blot weapons.
    * Bolt weapons can now work with HSV colourspace (only hue) if you are so inclined.
    * Implemented weapon falloff.
    * Sped up weapon code a bit.
    * Fixed misinitialization.
    * Added blowup properties to outfits so they blowup when they time out.
    * Fixed sloppy patch using uninitialized memory (thanks zid).
    * Fixed possible segfault.
    * Added gl_vboData.
    * Replaced the weapon minimap draw stuff with VBO stuff.
    * Removed gui_xoff/yoff externs.
    * Cleaned up camera stuff.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Typo in comment.
    * Should fix the last of the angle issues.
    * Radar also has stuff dissappear if out of range.
    * AI Pilots will only hit hostiles now.
    * Greatly cleaned up the hit code.
    * Pilots should properly react better in combat.
    * Properly stop sounds when destroying outfits.
    * Whitespace fix.
    * No longer hit bribed enemies when hostile to their faction.
    * Smart seekers are really smart now.
    * Should fix possible segfault with beam weapons.
    * Fixed segfault.
    * Interference now affects targetting and communication.
    * Added concept of distress signals.
       * Ships under attack generate distress signals.
       * If someone gets the signal, and player is attacking player loses faction.
       * Limited by interference.
    * Fixed rare and elusive segfault bug in ai.
    * Tweaked faction loss some.
    * Have shots go through dead ships.
    * Colour seekers properly.
    * Tweaked projectile colour a bit more.
    * Use different colours for bullets on the radar.
    * Changed how player hits stuff - you now miss neutral/ally with safety on.
    * Also always hit target if player.
    * No longer hit escorts with missiles.
    * Can't hit escorts.
    * Allies turned hostile can fire back.
    * New keybind to toggle weapon safety vs allies.
    * Should sanitize some how pilots react to taking damage.
    * More robust checking of ship hostileness.
    * Missions now enforce hostile/friendly status in some missions.
    * Ripped the GUI stuff out of player.c and put it in gui.c.
    * Have player keep track of hostiles it has in system.
    * Code clean up.
    * Using confidence intervals from macrso now.
    * Fixed mace rockets.
    * No longer take into account sprite size when creating weapons (was broken anyways).
    * Take into account outfit sprite size when creating outfit.
    * Lower faction loss for beams, no longer insta-hostile.
    * Missiles blow up when jammer destroys them.
    * Doxygen.
    * Mountpoints implemented for turrets.
    * New outfit.
    * Fixed a silly typo bug in weapon.c.
    * Ammunition can now have accuracy (missiles and such).
    * Added interference.
    * Weapons now work when player is dead.
    * Added support for different armour/shield hit animations.
    * Fixed broken weapon lockon.
    * Interference is generated and renders wonderfully, needs internal mechanism first.
    * Code clean up.
    * Replaced malloc.h with stdlib.h, as the former is deprecated
    * Turrets just shoot at position when enemy is out of range.
    * Now limiting speed on dumb weapons so they don't "hyperspace".
    * Fixed more possible segfaults.
    * Finally think I fixed the segfault bug.  The issue was that the dialogue was
       being called when the weapons were being updated (hook on death) and the
       main_loop was being handled before the loop was destroyed.  So another
       iteration of weapon_update was being run in the middle of the first one,
       causing a double weapon_destroy to be triggered.  Moving the main_loop() in
       secondary_loop to the top so that the loop condition is run right after
       the event handling will solve this as an iteration won't be run in between
       dialogues.
    * More checks in weapon.c
    * WARN now says function it is in.
    * Should finally fix the segfault bug when destroying weapons.
    * Need second check to avoid segfault.
    * continue in switch case doesn't behave as I thought it did...
    * Fixed possible segfaults in weapon update system.
    * Fixed segfault in tutorial.
    * Implemented bribing.
    * Added ai.isbribed().
    * Fixed major outstanding bugs in flag usage.
    * Fixed major outstanding bugs in weapon_hit stuff.
    * No longer segfault when player died and enemies keep on killing each other.
    * Faction rating and combat rating are now continuous.
    * Escorts and fighter bays start to work well.
    * Some doxygen fixes.
    * Moving to target on pilot structure.
    * Correctness tweak for rendering with dt.
    * Beam weapons now actually move when rendering (graphics need updating).
    * Added explosions.  Currently only used on pilot deaths.
    * More doxygen.
    * Code cleanup.
    * Beam weapons require spfx now.
    * Proper beam spfx usage.
    * Fixed beam stopping to move if enemy got destroyed.
    * Tweaked beam aggro chance some.
    * Make the start of a beam be not so abrupt.
    * Sound should be fully positional.
    * Stopped beams should play sound_off and stop primary sound.
    * First patch to bring more control to beam weapons.
    * Added sounds to beam weapons.  Sound system needs overhaul for it to be better.
    * Beam weapons now properly use graphics.
    * Create fewer explosions with beam weapons.
    * Fixed turret aiming bug.
    * Beams use energy properly now.
    * More improvements for beam turrets.
    * Added outfit states.
    * Added beam hit function - not working properly yet.
    * More doxygen.
    * Added some more beam support stuff.
    * Making some more room for beam weapons.
    * Code quality improvements.
    * Improved the accuracy of collision explosions.
    * Doxygenized weapon.c.
    * New Outfit: Mace Rocket.
    * Implemented dumb missiles.
    * Added primitive positional sound.
    * Missiles now play their proper sound.
    * Redid entire sound system with SDL_mixer.
    * Now using normal distribution for accuracy on weapons (clamped).
    * Missed paranthesis that made turrets miss.
    * Improves enemy ai: they hit a lot now.
    * Improves turret ai: should also hit a lot now.
    * Improved the global attack() ai.
    * Updated TODO.
    * Fixed segfault when turret has no target.
    * Missiles can now resist jamming.
    * Jammers implemented.
    * Tweaked faction hits from combat a bit.
    * Missiles now hack the physics subsystem, will hopefully fix later.
    * Pilots now keep track of how many weapons are locked onto them.
    * Merged semi-redundant code in weapon_create.
    * Weapons save their faction now and take that into account.
    * Fixed bug with unlimited range turret bolts.
    * Fixed segfault when player dies.
    * Switched weapon timer method to something more sane.
    * Renamed pilots and mpilots to pilot_nstack and pilot_mstack.
    * src/pilot.c: binary search works on ints near max.
    added more nazi flags: -Wmissing-prototypes -Winline -Wcast-align -Wmissing-declarations -fno-inline
    some sound cleanup and fixing potential bugs
    switched from damage_armour and friends to just damage and damagetype
    fixed issue with pilot being marked as hostile when not hostile
    missions increase/lower faction, fixed bug with factions
    yes, you can lose faction now, fixed ai to set you as hostile
    parametize chunks to realloc grow pilot and weapon stack
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    revert PID changes, changed headhunter to be "smart"
    trying to work with a PID system for smart missiles
    branch:      naev
    made limit_speed to act abruptly, much nicer when afterburning now
    branch:      naev
    bolt->blt not wpn and added a new ship and outfit (outfit needs gfx)
    branch:      naev
    some code optimization, pilots now use temporary sprite values
    branch:      naev
    added some code to hopefully help prevent dt intervals that are too big
    branch:      naev
    added turrets
    branch:      naev
    added smart seeker missiles (not acquireable yet)
    seperated speed limiting into physics
    missiles don't go berserk when enemy is gone
    branch:      naev
    enemy pilots can now die
    branch:      naev
    now compiles with -std=c99, also fixed major union alignment issue
    branch:      naev
    missiles now have a lockon time
    branch:      naev
    you can define spfx per outfit, fixed major memory issue
    branch:      naev
    added explosions with a primitive special effect system
    branch:      naev
    left a bit out
    branch:      naev
    C correctiveness patch
    branch:      naev
    added player_name
    added combat rating which is based on mass of pilots killed
    branch:      naev
    added pushback effect for weapons
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] rough sound seems to be working now without flaws
    branch:      naev
    [svn] added sound support base, for some reason seems to crash the game alot
    not in usage
    branch:      naev
    [svn] added more sounds
    sound engine should be working ,but isn't tuned enough yet
    branch:      naev
    [svn] did some sanity to allow for example secondary bolt weapons
    branch:      naev
    [svn] added support for images of planets
    cosmetic toolkit changes
    changed the gl_blit functions to work with doubles instead of Vector2d pointers
    took opportunity to clean up space.c xml (bringing it up to xml.h standard)
    cleaned up code
    branch:      naev
    [svn] added beginning frame for toolkit
    added ability to pause/resume game
    nerfed lasers armour damage
    branch:      naev
    [svn] Added planet targetting and landing framework
    split update / render completely into two different functions (for toolkit)
    branch:      naev
    [svn] switched to commonwealth spelling (armor -> armour)
    implemented seeker missiles and ammo
    implemented secondary weapons
    branch:      naev
    [svn] targetting graphic now displays color based on the targetted pilot
    branch:      naev
    [svn] added new GUI by default
    branch:      naev
    [svn] multiple enemies now supported
    bug fixes
    you can get other ship's health now from AI
    branch:      naev
    [svn] fixed silly hostility bug
    branch:      naev
    [svn] control_rate no applies properly
    targetted pilot will appear over others
    branch:      naev
    [svn] bug fixes
    support for different AI Profiles
    branch:      naev
    [svn] more ai API
    ai now responds on being attacked
    branch:      naev
    [svn] bug fixes
    fleet improvements
    per pixel collision
    branch:      naev
    [svn] faction system almost fully implemented
    fleets almost fully implemented (just need randomized start positions)
    major bugfix in weapon.c
    branch:      naev
    [svn] more interface improvements
    branch:      naev
    [svn] added basic gui framework
    branch:      naev
    [svn] some new pack features (list files)
    radial collision detection
    proper adding of the shooting system all about
    branch:      naev
    [svn] lasers fade out
    minor tweaks
    fixed all memleaks
    just need some collision detection now
    branch:      naev
    [svn] missing weapon.c/weapon.h
    more pilot modularity
    layers work properly
    Initial commit of resizing and fake fullscreen
    
    All of this is exclusive to SDL2.
    
    SDL_WINDOW_FULLSCREEN_DESKTOP allows Naev's window to be the size of
    the current screen without setting video mode (and thereby turning off
    other screens, messing up background window positioning, etc.), but to
    use it, we need to be able to resize the GL viewport on demand.
    
    The work required to allow that also permits dynamic resizing while
    playing, as long as a few other things are also reinitialized (a minor
    issue).
    * Puffs should behave properly like stardust stuff now.
    * Regenerate overlay when using gui.viewport.
    * Added API to get nebula visibility.
    * Nebulae is plural, changed it all to nebula.
    * Made savegame more robust when loading inexistant missions.
    * Added some error checking in nebulae subsystem to avoid infinite loop.
    * Split player rendering properly into GUI and player.
    * Now render particles when flying in nebulae.
    * Restructuring to prepare for nebulae puffs.
    * Improved nebulae system.
    * Added space_renderOverlay().
    * Nebulae are now drawn ingame.
    * Added nebu_density and nebu_volatility parameters to star systems.
    * Should be fully fixed by now.
    * Added nebulae render function.
    * Now will initialize nebulae.
    * Nebulae use a smaller more optimal format, reducing size.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Replaced all references to SCU/STP/STU to cycles/periods/seconds.
    
    This unifies the code with the in-game dialog and should hopefully
    prevent confusion regarding what terms to use.
    
    (Recap: these abbreviations were removed from in-game use long ago
    due to confusion that is likely to happen as a result of them looking
    similar.)
    Warnings.
    More gettext.
    Try to start merging leader concept into escort system
    
    Remove p->leader, and set p->parent and p->escorts
    Remove accidentally added line
    
    I deleted this already, but must have copied it back; zombie code
    Add back missing misn_runStart() call
    Have hook_env() handle non-existant misn/env
    Replace remaining uses of Lua globals with Lua environments.
    
    This fixes crashes in the tutorials (and probably other events).
    Remove __evt and __misn globals after they are used
    Events using common lua state
    
    Still need to fix some things
    Intial port of missions to single lua state
    
    Does not properly implement loading of all needed libraries, so somewhat
    broken for now.
    Replace memcpy with struct assignment
    Turn player_missions in an array of pointers
    Only unset the current hook stack's flags.
    * Wrapper for nsnprintf being used all over.
    * Allow passing of jump point as hook parameter.
    * Added discover hook.
    * LLVM.
    * Don't save hooks due for deletion.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Whitespace, typo and general style cleanup.
    * Improved handling of hooks.
    * Faction parameters should work now.
    Many, many typo fixes.
    Remove trailing spaces in src/
    * Hooks should save their arguments properl and also remove them when hooks get removed.
    * Less hacky implementation of hook creation run avoidance.
    * Avoid hooks getting run on creation.
    * No longer "catch up" with date hooks.
    * Do not segfault when removing hook that's already been removed.
    * Fixed bug that converted non date hooks to date hooks on save/load.
    * Moved the hook timer updates outside of the hook exclusion zone so inputs don't trigger in it.
    * Better handling of running stack to avoid segfaults.
    * "safe" hook is only run once.
    * Warn when running queued, we don't want them in theory, hopefully can get rid of the queue stuff.
    * Added "safe" hook to allow stuff like player.teleport() without too many hacks.
    * Trying to move stuff out of the update itself.
    * Initial revision of the hook voodoo.
    * Document how hooks are serious business.
    Signed-off-by: Edgar Simo <bobbens@gmail.com>
    * Attempt to fix various issues like crash with menu_main.
    * Cleared up menu_main usage.
    * Allow takeoff to be forced at any moment.
    * Fixed mission crash.
    * Fixed hook linked lists.
    * Rewrote hooks to be a linked list (bit buggy still).
    * Added input hook.
    * Added number and string type parameters.
    * Fixed bug causing date hooks to jump every frame.
    * Fixed invalid warnings.
    * Time can be saved/loaded from Lua.
    * Date hooks work and do not erase themselves.
    * Cargo missions should be fully working to an extent now (times are messed up).
    * Initial addition of the date hook. Untested as of this commit.
    * Fixed timer hooks running on main menu.
    * Solve hooks running twice sometimes instead of once.
    * Fixed unclaimed hooks not running.
    * Fixed hooks playing twice.
    * Claimed hooks should always run first before non-claimed hooks.
    * Added -Wredundant-decls and fixed all new warnings.
    * Update NPC when a hook is successfully run at the land window.
    * Activate claims at diverse areas to recheck sanity and the likes.
    * Kill the insane hooks.
    * Only save hooks of events that need saving.
    * Save event hooks.
    * More sanity checks.
    * Pilot disable and death hooks also pass the aggressor as a parameter.
    * Should fix an off-by-one.
    * Moved to more flexible hook parameter framework.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Added timer hook to eventually replace the mission/event timers.
    * Hooks restore ids properly now.
    * Hooks can have arguments now.
    * Added hook infrastructure for returning parameters.
    * Added generic "board" and "hail" hooks.
    * Major refactoring of the pilot. It is now all contained in a struct.
    * Pilots should get their hooks removed properly now.
    * Better error handling for missions and events especially within hooks.
    * More verbose hook failure messages.
    * Better money handling, credits shouldn't overflow anymore.
    * Pilots now have idle and attacked hook when under manual control.
    * Doxygen.
    * Fixing really minor possible segfaults and other misc issues detected with scan-build.
    * Event NPC stuff working now.
    * Fixed issue with hooks saving event hooks.
    * Added event land as start condition.
    * Morre corrections.
    * Solved very twisted bug.
    * Fixed obscure segfault.
    * More segfault safety.
    * Better handling of hooks for events and missions.
    * Hooks now work in events.
    * Events get TK API too.
    * Hooks should work with both events and missions now.
    * Removed some warnings of not fully implemented stuff.
    * Added hook framework for events.
    * Added hook types.
    *  Formatting.
    * Constness.
    * Added CLI specific API for starting missions.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Constness.
    * Cleaned up some Lua code.
    * No longer trigger hooks/missions when player dies.
    * Fixed hooks being freed twice in some situations.
    * Moved xml.h to nxml.h.
    * Added more complicated xml parse functions in nxml.c.
    * Some code clean up.
    * Replaced malloc.h with stdlib.h, as the former is deprecated
    * Some doxygen fixes.
    * Added pilot "jump" hook.
    * Doxygenization.
    * Fixed bug where hooks wouldn't get properly removed.
    * Fixed memory leak.
    * Added two new pilot hooks: board and disable.
    * Made lua debug macros more verbose.
    * Code cleanup.
    added more nazi flags: -Wmissing-prototypes -Winline -Wcast-align -Wmissing-declarations -fno-inline
    delete a hook that shouldn't be there if for some reason it gets stuck
    pluto still refuses to cooperate, mission/hook save disabled atm
    fixed the annoying as hell mission disappearing when no carge space
    implemented pilot hooks with the "death" hook as an example
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    fixed major issues in how hooks worked, now they're hackishly sane
    fixed bugs so that missions actually work now :)
    fixed another couple bugs
    give active missions ids and use ids for removing hooks
    initial support for hooks
    stop running gui Lua code when cleaning up pilots by removing their cargo.
    Fixed a heap-use-after-free when cleaning up commodities from pilots.
    gettext for pilot stuff.
    fixed -Wshadow warnings
    Make pilot_cargoAddRaw ignore free space
    
    This fixes an issue where the player's cargo could be lost on load. If
    a player had n tons of cargo and then reduced their capacity below n
    and quit, on next load they would lose any cargo over the limit, with
    mission cargo being handled no differently.
    
    As a side note, pilot_cargoAdd now takes a mission ID parameter, and
    most calls to pilot_cargoAddRaw have been replaced for safety.
    * Cargo space should make sense (tm).
    * Fixed new gcc -Wunused-but-set-variable warnings.
    * Fixed being able to sell commodities when you don't have them.
    Added a helper function, made sure appropriate Lua functions are called when ship mass changes.
    * Implemented more ship stats.
    * Oops, forgot files (like always).
    Fixed size problem.
    
    Thanks bobbens for telling me what was wrong; I was totally lost here.
    Moved out finding key display names to input.c.
    
    For next commit.
    Remove SDL1 compatibility -D CLAGS, and sed so they aren't used
    Add support for joystick hats
    Remove old Lua 5.0 compatibility.
    LuaJIT v2.1 no longer has the Lua 5.0 compatibility defines.
    Don't return translated strings with naev.keyGet()
    Directly add gettext as "_".
    Added gettext to lua.
    gettext for nlua modules.
    Replace remaining uses of Lua globals with Lua environments.
    
    This fixes crashes in the tutorials (and probably other events).
    Add NLUA_CHECKRW(L) to function in naev module that should have it
    Use new __RW system and nlua_register() everywhere
    Add types to lua api docs, and other documentation improvements
    * Added nlua function to get SDL ticks.
    * Wrapper for nsnprintf being used all over.
    * Luadoc.
    * LLVM.
    lua headers are system headers, include them that way
    * Typo fixing patch by Paul Wise.
    * Update bar npc when adding mission/event from console.
    * More NAEV -> Naev.
    * Added API to start events/missions in naev module.
    * Allow disabling all keybinds too.
    * You can now disable or enable keys from Lua.
    * Commentaries.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Better handling of modifier keys, merging lctrl/rctrl into ctrl and such.
    * Added naev.getKey() Lua binding.
    * Made some nlua naming consistant.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Split naev module from nlua.
    * Luadoc.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Run the note about incompleteness with every version change.
    
    This also adds the version number to the message.
    
    The reason for using the version *string* is because it's hard to
    predict exactly what parts of the version we'll want to differentiate
    in the future and updates to the version number should be infrequent
    enough to not pose a problem.
    Changed that to at first run of the game.
    Allow overriding default language.
    Remove fallback for not having VBO
    
    OpenGL without VBOs is deprecated. Presumably, any drivers that can
    handle shaders will be fine with VBOs.
    Let the user define their own fonts if the prefer.
    Minimize on focus loss by default
    Make minimize on focus loss configurable
    Initial commit of resizing and fake fullscreen
    
    All of this is exclusive to SDL2.
    
    SDL_WINDOW_FULLSCREEN_DESKTOP allows Naev's window to be the size of
    the current screen without setting video mode (and thereby turning off
    other screens, messing up background window positioning, etc.), but to
    use it, we need to be able to resize the GL viewport on demand.
    
    The work required to allow that also permits dynamic resizing while
    playing, as long as a few other things are also reinitialized (a minor
    issue).
    Add cross-platform log redirection when not running from a terminal
    
    As --datapath and datapath.lua must be respected, output is initially
    copied into memory, and either flushed to disk or deleted once configs
    have been loaded.
    
    Redirection is only done is conf.redirect_file is enabled and Naev is
    not connected to a terminal.
    
    The files go into ${datapath}/std-{out,err}_YYYY-MM-DD_hh-mm-ss.txt,
    and the logs for a session are deleted if stderr is empty.
    Show PAUSED on screen when the player initiates pause
    Increase default sound volume (0.6 is roughly -20 dB in OpenAL)
    Removed the "pause instead of abort" option.
    
    This was clearly designed to use in conjunction with the old autonav
    abortion behavior. player_autonavAbort is still used in some places,
    but I don't think it's particularly useful to give the player the
    option to pause instead of abort in these places.
    
    Also includes a comment fix that I apparently forgot to merge previously.
    Implement basic double-click detection and use it for mouse targeting
    Remove fuel cost and make refueling wholly-automated
    
    This was discussed earlier in IRC. My feeling is that fuel costs add nothing,
    yet can potentially strand new players and render saves unusable.
    
    There were also several issues with fuel being zeroed when removing fuel pods
    and engines, leading to fuel loss while experimenting with loadouts.
    Fixed a typo.
    * You can now configure where to save stuff with the editor instead of hardcoded relative paths.
    Updated text in the options menu.
    * Added a check box to the galaxy editor for automatically saving changes.
    * Comments.
    Added option to pause game instead of disabling autonav when damage is taken
    * Made options menu a little more straightforward, using "OK" and "Cancel" buttons that do what you'd expect.
    * Faders no longer write to the config whenever they are used.
    * Default button no longer overwrites config, so pressing "Cancel" after "Default" does what you'd expect..
    Add support for a user-created 'datapath.lua' in the binary's dir.
    Allows overriding of the user data location without run-time arguments.
    Added a CLI option to define a custom user data path.
    * Font sizes are now customizeable. User discretion advised to not break EVERYTHING.
    * Bit fancier sound model, optionally force set to camera instead of track pilot.
    * Number of voices to use for sound is now a configuration option (to lower cpu usage if wanted).
    Added configuration option for limiting maximum time multiplier.
    Added variable autonav exit conditions and a slider to control them.
    Added an option to prevent mouse flying from controlling thrust.
    * You can now set manual zoom control.
    * Autonav time compression velocity to compress to is now defineable in the conf.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Basic core for generating csv output done.
    * You can now enable devmode, which does absolutely nothing \o/.
    * You can now force disable NPOT textures.
    * Minor formatting.
    * Added key repeat to toolkit (barely used).
    * Added option to toggle amount of log lines you want.
    * Doxygen.
    * Added possibility to disable interpolation.
    * Added option to disable savegame compression.
    * Added Gameplay options.
    * More properness.
    * Split audio defaults.
    * Split video stuff from rest of stuff.
    * Changed zoom lingo to near/far.
    * Added option to disable engineglow.
    * Forgot to add header.
    * Added FPU exceptions which are enabled by default (on debug builds).
    * You can now modulate star zoom.
    * Added autorefuel option.
    * Renamed conf.efx to conf.al_efx.
    * Also allow user to set OpenAL music buffer size.
    * Allow user to disable EFX if wanting.
    * Compiles with OpenAL backend.
    * Make compression optional and off by default.
    * Added compression extension support.
    * Cleaned up code for mipmaping some.
    * Support for user disabling mipmaps.
    Insert call to conf_saveConfig, and add a filename parameter.
    * Allow disabling of VBOs.
    * Added ability to limit zoom speed change.
    * Rewrote conf framework to be much more robust and better overall.
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] added beginning frame for toolkit
    added ability to pause/resume game
    nerfed lasers armour damage
    branch:      naev
    [svn] removed simple outdated GUI
    cleaned up code (moved more stuff to conf.c)
    branch:      naev
    [svn] cleaned up main.c some
    split configuration processing into seperate file
    Add a Map Outfits Editor for selecting/unselecting entire systems
    
    Add the Map Editor window
            src/dev_mapedit.c
            src/dev_mapedit.h
            src/Makefile.am
    
    Add file name and description parameters to dsys_saveMap()
            src/dev_system.c
            src/dev_system.h
    
    Remove Save Map button from Universe Editor
            src/dev_uniedit.c
    
    Add an intermediate menu for Universe and Map Editors, that could accomodate other future editors
            src/menu.c
            src/menu.h
    Add a Map Outfits Editor for selecting/unselecting entire systems
    
    Add the Map Editor window
            src/dev_mapedit.c
            src/dev_mapedit.h
            src/Makefile.am
    
    Add file name and description parameters to dsys_saveMap()
            src/dev_system.c
            src/dev_system.h
    
    Remove Save Map button from Universe Editor
            src/dev_uniedit.c
    
    Add an intermediate menu for Universe and Map Editors, that could accomodate other future editors
            src/menu.c
            src/menu.h
    Consistently resize the main menu elements
    Many, many typo fixes.
    * SDL_QUIT event should no longer no a non-saving quit.
    * Moved loading stuff into load.c.
    * Added infrastructure for reading save information.
    * Added -Wredundant-decls and fixed all new warnings.
    * First commit of the options menu (does nothing yet).
    * Fixed segfault when abandoning a mission in the middle of a mission dialogue.
    * Doxygenized menu.[ch].
    branch:      naev
    Added preliminary game main menu
    branch:      naev
    player death implemented
    branch:      naev
    some code cleanup (MELEMENT sanity)
    added information and ship spec windows
    some more comments here and there
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] added little menu when hitting esc to not quit automatically
    ndata is dead! Long live ndata!
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Warnings.
    Reduce shader boilerplate with a C program generating C code
    
    Ugly, I guess, but... less?
    More generic vertex attributes
    Use correct method to determine dimensions of nebula texture
    Remove now redundant gl_prepareSurface() call
    Helper function for color uniforms
    Use gl_blitTextureInterpolate() to render the nebula
    Replace opengl_ext.c with files generated using Galogen
    
    Looking at several OpenGL extension loading libraries, I like Galogen
    because it allows generating files for any choice of GL version and
    extensions. So when we (hopefully) switch to GL 3.2 Core, we can
    generate headers for such and it will be a compile error to use features
    that are removed in that version, or added by later versions.
    
    Generated with:
    ```
    galogen gl.xml --ver 3.0 \
                   --profile compatibility \
                   --exts ARB_texture_filter_anisotropic
    ```
    
    https://github.com/google/galogen
    Base radius of nebula visability on scale factor
    Fix handling of scaling in nebula rendering
    Rewrite nebula rendering to use a shader
    More gettext.
    Initial internationalization support with partial Japanese support.
    Initial commit of resizing and fake fullscreen
    
    All of this is exclusive to SDL2.
    
    SDL_WINDOW_FULLSCREEN_DESKTOP allows Naev's window to be the size of
    the current screen without setting video mode (and thereby turning off
    other screens, messing up background window positioning, etc.), but to
    use it, we need to be able to resize the GL viewport on demand.
    
    The work required to allow that also permits dynamic resizing while
    playing, as long as a few other things are also reinitialized (a minor
    issue).
    * More defensive nebula programming (will it ever play nice? we shall never know).
    * New planets get a nonzero radius.
    * Update radius when updating gfx.
    * Moved various path defines into ndata.h.
    * Wrapper for nsnprintf being used all over.
    * Put nebula into a subdirectory of the naev cache directory.
    * XDG patch by aanderson.
    user data should go into $XDG_DATA_HOME (.local/share by default)
     - .naev/saves -> ~/.local/share/naev/saves
     - .naev/screenshots -> ~/.local/share/naev/screenshots
    
    user preferences should go into $XDG_CONFIG_HOME (.config by default)
     - .naev/conf.lua -> ~/.config/naev/conf.lua
     - .naev/conf.lua.backup -> ~/.config/naev/conf.lua.backup
    
    cached data should go to $XDG_CACHE_HOME (.cache by default)
     - .naev/gen -> ~/.cache/naev
    Axed PNG error handling for the time being. Corrupt nebula images should not cause crashes.
    * Don't segfault if no nebula was generated.
    * Added recursivity limit for nebula generation.
    * Attempt at more defensive programming for nebula generation.
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Whitespace, typo and general style cleanup.
    Fix some minor nigh-impossible crashes; remove pointless initializations and such.
    Many, many typo fixes.
    * More puff rendering improvements.
    * Puffs should behave properly like stardust stuff now.
    * Hack to fix remaining zoom issues.
    * Fixed pause freaking out nebula.
    * Background nebula stuff shouldn't move when rumbling.
    Remove unused SDL_image header #includes
    * Indentation.
    * Initial commit of the camera model.
    * Regenerate overlay when using gui.viewport.
    * Don't make nebula seizure if it hasn't rendered in a while.
    * Fixed nebula overlay rendering.
    * Changing entire reference system to bottom left based, should solve shit in the long run.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Default matrix mode is now GL_PROJECTION. No longer need to always change.
    * Fixed SDL_RWops leak.
    * More load up optimization related to png.
    * Optimizing loading a bit.
    * No longer using SDL_image.
    * npng.c now handles PNG file loading and the likes.
    * Major refactoring of the pilot. It is now all contained in a struct.
    * Should fix nebula issues with NPOT textures.
    * Fixed warning output.
    * Targetting reticles "rumble".
    * Changed zoom lingo to near/far.
    * Hopefully fixes nebula issue.
    * Clean up.
    * More nebula fixes.
    * Nebula now uses timers instead of recalculating.
    * Nebula is now blue.
    * Added gl_matrixMode API to substitute glMatrixMode.
    * Added API to get nebula visibility.
    * Nebulae is plural, changed it all to nebula.
    * Made savegame more robust when loading inexistant missions.
    * Simplified nebulae some.
    * Might fix some nebulae jerkiness.
    * Code clean up.
    * Nebulae overlay zooms properly now.
    * Some glTexEnvf should be glTexEnvi.
    * Added mipmap support.
    * Added ability to draw filled circles.
    * Removed immediate mode from circle drawing.
    * Removed unused variable.
    * Use triangles instead of quads.
    * Implemented multitexture in the VBO.
    * Replaced last of the glBegin stuff in nebulae with VBO.
    * Moved most of the matrix stuff into opengl_matrix.
    * More clean up and fixed nebulae borders.
    * Some code clean up.
    * Correctness.
    * Using VBO for most of the nebulae stuff now.
    * Moved some code to VBO.
    * Removed gui_xoff/yoff externs.
    * Made it so opengl.h has all the opengl headers in it.
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Adding a compression message to load screen when saving the nebulae.
    * OpenGL extensions are now loaded instead of linked.
    * Improved the scrolling of nebulae puffs.
    * Cleaned up nebulae saving a bit.
    * Some clean up.
    * Ripped the GUI stuff out of player.c and put it in gui.c.
    * Additional message when generating nebulae.
    * Doxygen.
    * Even more doxygen.
    * Interference is generated and renders wonderfully, needs internal mechanism first.
    * Code clean up.
    * Try to create the gen dir before creating nebulae in case it fails.
    * If ndata isn't found, try to be a bit more robust in finding it.
    * Allow reading ndata-version by default.
    * Nebulae now use the loading bar.
    * Doxygenized nebulae.c.
    * Added some error checking in nebulae subsystem to avoid infinite loop.
    * Remove puffs from main menu.
    * Accidently pushed a small NEBULAE_Z.
    * Fixed segfault when dying in nebulae.
    * Rumble can no longer "leak" over to menus and such.
    * Nebulae now in game.
    * Nebulae puffs now look cosmetically pleasing.
    * Split player rendering properly into GUI and player.
    * Now render particles when flying in nebulae.
    * Restructuring to prepare for nebulae puffs.
    * Moved some code from perlin.c to nebulae.c .
    * Improved nebulae system.
    * Fixed the nebulae overlay.
    * Rumble no longer affects nebulae.
    * Added space_renderOverlay().
    * Nebulae are now drawn ingame.
    * Added nebu_density and nebu_volatility parameters to star systems.
    * Fixed perfectly, tweaked some more.
    * Nebulae are animated!
    * Should be fully fixed by now.
    * Almost working nebulae except for a major graphical glitch.
    * Added nebulae render function.
    * Now will initialize nebulae.
    * Nebulae use a smaller more optimal format, reducing size.
    Use new __RW system and nlua_register() everywhere
    Make LuaSystem an int instead of struct
    lua headers are system headers, include them that way
    * Doxygen.
    * Increased lua system robustness.
    * Made the Lua Systems metatables safe when adding new systems and causing the system array to realloc.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Made some nlua naming consistant.
    * Added luaL_checksystem.
    * Fixed the naming of the metatables.
    * Fixed music.lua.
    * Split space into planet and system.
    Replaced all references to SCU/STP/STU to cycles/periods/seconds.
    
    This unifies the code with the in-game dialog and should hopefully
    prevent confusion regarding what terms to use.
    
    (Recap: these abbreviations were removed from in-game use long ago
    due to confusion that is likely to happen as a result of them looking
    similar.)
    Converted some comments. Is that what you meant, bobbens?
    * More elegant fix.
    * Saner, more precise and safer way of saving dates.
    * Jump delay ship stat works again.
    * Fixed time drift when loading game (due to simulation update increasing time).
    * New time system. As seen on wiki.
    * Added the possibility to do lagged time increments (for when adding to mission subsystem).
    * Properly documented ntime.[ch].
    added time in the form of the galactic date
    Add context for "Credits" in the menu.
    Translate window titles when possible.
    Gave the options menu more space and wider buttons.
    Made the main menu wider.
    Fixed crash with no savegames.
    Load unidiff from most recent save to be able to show the planet properly (e.g. sindbad)
    Removed left in WARNs.
    Removed unused leftover tutorial stuff.
    Improved start-of-game tutorial, replacing the menu tutorial
    
    I decided to do this because the classic tutorial is quite long, and
    yet the intro text I had previously added is inadequate. This new
    tutorial is designed to be a nice middle-ground.
    
    As before, the tutorial is optional, offered to you at the start of
    the game. Unlike before, you go through an entire mission
    demonstrating all the important game mechanics, rather than just
    having a bunch of information thrown at you.
    
    This makes the tutorials (which I haven't recommended to anyone in
    years) obsolete, so the "Tutorial" button and old tutorial mission
    have been removed.
    Add a Map Outfits Editor for selecting/unselecting entire systems
    
    Add the Map Editor window
            src/dev_mapedit.c
            src/dev_mapedit.h
            src/Makefile.am
    
    Add file name and description parameters to dsys_saveMap()
            src/dev_system.c
            src/dev_system.h
    
    Remove Save Map button from Universe Editor
            src/dev_uniedit.c
    
    Add an intermediate menu for Universe and Map Editors, that could accomodate other future editors
            src/menu.c
            src/menu.h
    Change the sound speed based on base time rate.
    
    Requested by bobbens: this makes it so that sound plays at 1x if
    you're at your ship's base time rate, etc.
    Add a Map Outfits Editor for selecting/unselecting entire systems
    
    Add the Map Editor window
            src/dev_mapedit.c
            src/dev_mapedit.h
            src/Makefile.am
    
    Add file name and description parameters to dsys_saveMap()
            src/dev_system.c
            src/dev_system.h
    
    Remove Save Map button from Universe Editor
            src/dev_uniedit.c
    
    Add an intermediate menu for Universe and Map Editors, that could accomodate other future editors
            src/menu.c
            src/menu.h
    More gettext.
    Initial internationalization support with partial Japanese support.
    Accidently commited some japanese it seems.
    Seems to work except  for the fact that no text renders now.
    Add keyboard shortcuts to Small and Death menus
    Fix version string placement when window width is reduced
    Consistently resize the main menu elements
    Don't force the logo the top of the screen
    * Start menu now has hotkeys because everyone loves hotkeys.
    Replace active cooldown key with autobrake
    
    This is another commit that ended up being larger than intended due to
    adjacent diffs. It can be broken down into three separate things:
    
    Autobrake is triggered by the same key that used to handle cooldown.
    On the first press, it triggers braking if moving, cooldown otherwise.
    If pressed while already braking, cooldown starts when braking ends.
    
    player_restoreControl is now the go-to function for aborting autonav,
    cooldown, and all other control-monopolizing states.
    
    Lastly, a number of VMOD(vel) < MIN_VEL_ERR calls have been replaced
    with a handy macro.
    Add an info window button to the menu
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Wrapper for nsnprintf being used all over.
    * XDG patch by aanderson.
    user data should go into $XDG_DATA_HOME (.local/share by default)
     - .naev/saves -> ~/.local/share/naev/saves
     - .naev/screenshots -> ~/.local/share/naev/screenshots
    
    user preferences should go into $XDG_CONFIG_HOME (.config by default)
     - .naev/conf.lua -> ~/.config/naev/conf.lua
     - .naev/conf.lua.backup -> ~/.config/naev/conf.lua.backup
    
    cached data should go to $XDG_CACHE_HOME (.cache by default)
     - .naev/gen -> ~/.cache/naev
    * LLVM.
    remove duplicated includes
    
    Signed-off-by: Nicolas Kaiser <nikai@nikai.net>
    Many, many typo fixes.
    * Remove time compression on main menu.
    * Fixed various issues with dialogues and the toolkit in general.
    Guaranteed unboard when exiting to menu, even with the boarding window open.
    * Properly fixed the warning and unified player_sound nomenclature.
    Signed-off-by: Edgar Simo <bobbens@gmail.com>
    * Attempt to fix various issues like crash with menu_main.
    * Cleared up menu_main usage.
    * Allow takeoff to be forced at any moment.
    * MAJOR COMMIT - May bring breakage.
    * Removed global variables from nlua_misn.c, nlua_event.c and nlua_hook.c
    * Added tutorial button.
    * Do not complain when planet isn't found on loading (in case of unidiff).
    * NAEV -> Naev
    * Code clean up, remove duplicate quit prompt dialogue code.
    * Clicking exit button does not spawn a propmt.
    * SDL_QUIT event should no longer no a non-saving quit.
    * Fixed main menu not closing when it should.
    * Background system should be of last loaded pilot.
    * Moved loading stuff into load.c.
    * Added infrastructure for reading save information.
    * Minor tweaks to main menu.
    * Movement should now work properly in the main menu.
    * Show the starting system in the background (with movement) at the main menu.
    * Renamed startAutonav and abortAutonav to autonavStart and autonavAbort.
    * More or less working, however there's issues with custom widgets.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Tweaked menu centering algorithm to look nicer at 800x600 resolution.
    * Should properly fix the weirdness that was assosciated with the death menu.
    * Should fix continue weirdness.
    * Fixed some bugs with images especially spaceport bar.
    * Start off landed.
    * Toolkit image widget now has dimensions parameter.
    * Hailing planets no longer has them take up more than the window.
    * Renamed sysedit uniedit.
    * Added sysedit for actually editting the interior of the systems.
    * You can now open the editor even though it doesn't really do jack yet.
    * Center the main menu.
    * Major refactoring of the pilot. It is now all contained in a struct.
    * Load game should be above new game.
    * Cleaned up naming in save.h.
    * Dehacked some hacks (savegame code in menu.c).
    Re-ordered main menu, added greying to the load button when no saves are present.
    Updated tutorial, truncated quit message so it doesn't wrap.
    * Added exit confirmation dialogue when hitting "ESC" at main menu.
    * Added tabs to option window.
    * REset timer to avoid funky jumps.
    * Using negative for revisions for VREV set beta status.
    * Can't open small menu when comm menu is open to avoid possible segfaults.
    * Custom widgets use userdata now.
    * Changed how equipment slots are rendered so it acts like another widget now.
    * Revamped info menu, not finished yet though.
    * Fixed warnings.
    * Converted commodities back to int.
    * Should fix the memory issue in the toolkit.
    * Changed commodities to doubles.
    * Properly display ship stats in the equipment window.
    * Better handling of sound pausing/resuming.
    * Nebulae is plural, changed it all to nebula.
    * Made savegame more robust when loading inexistant missions.
    * Check to make sure game doesn't get deleted after opening load game menu.
    * Cleaned up code a bit.
    Fix : If the savegame is not yet created, propose the player to restart the game instead.
    Add a "continue" button in the Death menu
    * Moved ncompat.h as an extension of naev.h.
    * Added naev.h at the top of every c file.
    * Fixed another warning when creating new game or loading game.
    * Finally properly fixed the occasional texture leak warning.
    * If you aborta  mission, properly clear markers.
    * No longer have windows "ghost" when you exit at weird times.
    * Add minimap to missions in info window.
    * Properly added credits.
    * Version message should no longer get overlapped in small resolutions.
    * Ugly hack to make sure engine sounds sound when toolkit is open, proper fix
       would involve fixing SDL_mixer...
    * Added flags to image creation to control transparency mapping.  Should speed up theloading some and reduce memory usage.
    * Fixed autonav and reloading making ship stay in accel.
    * Fixed issue #4 ("Too many missions" without any active mission).
    * Some code clean up.
    * Added license menu.
    * Faders and Audio options by Camilo.
    * You can now view what keybindings do what.  Not finished yet.
    * Aborted missions should also drop cargo.
    * Better handling of player_flags and sounds when exiting game.
    * First commit of the options menu (does nothing yet).
    * Fixed segfault when abandoning a mission in the middle of a mission dialogue.
    * Info window closes if it's open when you exit.
    * Can't open info menu twice.
    * Fixed minor flag bug.
    * Small menu should no longer open over dialogues.
    * Major toolkit change to simplify things a lot, makes it more object oriented.
    * Buttons with NULL function are now disabled by default.
    * Game doesn't pause with death menu - cute feature.
    * Some doxygen for land.c.
    * Implemented outfits/shipyard/land missions.
    * More properly landing cleanup.
    * Fixed bug with exiting while landing and switching pilots causing space warping.
    * Doxygenized menu.[ch].
    * Seperated dialogues from toolkit.
    * Input dialogues can now be cancelled and return NULL.
    * Fixed segfault.
    * More doxygen and code cleanup.
    * Prevent from opening small menu when dead.
    * New nice fancy cargo graphic for when jettisoning cargo.
    * More warnings.
    * glTexList now works as expected and detects leaks.
    * Valgrind finally reports no memory leaks.
    * Cargo window works, can jettison cargo now.
    * Initial cargo window implementation (nothing there).
    * Made main menu window placement dependent on the logo size and position.
    * Improved nebulae system.
    * Gave initial screen a more finished look.
    * Almost working nebulae except for a major graphical glitch.
    * Initialize nebulae and use in menu.
    * Big fancy new "cloud" generator in place, will need heavy tweaking.
    * Changed death menu button labels.
    * Exiting from a game drops you to main menu again instead of quiting.
    cosmetic patch -> gl_screen.[wh] = SCREEN_[WH] in most places
    some code cleanup, and made map more sane (and colour coded!)
    added fuel info to ship information
    save when taking off or quitting, instead of land (to save new ships boughten)
    added filesystem abstraction and path based stuff
    pause forced with toolkit, linux specific stuff for saving
    you can sort of load games, still need to fix issues though
    add date to player info window
    finished retabbing, now enforcing spaces instead of tabs (3 spaces = 1 tab)
    modified the plasma fractal a bit
    introduced getListPos to get the position of the list, cleaned up mission stuff
    mission cargo gets a special marker in gui
    added missions to info window
    added purple, can now change toolkit image colour
    plasma fractals work, and add a plasma fractal as default menu bg for now
    added alot of your ships stuff and cleaned up some code
    branch:      naev
    input widget will now scroll if full
    branch:      naev
    You can now name your ship too
    needed to increase button size a bit
    branch:      naev
    death menu goes to main menu, not respawns automatically
    branch:      naev
    Added preliminary game main menu
    branch:      naev
    minor death menu tweaks
    branch:      naev
    player death implemented
    branch:      naev
    landing windows cosmetic patch
    branch:      naev
    You can now work the windows with the keyboard only
    branch:      naev
    added outfit information window
    branch:      naev
    allow buttons to have NULL pointer function, fixes some info segfaults
    branch:      naev
    added player_name
    added combat rating which is based on mass of pilots killed
    branch:      naev
    information window pauses game
    can't target ships while game is paused
    branch:      naev
    some code cleanup (MELEMENT sanity)
    added information and ship spec windows
    some more comments here and there
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] bug fixes:
       @ shooting primary weapon segfault
            @ menu not pausing game
    branch:      naev
    [svn] added little menu when hitting esc to not quit automatically
    Added player "pay" hook.
    Replace remaining uses of Lua globals with Lua environments.
    
    This fixes crashes in the tutorials (and probably other events).
    * Allow passing of jump point as hook parameter.
    * Added discover hook.
    * Added "load" hook.
    * Added faction standing change hook.
    Many, many typo fixes.
    * Moved the hook timer updates outside of the hook exclusion zone so inputs don't trigger in it.
    * Added "safe" hook to allow stuff like player.teleport() without too many hacks.
    * Initial revision of the hook voodoo.
    * Fixed hook linked lists.
    * Added input hook.
    * Added number and string type parameters.
    * Initial addition of the date hook. Untested as of this commit.
    * Doxygen.
    * Kill the insane hooks.
    * Pilot disable and death hooks also pass the aggressor as a parameter.
    * Attacked hook passes attacker as a parameter.
    * Moved to more flexible hook parameter framework.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Added timer hook to eventually replace the mission/event timers.
    * Added hook infrastructure for returning parameters.
    * Added generic "board" and "hail" hooks.
    * More verbose hook failure messages.
    * Added more hooks and hook checks.
    * Better handling of hooks for events and missions.
    * Added hook framework for events.
    * Added hook types.
    * Constness.
    * Cleaned up some Lua code.
    * Fixed hooks being freed twice in some situations.
    pluto still refuses to cooperate, mission/hook save disabled atm
    implemented pilot hooks with the "death" hook as an example
    added time in the form of the galactic date
    fixed major issues in how hooks worked, now they're hackishly sane
    fixed bugs so that missions actually work now :)
    give active missions ids and use ids for removing hooks
    initial support for hooks
    Implemented ammo_capacity ship stat.
    Implemented launcher lockon ship stat.
    Missing field.
    Implemented launcher damage ship stat.
    Launcher fire rate should be implemented now.
    All outfits can now add shipstats with <stats> tags.
    Added flat armour/shield modifiers.
    Added flat armour/shield regeneration modifiers.
    misc update on mining
    Strip trailing whitespace
    Add engine_limit_rel, allowing outfits to modify the mass limit
    Allow damage types to associate themselves with arbitrary ship stats
    
    For the time being, these must be non-absolute doubles.
    Add a stress dissipation ship stat
    Added basic CSV generation to shipstats
    Replaced fuel_consumption stat with fuel_consumption characteristic.
    
    fuel_consumption is a flat variable, but ship stats are clearly
    meant to be midifiers. This resulted in the game telling the player
    that fuel_consumption was a modifier. It's now a (mandatory)
    characteristic of the ship instead. This also avoids the problem of
    the arbitrary 100 fuel default consumption.
    
    Ships haven't been updated yet. That will be done next commit.
    
    I also removed a bunch of ship info from the shipyard that is
    outdated (i.e. characteristics that are no longer used, and that are
    now determined by outfits and ship stats).
    Replace energy_regen_flat with energy_usage.
    Added nebu_absorb_shield shipstat
    
    Added nebu_absorb_shield shipstat, as well as a prototype outfit, nebula_shielding0,
    that uses it.  If a ship has nebu_absorb_shield, it will be applied to nebula damage
    in the same way that dmg_absorb is applied to normal damage.  Removed nebula_dmg_shield,
    nebula_dmg_armor, since they were presumably meant to do the same thing, but didn't
    have any real code attached to them in the damage calcs.  The Thurion Integrity will
    need to be updated, since it uses the old values, and since they didn't do anything,
    I have no way of knowing what -80 and -97 were supposed to mean in that context.
    I also added a nebu_absorb_armor shipstat as a placeholder, but it doesn't do anything
    yet.
    * Hidden jump points can now be detected by ships that have the "hidden jump detect" ship stat.
    * Added a hidden jump scanner (activated) that provides said stat.
    * Reinstate <cpu> as common flat value.
    * Using <cpu_max> and <cpu_mod> as shipstat to increase/decrease maximum cpu.
    * Added a flat modifier for energy regeneration.
    * cpu_mod shipstat should actually work now.
    * Added flat CPU/Energy ship stats.
    * Added CPU multiplier ship stat, does nothing for now.
    * Use camelcase for shipstat as to be expected.
    Sentinel, not sentinal.
    fixed maps, pathfinding, and jump detection
    * Added basic performance stats (not functional yet).
    
    Conflicts:
    
            src/ship.c
    * Retooled cruisers and carriers to core slot system.
    * Implemented turret tracking modifier stat.
    * Variable fuel consumption.
    * Move crew and mass relative bonuses.
    * Added energy and energy_rel mods.
    * Implemented shield/armour/energy mods.
    * Cosmetics.
    * Whitespace.
    * Added basic performance stats (not functional yet).
    * Added reverse thrusters outfit.
    * Instead of defining engine per mass, define absolute and use engine mass limit.
    * Implemented maximum engine limits for ships.
    * Implemented instant jumping on new stats architecture.
    * Implemented absolute doubles, integers and booleans for ship stats.
    * Fixed typo.
    * Added initial framework for non-double relative types of ship stats.
    * Cleaned up some stuff.
    * Fancier displays, changed jam_counter for launch_lockon.
    * Should work fully now.
    * Should behave the same as before now.
    * Better handling of stats, not entirely working yet.
    * Removed pointless pilot parameter from ListDesc.
    * Better handling of everything, still not done yet.
    * Initial commit of ship stats, doesn't really do anything new yet.
    update on polygon collision
    polygonal collision algorithm
    * Added some untested collision detection routines.
    * Improved the accuracy of collision explosions.
    * Doxygenized collision.[ch].
    * First attempt at a proper facing system.
    branch:      naev
    added license / copyright
    branch:      naev
    [svn] major syntax rewrite, big "what the hell was I thinking" in player.c
    made opengl.h struct names more intuitive
    branch:      naev
    [svn] like always i forgot to add the files
    Fixed styling.
    
    * strcmp is not boolean, so it shouldn't be used with the ! operator.
    * if, for, and while are not functions.
    Fixed several strings and lack of gettext usage.
    Removed unnecessary debug string.
    improved buggy openal version check.
    Disable EFX with 1.1 ALSOFT 1.19.1.
    More gettext.
    Can now use gettext with LOG, WARN, ERR, and DEBUG.
    Remove pack. It is no longer used
    Doxygen and Luadoc fixes galore.
    Doxygen and Luadoc fixes galore.
    Whitespace, typo and general style cleanup.
    Fix some minor nigh-impossible crashes; remove pointless initializations and such.
    Many, many typo fixes.
    * Comments and details.
    Remove trailing spaces in src/
    * Fixed misuses of volume level.
    * Removed retarded self written WAV loading code for openal.
    * Fixed check.
    * Fixed group volume.
    * Compression noise thingy seems to work.
    * Implemented group volume level.
    It's its not it's
    * Disable pitch shift for groups with sound_speedGroup properly.
    * Added sound_speedGroup.
    * Fixed new gcc -Wunused-but-set-variable warning.
    * Number of voices to use for sound is now a configuration option (to lower cpu usage if wanted).
    * Mino change.
    * Minor tweaks and stuff.
    * Code cosmetics.
    * Table!
    * ASCII art ftw.
    * More explanation to how openal works.
    * Switched back to clamped even though it makes no sense (with AL_MAX_DISTANCE HIGH).
    Use logarithmic music and sound volume when using OpenAL.
    * Finally understand openal, how sad.
    * Tweaked some minor defaults.
    * Do not play sounds when dt_mod is over 2.0.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * No chance of music thread blocking naev when exitting anymore.
    * Might fix an issue with Mac OS X.
    * More paranoia.
    * More verbose vorbis errors.
    * Should fix remaining memory issues.
    * Fix sound level changes not affecting all sources.
    * Change al_checkErr to work like the new gl_checkErr.
    * Sound pitch changes (on openal) with game sound change.
    * Store sound length.
    * Macro was off.
    * Nebulae is plural, changed it all to nebula.
    * Made savegame more robust when loading inexistant missions.
    * Should fix memory leak.
    * Should compile again.
    * More extension checks.
    * Using reverb in nebulae to try it out.
    * Renamed conf.efx to conf.al_efx.
    * Also allow user to set OpenAL music buffer size.
    * Allow user to disable EFX if wanting.
    * More header upgrades.
    * Removed reverb which was accidently on by default.
    * Have environment change in medium.
    * More sound parameter tweaking.
    * Unified the debug startup sound messages.
    * Some initial usage of the EFX API.
    * Updated EFX header again.
    * Added auxiliary effects.
    * Cleaner checking for EFX functions.
    * Detect EFX extension.
    * Fixed positional sound.
    * Sound fade out instead of stopping, should fix most of the popping.
    * More proper pausev/resumev implementations for all openal implementations.
    * Implemented openal groups.
    * Tweaked API a bit.
    * Implemented pause/resume for openal.
    * Parameter tweaking, sounds much better.
    * Formatting.
    * Removed some debugging stuff.
    * Minor tweaks and changes.
    * Fixed off by one error and some memory overruns.
    * More deadlock aversions.
    * Tighter mutex locks.
    * Seems to play somewhat.
    * Some more thread safety.
    * Removed some hacks.
    * Fixed segfault with invalid sound backend.
    * Code clean up.
    * WAVE loader should be finished.
    * Have endianness declared in header.
    * Seems like sounds load well.
    * More code properness.
    * Trying to rewrite load functions.
    * Properly starts up the OpenAL audio and promptly blows up.
    * Compiles with OpenAL backend.
    Lua errors should not be condition on DEBUGGING or can cause crashes due to C code continuing execution despite not setting pointers and such.
    Define NLUA_CHECKRW when DEBUGGING is off
    Remove __NLUA_RW, using __NLUA_CURENV instead
    Renamed __RW to __NLUA_RW to be more obvious what it is.
    Use new __RW system and nlua_register() everywhere
    Fix __RW handling and use it for pilot API
    Write nlua_pcall() and NLUA_CHECKRW()
    Remove wrappers around code needed for creating lua states
    lua headers are system headers, include them that way
    * Spit everything to Lua console too if necessary (basically use DEBUG instead of fprintf).
    * Better invalid parameter Lua checking.
    * Raise error if fleet not found.
    * Improved Lua error landing.
    * Cleaned up AI code.
    * Lots and lots of doxygen.
    * More sanity checks.
    * Code clean up.
    * Removed unused and a bit buggy scrollbar (use fader instead).
    * Use luaL_error for the NLUA_* warnings.
    * DEBUG_PARANOID now abort()s on Lua DEBUG statements.
    * Automatically give backtraces in DEBUG mode.
    * Fixed broken release mode.
    * Fixed checks for DEBUG when they should be for NODEBUG.:
    * Minor tweaks.
    * Should compile in non-debug mode again.
    * Added two new pilot hooks: board and disable.
    * Made lua debug macros more verbose.
    * Code cleanup.
    music is now controlled by lua \o/
    cleaned up the ai lua a bit, but needs a lot more work
    begin cleaning up lua code a bit
    Sounds will be silenced if out of range of the camera's targeted pilot or position.
    * You can now set manual zoom control.
    * You can now set camera speed.
    * Much fancier camera model, much more in tune for doing fancy camera Lua API.
    * Zoom moved into camera stuff.
    * Initial commit of the camera model.
    Fixed some minor doc weirdness
    documentation for spfx lua
    added spfx utility containing sound play for now
    * Added checkbox widget.
    * First revision of tabbed window widget, does nothing atm.
    * Split the image array widget.
    * Split the input widget
    * Split the list widget.
    * Split fader widget.
    * Split custom widget.
    * Split rect widget.
    * Split image widget.
    * Autotools support by Unavowed.
    Translate window titles when possible.
    Added toolkit_drawTriangle.
    Remove SDL1 compatibility -D CLAGS, and sed so they aren't used
    Remove all C code meant to support SDL < 2.0.0
    Fix the toolkit's focus model
    
    Prior to this, text input would get stuck on or off depending on the
    last widget that handled it.
    
    Windows are now marked as exposed while they have input focus, which
    triggers focusGain for any input widgets (to re-enable text input),
    including those nested within tabbed windows.
    
    The toolkit tries to always have one window exposed at a time. When a
    new window is created (and isn't WINDOW_NOFOCUS) it will be exposed,
    while the currently-active window will be unexposed (disabling text
    input, etc., if enabled).
    Clean up and centralize widget focus gain/loss
    Add toolkit functions for getting/setting window positions
    Automatically re-center windows when resolution changes
    Add support for SDL2 mouse wheel events
    * SDL2 textevents seem to work now for mouse input.
      This was done by adding focusGain and focusLose events to the widgets.
      Input now gets focus events that use the new textevent stuff.
      This should theoretically be able to be extended to UTF8 but we can't
      render it atm.
    * Added INGAME() for the player keybinding so it doesn't blow up.
    * Made all the colours constant as they should be.
    Counteracted apparent dyslexia.
    * Play sound when messing with sound slider.
    * Gave windows custom data.
    * Event type is Uint32 now in SDL 1.3.
    * toolkit_clip -> gl_clipRect.
    * More or less working, however there's issues with custom widgets.
    * Slot sizes are more visual now.
    * Widgets now know if they are being focused.
    * When you disable a button and it's focus, it resets the window focus.
    * ctrl-tab now cycles backwards through toolkit widgets.
    * Tab seems to work again in tabbed windows.
    Toolkit uses int now instead of float
    * Moved widgets to linked list.
    * Tooltips should disappear properly now.
    * You can now specify window event handler.
    * Implemented fullscreen windows.
    * Using linked lists for toolkit.
    * Added checkbox widget.
    * Should fix remaining memory issues.
    * Should fix the memory issue in the toolkit.
    * Made the drawAltText code common.
    * Added concept of toolkit overlay renderings.
    * Entire widget input system makes sense (tm).
    * Landing window remembers last tab you had open.
    * Changed a bit the cosmetics of the tabbed window.
    * Made some of the coord translations common.
    * Seems like tabbed windows work now.
    * First revision of tabbed window widget, does nothing atm.
    * Added concept of window flags to ignore some functionality.
    * Added rawevent handlers for widgets.
    * Added crude up/down arrow to move through console history.
    * Improved input widget handling by introducing text events.
    * No longer have windows "ghost" when you exit at weird times.
    * Split the image array widget.
    * Split the input widget
    * Split the list widget.
    * Split fader widget.
    * Split custom widget.
    * Split rect widget.
    * Split image widget.
    * First patch to try simplify and make modular the entire toolkit approach.
    * Added ability to set checkbox values on the fly.
    * Added checkbox widget.
    Flattened and darkened all of the tk stuff.
    
    Looks very nice now!
    * Made all the colours constant as they should be.
    Many, many typo fixes.
    * More segfault protection.
    * Should fix the memory issue in the toolkit.
    * Accidently forgot the rect files.
    * Made all the colours constant as they should be.
    * Doesn't work yet, not sure why.
    * Some more constness.
    * Some more clean up.
    * Fixed typo.
    * First patch to try simplify and make modular the entire toolkit approach.
    Tweaked the tabs further
    Flattened and darkened all of the tk stuff.
    
    Looks very nice now!
    Updated the tk text colors (no black)
    Remove SDL1 compatibility -D CLAGS, and sed so they aren't used
    Remove all C code meant to support SDL < 2.0.0
    Fix the toolkit's focus model
    
    Prior to this, text input would get stuck on or off depending on the
    last widget that handled it.
    
    Windows are now marked as exposed while they have input focus, which
    triggers focusGain for any input widgets (to re-enable text input),
    including those nested within tabbed windows.
    
    The toolkit tries to always have one window exposed at a time. When a
    new window is created (and isn't WINDOW_NOFOCUS) it will be exposed,
    while the currently-active window will be unexposed (disabling text
    input, etc., if enabled).
    Send mousewheel events to the tabwin mouse handler
    Add support for SDL2 mouse wheel events
    Proper wrapping when scrolling on tabwin tab bars.
    
    Apparently, the behaviour of the modulo operator when mixing signs is
    implementation-defined. Wrapping explicitly avoids that.
    Fix bounds check when clicking near tabwin tab bar
    Enhance filtering in the land window's outfits and equipment tabs
    
    This is a fairly monstrous commit, and unfortunately due to some necessary
    toolkit changes, wasn't able to be broken up into smaller chunks.
    
    A semi-itemized list of changes is as follows:
    
       tabwin:
          Provide both old and new tab IDs when calling onChange functions
    
       imagearray:
          Add a simple struct and toolkit_saveImageArrayData to permit easy
          saving of selection and scroll position.
    
       player:
          player_getOutfits & co. now return Outfit** instead of char**
    
       equipment:
          Added incremental text search, change the embedded tabwin into a dummy
          that just regenerates a single image array instead of maintaining five
          separate ones.
    
       land_outfits:
          Added incremental text search, as well as tab-based filtering identical
          to the equipment tab's, with some minor cleanup along the way.
    Render the tab bar using the specified font
    Make tabbed windows' tab bar dimensions externally-accessible
    * FIxed sometimes not being able to equip shit.
    * Wrapper for nsnprintf being used all over.
    You'll eat your events, and you'll like them!
    * Made all the colours constant as they should be.
    * Fixed crash.
    * Fixed some stuff.
    * More LLVM fixes.
    * Minor fixes and such.
    * Fixed how toolkit handles stuff so tabbed windows pass full events to their children windows.
    * Tabbed window inside a tabbed window renders, but doesn't seem to handle events.
    * No need for checks.
    * Tabwins can now have tabs at the top or at other crazy places.
    * Updated doxygen.
    Many, many typo fixes.
    * Fixed new gcc -Wunused-but-set-variable warning.
    Tabs can be moved through via mousewheel scrolling.
    * Changing entire reference system to bottom left based, should solve shit in the long run.
    * More or less working, however there's issues with custom widgets.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Removed usage of SDL_min.
    * Added more #includes that were missing.
    Fixed keyboard tab-switching, now follows conventions.
    * Fixed tab movement in tabbed windows.
    * Fixed rudi_s tab change keybindings.
    * Minor cleanup.
    * Should fix the world, the universe and everything (buttons).
    * Implemented tabbing across parent windows.
    * ctrl-tab now cycles backwards through toolkit widgets.
    * Tab seems to work again in tabbed windows.
    * Compacted code.
    * Comments.
    * Added keybindings to switch tabs by rudi_s.
    * More segfault protection.
    * Shininess, by Deiz.
    * Should fix remaining memory issues.
    * Should fix the memory issue in the toolkit.
    * Added concept of toolkit overlay renderings.
    * Entire widget input system makes sense (tm).
    * Horrible hack seems to look pretty good rendering.
    * Invert tab buttons.
    * Landing window remembers last tab you had open.
    * Changed a bit the cosmetics of the tabbed window.
    * Made tabs bigger.
    * Fixed more segfaults.
    * Tabs seems to work now.
    * Made some of the coord translations common.
    * Seems like tabbed windows work now.
    * Move to use tabs - not complete yet.
    * First revision of tabbed window widget, does nothing atm.
    Updated the tk text colors (no black)
    * Wrapper for nsnprintf being used all over.
    * Made all the colours constant as they should be.
    * Changing entire reference system to bottom left based, should solve shit in the long run.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Removed usage of SDL_min.
    * Added more #includes that were missing.
    * More segfault protection.
    * Some more constness.
    * Center the text widget vertically if it's centered.
    * Should fix the memory issue in the toolkit.
    * Added gl_print*Raw functions to avoid some mission segfaults.
    * Moved more stuff out of toolkit.
    * Added new get function for image arrays.
    * First patch to try simplify and make modular the entire toolkit approach.
    Tweaked list selection mouse threshold.
    Fixed the threshold for when a scrollbar is drawn for lists.
    Fixed the scrollbar on list widget.
    Flattened and darkened all of the tk stuff.
    
    Looks very nice now!
    Fixed the rest of the text colors.
    Remove SDL1 compatibility -D CLAGS, and sed so they aren't used
    Remove all C code meant to support SDL < 2.0.0
    Add support for SDL2 mouse wheel events
    * Wrapper for nsnprintf being used all over.
    * More LLVM fixes.
    Whitespace, typo and general style cleanup.
    Update window_addList behavior
    
    All but one point that calls window_addlist with a selected item
    changed handler calls that handler immediately after.  Update this
    to be the default behavior if there's a default item passed in.
    
    The caller in the options window had to be slightly re-worked, but
    it turned out to be a cleaner solution.
    Many, many typo fixes.
    Remove trailing spaces in src/tk/
    * Allow setting and saving of list offset.
    * Added way to set list by position.
    * Fixed unlikely segfault.
    * Changing entire reference system to bottom left based, should solve shit in the long run.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    Fixed a bunch of off-by-ones... on Nvidia drivers anyhow. Bloody OpenGL.
    * Removed usage of SDL_min.
    * Added more #includes that were missing.
    * Tab seems to work again in tabbed windows.
    * More segfault protection.
    * Added API to set list value.
    Scrollbar looks better now
    * Shininess, by Deiz.
    * More correctness.
    * Better scrolling.
    * Should fix some over/underflows with lists.
    * Tweaked and made less dark the list change.
    * Another colour patch by Deiz.
    * Should fix the memory issue in the toolkit.
    * Entire widget input system makes sense (tm).
    * Fixed more segfaults.
    * Added gl_print*Raw functions to avoid some mission segfaults.
    * Reimplementd mouse wheel working on list.
    * Moved more stuff out of toolkit.
    * Added new get function for image arrays.
    * Moved more stuff out of toolkit.
    * Split the list widget.
    Flattened and darkened all of the tk stuff.
    
    Looks very nice now!
    Fixed the rest of the text colors.
    Remove SDL1 compatibility -D CLAGS, and sed so they aren't used
    * Wrapper for nsnprintf being used all over.
    Whitespace, typo and general style cleanup.
    Many, many typo fixes.
    * Fixed new gcc -Wunused-but-set-variable warning.
    * Fixe Clang report.
    * Changing entire reference system to bottom left based, should solve shit in the long run.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Removed usage of SDL_min.
    * Added more #includes that were missing.
    * More segfault protection.
    * Added ability to set checkbox values on the fly.
    * Shininess, by Deiz.
    * Made less bordery.
    * Checkbox works for autorefuel \o/.
    * Added checkbox widget.
    Utf8 input is mostly working.
    Add callback support to the toolkit's input widget
    * Input widget can now specify font.
    * Console input is in mono by default.
    * Input widgets can now filter input.
    * Have dialogues filter out '/'.
    * First draft of the console, not working yet.
    * Some more clean up.
    * Split the input widget
    * Made all the colours constant as they should be.
    * Some more clean up.
    * Accidently forgot the rect files.
    * Custom widgets must not bend down to the all encompassing "mouse functions return 1 if event is blocked".
    * Sanitized more toolkit return parameter for function pointers.
    * Seriously.
    * Custom widgets use userdata now.
    * Changed how equipment slots are rendered so it acts like another widget now.
    * Custom widgets can now support overlays.
    * Added concept of toolkit overlay renderings.
    * You can now disable the clipping done by custom widgets.
    * Improved map zoom handling.
    * Custom widget mouse movement function now gives dimensions.
    * Some more clean up.
    * Split custom widget.
    Enhance filtering in the land window's outfits and equipment tabs
    
    This is a fairly monstrous commit, and unfortunately due to some necessary
    toolkit changes, wasn't able to be broken up into smaller chunks.
    
    A semi-itemized list of changes is as follows:
    
       tabwin:
          Provide both old and new tab IDs when calling onChange functions
    
       imagearray:
          Add a simple struct and toolkit_saveImageArrayData to permit easy
          saving of selection and scroll position.
    
       player:
          player_getOutfits & co. now return Outfit** instead of char**
    
       equipment:
          Added incremental text search, change the embedded tabwin into a dummy
          that just regenerates a single image array instead of maintaining five
          separate ones.
    
       land_outfits:
          Added incremental text search, as well as tab-based filtering identical
          to the equipment tab's, with some minor cleanup along the way.
    Make tabbed windows' tab bar dimensions externally-accessible
    * FIxed sometimes not being able to equip shit.
    * Fixed crash.
    * More LLVM fixes.
    * Tabwins can now have tabs at the top or at other crazy places.
    * Landing window remembers last tab you had open.
    * Tabs seems to work now.
    * Move to use tabs - not complete yet.
    * First revision of tabbed window widget, does nothing atm.
    Added ability to use image layers for images.
    Flattened and darkened all of the tk stuff.
    
    Looks very nice now!
    Bugfix : outline not drawn when image is NULL
    Fixed 2 bugs in Image Widget : Widget border takes image size instead of
    widget size ; Entire widget not displayed when image is NULL
    * Made all the colours constant as they should be.
    Many, many typo fixes.
    * Changing entire reference system to bottom left based, should solve shit in the long run.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Fixed some bugs with images especially spaceport bar.
    * Toolkit image widget now has dimensions parameter.
    * Hailing planets no longer has them take up more than the window.
    * More segfault protection.
    * Should fix the memory issue in the toolkit.
    * Fixed some comment typos.
    * More code clean up.
    * Moved some stuff out of toolkit that i missed before.
    * Split image widget.
    Have input widget use black font (with white halo).
    Flattened and darkened all of the tk stuff.
    
    Looks very nice now!
    Updated the tk text colors (no black)
    Remove SDL1 compatibility -D CLAGS, and sed so they aren't used
    Remove all C code meant to support SDL < 2.0.0
    Input widget text input box should now appear at the right position.
    Fixed crash on input widgets with filtering.
    Input views should be working.
    Utf8 input is mostly working.
    Implement scrolling in the console with pageup/pagedown
    Strip trailing whitespace
    Eat more keys! Delicious keys!
    
    Because SDL sends text input alongside, rather than in lieu of regular
    button press events, anything that handles text input needs to consume
    most button presses it receives to avoid triggering controls.
    * SDL2 textevents seem to work now for mouse input.
      This was done by adding focusGain and focusLose events to the widgets.
      Input now gets focus events that use the new textevent stuff.
      This should theoretically be able to be extended to UTF8 but we can't
      render it atm.
    * Added INGAME() for the player keybinding so it doesn't blow up.
    Improve input widget cursor movement, fix several crashes
    Add callback support to the toolkit's input widget
    * Missed a couple.
    * More input widget input key catch logic changes.
    * Another minor logic tweak.
    * Try to make sense of input widget logic.
    * Has side effect of fixing up arrow in console.
    * Handle newline characters a bit better when moving up and down.
    * Fixed infinite loop in multiline input widget when first char is '\n'.
    * Changes to character deletion code.
    * Revert key unregistering to hopefully stop keys from repeating when they shouldn't.
    * Optimization.
    * Can now delete whole words with ctrl+backspace and ctrl+delete.
    * Fancified ctrl-skipping by breaking on characters other than whitespace.
    * ctrl-skip skips to start of words, not to the end of them, as is standard in many editors.
    * Handle up/down for the first line specially.
    * Handle newline-only lines.
    * Cosmetics and minor optimizations.
    * Remove ugly hack that causes problems and add sanity checks instead.
    Whitespace and line length.
    * Use ctrl+left and ctrl+right to navigate whole words at a time.
    * Unbelievably horrible hack to make the down key work at the start of the first line.
    * Handle cases where the current line is longer than the target line.
    * Removed TODO comment.
    * Can now use up and down arrow keys to navigate multiline input widgets.
    * Properly insert newlines
    * Use home and end to set cursor to start or end.
    * Should properly fix the partial line wraps in the input widgets.
    * Initial suboptimal multiline implementation.
    * Wrapper for nsnprintf being used all over.
    * Hacked up a semi-functional multi-line input widget.
    * Cursor doesn't properly follow the text.
    * Gloriously blows up because of bad memory management.
    * Simplified code.
    * strncpy is not as safe is it likes to pretend.
    Many, many typo fixes.
    * Seriously.
    Support numpad enter in addition to regular enter key.
    * Backspace should work properly with full input boxes.
    * Avoid buffer overrun with inputs.
    * Fixed Clang report.
    * Fixed minor crash with backspace and input boxes.
    * Changing entire reference system to bottom left based, should solve shit in the long run.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Removed usage of SDL_min.
    * Added more #includes that were missing.
    * Widgets now know if they are being focused.
    * Input widget has cursor.
    * Input widget can now specify font.
    * Console input is in mono by default.
    * Remove extra whitespace.
    * More segfault protection.
    * Should fix the memory issue in the toolkit.
    * Input widgets can now filter input.
    * Have dialogues filter out '/'.
    * Proper fix.
    * Improved input widget handling by introducing text events.
    * First draft of the console, not working yet.
    * Added gl_print*Raw functions to avoid some mission segfaults.
    * Split the input widget
    * Play sound when messing with sound slider.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Some more clean up.
    * Split fader widget.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Fixed fader appearance
    Flattened and darkened all of the tk stuff.
    
    Looks very nice now!
    Remove SDL1 compatibility -D CLAGS, and sed so they aren't used
    Fixed rendering of faders with non-zero minimums.
    fader: slim conditional branches
    
    Signed-off-by: Nicolas Kaiser <nikai@nikai.net>
    Many, many typo fixes.
    * Play sound when messing with sound slider.
    * You can now focus the faders and move them with the keyboard.
    * Tab seems to work again in tabbed windows.
    * Fader is now 10% more l337.
    * More segfault protection.
    * Should fix the memory issue in the toolkit.
    * Entire widget input system makes sense (tm).
    * Fixed some comment typos.
    * Fixed uninitialized variable usage.
    * Moved some stuff out of toolkit that i missed before.
    * Split fader widget.
    * Autotools support by Unavowed.
    Flattened and darkened all of the tk stuff.
    
    Looks very nice now!
    * Custom widgets must not bend down to the all encompassing "mouse functions return 1 if event is blocked".
    * Sanitized more toolkit return parameter for function pointers.
    Many, many typo fixes.
    * toolkit_clip -> gl_clipRect.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    Fixed a bunch of off-by-ones... on Nvidia drivers anyhow. Bloody OpenGL.
    * More segfault protection.
    * Custom widgets use userdata now.
    * Changed how equipment slots are rendered so it acts like another widget now.
    * Should fix the memory issue in the toolkit.
    * Custom widgets can now support overlays.
    * You can now disable the clipping done by custom widgets.
    * Improved map zoom handling.
    * Custom widget mouse movement function now gives dimensions.
    * Split custom widget.
    Made button strings const char* as they should be.
    Remove SDL1 compatibility -D CLAGS, and sed so they aren't used
    Having disabled buttons always call their respective functions anyhow was a very, very bad idea. Replaced with an optional flag.
    Added fancy hotkey support, for enhanced keyboard usability.
    * Rough draft of equipment land tab, not done yet.
    * Some more clean up.
    * First patch to try simplify and make modular the entire toolkit approach.
    Removed common showing outfit code and unified in src/land_outfits.c
    Temporary moved slottypes to ImageArrayCell.
    Unnecessary prototype.
    Moved quantity into the imagearraycell.
    Abstracted image array stuff to cell where it is possible to set alt text.
    tidied up code
    Enhance filtering in the land window's outfits and equipment tabs
    
    This is a fairly monstrous commit, and unfortunately due to some necessary
    toolkit changes, wasn't able to be broken up into smaller chunks.
    
    A semi-itemized list of changes is as follows:
    
       tabwin:
          Provide both old and new tab IDs when calling onChange functions
    
       imagearray:
          Add a simple struct and toolkit_saveImageArrayData to permit easy
          saving of selection and scroll position.
    
       player:
          player_getOutfits & co. now return Outfit** instead of char**
    
       equipment:
          Added incremental text search, change the embedded tabwin into a dummy
          that just regenerates a single image array instead of maintaining five
          separate ones.
    
       land_outfits:
          Added incremental text search, as well as tab-based filtering identical
          to the equipment tab's, with some minor cleanup along the way.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    Slot types are now represented in image arrays. Fixed a bunch of off-by-ones along the way.
    * Slot sizes now indicated in the equipment window for outfits.
    Changed the right mouse click API so that it won't pass the name anymore. It is seldom useful. and can be easily asked for.
    Changed the imagearray right click callback to provide name, not array index
    Added right-click callback to imagearray widget. Registered a
    right-click callback for the available outfit imagearray.
    * Fixed resorting ships selecting different one.
    * More Deiz nitpicking.
    * Display quantity in equipment window.
    * Added alt text.
    * Missed header in last commit.
    * Can use arrow keys somewhat in the image array widget.
    * Some more clean up.
    * Moved more stuff out of toolkit.
    * Added new get function for image arrays.
    * Split the image array widget.
    Ships can also use graphics overlay now.
    It is now possible to add overlay layers to outfits.
    Render layers if available.
    Removed common showing outfit code and unified in src/land_outfits.c
    Temporary moved slottypes to ImageArrayCell.
    Moved quantity into the imagearraycell.
    Abstracted image array stuff to cell where it is possible to set alt text.
    Flattened and darkened all of the tk stuff.
    
    Looks very nice now!
    Updated the tk text colors (no black)
    Added outlines to text.
    tidied up code
    Simplified colors and modified image array selection colors.
    
    This gets rid of some variants of text coloring and defines them
    in a different way. The "dark" versions are removed; intending to
    replace that with outlines of some kind.
    Remove SDL1 compatibility -D CLAGS, and sed so they aren't used
    Remove all C code meant to support SDL < 2.0.0
    Add support for SDL2 mouse wheel events
    Enhance filtering in the land window's outfits and equipment tabs
    
    This is a fairly monstrous commit, and unfortunately due to some necessary
    toolkit changes, wasn't able to be broken up into smaller chunks.
    
    A semi-itemized list of changes is as follows:
    
       tabwin:
          Provide both old and new tab IDs when calling onChange functions
    
       imagearray:
          Add a simple struct and toolkit_saveImageArrayData to permit easy
          saving of selection and scroll position.
    
       player:
          player_getOutfits & co. now return Outfit** instead of char**
    
       equipment:
          Added incremental text search, change the embedded tabwin into a dummy
          that just regenerates a single image array instead of maintaining five
          separate ones.
    
       land_outfits:
          Added incremental text search, as well as tab-based filtering identical
          to the equipment tab's, with some minor cleanup along the way.
    Simple optimization for image array rendering
    
    Rows that are entirely out of the viewport will now be skipped. This should
    result in markedly lower CPU usage, particularly at lower resolutions.
    Only show image array tooltips if the X/Y has changed from the default
    Update image array tooltips when scrolling
    Optimize image array focused element determination
    * Wrapper for nsnprintf being used all over.
    * Made all the colours constant as they should be.
    Whitespace, typo and general style cleanup.
    Many, many typo fixes.
    * Seriously.
    * Fixed new gcc -Wunused-but-set-variable warnings.
    Fixed desync between image array rendering and mouse focus boundaries.
    * Should fix possible minor memory leaks.
    * Fixed Clang report.
    * toolkit_clip -> gl_clipRect.
    * Fixed minor memory leak.
    * Changing entire reference system to bottom left based, should solve shit in the long run.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    Fixed a bunch of off-by-ones... on Nvidia drivers anyhow. Bloody OpenGL.
    Slot types are now represented in image arrays. Fixed a bunch of off-by-ones along the way.
    Minor cleanup.
    Quantity background and text now correspond to the main outfit caption and background.
    Added coloured backgrounds to the outfit store, text is now black or white depending on bg (for improved contrast).
    * Fixed image array rendering of backgrounds.
    * Slot sizes now indicated in the equipment window for outfits.
    * Removed usage of SDL_min.
    * Added more #includes that were missing.
    * Image arrays only scroll when you use the scrollbar (yay).
    * Tab seems to work again in tabbed windows.
    Changed the right mouse click API so that it won't pass the name anymore. It is seldom useful. and can be easily asked for.
    Right-clicking in image array now moves focus.
    Changed the imagearray right click callback to provide name, not array index
    Added right-click callback to imagearray widget. Registered a
    right-click callback for the available outfit imagearray.
    * Should avoid segfault.
    * Minor optimization.
    * Fixed resorting ships selecting different one.
    * Fixed minor image array scrolling bug.
    * Fixed some jumps in the image array in the equipment window.
    * More segfault protection.
    * More Deiz nitpicking.
    * Fixed some stuff that was driving Deiz mad.
    * Alt text can no longer appear out of bounds.
    * Try to fix more fpu exceptions.
    * Should fix an fpu exception.
    * Fixed image array not respecting out of boundness.
    * Enormous diff that basically points out that bobbens' punctuation sucks.
    * More correctness.
    * Better scrolling.
    * Tooltips should disappear properly now.
    * Center selection when setting pos with image array widget.
    * Quantity in image arrays should be more visible.
    * Fixed regression that caused small image arrays to not update on key events.
    * Fixed long standing image array bug.
    * Call callback when changing pos, do not call setpos in the callback.
    * Fixed memory leak.
    * Minor cosmetic tweaks.
    * Display quantity in equipment window.
    * Fixed image array not having appropriate xelem.
    * Should fix the memory issue in the toolkit.
    * Made the drawAltText code common.
    * Added concept of toolkit overlay renderings.
    * Added alt text.
    * Entire widget input system makes sense (tm).
    * Minor cosmetic tweaks.
    * Added ability to get position in image array.
    * Fixed more segfaults.
    * Image array now properly follows arrow keys.
    * Added gl_print*Raw functions to avoid some mission segfaults.
    * Can use arrow keys somewhat in the image array widget.
    * Accidently left some debugging stuff in.
    * Fixed some outstanding issues.
    * Some more clean up.
    * Moved more stuff out of toolkit.
    * Added new get function for image arrays.
    * Moved more stuff out of toolkit.
    * Split the image array widget.
    Made button strings const char* as they should be.
    Changed the font buttons use from the default font to small font.
    Changed the button border back to black for contrast reasons
    Flattened and darkened all of the tk stuff.
    
    Looks very nice now!
    Updated the tk text colors (no black)
    Remove SDL1 compatibility -D CLAGS, and sed so they aren't used
    Fixed buttons not getting hotkey characters colorized properly.
    Use cRed on disabled buttons instead of cDarkRed
    * Rewrote btn_updateHotkey to take into account that only single
    alphanumeric characters matter.
    * Buttons catch events.
    * Wrapper for nsnprintf being used all over.
    Having disabled buttons always call their respective functions anyhow was a very, very bad idea. Replaced with an optional flag.
    Added support for focusing and pressing disabled buttons (for receiving error messages).
    Doxygen
    Added fancy hotkey support, for enhanced keyboard usability.
    * Made all the colours constant as they should be.
    Many, many typo fixes.
    Support numpad enter in addition to regular enter key.
    * Changing entire reference system to bottom left based, should solve shit in the long run.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Removed usage of SDL_min.
    * Added more #includes that were missing.
    * When you disable a button and it's focus, it resets the window focus.
    * Tab seems to work again in tabbed windows.
    * Fixing really minor possible segfaults and other misc issues detected with scan-build.
    * Buttons can no longer run functions when disabled through keys.
    * More segfault protection.
    * Shininess, by Deiz.
    * Should fix the memory issue in the toolkit.
    * Rough draft of equipment land tab, not done yet.
    * Fixed some comment typos.
    * Added gl_print*Raw functions to avoid some mission segfaults.
    * First patch to try simplify and make modular the entire toolkit approach.
    Added ability to use image layers for images.
    * Made all the colours constant as they should be.
    * Fixed some bugs with images especially spaceport bar.
    * Toolkit image widget now has dimensions parameter.
    * Hailing planets no longer has them take up more than the window.
    * Some more clean up.
    * Moved some stuff out of toolkit that i missed before.
    * Split image widget.
    * Allow setting and saving of list offset.
    * Added way to set list by position.
    * And there was one whitespace fix to rule them all! (s/  *$//)
    * Added API to set list value.
    * Some more clean up.
    * Split the list widget.
    Added argparse support to mission_map.py
    whitespace
    Improved mission_map.py's handling of running in root or utils directory.
    upgrade on mission map
    proposal on how to display extra info with mission_map.py
    Updated utils/mission_map.py to use new non-mission.xml approach.
    Run with python.
    draft of mission map generator
    PO changes required for Meson.
    
    - update-po.sh generates a combined POTFILES.in for Meson to consume, since Meson doesn't seem to have any performance issues that justify the extra complexity of two generation steps.
    - update-po.sh always puts XML files at the end of POTFILES*. This removes sorting as a point of variance between AutoTools and Meson.
    - update-po.sh takes the source root directory as a parameter (default cwd). This supports Meson's out of tree builds.
    - Moves `po/translation.its` into `po/its/`. This allows the use of an XML locator file required for Meson's combined code/XML gettext processing.
    - Adjusts AutoTools to produce file names relative to the source root in .po files. Aside from being cleaner, this matches Meson's behaviour making it easier to compare the output of the two systems.
    Generate po/POTFILES_XMl and read from that for xml files.
    Revert "Rework po generation a bit. This removes the dependency on itstool."
    
    This reverts commit e7181bf03304459693a8eac1a8f514de2448010a.
    -maxdepth should be set first
    Rework po generation a bit. This removes the dependency on itstool.
    Moved stuff from extras to utils.
    Remove generated files from POTFILES.in generation.
    Added translation targets for ALL the xml.
    More translation thoughout the game.
    Sort POTFILES.in
    Added script to update po files.
    Added retag script (I had it laying around)
    * Found an indent-function!
    * Made a very ugly python program to make it easier to generate MissionXML. WIP!
    Renamed File
    Changed to Naev repository URL
    Changed this a bit
    Remove this as it is no longer needed
    missing '"'
    Fixed flag
    Add ability to manually trigger nightly workflow.
    modify to run on ubuntu runner
    Able to generate soundtrack metadata for steam.
    Have soundtrack print name properly for playlist.
    Remove tempfile after done to avoid pollution of /tmp.
    Added metadata to the soundtrack files.
    Check for missing and duplicated songs.
    Build soundtrack using script from yaml.
    Fix paths
    Add conversion script
    Remove pack. It is no longer used
    * More correctness.
    * mkspr should compile properly now.
    Added support for making ndata from an external build directory.
    should fix windows borking out because of funky bash
    I hate autotools. Got a horribly hacky translation thing "working"?
    Use semvar syntax (e.g., 0.8.0-beta.2 instead of 0.8.0-beta2)
    Renamed CFLAGS to THREADS in release script.
    Added -std=gnu99 to steam compilation so it builds.
    Moved stuff from extras to utils.
    Not entirely happy, but it will try to compile and cross-compile everything.
    Added message pertaining to openal.
    Swapped over to MXE.
    
    Assumes that all deps are built for mingw32 and mingw64
    Remove configure flags that do nothing.
    fix dynamic corecount and remove unnecessary code
    Syntax..
    pass through internal lua and csparse
    whitespace
    missed 64bit mingw
    dynamic corecount for build threads.
    Basic cross compile for mingw on Fedora
    brackets
    More debug logging.
    use internal lua/csparse when building the source package.
    Removed steam-compile.sh.
    Release scripts now work properly and are more compact.
    More sanity for release script.
    also make dist-bzip2
    Added scripts to help with releasing.
    * mksprite updated to match mkplanet.
    new script to make sprites with gimp
    * mkplanet.scm updated by Renderwahn.
    * mkplanet.scm updated by Renderwahn to fix lighting.
    added a utils/gimp directory for future gimp scripts
    branch:      naev
    changed mkplanet.scm name and such as aurore suggested, thanks :)
    branch:      naev
    updated mkplanet, defaults are what NAEV uses now
    * Updated README for mkplanet for newer gimp.
    added a utils/gimp directory for future gimp scripts
    branch:      naev
    [svn] added utils from the old NAEV
    dos2unix
    Add starmap utility to export an SVG map from the game's dat
    
    Signed-off-by: Mutos <benoit.robin@hoshikaze.net>
    Change script EOL from CR-LF to LF
    
    Signed-off-by: Mutos <benoit.robin@hoshikaze.net>
    Add starmap utility to export an SVG map from the game's dat
    
    Signed-off-by: Mutos <benoit.robin@hoshikaze.net>
    dos2unix
    Add starmap utility to export an SVG map from the game's dat
    
    Signed-off-by: Mutos <benoit.robin@hoshikaze.net>
    Got rid of mkspr warnings.
    Port mkspr from SDL1 to SDL2
    
    I don't entirely understand what's going on here, but I copied the
    changes from the naev code.
    * LLVM fixes.
    remove duplicated includes
    
    Signed-off-by: Nicolas Kaiser <nikai@nikai.net>
    * Fixed new gcc -Wunused-but-set-variable warnings.
    * Should fix build again.
    * Replaced malloc.h with stdlib.h, as the former is deprecated
    branch:      naev
    no need for mkspr to create a window
    branch:      naev
    [svn] added mkspr util
    more distance to fleets when created
    * mkspr should compile properly now.
    Make NSH work (though not well)
    Added nebu_absorb_shield shipstat
    
    Added nebu_absorb_shield shipstat, as well as a prototype outfit, nebula_shielding0,
    that uses it.  If a ship has nebu_absorb_shield, it will be applied to nebula damage
    in the same way that dmg_absorb is applied to normal damage.  Removed nebula_dmg_shield,
    nebula_dmg_armor, since they were presumably meant to do the same thing, but didn't
    have any real code attached to them in the damage calcs.  The Thurion Integrity will
    need to be updated, since it uses the old values, and since they didn't do anything,
    I have no way of knowing what -80 and -97 were supposed to mean in that context.
    I also added a nebu_absorb_armor shipstat as a placeholder, but it doesn't do anything
    yet.
    add the yaml file
    Added the global header to the ship db generator.
    Prune useless CSS.
    Updated single-ship template.
    Copy images
    Always copy css
    Make NSH work (though not well)
    * Use the safe_load function to load YAML instead of the unsafe default (patch by Paul Wise).
    Omit <mission/> ships from the ship db.
    NSH: implement a sanity check for the labels.
    objects, damnit !
    implement the yaml label reader
    NSH: fix the outfits harvesting
    NSH: update labels
    typo
    fixes the outfit parsing
    fix ships parsing and copy css files to the output directory
    make sure that OUTPUT path exists
    rewrite fashion object and adapt of the template
    commit before my nap: some little changes were started
    typo
    now creating outfits, have fun
    Fix some dumb syntax errors
    Move import datetime in the right place, fix the optionnal template path
    Add a fashion harvester
    
    Brings out the outfits !
    Feed the current date and time to the templates.
    Don't convert to title case in Python.
    Improved the ship database template.
    add unity pages for ships and macros
    add a getStatsLabelsLabel filter
    fix bugs and add a custom filter for the stats items
    Initial commit of the Naev Ship Harvester
    
    This tool is merely a simple html generator to put some details from the
    XML to a webpage.
    
    Signed-off-by: Ludovic Bellière <xrogaan@users.sourceforge.net>
    Initial commit of the Naev Ship Harvester
    
    This tool is merely a simple html generator to put some details from the
    XML to a webpage.
    
    Signed-off-by: Ludovic Bellière <xrogaan@users.sourceforge.net>
    * Added initial economy simulator, just generates graphs for now.
    add LICENSE file
    Revert "Fix width of single page"
    
    This reverts commit 9fd6b3267560a8cb066fb583dde344b72eb50aac.
    Fix width of single page
    Update ship db's CSS.
    Updated single-ship template.
    Improved the ship database template.
    add a little readme
    Correct css url
    Started using a small parent template in the existing templates.
    Updated single-ship template, bringing it to parity with the index template.
    Convert to title case in templates.
    Template fix.
    Updated single-ship template.
    add unity pages for ships and macros
    Make NSH work (though not well)
    Add favicon link to ship database
    Remove link to GCode
    Remove leading . from absolute links
    Added the global header to the ship db generator.
    Added generation time and standard naev.org header to the base ship database template.
    Started using a small parent template in the existing templates.
    now creating outfits, have fun
    Started using a small parent template in the existing templates.
    Convert to title case in templates.
    Improved the ship database template.
    add unity pages for ships and macros
    add a getStatsLabelsLabel filter
    fix bugs and add a custom filter for the stats items
    Initial commit of the Naev Ship Harvester
    
    This tool is merely a simple html generator to put some details from the
    XML to a webpage.
    
    Signed-off-by: Ludovic Bellière <xrogaan@users.sourceforge.net>
    now creating outfits, have fun
    * Added initial economy simulator, just generates graphs for now.
    rewrite fashion object and adapt of the template
    commit before my nap: some little changes were started
    rename outfit template
    now creating outfits, have fun
    * Added initial economy simulator, just generates graphs for now.
    Copy images
    Updated single-ship template.
    add unity pages for ships and macros
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    remove .py[co] files
    Detect ships when used in a fleet
    Removed some ableist language pertaining to blindness, and some sexism.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Did some work on in-sanity so it checks Lua dirs properly, among other things.
    Reset the error witness for each loop
    * Spelling.
    show the filename on error when parsing lua script
    Process AI Spawn files
    
    I added some doc and a new set of lua files to be processed. Now
    this tool must be close to complete.
    detect unidiff data in xml file
    Detect ships when used in a fleet
    delete unneeded lines
    fix the second parse
    comment comment comment (and doc, hey)
    Reorderings code and files make them more 'standards'
    do not use class attribute
    try to fix the regex + some debug print
    some bugfixes
    Finishing !
    
    All the double check must be done now. I can start the debug process.
    improving double checking
    remove unused regex
    Add a double check to detect deeply the content
    add unidiff checks and show some unused content
    show unused content in ship.xml and outfit.xml
    bugs bugs bugs
    fix bugs plus implementing preprocessing stuff
    Check lua scripts in scripts/ and dat/events/
    use naev path instead of data path
    finishing stuff to detect unused fleets
    python3 is now officialy used
    keeping things right with the python3000 way
    * Changed print syntax to newer one.
    * Changed regex to not detect false positives.
    fix regex (no single quote in lua)
    update help statement for the --use argument
    rawfiles now works
    bugs bugs bugs
    should fix a bug with the lineNumber function
    add last item to check
    some bugs fixed
    dah_doctor now validate fleets's names
    add some comment
    implement the viking way
    call the sanitizer
    initial commit of the in-sanity tool
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    add the license
    Removed "stupid", "idiot", "moron" occurrences.
    
    These are also sanist terms, so I replaced them with better terms,
    like "fool" (the term with the same literal meaning in contemporary
    usage), or generalist insults like "asshole".
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    update TODO list
    Detect ships when used in a fleet
    update todo list
    update todo list
    update todo file
    update TODO file
    update todo list
    update todo list
    update TODO file
    update TODO
    initial commit of the in-sanity tool
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Remove unused code.
    Did some work on in-sanity so it checks Lua dirs properly, among other things.
    Detect ships when used in a fleet
    delete unneeded lines
    Reorderings code and files make them more 'standards'
    do not use class attribute
    some bugfixes
    unifying missing and unused data detection
    fleets reader should now be able to set an item in a unknown stade
    bugs bugs bugs
    correct a stupid idea
    finishing stuff to detect unused fleets
    avoid duplicate in the used fleet list
    New method to show unused fleets
    some bugs fixed
    fleet reader now compile fleet names and find them at request
    initial commit of the in-sanity tool
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    fix: do not flag a tech as missing if used as a child for another tech
    in-sanity tool: Support the new xml structure
    Detect assets in unidiff
    detect unidiff data in xml file
    comment comment comment (and doc, hey)
    Reorderings code and files make them more 'standards'
    Finishing !
    
    All the double check must be done now. I can start the debug process.
    show unused content in ship.xml and outfit.xml
    update error sentece
    bugs bugs bugs
    fix bugs plus implementing preprocessing stuff
    let's comment !
    Hierachical way to validate xml stuff
    adding first idea of xmldata validator
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Did some work on in-sanity so it checks Lua dirs properly, among other things.
    in-sanity tool: Support the new xml structure
    sort stuff in array
    update TODO list
    Detect ships when used in a fleet
    fixed misdetected ship or outfit : a check was missing
    Reorderings code and files make them more 'standards'
    do not use class attribute
    some bugfixes
    unifying missing and unused data detection
    use a correct warning sentence
    bugs bugs bugs
    show unused content in ship.xml and outfit.xml
    python3 compilance
    python3 compilance
    add outfit and ship modules
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    in-sanity tool: Support the new xml structure
    Detect ships when used in a fleet
    fix the second parse
    fixed misdetected ship or outfit : a check was missing
    Reorderings code and files make them more 'standards'
    try to fix the regex + some debug print
    some bugfixes
    Finishing !
    
    All the double check must be done now. I can start the debug process.
    improving double checking
    fix case problem in the variable name
    unifying missing and unused data detection
    python3 compilance
    initial commit of the in-sanity tool
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Detect assets in unidiff
    detect unidiff data in xml file
    delete unneeded lines
    Reorderings code and files make them more 'standards'
    do not use class attribute
    some bugfixes
    unifying missing and unused data detection
    fleets reader should now be able to set an item in a unknown stade
    unidiff reader should now be able to set an item in a unknown stade
    add unidiff checks and show some unused content
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    in-sanity tool: Support the new xml structure
    sort stuff in array
    delete unneeded lines
    fixed misdetected ship or outfit : a check was missing
    Reorderings code and files make them more 'standards'
    do not use class attribute
    unifying missing and unused data detection
    show unused content in ship.xml and outfit.xml
    python3 compilance
    add outfit and ship modules
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Reorderings code and files make them more 'standards'
    try to fix the regex + some debug print
    some bugfixes
    Finishing !
    
    All the double check must be done now. I can start the debug process.
    improving double checking
    fix case problem in the variable name
    unifying missing and unused data detection
    python3 compilance
    initial commit of the in-sanity tool
    * Added initial economy simulator, just generates graphs for now.
    add LICENSE file
    * Added initial economy simulator, just generates graphs for now.
    * Calculate sparseness and such.
    * Use neato.
    * Clusters work.
    * More verbose.
    * Added initial economy simulator, just generates graphs for now.
    Remove uneeded lines
    Get the children text if tag.text is empty
    * Added initial economy simulator, just generates graphs for now.
    * Added initial economy simulator, just generates graphs for now.
    * Actually take into account the fire rate modifier.
    * Made axes be the same for all renders.
    * More complete simulations.
    * Sexy up the graphics.
    * Display accuracy and fire rate limits.
    * Tweaked values.
    * Heat Simulator is fancier than ever.
    * Fancier simulation model now allows longer term simulation.
    * Trying new parameters, seems to give good results.
    * Pretty plots.
    * Changed how heatsim handles saving.
    * Minor fixes.
    * Streamlined code a bit more.
    * Moved into class.
    * Added support for writing to file.
    * Simulated heat ships shoot for a bit then rest.
    * Hardcoded some outfits and ships to try out stuff.
    * Added simple heat simulator.
    * Added simple heat simulator.
    Balancer supports both ships and outfits and _ALL_ properties.
    Updated balancer to be more generic and handle ships.
    Inheritance
    Made balancer a class.
    Added comment to balancer about python 3.9.
    Added balancer script that can read/write to/from XML and CSV (currently outfits only).
    Added balancer readme.
    Whitespace.
    Added shave to autotools for a cleaner output.
    PO changes required for Meson.
    
    - update-po.sh generates a combined POTFILES.in for Meson to consume, since Meson doesn't seem to have any performance issues that justify the extra complexity of two generation steps.
    - update-po.sh always puts XML files at the end of POTFILES*. This removes sorting as a point of variance between AutoTools and Meson.
    - update-po.sh takes the source root directory as a parameter (default cwd). This supports Meson's out of tree builds.
    - Moves `po/translation.its` into `po/its/`. This allows the use of an XML locator file required for Meson's combined code/XML gettext processing.
    - Adjusts AutoTools to produce file names relative to the source root in .po files. Aside from being cleaner, this matches Meson's behaviour making it easier to compare the output of the two systems.
    Generate po/POTFILES_XMl and read from that for xml files.
    Add German translation
    Initial internationalization support with partial Japanese support.
    Remove unused plasmaf code
    PO changes required for Meson.
    
    - update-po.sh generates a combined POTFILES.in for Meson to consume, since Meson doesn't seem to have any performance issues that justify the extra complexity of two generation steps.
    - update-po.sh always puts XML files at the end of POTFILES*. This removes sorting as a point of variance between AutoTools and Meson.
    - update-po.sh takes the source root directory as a parameter (default cwd). This supports Meson's out of tree builds.
    - Moves `po/translation.its` into `po/its/`. This allows the use of an XML locator file required for Meson's combined code/XML gettext processing.
    - Adjusts AutoTools to produce file names relative to the source root in .po files. Aside from being cleaner, this matches Meson's behaviour making it easier to compare the output of the two systems.
    Updated potfiles.
    Revert "Rework po generation a bit. This removes the dependency on itstool."
    
    This reverts commit e7181bf03304459693a8eac1a8f514de2448010a.
    env.c as potfile
    Remove --nondata flag
    ndata is dead! Long live ndata!
    Rework po generation a bit. This removes the dependency on itstool.
    Updated POTFILES.in.
    Update PO files
    Update POTFILES.in
    Updated PO files and fixed up stuff with pirate names.
    ./extras/update-po.sh
    Updated POTFILES.in.
    
    I assume/think there's a way to do this automatically, but I don't
    know how, so I just added the ones I know were added recently manually.
    Update POTFILES.in
    shader.gen.c is generated and thus not needed in the POTFILES.in
    Added translation targets for ALL the xml.
    More translation thoughout the game.
    Split economy into economy and commodity.
    Sort POTFILES.in
    update pot
    Update PO stuff.
    updated PO files. I still do not know what I am doing.
    More gettext.
    Added all lua.
    Lua gettext seems to work.
    Updated ja translation.
    Added log.h to POTFILES.in.
    Initial internationalization support with partial Japanese support.
    PO changes required for Meson.
    
    - update-po.sh generates a combined POTFILES.in for Meson to consume, since Meson doesn't seem to have any performance issues that justify the extra complexity of two generation steps.
    - update-po.sh always puts XML files at the end of POTFILES*. This removes sorting as a point of variance between AutoTools and Meson.
    - update-po.sh takes the source root directory as a parameter (default cwd). This supports Meson's out of tree builds.
    - Moves `po/translation.its` into `po/its/`. This allows the use of an XML locator file required for Meson's combined code/XML gettext processing.
    - Adjusts AutoTools to produce file names relative to the source root in .po files. Aside from being cleaner, this matches Meson's behaviour making it easier to compare the output of the two systems.
    Revert "Fix po generation"
    
    This reverts commit 157c7040158b379c49e1baea74c99353fc664475.
    Fix po generation
    Added gettext.gettext_noop to Lua.
    Makevars
    makevars
    Usa variable for POT.
    Update PO stuff.
    Makevars updated.
    Use utf-8 instead of ascii for xgettext.
    Set copyright to Naev DevTeam
    Initial internationalization support with partial Japanese support.
    Remove --nondata flag
    Rework po generation a bit. This removes the dependency on itstool.
    Removed "stupid", "idiot", "moron" occurrences.
    
    These are also sanist terms, so I replaced them with better terms,
    like "fool" (the term with the same literal meaning in contemporary
    usage), or generalist insults like "asshole".
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Update PO files
    Updated PO files and fixed up stuff with pirate names.
    update-po
    Regenerated naev.pot and update po files.
    Updated japanese translation a bit.
    updated PO files. I still do not know what I am doing.
    Updated po.
    More gettext.
    Updated and cleaned up japanese translation a little.
    Update pot files.
    Updated pot files.
    Update po.
    Lua gettext seems to work.
    Updated ja translation.
    More gettext fixes and translations.
    Minor ja update.
    Changed escape code for colors from '\e' to '\a' so xgettext plays well with it.
    Testing partial japanese translation and gettext.
    Updated po files.
    Initial internationalization support with partial Japanese support.
    Fix some mistakes in German translation
    Update German translation
    Update German translation
    Remove --nondata flag
    Rework po generation a bit. This removes the dependency on itstool.
    Update German translation
    Removed "stupid", "idiot", "moron" occurrences.
    
    These are also sanist terms, so I replaced them with better terms,
    like "fool" (the term with the same literal meaning in contemporary
    usage), or generalist insults like "asshole".
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Update German translation
    Update PO files
    Updated PO files and fixed up stuff with pirate names.
    Update German translation
    Update German translation
    update-po
    Regenerated naev.pot and update po files.
    Add German translation
    Remove unused plasmaf code
    PO changes required for Meson.
    
    - update-po.sh generates a combined POTFILES.in for Meson to consume, since Meson doesn't seem to have any performance issues that justify the extra complexity of two generation steps.
    - update-po.sh always puts XML files at the end of POTFILES*. This removes sorting as a point of variance between AutoTools and Meson.
    - update-po.sh takes the source root directory as a parameter (default cwd). This supports Meson's out of tree builds.
    - Moves `po/translation.its` into `po/its/`. This allows the use of an XML locator file required for Meson's combined code/XML gettext processing.
    - Adjusts AutoTools to produce file names relative to the source root in .po files. Aside from being cleaner, this matches Meson's behaviour making it easier to compare the output of the two systems.
    Generate po/POTFILES_XMl and read from that for xml files.
    Use fewer generic matchers for ITS translation.
    PO changes required for Meson.
    
    - update-po.sh generates a combined POTFILES.in for Meson to consume, since Meson doesn't seem to have any performance issues that justify the extra complexity of two generation steps.
    - update-po.sh always puts XML files at the end of POTFILES*. This removes sorting as a point of variance between AutoTools and Meson.
    - update-po.sh takes the source root directory as a parameter (default cwd). This supports Meson's out of tree builds.
    - Moves `po/translation.its` into `po/its/`. This allows the use of an XML locator file required for Meson's combined code/XML gettext processing.
    - Adjusts AutoTools to produce file names relative to the source root in .po files. Aside from being cleaner, this matches Meson's behaviour making it easier to compare the output of the two systems.
    Fixed translation.its.
    Updated xml translation rules.
    Revert "Rework po generation a bit. This removes the dependency on itstool."
    
    This reverts commit e7181bf03304459693a8eac1a8f514de2448010a.
    Rework po generation a bit. This removes the dependency on itstool.
    Added translation targets for ALL the xml.
    More translation thoughout the game.
    Consolidated its files into a single one.
    PO changes required for Meson.
    
    - update-po.sh generates a combined POTFILES.in for Meson to consume, since Meson doesn't seem to have any performance issues that justify the extra complexity of two generation steps.
    - update-po.sh always puts XML files at the end of POTFILES*. This removes sorting as a point of variance between AutoTools and Meson.
    - update-po.sh takes the source root directory as a parameter (default cwd). This supports Meson's out of tree builds.
    - Moves `po/translation.its` into `po/its/`. This allows the use of an XML locator file required for Meson's combined code/XML gettext processing.
    - Adjusts AutoTools to produce file names relative to the source root in .po files. Aside from being cleaner, this matches Meson's behaviour making it easier to compare the output of the two systems.
    Revert "Rework po generation a bit. This removes the dependency on itstool."
    
    This reverts commit e7181bf03304459693a8eac1a8f514de2448010a.
    Rework po generation a bit. This removes the dependency on itstool.
    We use ldoc not luadoc.
    Fix an issue with luadoc generation
    Make luadoc.sh return the same error code as ldoc
    Fix ldoc build
    Add types to lua api docs, and other documentation improvements
    Format awk script better and add comment explaining its purpose
    Correct ldoc sed script
    Get LDoc working instead of luadoc
    
    Luadoc is not maintained, and is superceded by LDoc.
    
    Still requires template matching naev.
    Put generated luadocs in docs/html
    Build documentation for ai module
    Cleaned up luadoc.sh a bit and made it work from any dir.
    * Luadoc.
    * Now handle @luasee.
    * Luadoc.sh should no longer die.
    * Luadoc.
    * Lua generates better documentation now.
    * Implemented more tags in Luadoc.
    * Using own taglet now.
    * Some more Camilo patches to the documentation system.
    * Clean up and doxygen.
    * First commit of Camilo's luadoc generation script.
    * Revamp somewhat of the documentation build process.
    We use ldoc not luadoc.
    Make configure test for ldoc instead of luadoc
    Use “all-local:” instead of “all:” in docs/Makefile.am
    Check for doxygen/luadoc before generating docs.
    Update Lua Documentation to have a common look and feel to the rest of the Naev site (#1184)
    Updated CSS to fix image scaling issue.
    Formatting is also pretty now.
    Add types to lua api docs, and other documentation improvements
    Correct display of parameters
    css correction
    LDoc: add description to index
    Use correct css file
    Get LDoc working instead of luadoc
    
    Luadoc is not maintained, and is superceded by LDoc.
    
    Still requires template matching naev.
    HTML docu for offline use
    Did a ton of HTML clean-up in src/ and the Luadoc templates to be 100% standards-compliant.
    Henceforth, bobbens is banned from editing HTML.
    Fancied up the Luadoc index a bit.
    Add the standard naev.org header to Luadoc's output.
    * Added the Luadoc templates that were missing.
    Added Discord link (matching the change I pushed for naev-website)
    Update Lua Documentation to have a common look and feel to the rest of the Naev site (#1184)
    Added Issue Tracker Link
    Update broken links and fix missing image.
    Get header and title right with ldoc
    Update Lua Documentation to have a common look and feel to the rest of the Naev site (#1184)
    Remove LDoc Contents
    LDoc: add description to index
    Get header and title right with ldoc
    Get LDoc working instead of luadoc
    
    Luadoc is not maintained, and is superceded by LDoc.
    
    Still requires template matching naev.
    Update broken links and fix missing image.
    Fix ldoc build
    LDoc: add description to index
    Get header and title right with ldoc
    Get LDoc working instead of luadoc
    
    Luadoc is not maintained, and is superceded by LDoc.
    
    Still requires template matching naev.
    Description of Science gone wrong mini campaign
    * Sergeant Dimitri has become Lt. Commander Dimitri with the new ranks.
    * Renamed Operation Green Giant to Collective Distraction.
    * Added mission titles.
    * Fixed typo.
    * Heavy improvements to collective campaign (makes sense now sort of).
    * Reflect mission split up in the documentation.
    * Added overview of the intended Collective Campaign.
    description of kidnapped mini campaign plan
    s/NAEV/Naev/ in docs/
    Updated docs/
    * Retab for docs/plot.
    added setting notes to hg to not lose them :)
    * Moved manual into it's own subdir.
    Seeding the manual with an outline.
    * Updated mission layout diagram.
    * Updated mission layout to include new missions.
    * Updated mission layout diagram.
    * Added mission layout diagram.
    Updated the mission template to include the XML header.
    Removed unnecessary global variable use in template.
    Added a "creditstring" function to numstring.lua.
    
    This is designed to make proper use of ngettext for credits easier.
    It does the right thing for translation in combination with using
    the numstring function. I've already made use of it in a couple of
    places. I'm essentially recommending this for any time Lua code needs
    to display a certain number of credits.
    Updated and renamed the "bar template".
    
    It's now called "mission template" and it's much more extensive...
    and most importantly, up-to-date. I actually might have gone slightly
    overboard here seeing as the template is actually a 100% valid
    mission, albeit a simple one. Like, this could legitimately be
    added into the game if we wanted.
    
    I think it might be best to delete "complete.lua" and
    "computer_template.lua". Two reasons:
    
    1. mission_template is complete, so "complete.lua" is redundant.
    2. Beginners shouldn't really be making new computer missions since
       computer missions should usually be generic. Those require a lot
       more care than unique missions.
    s/NAEV/Naev/ in docs/
    Small change to overview
    Updated docs/
    * Named Pirates: Galactic Pirates.
    * New faction model (Great Houses).
    * Simple overview of the factions.
    * Sergeant Dimitri has become Lt. Commander Dimitri with the new ranks.
    * Added more documentation.
    * Retab for docs/ai.
    branch:      naev
    added a docs dir with AI behaviour examples taken from current ai
    * Retab for docs/ai.
    branch:      naev
    added a docs dir with AI behaviour examples taken from current ai
    * Retab for docs/ai.
    branch:      naev
    added a docs dir with AI behaviour examples taken from current ai
    * Retab for docs/ai.
    branch:      naev
    added a docs dir with AI behaviour examples taken from current ai
    * Retab for docs/ai.
    branch:      naev
    added a docs dir with AI behaviour examples taken from current ai
    * Retab for docs/ai.
    branch:      naev
    added a docs dir with AI behaviour examples taken from current ai
    * Changed ship class transporter to courier.
    * Added more documentation.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Modified landing requirements for military assets.
    
    This increases the threshold for landing on military assets to 50.
    I considered 70, but 50 is probably good.
    ngettext for landing.lua.
    Started adding more systems and assets for the Proteron.
    
    I've added in all the systems that I want to, but not all the assets.
    All but one of these systems will have one or two assets added to them
    later; I'm just not doing it right now because I'm tired and it's late.
    
    I also modified Protera Sigma to not offer Proteron ships, instead
    offloading that task to a Proteron station with a military restriction.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Increased Soromid landing restriction for military assets.
    
    This makes things more consistent with what civilians tell you: you
    have to be high up in Soromid ranks for access to bio-ships.
    Ruadan and its station can no longer be landed on.
    Changed pirate terminology a bit (more gender-neutrality stuff)
    
    I changed "Welcome, brother" to "Welcome, mate" when landing, and
    changed the "Brother" status to "Partner".
    More gettext.
    Remove some unused lua variables detected by lua-inspect
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    Check land override in landing.lua
    Raise Empire military landing requirement
    Reduced Soromid and Za'lek military landing reputation to their current caps
    Removed unused Zalek assets, made dat changes for zalek personaility, and assets
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Made the in-game text gender neutral, because females can play too
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Make Omega Station accessible after Empire Shipping 3.
    Give Omega Station a custom landing function.
    Allow players to land on military assets when they reach the required amount, not when they exceed it.
    * Emperor's Wrath added to the game. Polaris Prime demoted to civilian station.
    * Empire ship tech temporarily moved to Arcturus Gamma until a better location becomes available.
    * Added landing profile for Soromid capital.
    * More Soromid assets.
    * More Soromid assets.
    * Added Soromid land function for military assets.
    Fixed error in landing.lua
    Whitespace.
    Dialogue in tk windows should be quoted.
    Whitespace.
    * Updated comment.
    * Cosmetic edit.
    * Properly take landing floor into account when calculating bribes.
    * Reorganized landing.lua (again).
    * More sophisticated planet bribing cost calculation.
    * Bribing cost now depends on ship class too.
    * Can't bribe planets below a certain standing.
    Missing variable declaration.
    Whitespace fixes.
    Re-added later patches.
    * Reverted landing.lua compactation changes.
    Better fix for bribe prices. Effectively sets minimums, too.
    Fixed bug that theoretically can never occur. Yay!
    >= 0 is preferable to > 0.
    Dialogue in tk windows should be quoted.
    Fixes, removed remaining non-generic functions.
    Categorize military assets merely as 'military', parse landing permissions based on faction with generic function.
    * Added bribe related stuff to landing script.
    * Minor tweaks to kill and mission caps.
    * Fancier behaviour, more explicit.
    * More verbose explanation.
    * Properly named landing function.
    * Added more land restrictions and restriction scripts.
    * Basic implementation works, probably quirky all over.
    * Initial implementation of landing lua. Not actually used yet.
    gettext and typos
    More gettext for scripts.
    Minor fixes and comments for the rescue script.
    Heavily revamped rescue script.
    
    The initial comment as well as the comment for check_stranded explain
    the majority of the script. It will now trigger even if there's a
    shipyard and/or outfitter, provided additional criteria are passed.
    Implement a system for rescuing players that get stranded on load
    
    Since a large number of planets lack a shipyard and outfitter,
    renaming or removing core outfits is a dangerous proposition, as
    it has the potential to leave players unable to take off without
    resorting to save editing.
    
    This script aims to alleviate that. It's not entirely bulletproof, and
    it could skip a few cases, but it should reliably get most broken saves
    functional again rather painlessly.
    added advertisers
    Add the first two missions for the first Za'lek campaign.
    Mission updates
    
    Changed the trader escort mission to a Traders Guild mission, plus
    added Traders Guild targets for Assassination Job missions.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Nerfed Operation Black Trinity.
    
    Black Trinity was nearly impossibly hard; the Trinity was very eager
    to flee, meaning you had to pummel it with very powerful shots very
    quickly, and it had a huge swarm of drones, meaning you had to be
    able to deal with them too. The overall result of this was that it
    was basically impossible to "win" the mission without a large and
    very powerful ship, and without entering from the top (which clearly
    isn't the place you're "supposed" to enter). This has been remedied
    by substantially nerfing the fight:
    
    * The Trinity runs when its armor is damaged rather than when its
      shield is at 70%.
    * The first swarm of drones does not spawn, only the reinforcements
      do.
    * The Collective Sml Swarm fleet has been reduced in number slightly
      (3 drones and 1 large drone rather than 4 drones and 2 large). I
      made sure, and this doesn't affect any other missions in any
      noticeable way other than the visuals of ec02 (you'll see four
      drones a swarm instead of six in the cutscene).
    
    Also fixed a typo.
    Added a Dissident Dead Or Alive Bounty mission for the Proteron.
    
    Also fixed the fact that Dissident presence was spawning Civilian
    ships and not Dissident ships.
    Removed remaining FW flagship defs, replaced with Pirate Kestrel.
    Removed broken Seiryuu ship and used Pirate Kestrel instead.
    
    It was massively out of date, from before we had core systems.
    Add Thurion destroyer and carrier.
    Adjusted equipping and spawning of miners.
    
    AI is massively broken. I'll fix that next.
    added the miners faction
    Added mission services to hs and ns planets, bar service to hs planets.
    
    Also enabled most neutral missions for the Thurions. (Excluded bounty
    hunting since it seems the Thurions would be above that.)
    Added Assault on Haleb mission.
    
    Destroy Raglan Outpost! This of course reduces Dvaered presence in
    Frontier space and is seen as a massive victory for the FLF.
    Finished the "Assault on Raelid" mission.
    
    Finally, it's finished! When you beat it, Raelid Outpost is wiped
    from the map, which angers the Empire and turns them into an enemy.
    The general feel at the end is victorious, yet worrisome.
    Changed the Sindbad ship to use images straight from the planet folder.
    
    Also renamed the ship to "Sindbad" ("Base" made it sound too generic)
    and removed the redundant images.
    Added a new Thurion freighter and Thurion weapons.
    Add new Thurion ship
    Added two new Thurion ships (light fighter and bomber) and some new Thurion modifier outfits.
    Added the next FLF Empire alliance campaign mission.
    
    This is where the campaign goes sour. Tense feelings from a minority
    of FLF pilots causes some of them to go rogue and attempt to initiate
    a coup. The player is then tasked with stopping this coup. Of course,
    this is just the beginning.
    
    This mission also unlocks missions similar to the Dvaered patrol
    missions, but targeting rogue FLF pilots instead. Unlike the Dvaered
    patrol missions, these missions do not give you a reputation boost,
    only money, and completion is met with coldness.
    Koala Convoy should be Koalas and not Rhinos as pointed out by kernhe.
    Trader Escort Mission
    Revert "Gave Ulios its own faction."
    
    This reverts commit 678b4f54cf4ceb336825e4c6e1b837e99704a589.
    Gave Ulios its own faction.
    add variety to the frontier patrols
    added a police AI for the frontier (2/2)
    general update, hopefully not broken
    major zalek update
    * Fixed thurion scripts.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    zalek ships and further map fixes
    dragging the zalek branch kicking and screaming into modern naev
    added in the heretic campaign prologue
    * Give Four Winds escorts a norun AI, to ensure they will never leave when unattended.
    added dvaered mission dv_diversion
    test
    add dvaered mission dv_diversion
    * Areze's initial work on Za'lek space.
    thurion now spawns. It is using empire ships as placeholders for now.
    Starfire should get Empire equipment.
    Fleets and ships for Soromid.
    Added Pirate and Dvaered Phalanx fleets.
    * Trinity should be a challenge now, probably too much of a challenge.
    * Use pilot.add rather than addRawShips.
    Remove unused fleets.
    Remove unused fleets.
    Replace nonexistent AI.
    Removed the predefined Crimelord fleets.
    Fleet for the Sirius Shaman.
    * Independent faction uses civilian AI for now.
    Fixed Empire Pacifier pilot name.
    * Gave sirius their own watered down AI. Needs more love.
    * Dark Shadow writing done.
    * Planet Nonuri is now actually implemented.
    * Fixed mistakes in fleet.xml.
    * Fixed Four Winds flagship defs, mainly.
    * Some more work on Dark Shadow.
    * Fixed grep gone wild.
    * Renamed pilots in fleet.xml
    * Standard naming scheme: <faction name> <ship name>
    * Added fleets that were removed and still used in missions.
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    Added four new Sirius ships by Enigmatic.
    * WIP commit for Prince mission.
    * More progress on Shadow Vigil mission.
    * WIP.
    * WIP commits are here again.
    * Used the new faction spoof to spoof a faction.
    * More work on the Shadow Vigil mission. Also a lot of peripheral edits.
    * Split AI idle() function into "personalities" that determine basic behavioral patterns.
    ** Patrol personality will fly around or jump or land.
    ** Trader personality will always jump or land.
    ** Civilian personality will fly around and then land if possible (even if it's the planet it took off from), and jump only if left with no other choice.
    * Civilian fleets now have a civilian AI that has the civilian personality.
    * Trader AI has trader personality.
    changed fleet names
    * More work on Shadow Vigil.
    * Removed obsolete strength tags.
    *added/finished mission crimelord
    * Cleanup of unused fleets.
    * Spawn scripts for most factions (Sirius and Za'lek using Empire for now).
    * Added and removed fleets as necessary.
    * Peacemaker is now called "Empire Peacemaker".
    * Ship renamery.
    * Proteron faction ships are now in their own tech group.
    * Independent factions are now blue (same as Goddard).
    * Defined tech groups.
    * Renamed Peacemaker to Empire Peacemaker, for consistency.
    * Removed tech values from outfits and ships (now obsolete).
    * Added some Independent fleets.
    * Renamed Independent Vendetta Quartet to Vendetta Quartet, because it's not meant to be an Independent generic fleet.
    * All special fleets now have strength -1.
    * Fixed broken XML.
    * Added more trader fleets.
    * Added civilian Schroedinger, Llama and Gawain fleets.
    * All ship chances are now 100%. Chances should be removed eventually.
    * FLF no longer gets Admonishers and Pacifiers, but does get Lancelots.
    * All bosses now have a strength of 0.
    * Civilian Hyena now has non-0 strength.
    * Tweaking the universe a bit.
    * WIP commit for new mission.
    * Hotfix for text alignment issue.
    * Assigned strength values to fleets.
    * WIP commit for the first Mad Baron mission
    * Added more simple base AI.
    * Finished the base attack mission.
    * Tweakage!
    * Added another torpedo weapon (same gfx as Casear IV).
    * Work on base attack mission.
    * Tweakage, tweakage, oh how I love you tweakage.
    * Second FLF mission basically done
    * The usual tweakage
    * Finished the second mission in the Dvaered route
    * Added graphics for base and waypoint ships
    * Tweakage
    * WIP commit for FLF intro campaign
    * Some initial work towards the FLF intro campaign.
    Added Proteron system, fixed Peacemaker target, added Peacemaker to presences.
    Five new ships.
    Fixed sprite, added Vigilance to fleets & presences.
    * Added Empire Hawking fleet.
    * Added guard flag to Empire/Dvaered/Goddard fleets.
    * Some minor tweaks and clean ups.
    New defend planet mission and mission template.
    
    Added a new mission available at any planet once player's combat rating is greater than 50.
    
    Also added a new fleet, a new faction, and a new AI to support this mission.
    
    Finally created a new mission template, similar to the old ones, but more verbose.
    * Changed fleet.xml format to something more sane to define outfits in.
    * Tweaked encounters some.
    * New mission.  Last of the new campaign.
    * Tweaked other missions/campaign to be based on completing this one.
    * New mission.
    * Tweaked some old missions.
    * New ai.
    * New untested mission, probably needs debugging.
    * Added Pirate Kestrel fleet.
    * Added Koala ship in game.
    * Some ai changes.
    * Added FLF fleets and FLF ai.
    * Added many more fleets in anticipation of the final collective mission.
    * Updated Operation Black Trinity to work with new fleets.
    * More fine tuning for missions.
    * Fixed Operation Black Trinity.
    * New Mission:  Operation Black Trinity.
    * Major AI rehaul, split into generic stuff.
    * Added bomber attack routines.
    * Fixed bug with AI forgetting about you if another enemy attacks.
    * Change Merchant faction to the Space Traders Guild.
    * New Ship: Empire Pacifier.
    * New Ship: Empire Admonisher.
    * New Ship: Empire Hawking.
    * New Ship: Empire Lancelot.
    * Added the dvaered skinned ships.
    * Fixed outstanding taunt() bugs in the ai.
    * Added more fleets (unused atm).
    * New AI: Dvaered.
    * New Fleet: Pirate Vendetta.
    * Pirate fleets now use base ship name.
    * Added utility to help with indention.
    * Properly created House Goddard.
    * Added Hyena packs.
    * Added some fleets.
    * Added pacifier NPCs.
    branch:      naev
    added hawking
    branch:      naev
    added new station, added actual empire ships and fights with the collective
    branch:      naev
    fixed wierd new warnings and added more thingies (especially factions)
    branch:      naev
    added militia faction, changed mr.test to militia, added ai_create
    branch:      naev
    added mule ship to actually use turrets :)
    branch:      naev
    [svn] switched to commonwealth spelling (armor -> armour)
    implemented seeker missiles and ammo
    implemented secondary weapons
    branch:      naev
    [svn] GUI's NAV and WEAPON monitors are now used, just need to add MISC
    branch:      naev
    [svn] added hyena fully
    noticed that the landing AI is worse then i thought
    branch:      naev
    [svn] enemies are now properly parsed
    added possibility of pirate
    buffer overflow in ai fixed
    branch:      naev
    [svn] added timer support for the AI
    fixed major buffer overflow in AI
    branch:      naev
    [svn] bug fixes
    support for different AI Profiles
    branch:      naev
    [svn] much more error checking in the xml
    fleets are built in - just need to do something with them
    minor tweaks and fixes
    branch:      naev
    [svn] working libxml at ship.c
    fixed all memory leakage
    Add option to check licenses for non-existent files
    Add a script for checking file license status
    Renamed Boarding Androids outfits to comply with typical naming conventions.
    Added more ships for pirate ship stealing.
    
    This also changes "Za'lek Prototype Cruiser" to just "Za'lek Prototype"
    and adds Za'lek ships that were mission from tech.xml.
    Removed some unused/unneeded outfits.
    
    Pirate Landing Pass (previously given by hitman2) and Tricon
    Experimental (which I assume was previously needed for something
    experimental, but isn't required by anything now).
    Removed "FLF Vendetta" et al.
    
    This is a relic of before blackmarket planets could sell any ship
    without a license, so they're unnecessary now.
    Added entries for medium/large cargo pods.
    Modified commodity prices to make more sense.
    Started adding more systems and assets for the Proteron.
    
    I've added in all the systems that I want to, but not all the assets.
    All but one of these systems will have one or two assets added to them
    later; I'm just not doing it right now because I'm tired and it's late.
    
    I also modified Protera Sigma to not offer Proteron ships, instead
    offloading that task to a Proteron station with a military restriction.
    added more types of asteroids
    Added access to the jump nearby Kretogg for the pirates.
    Added BioPlasma Organ, fixed upgrade script errors
    Better tech definitions
    Added bio-outfits to tech.xml
    Za'lek weapons tweak
    
    Added two new missile launchers for medium and heavy Za'lek ships. Balanced close to Thurion launchers as the two factions are close tech-wise. Also modified the equip file so Za'lek ships should use the launchers.
    Add Thurion destroyer and carrier.
    dos2unix
    Removed now unnecessary "asterokiller" weapons.
    Made Thurion invisible by default, reveal them with FLF Catastrophe event.
    
    This change causes most Thurion assets to not exist on the map at first,
    and it causes the Thurion core systems (the only ones not hidden by
    default) to be behind a hidden jump. This ensures that the Thurion
    cannot be discovered until a mission or event has designated them as
    revealed, similar to Sindbad.
    
    This commit also includes adding such a reveal to the FLF Catastrophe
    event, which includes a bunch of new dialog explaining to the player
    who the Thurion are and pointing out that a Thurion ship is needed to
    safely traverse the nebula.
    Added Unicorp PT-900 to techs
    
    It was missing for some reason! Literally the only place you could buy
    this core system was in Bon Sebb, meaning you couldn't sell it anywhere
    either. Fixed!
    Removed Medusa Missiles from the shop.
    
    I thought I did before, but it looks like I missed this one missile type.
    It's removed now.
    Consolidated missile and launcher descriptions, removed missiles from shop
    
    This commit modifies all launcher descriptions to incorporate important
    information from the missile/rocket descriptions; previously most of
    them just said something like "a launcher that launches X missiles",
    which was always annoying but is absolutely no good with auto-refilling
    missiles. Additionally, rockets have been removed from all shops (even
    Bon Sebb), since their presence there is no longer needed (although the
    missile outfits themselves remain in the game mostly as an interesting
    relic of the past; changing the system to not have them at all would be too
    time-consuming to be worth it in my opinion).
    Automatically give access to all GUIs at the start.
    
    This is a bit of an ugly way to make all GUIs available, but it
    seems to be the only way at the moment. A proper fix in the C code
    can come some other time.
    Finished the FLF Catastrophe event.
    
    Just needs testing.
    Added FLF Pacifier for sale at Sindbad.
    Finished stage 1 of flf_dvk02.
    
    The player discovers a small group of pirate ships, but they just
    won't budge. So the player has to show them who's boss. When they
    do, they are given a map, and a quest...
    misc update on mining
    made mining more user-friendly
    Added a new Thurion freighter and Thurion weapons.
    Add new Thurion ship
    Added two new Thurion ships (light fighter and bomber) and some new Thurion modifier outfits.
    Added Thurion Outfits
    
    No space station offer Thurion outfits, yet they are useful.
    Destroyable asteroids
    Adding pseudo-missiles to Collective
    
    Gives The Collective Heavy Drones More Teeth. Possibly start working to
    return them to medium ship status? Would need to scale up sprite sheet
    in that event.
    Add a zalek generic mission
    Add a Heavy Ripper Turret, meant for destroyers
    Replace the kestrel's speed boost with a one-off engine
    Add the Laser PD turrets to several techs
    Add the Heavy Razor Turret to several techs
    Add the light cruiser cores to various techs
    Change Large Fuel Pod to 800 fuel, add Medium Fuel Pod
    Purge many unused core outfits
    Add two techs for beam weapons
    Add a few missing outfits to All Outfits
    Make Gui - Slimv2 available for sale
    Update maps and add Sirius and Za'lek core maps
    Updated techs for hull rebalance, unused hulls are relegated to All Outfits
    Renamed a variety of core hulls throughout XML and Lua
    
    'Schafer & Kane' has been replaced with 'S&K' in most places
    Several Unicorp and S&K platings have new names
    Added Mercenary License to some techs, so it can be aquired.
    Added FLF Lancelot and FLF Vendetta.
    
    These ships aren't actually being used by the FLF. Their only
    purpose is to be sold to the player at the FLF base. They are
    exactly the same, but come with crappy core systems rather than
    basic core systems, are slightly cheaper, and don't require a
    license to be bought.
    Modified the structure of the FLF's techs.
    Added the mercenary license to "all outfits".
    Another pirate bounty mission replacement.
    
    Actually, I replaced my previous pirate bounty mission replacement
    with two missions: the "Dead or Alive" bounty mission, and the "Alive"
    bounty mission. Both of these require a new "Mercenary License".
    
    Conflicts:
    
            dat/missions/neutral/pirbounty.lua
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Renamed 15 core systems throughout Lua and XML
    Modified techs to remove obsolete engines
    Completed engine renaming (in both XML and Lua)
    MORE fixes cause im a knob
    fixes cause im a knob
    general update, hopefully not broken
    major zalek update
    Vengeance now armorbreaker, added dome Zlk assets, tweaked others
    Legacy GUI outfit
    
    Added a buyable legacy GUI outfit
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    add a larger fuel pod
    Qorel Expanse added.
    
      - It is a set of pirate systems and stations in the empty space between the
        Empire and the Dvaered allowing a safe^Wpossible route between Vorca and
        New Haven.
      - The map containing the position of the entry and exit points has to
        be bought, and it’s currently a bit expensive if you are begining
        the game, though the pirate missions are at the same time very
        lucrative… (maybe a bit much?)
      - It could be seen as a test to know whether or not other “expanses”
        should be added in the other empty spaces between other factions,
        but IMHO, it makes playing pirate a bit easier. Without that, you
        could not play purely pirate and would have to be allied with at
        least one or two factions (and one of them has to be the Dvaered…)
        to only be able to move through the galaxy…
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    Pirate maps item corrected. (oops)
    Pirate maps added.
    * Added Reverse Thrusters to techs.
    zalek ships and further map fixes
    * Edits by Areze.
    * Lua scripts may now use warn() to print to console and stderr.
    * pilot.rmOutfit() can now remove all core outfits if passed "cores" as its argument.
    * Added a helper script for quickly equipping a pilot's cores.
    * Reorganized tech.xml a bit, no functional change.
    * Forgot to add the new outfits to techs, rectified.
    * Removed example techs as they were bloating the editor.
    * Created techs for core outfits.
    * Local map should now detect all normal jumps and all normal assets.
    * Local map is available in basic outfits.
    * Finished local map implementation.
    * Added local map.
    * Added jump scanner to techs.
    * Afterburning aborts autonav.
    * Areze's initial work on Za'lek space.
    * The game no longer saves on Eiroik during ec04.
    * ec01 gives the player a (partial) map of Collective space at the start.
    * Added Empire Core map to techs.
    * Added some maps.
    * Regenerated All Outfits tech.
    * Regenerated All Outfits tech.
    * Added Watson to Proteron Military Ships tech.
    * Regenerated All Ships tech.
    * Updated All Outfits tech.
    * Added core systems to tech.xml.
    * Remove from techs too.
    * Added reverse thrusters outfit.
    * Some test values for core slots.
    * Added basic example of working slot properties.
    * Added launchers and missiles to techs.
    * Added Medusa missile and launchers to tech.xml.
    * Added Medusa missile and launchers to tech.xml.
    * Added Soromid ships to all ships tech.
    * Populate the soromid ship tech.
    * More Soromid assets.
    * Added Soromid ship tech group.
    * Added turret launchers for the interceptor missile family.
    * Caesar and Imperator are now true torpedoes.
    * Banshee rockets are now hard target killers.
    * Mace rockets are now fast-fire dogfight missiles.
    * Added Vengeance missile and launchers.
    * New Headhunter stats, added an alternative Headhunter launcher.
    * Seeker missile is now the Fury class interceptor missile.
    * Added an alternative launcher for the Fury missile.
    * Fixed equipper scripts.
    * Note: using an <arc> node to signify lockon arc. Currently not implemented.
    * Introduced scrambler outfits.
    * Jammers are impotent until active EW is implemented.
    Add the three Phalanx variants to various techs.
    Add Shaman to tech.xml
    New Thurion ship, added shipyards to Thurion shipyard stations- requires build that supports nebula damage resist
    * Player can buy kestrels now.
    Added generic Shark to the light combat ship tech group.
    * Fixed tech.xml.
    Updated tech.xml with new weapons (plus appropriate tech groups).
    * Polished up the relative crew stuff.
    just a quick bugfix, regarding tech.xml :X
    here is my boarding android mod, right now, there are 2 models the mk I nad the mk2, which give you 20% and 35% more crew to increase your chance of success when boarding a ship.
    I'm still using the cargo_pod gfx, because i dont have any better graphics :X
    
    here is a summary of what i changed:
            modified:   dat/outfit.xml, added outfits Boarding Androids Mk I and II (tanks Deiz for the hillarious descriptions)
            modified:   dat/tech.xml,   added the Boarding AndroidsI&II to: High Tech Upgrades, Low Tech Upgrades; added Boarding Android Mk I to Basic Outfits 2.
            modified:   src/board.c,    changed board_tryStel(...) to use the modified crew value of the pilot and not the static one f the ship
            modified:   src/info.c,     changed ship_update(...) to use the modified crew value of the pilot.
            modified:   src/outfit.c,   added functionality to load <crew_rel> xml nodes .
            modified:   src/outfit.h    added variable double crew_rel to pilot.u.mod
            modified:   src/pilot.c     changed init to init the initial crew.
            modified:   src/pilot.h     added variable double crew to struct Pilot.
            modified:   src/pilot_outfit.c changed Pilot_calcStats stats to change pilot->crew acording to temp->u.mod.crew_rel
    * Fixed up some issues.
    * Implemented most of the kinetic tree.
    * Improved and using the new Laser weapon tree. Unbalanced atm.
    Added the new brushed GUI.
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * Licenses should still be sold again.
    * Licences should now be sold again.
    * Added quicksilver to bulk trade ships.
    * More planets filled in, including some Sirius ones.
    * Added Sirius ships tech (currently empty).
    * Removed prodfactor tags, since they're unused.
    * Naming consistency.
    * Ship renamery.
    * Proteron faction ships are now in their own tech group.
    * Collective Drone Tech is now part of Heavy Civilian Combat Ships, once available.
    * Added collective diff.
    * Disambiguated Goddard's tech group to prevent a crash.
    * Goddard is now in its own tech group.
    * Added tech entries for all existing planets with outfits or shipyards.
    * Drone fighter bay and fighters removed from High Tech Upgrades 2 (should be added through unidiff).
    * Independent factions are now blue (same as Goddard).
    * Defined tech groups.
    * Renamed Peacemaker to Empire Peacemaker, for consistency.
    * Removed tech values from outfits and ships (now obsolete).
    * Seems to load tech groups properly now.
    dos2unix
    Add explanatory comments for damage type ship stat voodoo
    Associate the nebula absorb stats with the nebula damage type
    Vengeance now armorbreaker, added dome Zlk assets, tweaked others
    * Renamed damagetype.xml stuff to be a bit more self descriptive.
    * Reorganized damage types. Did away with weapon technology as the guideline for damage type, and instead made damage types more functional.
    * Add emp as a damage type.
    * Outsource damage types to XML.
    * Note: still buggy.
    remove dat/ prefix from inside dat/intro
    
    Fixes https://github.com/naev/naev/issues/1291
    Replaced the placeholder intro images with some better images.
    
    Fixes #1044
    
    Images taken from the following sources, with edits for some of them:
    
    https://opengameart.org/content/space-ship-images
    https://opengameart.org/content/solar-system
    Changed "STU", "STP", and "SCU" to "seconds", "periods", and "cycles".
    
    This is meant for better readability; it makes the different units
    more distinguished from each other.
    
    "STU" was replaced with "seconds" instead of "units" for two reasons:
    one, "units" is too generic (it's used for all kinds of measurements,
    not just time measurements), making it a confusing name. Two, the SCU
    is the same as a second in-universe anyway, and I don't see the
    general population abandoning that term.
    
    For the auto generation of "pretty" time text, I replaced e.g "12 STU"
    with "12s", and e.g. "8.32 STP" with "8.32p".
    
    Also fixed some language mistakes in dialogs I happened to notice,
    plus some very weird usage of the time units that probably resulted
    from a misunderstanding of how long they're supposed to be (there
    was a father concerned because his daughter disappeared several
    *seconds* ago, a food station that had a harvest every day, and a
    weekly mining trip to one planet that was talked about as if that
    wasn't frequent).
    
    Just a thought that just came to mind as I was writing this: perhaps
    it would be better to call decaperiods "daps"? Not truly necessary,
    but it would be an interesting idea because it's a name for a unit
    that kind of look like "days", while also serving as a shorthand
    for the full official name. Any thoughts?
    Modified the intro to conform to the new startup text.
    
    The intro I added, showing you controls and such, is set at right
    after a flight exam and explicitly says that the ship you pilot is
    a gift from your instructor, so the line about how you take a ship
    and fly off is conflicting now. It doesn't really add anything, so
    I just removed it.
    gfx paths have changed, make sure we use the correct path.
    Small changes to try to improve readability.
    Edited to smooth the bit about the first growth, to clarify the meaning of SCU for players who don't know the Naev lore, and to improve the impact of the transition to the game by grouping the sentences handing off control the play together at the end.
    More edits to the intro.
    
    Mostly playing with rhythm and logic of the intro. Nothing significant.
    Small edits to intro
    
    Correcting a typo and other small changes.
    Minor edits to intro.
    
    The edits are for concision in some places. Other places they're for clarity. Also trying to make the ideas flow as naturally as possible from one to another.
    Small word changes to the intro, adding pronouns for clarity, changing 'cosmic' to 'Galactic' to expose the key phrase 'Galactic Empire'.
    Brought revised intro inline with lore
    
    After chatting with BTAxis, added some additional changes to bring out points important to lore, such as the two-stage expansion of the human race before and ander the hyperspace drive.  Also removed some of the more flowery language and continued to trim unnecessary sentences.
    Rewrote the intro to be more concise and use better verbs.
    Fixed typo in intro.
    * More NAEV -> Naev.
    * Updated intro text to match lore.
    Another image for the intro.
    Add another intro image.
    Add a second intro image.
    Add code for fade out.
    Display the image to the left of text.
    Preliminary redesign of intro.
    Minor intro cleanup.
    * More intro diff by Deiz.
    * Intro touches.
    * New fancier intro by Deiz.
    * Nebulae is plural, changed it all to nebula.
    * Made savegame more robust when loading inexistant missions.
    * More corrections by tangent & co.
    * More English correcness by _markt.
    * Small change in wording.
    * Spelling corrections by skwurp.
    typo back
    test
    fixed some typos
    * Fixed typo.
    * Small tweak by style critic EvanR.
    * Added introductory text.
    Fixed up the Proteron Derivative's description, started on Proteron equips.
    Marked the Proteron Dissident faction as "known".
    
    Makes them display as "Civilian" rather than the mysterious "Unknown".
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Added the <known /> tag to a lot of small "one-off" invisible factions.
    
    This is necessary so that their display faction will be shown.
    Added a Dissident Dead Or Alive Bounty mission for the Proteron.
    
    Also fixed the fact that Dissident presence was spawning Civilian
    ships and not Dissident ships.
    Added a small invisible "Proteron Dissident" faction.
    
    This is a faction which appears rarely in Proteron systems which looks
    identical to the Civilian faction, but which the Proteron are enemies
    with. Enables hunting down dissidents through the Patrol mission, and
    will enable a modified bounty hunt for dissidents.
    Removed pirates as Nasin enemies.
    Added next "Coming Out" mission.
    
    This mission involves the player assisting Chelsea in an effort to kill
    a pirate.
    Made "alive" bounties use a custom faction.
    
    This custom faction is enemies with civilians, traders, and Sirii,
    and allies with the Pirates, but not enemies with other police
    forces. Justification being that since the pirate is wanted alive,
    officials who can't disable the target (i.e. non-Sirius) wouldn't
    go after it.
    
    As a special exception, the Dvaered and the special faction are
    still enemies, since the Dvaered are notably absent-minded on this
    sort of thing and also don't offer alive bounties.
    dos2unix
    Gave miners their own standing script.
    
    Not sure why they shared the Trader script before (doing so can
    easily lead to bugs).
    Added 3rd "Coming Out" mission, plus fixed some minor fixes to other stuff.
    Got the new system in and working!
    
    Right now it's just putting generic outfits on everyone. Next step:
    adjust outfits for specific ships and factions.
    added the miners faction
    Added "The FLF Split" mission and FLF Rogue mission.
    Repurposed flf_pirates, added dvk05 (repurposed empa06).
    
    Originally I was going to have a pirate fallout, but I decided to
    instead just have some pirates attacking FLF ships for no real
    reason (they're pirates, after all). The new filler mission,
    "Alliance of Inconvenience", now unlocks the slightly altered
    "Pirate Disturbance" mission, which is common, but not as common as
    the others. It has a particular disadvantage compared to the others
    in that it cannot give you reputation for the Pirate faction (makes
    sense), but it does pay you and raise FLF reputation.
    Added two new Thurion ships (light fighter and bomber) and some new Thurion modifier outfits.
    Changed faction name from attribute to node.
    Added the next FLF Empire alliance campaign mission.
    
    This is where the campaign goes sour. Tense feelings from a minority
    of FLF pilots causes some of them to go rogue and attempt to initiate
    a coup. The player is then tasked with stopping this coup. Of course,
    this is just the beginning.
    
    This mission also unlocks missions similar to the Dvaered patrol
    missions, but targeting rogue FLF pilots instead. Unlike the Dvaered
    patrol missions, these missions do not give you a reputation boost,
    only money, and completion is met with coldness.
    Gave Frontier and Goddard factions their own standing Lua scripts.
    Made the Independent faction actually static.
    Returned the static tag to static factions.
    Replaced use of the "static" tag with a "static" standing script.
    
    The reason is using the "static" tag now guarantees standing to always
    be represented as "???", as this text is now defined in Lua.
    add the soromid equip file
    Revert "Gave Ulios its own faction."
    
    This reverts commit 678b4f54cf4ceb336825e4c6e1b837e99704a589.
    Gave Ulios its own faction.
    Made the "Independent" faction invisible and effectively static.
    
    This is meant to prevent the situation where various "independent"
    systems and planets appear to have some sort of allegiance.
    
    It would be better if each independent system and planet had its
    own hidden faction, but there are so many independents, this would
    be impractical and bloated.
    Remove static flag from Collective due to standing Lua
    Made standing text something defined in Lua.
    
    So now, different factions can have different terms for different amounts
    of standing, and these text representations can now be localized.
    Changed the fix for alive bounties.
    
    Now causes all nearby ships to clear tasks when the target ship is
    disabled... most of the time.
    Made the "alive" bounties more doable.
    
    Quite simply, I made the pirates in the "alive" bounty a different
    faction, which the pirates consider to be an ally (and so they will
    assist them), but which no one considers to be an enemy, and their
    only enemy is the player. In effect, no one gets in the way by blowing
    them up. Since non-lethal weapons are limited in power, and other
    pirates continue to be an obstacle, this doesn't seem to cause the
    mission to be overtly too easy.
    * Empire and FLF are not enemies.
    Made the Empire and FLF enemies.
    
    This happens for the player, since the Empire and Dvaered are
    allies. So it makes sense for the Empire and FLF to be enemies.
    There is even an implication in one of the Empire missions that the
    Empire and FLF are enemies. They are now officially enemies.
    Various small tweaks.
    
    Conflicts:
    
            src/player_autonav.c
    major zalek update
    madding more crap complicated by merge conflicts, i am a tool
    * Just use empire logo as a placeholder for Thurion.
    * Fixed thurion scripts.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    housecleaning and bugfixes
    dragging the zalek branch kicking and screaming into modern naev
    fixed faction lua warning
    added in the heretic campaign prologue
    Added enigmatic's new Soromid logo.
    * Areze's initial work on Za'lek space.
    * Updated syntax for Ingenuity.
    * Gave Thurion spawn and equip definitions (placeholders).
    Made a number of factions known by default.
    Fixed up the Kidnapped mission to not fail if the Koala is destroyed post-boarding, and to not damage standing with the Traders if the ship is blown up.
    set initial faction known state in faction.xml
    set initial faction known state in faction.xml
    Changed the <lua> tag to <standing> in faction.xml
    Add appropriate equip tags to faction.xml
    thurion now spawns. It is using empire ships as placeholders for now.
    added lua file for thurion
    * Initial commit of the first two missions in the Academy Hack campaign.
    * Improved proximity script to allow AI ships to act as the focus.
    * Implemented selective pilot clear script for per-faction ship clearing.
    * No-run AI for Sirius.
    * Moved bulky lua code from mission.xml into rehab_common.lua.
    * Added Soromid as a faction (spawns Sirius ships for now).
    * Rearranged Soromid space.
    * Added the first Soromid asset.
    Start FLF at 0 standing with the player.
    * Added independent faction script.
    * Should fix the faction lua warnings on startup.
    * Gave most factions a faction Lua profile.
    * Factions can now use Lua to mess with actual faction hits.
    Thurion faction, systems, worlds (landable) added - nebula up to 8 jumps added with new damage adjustments - added secret jump system for New Haven - added Project Thurion systems and worlds (not landable)
    * Independent faction now properly spawns ships.
    * Tweaked presences in the tutorial area.
    * Dark Shadow writing done.
    * Planet Nonuri is now actually implemented.
    * WIP commits are here again.
    * Used the new faction spoof to spoof a faction.
    * Hijack a different faction for Shadow Vigil mission.
    * More work on the Shadow Vigil mission. Also a lot of peripheral edits.
    * WIP edits for Shadow Vigil mission.
    * Added required player tags.
    *added/finished mission crimelord
    * Defined spawn scripts.
    * It seems like the faction spawning scripts can work now.
    * Independent factions are now blue (same as Goddard).
    * Defined tech groups.
    * Renamed Peacemaker to Empire Peacemaker, for consistency.
    * Removed tech values from outfits and ships (now obsolete).
    * Added aqua as a colour.
    * Changed Sirius faction colour to aqua.
    * Set factions for various planets as a guideline for future editing.
    * Faction sanity.
    * Pirate home world beefed up a lot in terms of presence.
    * Renamery.
    * Removed many nonsensical faction relationships.
    * Trader faction is no longer allied with anyone.
    * Sindbad shouldn't have any presence - it's secret!
    * WIP commit for new mission.
    * WIP commit for the first Mad Baron mission
    * Second FLF mission basically done
    * The usual tweakage
    New logo for Collective.
    Added pirate logo to faction.xml
    Added logos to faction.xml
    * Independent is now Cyan.
    Added Proteron system, fixed Peacemaker target, added Peacemaker to presences.
    * Hide some factions from the player.
    * Added colours to factions
    * Events load and clean up.
    * Added very simple first event.
    New defend planet mission and mission template.
    
    Added a new mission available at any planet once player's combat rating is greater than 50.
    
    Also added a new fleet, a new faction, and a new AI to support this mission.
    
    Finally created a new mission template, similar to the old ones, but more verbose.
    * Added check for faction sanity.
    * Faction relationships should make more sense now.
    * Removed soromid.
    * Give player a small faction buffer when starting.
    * New mission.  Last of the new campaign.
    * Tweaked other missions/campaign to be based on completing this one.
    * New mission.
    * Tweaked some old missions.
    * New ai.
    * Removed obsolete Militia faction.
    * New Lua bindings.
    * Added tutorial.
    * Implemented Frontier Alliance faction.
    * Added faction logos.
    * Display faction logos on land.
    * outfit.c: Cleaned up some code.
    * Named Pirates: Galactic Pirates.
    * Change Merchant faction to the Space Traders Guild.
    * Typo.
    * Added utility to help with indention.
    * Simplifying some faction stuff.
    * New faction model (Great Houses).
    * Properly created House Goddard.
    * Removed alliance deal, now each faction states it's allies/enemies.
    * Added many new not-used factions.
    first player faction patch
    branch:      naev
    fixed wierd new warnings and added more thingies (especially factions)
    branch:      naev
    added militia faction, changed mr.test to militia, added ai_create
    branch:      naev
    [svn] multiple enemies now supported
    bug fixes
    you can get other ship's health now from AI
    branch:      naev
    [svn] some cosmetic changes
    misc minor fixes
    branch:      naev
    [svn] faction system almost fully implemented
    fleets almost fully implemented (just need randomized start positions)
    major bugfix in weapon.c
    branch:      naev
    [svn] much more error checking in the xml
    fleets are built in - just need to do something with them
    minor tweaks and fixes
    branch:      naev
    [svn] added faction support
    documentation tweaks
    branch:      naev
    [svn] working libxml at ship.c
    fixed all memory leakage
    Removed unused leftover tutorial stuff.
    dos2unix
    Give the starting Llama a Deizerrific name.
       ...Don't worry, it gets replaced by the start event later.
    * Give player starting equipment.
    * Set tutorial start system to Mohawk.
    * Added start position to tutorial node in start.xml.
    * MAJOR COMMIT - May bring breakage.
    * Removed global variables from nlua_misn.c, nlua_event.c and nlua_hook.c
    * Added tutorial button.
    * Run master tutorial script as an event.
    * Removed old tutorial files and references.
    * You can define starting event, tutorial can get it's own event/mission.
    * New time system. As seen on wiki.
    * Start out near EM 1.
    * Centralized the game start information.
    * New player should have the system he'll start in as a background when writing name.
    * Player starts with 10k more credits.
    * Moved starting system to Hakoi (nice and safe).
    * Increased starting credits by a bit.
    * Changed start system to completely safe system.
    * Made player start more or less at same date.
    * Made new games a bit friendlier.
    * You can now define a start mission in start.xml.
    * Added tutorial skeleton.
    * Made player's starting stuff much more humble.
    * Added utility to help with indention.
    added time in the form of the galactic date
    some cleanup to try to find the segfault fault
    branch:      naev
    major content addition: 1 new system, 5 new outfits, more data checking
    branch:      naev
    energy matters and is actively used now
    branch:      naev
    typo starting money
    branch:      naev
    no longer can get negative outfit quantity
    branch:      naev
    [svn] rudimentary screenshot taking
    put some data info in start.xml
    branch:      naev
    [svn] forgot to define the starting position and make it work :)
    branch:      naev
    [svn] Cleaned up some funky old code
    Added possibility to disable ships (no death yet)
    New data specific file start that allows the player's starting pos and such to be defined
    Added a map graphic for the Proteron.
    Added a map nebula image.
    
    I couldn't figure out how to add text to the map, but here's an
    image (just one of the nebula background images resized and with
    transparency tweaked).
    added decorators for the major factions
    map decorator: picture -> image
    Map decorators for Naev, with one as example
    Added accessory slot.
    Added bio slot definitions
    * Some test values for core slots.
    * Slots are now handled separately in xml.
    Moved AUTHORS to dat/AUTHORS.
    Create dat/VERSION instead of VERSION.
    Updated AUTHORS.
    Moved nenau to the "major contributors" section.
    
    I think that's an apt description of them.
    Updated our entry in AUTHORS.
    added info
    Added some unique Pirate battle music.
    
    At first I thought this would be tough to use but turns out Naev
    has a credits screen I didn't know about. xD So yeah, here's some
    unique pirate music!
    
    c.f. https://opengameart.org/content/blackmoor-tides-epic-pirate-battle-theme
    Added to authors
    Updated my info.
    Revert "Made AUTHORS ascii (sorry Ludovic Bellière)."
    
    This reverts commit 0a12318c1c363b793a545b3cd7e106229a1800bc.
    Add myself to AUTHORS
    Made AUTHORS ascii (sorry Ludovic Bellière).
    * Added nenau to AUTHORS (Shark missions)
    Do not call the Za'lek unimplemented in AUTHORS
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Added more systems and planets to the galaxy. Areze helped.
    New event in Sirius space- attempt to convert the player
    
    Signed-off-by: Sudarshan S
    * NeD added to AUTHORS for his contribution.
    Made the AUTHORS chronology more cromulent.
    * AUTHORS
    * AUTHORS.
    Update AUTHORS.
    Reorganized AUTHORS a bit and credited a few people who were missing.
    * Updated bobbens syntax.
    * Updated bobbens syntax.
    Updated AUTHORS
    Updated AUTHORS
    * More NAEV -> Naev.
    * Updated AUTHORS.
    * AUTHORS.
    * Authors.
    * New logo.
    * BTAxis is now member of the devteam.
    * Added unavowed to authors.
    * AUTHORS.
    * Enormous diff that basically points out that bobbens' punctuation sucks.
    * AUTHORS update.
    * Updated authors to look nicer.
    * Updated AUTHORS.
    * Added grumbel to the authors and stuff.
    * Added mission by BTAxis.
    * Updated AUTHORS.
    * Always forgetting to include Deiz in commits he helped with.
    * New outfits by Deiz.
    * Balancing by Deiz.
    * End sprites by Deiz.
    * New sounds.
    * AUTHORS update.
    * Josiah is now an official dev.
    * Minor authors change.
    * Added testers.
    * Removed blank spaces for credits.
    * Properly added credits.
    * Updated AUTHORs.
    * Improved AUTHORS a bit.
    * Updated AUTHORS.
    * Gave contributors comments: Vega Strike rocks!
    * Update AUTHORS.
    new script to make sprites with gimp
    branch:      naev
    added an AUTHORS file for credits
    added more types of asteroids
    Added some more asteroid fields.
    
    I have a couple criteria for where I place an asteroid field:
    
    1. It must be in a location with pirates (to keep mining a bit interesting).
    2. It should make use of an otherwise useless system.
    3. Thurion space is an exception to this rule, but putting asteroids
       in unstable nebula systems is a must.
    Added damage checks for asteroids.
    
    Asteroids now take "armour" damage until they lose said "armour",
    rather than being instantly destroyed.
    Enabled mining and added variety to the fields
    Destroyable asteroids
    Fixed minor memory leaks.
    Made asteroid fields ID a string.
    manage different kinds of asteroids
    dos2unix
    * Two new explosions.
    * New outfits by Deiz.
    * Balancing by Deiz.
    * End sprites by Deiz.
    * New sounds.
    * Debris implemented.
    * Was using wrong tags cargo was rendering improperly.
    * SPFX no longer hardcoded.
    Add the first two missions for the first Za'lek campaign.
    Tweaked Medicine modifier too
    Changed the population modifier for food and water to be less extreme.
    
    Did the math and low populations produce laughably small results
    with a value of 1. A value of 0.75 seems much more reasonable.
    Some more adjustments
    Modified commodity prices to make more sense.
    added more types of asteroids
    changed some commodities to standard, and support on map editor for it
    support for standard commodities
    Fixed failure to convert one case of "Artefact".
    
    That's what I get for find and replace...
    reworked economy so that it becomes configurable from xml
    Changed commodity xml to have name as a tag not attribute.
    Enabled mining and added variety to the fields
    Alphabetize
    
    I put the new commodities in their proper alphabetical order
    Add food biz missions
    
    Added two new easy, unique, basic missions. Neutral missions geared
    towards early game play.
    Add <gfx_store> tabs in commodity.xml
    Added new commodity neede for missions
    major zalek update
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Pirate cargo mission rewrote from the current Empire Shipping mission script.
    added in the heretic campaign prologue
    Updated to match upstream master
    New waste dumping mission.
    
    The commit includes a single, unique mission starting in the Shakar system. Also the necessary changes to the mission.xml and commodity.xml files. The mission still needs some balancing, but should now work for all players.
    * First installment of the kidnap campaign by Superkoop.
    * Applied patch by arl1985 to improve the teenager mission.
    * DIY Nerds mission by thilo.
    * Added cargo missing from drunkard mission.
    * More work on Dark Shadow.
    * Some more work on Dark Shadow.
    * WIP commit for Prince mission.
    * WIP commit for the first Mad Baron mission
    * WIP commit
    * Some initial work towards the FLF intro campaign.
    * Enormous diff that basically points out that bobbens' punctuation sucks.
    * Added mission by BTAxis.
    * New mission.  Last of the new campaign.
    * Tweaked other missions/campaign to be based on completing this one.
    * New mission.
    * Tweaked some old missions.
    * New ai.
    * New untested mission, probably needs debugging.
    * Spelling corrections by skwurp.
    * New mission.
    * First patch to try to add a dynamic economy.  Economy is static atm.
    * Some code clean up.
    * Fixed a memory leak.
    * New Mission in Collective Campaign:  Operation Green Giant.
    * Added utility to help with indention.
    added a couple more commodities
    major commit, first fancy bar mission, alot of improvement
    branch:      naev
    can now buy/sell commodities, but they're all the same price
    branch:      naev
    basic commodity support added (not used yet)
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Add a move floor of 0.05 for stars, ceiling is now 0.1
    Inhabited systems must have stars.
    * Stars are now spacedust.
    * Use new graphics.
    For now, make multiple stars per system highly unlikely.
    * Move stars away when there's more than one.
    * Slowed background and sun movement to account for bigger systems.
    * Made it so there's two background layers, front and back. This is just position relative to stars.
    * Another green sun in an older style, because green was underrepresented.
    * A simple white star.
    * Another orange sun.
    * One additional yellow star.
    * Slower suns are slightly smaller.
    * Stars can't be repeated.
    * Fixed typo.
    * Generating stars now.
    * Pruned the uglier, smaller backgrounds.
    added one more background nebula from nasa *uncredited*
    * Doesn't make sense to splitlike that due to the way the FuSM will have to handle logic.
    * Clamp slightly below 2 for better results visually.
    * Speed up script slightly.
    * Seperate generation.
    * Bias towards system center.
    * Clamp zoom at 2x.
    * Fancier nebula stuff, handling zoom and friends.
    * Added range function to prng for indexes.
    Background Lua script updated for use with the nebula images.
    * Made variables local so they free themselves when the gc is run.
    * More verbose example.
    * Support for script to set backgrounds.
    Forgot OFL
    Convert FONT_LICENSE to yaml.
    Switched to better local fonts and removed usage of system fonts.
    Switched to better local fonts and removed usage of system fonts.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Icon seems to work.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added small script to set the sprite metadata information to an image.
    Changed ARTWORK_LICENSE to yaml to be parseable.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * NAEV -> Naev
    * New logo.
    New logo render.
    * Changed logo slightly.
    * Update NAEV logo.
    * Gave initial screen a more finished look.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Some 33 new nebula backgrounds to spice things up.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Some 33 new nebula backgrounds to spice things up.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Some 33 new nebula backgrounds to spice things up.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Some 33 new nebula backgrounds to spice things up.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Some 33 new nebula backgrounds to spice things up.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Some 33 new nebula backgrounds to spice things up.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Some 33 new nebula backgrounds to spice things up.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Some 33 new nebula backgrounds to spice things up.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed graphical artifact.
    Some 33 new nebula backgrounds to spice things up.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Some 33 new nebula backgrounds to spice things up.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Some 33 new nebula backgrounds to spice things up.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Some 33 new nebula backgrounds to spice things up.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Some 33 new nebula backgrounds to spice things up.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Some 33 new nebula backgrounds to spice things up.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Some 33 new nebula backgrounds to spice things up.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Some 33 new nebula backgrounds to spice things up.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Some 33 new nebula backgrounds to spice things up.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Some 33 new nebula backgrounds to spice things up.
    Converted a background's color map to suppress regular warnings.
    
    This is either the background or one of the backgrounds that cause
    those regular warnings about a Photoshop color map. I opened the
    file in GNU IMP, converted the color map, re-saved it, and then
    optimized it with Trimage. The warning is now gone for this
    background at least. (I'll do the same for any other background that
    I notice causes the warning.)
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added a nebula image.
    * Pruned the uglier, smaller backgrounds.
    added one more background nebula from nasa *uncredited*
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed a nebula background edge.
    Fixed nebula edge.
    Fixed nebula edge.
    Some 33 new nebula backgrounds to spice things up.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Some 33 new nebula backgrounds to spice things up.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Some 33 new nebula backgrounds to spice things up.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    * Forgot to add the actual graphic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New background star images.
    Another color profile fix
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Alternative blue star.
    * New background star images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New background star images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New background star images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    * A simple white star.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New background star images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New artwork by Andmiw.
    More color profile fixes.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New background star images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New background star images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Another green sun in an older style, because green was underrepresented.
    More color profile fixes.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added another blue sun.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New background star images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Another orange sun.
    Sort check.sh output by number of times graphic has been used
    * Fixed check script paths.
    * Made Fury missiles and launchers use their dedicated art.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Update check.sh scripts for non-monolithic XML.
    Ignore ending graphics for outfits entirely - they're always paired with a starting sprite, anyhow.
    Rewrote {planet,outfit}/check.sh to improve output and avoid false positives.
    * Fixed check.sh for outfits.
    * Fixed usage detection.
    * Added check.sh for checking outfit graphic usage.
    * Added script to control planet graphic usage.
    polygonal collision algorithm
    update on polygon collision
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    Fixed polygons for zlk outfits
    update on polygon collision
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    use automatically generated polygons
    polygonal collision algorithm
    update on polygon collision
    polygonal collision algorithm
    use automatically generated polygons
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    Fixed polygons for zlk outfits
    Za'lek weapons tweak
    
    Added two new missile launchers for medium and heavy Za'lek ships. Balanced close to Thurion launchers as the two factions are close tech-wise. Also modified the equip file so Za'lek ships should use the launchers.
    update on polygon collision
    polygonal collision algorithm
    Za'lek weapons tweak
    
    Added two new missile launchers for medium and heavy Za'lek ships. Balanced close to Thurion launchers as the two factions are close tech-wise. Also modified the equip file so Za'lek ships should use the launchers.
    update on polygon collision
    use automatically generated polygons
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    use automatically generated polygons
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    update on polygon collision
    use automatically generated polygons
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    update on polygon collision
    polygonal collision algorithm
    Add new core system icons and cargo hull icons.
    Added a new Thurion freighter and Thurion weapons.
    Add variety to plating graphics
    Za'lek weapons tweak
    
    Added two new missile launchers for medium and heavy Za'lek ships. Balanced close to Thurion launchers as the two factions are close tech-wise. Also modified the equip file so Za'lek ships should use the launchers.
    Add specialized core system icons.
    major zalek update
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng runs with new version reduced size of quite a few things.
    * New Outfits:  Reactor Class I, Reactor Class II, Reactor Class III.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Five new graphics for modifier outfits.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Updated store gfx by Deiz.
    * Many new outfits by Deiz.
    * Many new outfit graphics.
    * Overall awesome outfitness.
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Add new hull icons.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added railgun turret.
    * New graphics.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Five new graphics for modifier outfits.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng runs with new version reduced size of quite a few things.
    * license.png by Brian J. Cameron.
    * First implementation of Licenses.
    Add remaining hull icons.
    Add new hull icons.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New graphics: All missiles now have unique graphics and launchers.
    Add remaining hull icons.
    Add new hull icons.
    Add dedicated store graphics for (empire) lancelot fighter bay
    Add specialized core system icons.
    Add new core system icons and cargo hull icons.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New Outfit: Droid Repair Crew
    * Minor outfit tweaks.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Many new outfits by Deiz.
    * Many new outfit graphics.
    * Overall awesome outfitness.
    Added two new Thurion ships (light fighter and bomber) and some new Thurion modifier outfits.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Five new graphics for modifier outfits.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New Fury graphics by admiral_cheater.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New graphic jammer outfit graphic by Josiah.
    * Forgot graphic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added Drone Fighter Bay and such when collective campaign is finished.
    Add remaining hull icons.
    Add new hull icons.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New graphics for battery/shield cap outfits.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Five new graphics for modifier outfits.
    Add new core system icons and cargo hull icons.
    Add specialized core system icons.
    Add variety to plating graphics
    Add new hull icons.
    Add specialized core system icons.
    Add new hull icons.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Updated store gfx by Deiz.
    * Many new outfits by Deiz.
    * Many new outfit graphics.
    * Overall awesome outfitness.
    Add specialized core system icons.
    Add new core system icons and cargo hull icons.
    Add new hull icons.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Updated store gfx by Deiz.
    * Added railgun turret.
    * New graphics.
    Add new core system icons and cargo hull icons.
    * More outfit graphics by Unnamed.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added Emergency Shield Booster activated outfits.
    * Recolored a couple of graphics for the occasion.
    general update, hopefully not broken
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Updated store gfx by Deiz.
    * New graphic by Josiah Schwartfeger.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New Fury graphics by admiral_cheater.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Add specialized core system icons.
    Add new core system icons and cargo hull icons.
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Added two new Thurion ships (light fighter and bomber) and some new Thurion modifier outfits.
    Added a new Thurion freighter and Thurion weapons.
    * More outfit graphics by Unnamed.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New Fury graphics by admiral_cheater.
    * More outfit graphics by Unnamed.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added ripper mk2 turret outfit graphic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Re-did the lighting on the new kinetic weapon images to be in sync with everything else.
    Added a number of new graphics for the gauss gun tree.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng runs with new version reduced size of quite a few things.
    * Ran optipng on all graphics, should reduce size.
    branch:      naev
    added stare outfit graphics
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng runs with new version reduced size of quite a few things.
    * map.c: Fixed segfault when landing.
    * New Outfit: Star Map.
    * More outfit graphics by Unnamed.
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    * More outfit graphics by Unnamed.
    * More outfit graphics by Unnamed.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Add specialized core system icons.
    Add new core system icons and cargo hull icons.
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Add specialized core system icons.
    New large fuel pod graphic to differentiate from medium fuel pod
    add a larger fuel pod
    Added a new Thurion freighter and Thurion weapons.
    Add specialized core system icons.
    Add specialized core system icons.
    Add variety to plating graphics
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Add new hull icons.
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New graphics: All missiles now have unique graphics and launchers.
    Add dedicated store graphics for (empire) lancelot fighter bay
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng runs with new version reduced size of quite a few things.
    * New Outfits:  Reactor Class I, Reactor Class II, Reactor Class III.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng runs with new version reduced size of quite a few things.
    * New Outfits:  Reactor Class I, Reactor Class II, Reactor Class III.
    Za'lek weapons tweak
    
    Added two new missile launchers for medium and heavy Za'lek ships. Balanced close to Thurion launchers as the two factions are close tech-wise. Also modified the equip file so Za'lek ships should use the launchers.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Another graphic touched up by Deiz.
    * Optipng runs with new version reduced size of quite a few things.
    branch:      naev
    added stare outfit graphics
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Updated store gfx by Deiz.
    * Many new outfits by Deiz.
    * Many new outfit graphics.
    * Overall awesome outfitness.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New graphics: All missiles now have unique graphics and launchers.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added Emergency Shield Booster activated outfits.
    * Recolored a couple of graphics for the occasion.
    Add specialized core system icons.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New graphics for battery/shield cap outfits.
    Add remaining hull icons.
    major zalek update
    Add new core system icons and cargo hull icons.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Updated store gfx by Deiz.
    * Many new outfits by Deiz.
    * Many new outfit graphics.
    * Overall awesome outfitness.
    * Ran optipng on all graphics, should reduce size.
    branch:      naev
    added stare outfit graphics
    Add remaining hull icons.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Add new core system icons and cargo hull icons.
    Za'lek weapons tweak
    
    Added two new missile launchers for medium and heavy Za'lek ships. Balanced close to Thurion launchers as the two factions are close tech-wise. Also modified the equip file so Za'lek ships should use the launchers.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added the new brushed GUI.
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Add specialized core system icons.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Many new outfits by Deiz.
    * Many new outfit graphics.
    * Overall awesome outfitness.
    * Added New Armour Outfits:  Plasteel, Nanobond and Biometal.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New graphics: All missiles now have unique graphics and launchers.
    Add specialized core system icons.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng runs with new version reduced size of quite a few things.
    * New outfit graphic by Josiah Schwartfeger.
    * Ran optipng on all graphics, should reduce size.
    damn left the cargo pod grafic out a few commits back
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Updated store gfx by Deiz.
    * Many new outfits by Deiz.
    * Many new outfit graphics.
    * Overall awesome outfitness.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added Mace Rocket store graphic.
    Add remaining hull icons.
    Add new hull icons.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng runs with new version reduced size of quite a few things.
    * More new outfit store graphics by Josiah Schwartfeger.
    * Ran optipng on all graphics, should reduce size.
    forgot graphic... again...
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng runs with new version reduced size of quite a few things.
    * Two new graphics by Josiah Schwartfeger.
    * Ran optipng on all graphics, should reduce size.
    branch:      naev
    added afterburners
    * More outfit graphics by Unnamed.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Ran optipng on all graphics, should reduce size.
    branch:      naev
    new solar panel gfx
    branch:      naev
    added stare outfit graphics
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng runs with new version reduced size of quite a few things.
    * Ran optipng on all graphics, should reduce size.
    branch:      naev
    added stare outfit graphics
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added railgun turret.
    * New graphics.
    Add new core system icons and cargo hull icons.
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    * More outfit graphics by Unnamed.
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng runs with new version reduced size of quite a few things.
    * Ran optipng on all graphics, should reduce size.
    branch:      naev
    added stare outfit graphics
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added railgun turret.
    * New graphics.
    * More outfit graphics by Unnamed.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng runs with new version reduced size of quite a few things.
    * Escorts work, sort of.
    Add new hull icons.
    Add specialized core system icons.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New missile, replacement Headhunter graphic.
    Added a new Thurion freighter and Thurion weapons.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Updated store gfx by Deiz.
    * Better render by Deiz.
    * Optipng runs with new version reduced size of quite a few things.
    * Two new graphics by Josiah Schwartfeger.
    * Ran optipng on all graphics, should reduce size.
    branch:      naev
    added afterburners
    Add remaining hull icons.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New outfit: gatling gun.
    * Outfit balancing by Deiz.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    major zalek update
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed unfortunate crop job.
    Re-did the lighting on the new kinetic weapon images to be in sync with everything else.
    Added a number of new graphics for the gauss gun tree.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Re-did the lighting on the new kinetic weapon images to be in sync with everything else.
    Added a number of new graphics for the gauss gun tree.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New graphics: All missiles now have unique graphics and launchers.
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Add specialized core system icons.
    Changed image to placeholder.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New graphics for battery/shield cap outfits.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Updated store gfx by Deiz.
    * Many new outfits by Deiz.
    * Many new outfit graphics.
    * Overall awesome outfitness.
    Added a new Thurion freighter and Thurion weapons.
    Add remaining hull icons.
    Add new hull icons.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Re-did the lighting on the new kinetic weapon images to be in sync with everything else.
    Added a number of new graphics for the gauss gun tree.
    Add specialized core system icons.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Five new graphics for modifier outfits.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Updated store gfx by Deiz.
    * Many new outfits by Deiz.
    * Many new outfit graphics.
    * Overall awesome outfitness.
    Add new hull icons.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added New Armour Outfits:  Plasteel, Nanobond and Biometal.
    Add specialized core system icons.
    Add new core system icons and cargo hull icons.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng runs with new version reduced size of quite a few things.
    * More new outfit store graphics by Josiah Schwartfeger.
    * New Outfit: Milspec Jammer.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Updated store gfx by Deiz.
    * Many new outfits by Deiz.
    * Many new outfit graphics.
    * Overall awesome outfitness.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Ran optipng on all graphics, should reduce size.
    branch:      naev
    added stare outfit graphics
    Add remaining hull icons.
    Add remaining hull icons.
    Add specialized core system icons.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Many new outfits by Deiz.
    * Many new outfit graphics.
    * Overall awesome outfitness.
    Add remaining hull icons.
    Add new hull icons.
    Add variety to plating graphics
    New large fuel pod graphic to differentiate from medium fuel pod
    add a larger fuel pod
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New outfit.
    * Fixed a silly typo bug in weapon.c.
    * Ammunition can now have accuracy (missiles and such).
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Add new core system icons and cargo hull icons.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Updated store gfx by Deiz.
    * Graphic was 129x129 not 128x128.
    * Many new outfits by Deiz.
    * Many new outfit graphics.
    * Overall awesome outfitness.
    * Added New Armour Outfits:  Plasteel, Nanobond and Biometal.
    Add remaining hull icons.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Add specialized core system icons.
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Add specialized core system icons.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng runs with new version reduced size of quite a few things.
    * Due to persistent insistence I've changed the final capacitator to capacitor.
    * Ran optipng on all graphics, should reduce size.
    branch:      naev
    added stare outfit graphics
    Add new core system icons and cargo hull icons.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New graphics: All missiles now have unique graphics and launchers.
    major zalek update
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New outfit.
    * Fixed a silly typo bug in weapon.c.
    * Ammunition can now have accuracy (missiles and such).
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Many new outfits by Deiz.
    * Many new outfit graphics.
    * Overall awesome outfitness.
    Add remaining hull icons.
    Add new hull icons.
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Updated store gfx by Deiz.
    * Many new outfits by Deiz.
    * Many new outfit graphics.
    * Overall awesome outfitness.
    Add new core system icons and cargo hull icons.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Tutorial bugfix, new thruster graphic.
    * Ran optipng on all graphics, should reduce size.
    branch:      naev
    added stare outfit graphics
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng runs with new version reduced size of quite a few things.
    * New outfit graphic by Josiah Schwartfeger.
    * Ran optipng on all graphics, should reduce size.
    added fuel pod
    Add specialized core system icons.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Add specialized core system icons.
    Add new core system icons and cargo hull icons.
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    major zalek update
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng runs with new version reduced size of quite a few things.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed unfortunate crop job.
    Re-did the lighting on the new kinetic weapon images to be in sync with everything else.
    Added a number of new graphics for the gauss gun tree.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New Fury graphics by admiral_cheater.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Updated store gfx by Deiz.
    * Many new outfits by Deiz.
    * Many new outfit graphics.
    * Overall awesome outfitness.
    * Optipng runs with new version reduced size of quite a few things.
    * Tweaked Outfit store graphics a bit.
    Added a new Thurion freighter and Thurion weapons.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Updated store gfx by Deiz.
    * Many new outfits by Deiz.
    * Many new outfit graphics.
    * Overall awesome outfitness.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Add remaining hull icons.
    Add new hull icons.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Add leodudepal's pirate license graphic
    
    https://forum.naev.org/viewtopic.php?f=9&t=867
    He did other license graphics, but I am not adding them right now
    because they do not show what the purpose of the license is, and I think
    there should be some indication of that.
    Add specialized core system icons.
    Za'lek weapons tweak
    
    Added two new missile launchers for medium and heavy Za'lek ships. Balanced close to Thurion launchers as the two factions are close tech-wise. Also modified the equip file so Za'lek ships should use the launchers.
    Za'lek weapons tweak
    
    Added two new missile launchers for medium and heavy Za'lek ships. Balanced close to Thurion launchers as the two factions are close tech-wise. Also modified the equip file so Za'lek ships should use the launchers.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Various new weapon graphics. Updated outfit.xml to use them.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Various new weapon graphics. Updated outfit.xml to use them.
    Za'lek weapons tweak
    
    Added two new missile launchers for medium and heavy Za'lek ships. Balanced close to Thurion launchers as the two factions are close tech-wise. Also modified the equip file so Za'lek ships should use the launchers.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added more visual varieties (colours and sizes) to the laser tree.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New updated beam graphics that use the wavy beam system implemented a while back.
    * Made orion beam thinner.
    * New Outfit: Orion Beam.
    Assorted Changes
    
    Makes Za'lek drones more drone-like (They'll never be piloted by the
    player under legit circumstances). Further trying to balance Electron
    Cannons so a mob of Col. HDs can't annihilate heavy ships quite as
    easily (will probably have to switch their damage to shieldbreaker to
    coinside with their desc.).
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added more visual varieties (colours and sizes) to the laser tree.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New Fury graphics by admiral_cheater.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added more visual varieties (colours and sizes) to the laser tree.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New outfits by Deiz.
    * Balancing by Deiz.
    * End sprites by Deiz.
    * New sounds.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Various new weapon graphics. Updated outfit.xml to use them.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New optipng optimizes more.
    * Changed neutron disruptor graphic.
    * Ran optipng on all graphics, should reduce size.
    branch:      naev
    added stare outfit graphics
    branch:      naev
    gave the neutron disruptor a temporary gfx
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added more visual varieties (colours and sizes) to the laser tree.
    Renamed Valkyrie Ride to Valkyrie Beam.
    Add Heavy Razor Turret and large razor sprites
    
    Balance for the turret is largely by Ragwortshire
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added more visual varieties (colours and sizes) to the laser tree.
    Add Heavy Razor Turret and large razor sprites
    
    Balance for the turret is largely by Ragwortshire
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added more visual varieties (colours and sizes) to the laser tree.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Various new weapon graphics. Updated outfit.xml to use them.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Various new weapon graphics. Updated outfit.xml to use them.
    major zalek update
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Various new weapon graphics. Updated outfit.xml to use them.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New graphics: All missiles now have unique graphics and launchers.
    New missile, replacement Headhunter graphic.
    * Ran optipng on all graphics, should reduce size.
    branch:      naev
    added stare outfit graphics
    branch:      naev
    New graphics for headhunter missile
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    * Forgot mace graphic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Various new weapon graphics. Updated outfit.xml to use them.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Various new weapon graphics. Updated outfit.xml to use them.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added more visual varieties (colours and sizes) to the laser tree.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New missile, replacement Headhunter graphic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Accidently uploaded part of this patch before.  More outfits and graphics.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added a brighter, clearer sprite for gatling projectiles.
    * Gatling graphic updated.
    * New outfit: gatling gun.
    * Outfit balancing by Deiz.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Various new weapon graphics. Updated outfit.xml to use them.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Various new weapon graphics. Updated outfit.xml to use them.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added more visual varieties (colours and sizes) to the laser tree.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Ran optipng on all graphics, should reduce size.
    branch:      naev
    added stare outfit graphics
    branch:      naev
    [svn] yeah, forgot the new stuff
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New updated beam graphics that use the wavy beam system implemented a while back.
    * Beam weapons now properly use graphics.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Various new weapon graphics. Updated outfit.xml to use them.
    Assorted Changes
    
    Makes Za'lek drones more drone-like (They'll never be piloted by the
    player under legit circumstances). Further trying to balance Electron
    Cannons so a mob of Col. HDs can't annihilate heavy ships quite as
    easily (will probably have to switch their damage to shieldbreaker to
    coinside with their desc.).
    Added a new Thurion freighter and Thurion weapons.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New outfits by Deiz.
    * Balancing by Deiz.
    * End sprites by Deiz.
    * New sounds.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Various new weapon graphics. Updated outfit.xml to use them.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New outfits by Deiz.
    * Balancing by Deiz.
    * End sprites by Deiz.
    * New sounds.
    Za'lek weapons tweak
    
    Added two new missile launchers for medium and heavy Za'lek ships. Balanced close to Thurion launchers as the two factions are close tech-wise. Also modified the equip file so Za'lek ships should use the launchers.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added more visual varieties (colours and sizes) to the laser tree.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Various new weapon graphics. Updated outfit.xml to use them.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added more visual varieties (colours and sizes) to the laser tree.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New outfits by Deiz.
    * Balancing by Deiz.
    * End sprites by Deiz.
    * New sounds.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added more visual varieties (colours and sizes) to the laser tree.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Various new weapon graphics. Updated outfit.xml to use them.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Updated artwork license.
    New graphics: All missiles now have unique graphics and launchers.
    * Ran optipng on all graphics, should reduce size.
    branch:      naev
    added stare outfit graphics
    branch:      naev
    [svn] switched to commonwealth spelling (armor -> armour)
    implemented seeker missiles and ammo
    implemented secondary weapons
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    * New optipng optimizes more.
    * New outfit.
    * Fixed a silly typo bug in weapon.c.
    * Ammunition can now have accuracy (missiles and such).
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Various new weapon graphics. Updated outfit.xml to use them.
    major zalek update
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Various new weapon graphics. Updated outfit.xml to use them.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New optipng optimizes more.
    * Missed a graphic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Accidently uploaded part of this patch before.  More outfits and graphics.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added more visual varieties (colours and sizes) to the laser tree.
    Za'lek weapons tweak
    
    Added two new missile launchers for medium and heavy Za'lek ships. Balanced close to Thurion launchers as the two factions are close tech-wise. Also modified the equip file so Za'lek ships should use the launchers.
    major zalek update
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    Removed executable file mode.
    Add Vega Strike commodities images in new folder /dat/gfx/commodity
    added more types of asteroids
    added more types of asteroids
    Enabled mining and added variety to the fields
    Destroyable asteroids
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added tiny versions of logos, updating licensing and FLF logo.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Updated Proteron and Collective logos.
    Updated Proteron and Collective logos.
    Added tiny versions of logos, updating licensing and FLF logo.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Optipng run  on logos
    New logos for various factions.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added enigmatic's new Soromid logo.
    added the miners faction
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Updated Frontier logos.
    Added tiny versions of logos, updating licensing and FLF logo.
    Optipng run  on logos
    New logos for various factions.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    * New logos by Grumbel (same logo, new graphic).
    * Added faction logos.
    * Display faction logos on land.
    * outfit.c: Cleaned up some code.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added tiny versions of logos, updating licensing and FLF logo.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    * New logos by Grumbel (same logo, new graphic).
    * Optipng runs with new version reduced size of quite a few things.
    * Added faction logos.
    * Display faction logos on land.
    * outfit.c: Cleaned up some code.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added tiny versions of logos, updating licensing and FLF logo.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added prototype logo.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Updated Proteron and Collective logos.
    Updated Proteron and Collective logos.
    Added tiny versions of logos, updating licensing and FLF logo.
    New logo for Collective.
    added the miners faction
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added tiny versions of logos, updating licensing and FLF logo.
    * Moved Thurion ship gfx data into its proper location.
    Thurion faction, systems, worlds (landable) added - nebula up to 8 jumps added with new damage adjustments - added secret jump system for New Haven - added Project Thurion systems and worlds (not landable)
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added pirate logo.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added tiny versions of logos, updating licensing and FLF logo.
    Optipng run  on logos
    New logos for various factions.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Updated Frontier logos.
    Added tiny versions of logos, updating licensing and FLF logo.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added enigmatic's new Soromid logo.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added tiny versions of logos, updating licensing and FLF logo.
    * Moved Thurion ship gfx data into its proper location.
    Thurion faction, systems, worlds (landable) added - nebula up to 8 jumps added with new damage adjustments - added secret jump system for New Haven - added Project Thurion systems and worlds (not landable)
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added tiny versions of logos, updating licensing and FLF logo.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    * New logos by Grumbel (same logo, new graphic).
    * Added faction logos.
    * Display faction logos on land.
    * outfit.c: Cleaned up some code.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added tiny versions of logos, updating licensing and FLF logo.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    * New logos by Grumbel (same logo, new graphic).
    * Added faction logos.
    * Display faction logos on land.
    * outfit.c: Cleaned up some code.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Updated Proteron and Collective logos.
    Updated Proteron and Collective logos.
    Optipng run  on logos
    New logos for various factions.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    * New logos by Grumbel (same logo, new graphic).
    * Added faction logos.
    * Display faction logos on land.
    * outfit.c: Cleaned up some code.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added tiny versions of logos, updating licensing and FLF logo.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Updated Proteron and Collective logos.
    Updated Proteron and Collective logos.
    Added tiny versions of logos, updating licensing and FLF logo.
    Added icons showing whether an outfit fits a given slot
    Added icons showing whether an outfit fits a given slot
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Made hail.png less... ugh.
    * Tweaked hail icon animation so it's more visible all over.
    * Changed render order so that it shakes targetting reticles and comm messages.
    * Forgot graphic.
    Rename dat/gfx/gui/default to dat/gfx/gui/legacy
    
    Definitely not the default now...
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    expanded the ui
    * New HUD by Camilo Polymeris.
    Rename dat/gfx/gui/default to dat/gfx/gui/legacy
    
    Definitely not the default now...
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    expanded the ui
    * Added sprite information metadata to the targetting graphics.
    * New minimal planet target by Deiz.
    * New HUD by Camilo Polymeris.
    * Ran optipng on all graphics, should reduce size.
    branch:      naev
    [svn] Added planet targetting and landing framework
    split update / render completely into two different functions (for toolkit)
    branch:      naev
    [svn] added new GUI by default
    branch:      naev
    [svn] GUI are now saved in XML datafile
    this allows multiple guis
    each ship can have it's own GUI too :)
    branch:      naev
    [svn] targetting added
    fancy UI fixes
    Rename dat/gfx/gui/default to dat/gfx/gui/legacy
    
    Definitely not the default now...
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    expanded the ui
    * Added sprite information metadata to the targetting graphics.
    * New pilot targetting graphic by Deiz.
    * Ran optipng on all graphics, should reduce size.
    branch:      naev
    [svn] targetting graphic now displays color based on the targetted pilot
    branch:      naev
    [svn] added new GUI by default
    Rename dat/gfx/gui/default to dat/gfx/gui/legacy
    
    Definitely not the default now...
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    expanded the ui
    Updated targeting to allow simultaneous planet and hyperspace targets, modified HUD and fixed player.teleport() bug.
    Darkened radar circle.
    * Optipng runs with new version reduced size of quite a few things.
    * HUD expanded by Deiz to actually fit target graphics.
    * Added dead border around screen for new icons.
    * Tweaked icon movement.
    * Shrunk minimal gui by 30 pixels.
    * New HUD by Camilo Polymeris.
    * Ran optipng on all graphics, should reduce size.
    branch:      naev
    [svn] GUI's NAV and WEAPON monitors are now used, just need to add MISC
    branch:      naev
    [svn] added new GUI by default
    Rename dat/gfx/gui/default to dat/gfx/gui/legacy
    
    Definitely not the default now...
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    expanded the ui
    * New HUD by Camilo Polymeris.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Images shouldn't executable...
    Fixed wonky graphics, removed temporary files.
    Expanded by adding active outfits, still buggy though.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Images shouldn't executable...
    Fixed wonky graphics, removed temporary files.
    Basic stuff of slimv2 implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Images shouldn't executable...
    Basic stuff of slimv2 implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Images shouldn't executable...
    Fixed wonky graphics, removed temporary files.
    Basic stuff of slimv2 implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added the new brushed GUI.
    further expanded gui
    added new gui for llama
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Images shouldn't executable...
    Basic stuff of slimv2 implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Images shouldn't executable...
    Basic stuff of slimv2 implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Images shouldn't executable...
    Basic stuff of slimv2 implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Images shouldn't executable...
    Basic stuff of slimv2 implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Images shouldn't executable...
    Basic stuff of slimv2 implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Images shouldn't executable...
    Basic stuff of slimv2 implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Images shouldn't executable...
    Basic stuff of slimv2 implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Images shouldn't executable...
    Basic stuff of slimv2 implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Images shouldn't executable...
    Basic stuff of slimv2 implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    started adding the new HUD
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Images shouldn't executable...
    Basic stuff of slimv2 implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Images shouldn't executable...
    Fixed wonky graphics, removed temporary files.
    Basic stuff of slimv2 implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Images shouldn't executable...
    Basic stuff of slimv2 implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Images shouldn't executable...
    Basic stuff of slimv2 implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Images shouldn't executable...
    Basic stuff of slimv2 implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Images shouldn't executable...
    Basic stuff of slimv2 implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Images shouldn't executable...
    Basic stuff of slimv2 implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Images shouldn't executable...
    Fixed wonky graphics, removed temporary files.
    Basic stuff of slimv2 implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Images shouldn't executable...
    Basic stuff of slimv2 implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Images shouldn't executable...
    Basic stuff of slimv2 implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added the new brushed GUI.
    further expanded gui
    started adding the new HUD
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Images shouldn't executable...
    Basic stuff of slimv2 implemented.
    Fixed those corners for real this time.
    
    Not sure if the images had anything to do with it, but I refreshed
    those and also made sure that the Brushed GUI script doesn't overlay
    bar components on top of each other.
    Fixed alpha transparency in some images (it got removed for some reason)
    Tweaked the Brushed GUI to better match the new tk look.
    
    This was a simple affair: I simply desaturated many Brushed GUI
    component parts to get rid of the blue hue. Looks much nicer now.
    Added spaces on the left and right sides of the top and bottotm bars
    
    That took wayyyyyyyyyyy too much work, but the effect is great!
    Tweaked the Brushed GUI to better match the new tk look.
    
    This was a simple affair: I simply desaturated many Brushed GUI
    component parts to get rid of the blue hue. Looks much nicer now.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added the new brushed GUI.
    Fixed those corners for real this time.
    
    Not sure if the images had anything to do with it, but I refreshed
    those and also made sure that the Brushed GUI script doesn't overlay
    bar components on top of each other.
    Fixed alpha transparency in some images (it got removed for some reason)
    Tweaked the Brushed GUI to better match the new tk look.
    
    This was a simple affair: I simply desaturated many Brushed GUI
    component parts to get rid of the blue hue. Looks much nicer now.
    Added spaces on the left and right sides of the top and bottotm bars
    
    That took wayyyyyyyyyyy too much work, but the effect is great!
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    optipng.
    Top Bar. Variable length fields.
    optipng.
    Top Bar. Variable length fields.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    done-ish
    done-ish
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    optipng.
    Top Bar. Variable length fields.
    optipng.
    Top Bar. Variable length fields.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added the new brushed GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    optipng.
    Top Bar. Variable length fields.
    optipng.
    Top Bar. Variable length fields.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng and permissions.
    Fixed display bugs in slim, added refire, lockon and in_arc display to brushed.
    New planet pane graphics (based on existing images)
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    added necessary gfx for nav pane
    Added system name to Brushed GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added the new brushed GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    optipng.
    Top Bar. Variable length fields.
    optipng.
    Top Bar. Variable length fields.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    optipng.
    Top Bar. Variable length fields.
    optipng.
    Top Bar. Variable length fields.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added the new brushed GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    added time display to brushed hud.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added the new brushed GUI.
    further expanded gui
    added new gui for llama
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    optipng.
    Top Bar. Variable length fields.
    optipng.
    Top Bar. Variable length fields.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    optipng.
    Top Bar. Variable length fields.
    optipng.
    Top Bar. Variable length fields.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Top Bar. Variable length fields.
    Top Bar. Variable length fields.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added the new brushed GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added the new brushed GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Top Bar. Variable length fields.
    Top Bar. Variable length fields.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    optipng.
    Top Bar. Variable length fields.
    optipng.
    Top Bar. Variable length fields.
    Tweaked the Brushed GUI to better match the new tk look.
    
    This was a simple affair: I simply desaturated many Brushed GUI
    component parts to get rid of the blue hue. Looks much nicer now.
    New planet pane graphics (based on existing images)
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Top Bar. Variable length fields.
    Top Bar. Variable length fields.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    optipng.
    Top Bar. Variable length fields.
    optipng.
    Top Bar. Variable length fields.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    optipng.
    Top Bar. Variable length fields.
    optipng.
    Top Bar. Variable length fields.
    Fixed those corners for real this time.
    
    Not sure if the images had anything to do with it, but I refreshed
    those and also made sure that the Brushed GUI script doesn't overlay
    bar components on top of each other.
    Fixed alpha transparency in some images (it got removed for some reason)
    Tweaked the Brushed GUI to better match the new tk look.
    
    This was a simple affair: I simply desaturated many Brushed GUI
    component parts to get rid of the blue hue. Looks much nicer now.
    Added spaces on the left and right sides of the top and bottotm bars
    
    That took wayyyyyyyyyyy too much work, but the effect is great!
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    optipng.
    Top Bar. Variable length fields.
    optipng.
    Top Bar. Variable length fields.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng and permissions.
    Fixed display bugs in slim, added refire, lockon and in_arc display to brushed.
    Fixed those corners for real this time.
    
    Not sure if the images had anything to do with it, but I refreshed
    those and also made sure that the Brushed GUI script doesn't overlay
    bar components on top of each other.
    Fixed alpha transparency in some images (it got removed for some reason)
    Tweaked the Brushed GUI to better match the new tk look.
    
    This was a simple affair: I simply desaturated many Brushed GUI
    component parts to get rid of the blue hue. Looks much nicer now.
    Added spaces on the left and right sides of the top and bottotm bars
    
    That took wayyyyyyyyyyy too much work, but the effect is great!
    Tweaked the Brushed GUI to better match the new tk look.
    
    This was a simple affair: I simply desaturated many Brushed GUI
    component parts to get rid of the blue hue. Looks much nicer now.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    optipng.
    Top Bar. Variable length fields.
    optipng.
    Top Bar. Variable length fields.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added the new brushed GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added the new brushed GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added the new brushed GUI.
    Replaced velocity bar with lights (like on targets).
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    optipng.
    Top Bar. Variable length fields.
    optipng.
    Top Bar. Variable length fields.
    Added activated outfits support to the brushed GUI.
    Tweaked the Brushed GUI to better match the new tk look.
    
    This was a simple affair: I simply desaturated many Brushed GUI
    component parts to get rid of the blue hue. Looks much nicer now.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added the new brushed GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added the new brushed GUI.
    Tweaked the Brushed GUI to better match the new tk look.
    
    This was a simple affair: I simply desaturated many Brushed GUI
    component parts to get rid of the blue hue. Looks much nicer now.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added weapon bar popup to the new GUI.
    Tweaked the Brushed GUI to better match the new tk look.
    
    This was a simple affair: I simply desaturated many Brushed GUI
    component parts to get rid of the blue hue. Looks much nicer now.
    Added system name to Brushed GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    added time display to brushed hud.
    optipng.
    done-ish
    Top Bar. Variable length fields.
    optipng.
    done-ish
    Top Bar. Variable length fields.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added the new brushed GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added the new brushed GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    optipng.
    done-ish
    optipng.
    done-ish
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added weapon bar popup to the new GUI.
    Tweaked the Brushed GUI to better match the new tk look.
    
    This was a simple affair: I simply desaturated many Brushed GUI
    component parts to get rid of the blue hue. Looks much nicer now.
    New planet pane graphics (based on existing images)
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Top Bar. Variable length fields.
    Top Bar. Variable length fields.
    Added the new brushed GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Top Bar. Variable length fields.
    Top Bar. Variable length fields.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added the new brushed GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added the new brushed GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added the new brushed GUI.
    Tweaked the Brushed GUI to better match the new tk look.
    
    This was a simple affair: I simply desaturated many Brushed GUI
    component parts to get rid of the blue hue. Looks much nicer now.
    New planet pane graphics (based on existing images)
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added the new brushed GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added the new brushed GUI.
    Tweaked the Brushed GUI to better match the new tk look.
    
    This was a simple affair: I simply desaturated many Brushed GUI
    component parts to get rid of the blue hue. Looks much nicer now.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added the new brushed GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added the new brushed GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added the new brushed GUI.
    Tweaked the Brushed GUI to better match the new tk look.
    
    This was a simple affair: I simply desaturated many Brushed GUI
    component parts to get rid of the blue hue. Looks much nicer now.
    Fixed the icons on the edges.
    
    This involved making the view port smaller. Just to keep everything
    centered, I added a bottom bar as well to balance things out. Seems
    to look pretty nice!
    
    It's still not 100% perfect but it's better.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added the new brushed GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Top Bar. Variable length fields.
    Top Bar. Variable length fields.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added the new brushed GUI.
    * Optipng.
    further expanded GUI
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    optipng.
    Top Bar. Variable length fields.
    optipng.
    Top Bar. Variable length fields.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added the new brushed GUI.
    Tweaked the Brushed GUI to better match the new tk look.
    
    This was a simple affair: I simply desaturated many Brushed GUI
    component parts to get rid of the blue hue. Looks much nicer now.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added the new brushed GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added the new brushed GUI.
    further expanded gui
    started adding the new HUD
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added the new brushed GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    optipng.
    Top Bar. Variable length fields.
    optipng.
    Top Bar. Variable length fields.
    Tweaked the Brushed GUI to better match the new tk look.
    
    This was a simple affair: I simply desaturated many Brushed GUI
    component parts to get rid of the blue hue. Looks much nicer now.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added weapon bar popup to the new GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    optipng.
    Top Bar. Variable length fields.
    optipng.
    Top Bar. Variable length fields.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added the new brushed GUI.
    Tweaked the Brushed GUI to better match the new tk look.
    
    This was a simple affair: I simply desaturated many Brushed GUI
    component parts to get rid of the blue hue. Looks much nicer now.
    Improved formation button look while also making it extensible.
    
    The button is now in a menu which can include any number of buttons
    and can later be used to add fleet commands as well.
    Tweaked the Brushed GUI to better match the new tk look.
    
    This was a simple affair: I simply desaturated many Brushed GUI
    component parts to get rid of the blue hue. Looks much nicer now.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added weapon bar popup to the new GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added the new brushed GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added the new brushed GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added the new brushed GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added the new brushed GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added the new brushed GUI.
    Desaturated one more component I missed.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added the new brushed GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Added the new brushed GUI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Top Bar. Variable length fields.
    Top Bar. Variable length fields.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    made UI compatible with new weapon system - hopefully
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Refactored the Slim GUI.
    * Optipng.
    started adding the new HUD
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    started adding the new HUD
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    made UI compatible with new weapon system - hopefully
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Refactored the Slim GUI.
    * Optipng.
    expanded the ui
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Refactored the Slim GUI.
    expanded the ui
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added a fancier cooldown graphic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed up the active outfit bar.
    Slim GUI: Hacked in support for active outfits.
    Images shouldn't executable...
    Fixed wonky graphics, removed temporary files.
    Expanded by adding active outfits, still buggy though.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Smaller tracking image.
    * Optipng and permissions.
    Fixed display bugs in slim, added refire, lockon and in_arc display to brushed.
    * Added a tracking indicatior light, fixed autonav indicator light.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added a fancier cooldown graphic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    added necessary gfx for nav pane
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    started adding the new HUD
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Refactored the Slim GUI.
    * Optipng.
    started adding the new HUD
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    expanded the ui
    Remade the green and yellow warning lights with proper transparency.
    Status indicator
    
    Working, tested status indicator for default slim gui. Status indicator
    is next to the radar, switches colors as shields/armor are damaged.
    Remade the green and yellow warning lights with proper transparency.
    Status indicator
    
    Working, tested status indicator for default slim gui. Status indicator
    is next to the radar, switches colors as shields/armor are damaged.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added the new brushed GUI.
    further expanded gui
    added new gui for llama
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    made UI compatible with new weapon system - hopefully
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Refactored the Slim GUI.
    * Optipng.
    expanded the ui
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    made UI compatible with new weapon system - hopefully
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    added necessary gfx for nav pane
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    expanded the ui
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed up the active outfit bar.
    Slim GUI: Hacked in support for active outfits.
    Images shouldn't executable...
    Basic stuff of slimv2 implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    started adding the new HUD
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    started adding the new HUD
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    further expanded GUI
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    expanded the ui
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    started adding the new HUD
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Slim GUI: Added a bar for the player's ship heat (awaiting icon).
    * Optipng.
    made UI compatible with new weapon system - hopefully
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    added colored outlines to the bars to indicate primary and secondary weapons
    added colored outlines to the bars to indicate primary and secondary weapons
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    started adding the new HUD
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    expanded the ui
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    started adding the new HUD
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    expanded the ui
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Refactored the Slim GUI.
    * Optipng.
    started adding the new HUD
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Refactored the Slim GUI.
    * Optipng.
    started adding the new HUD
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    added colored outlines to the bars to indicate primary and secondary weapons
    added colored outlines to the bars to indicate primary and secondary weapons
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    made UI compatible with new weapon system - hopefully
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    added necessary gfx for nav pane
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    started adding the new HUD
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed up the active outfit bar.
    Slim GUI: Hacked in support for active outfits.
    Images shouldn't executable...
    Basic stuff of slimv2 implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    expanded the ui
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Refactored the Slim GUI.
    * Optipng.
    started adding the new HUD
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    made target pane 10px higher
    * Optipng.
    expanded the ui
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    added necessary gfx for nav pane
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    Implemented dir indicator with placeholder graphic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Refactored the Slim GUI.
    expanded the ui
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added a fancier cooldown graphic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    expanded the ui
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    started adding the new HUD
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    added bottom bar
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added the new brushed GUI.
    * Optipng.
    further expanded GUI
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added a fancier cooldown graphic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Slim GUI: New heat icon from Scaatis.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added the new brushed GUI.
    further expanded gui
    started adding the new HUD
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed up the active outfit bar.
    Slim GUI: Hacked in support for active outfits.
    Images shouldn't executable...
    Basic stuff of slimv2 implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    made UI compatible with new weapon system - hopefully
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    expanded the ui
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    further expanded GUI
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    made UI compatible with new weapon system - hopefully
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Refactored the Slim GUI.
    expanded the ui
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    made UI compatible with new weapon system - hopefully
    Replaced the placeholder intro images with some better images.
    
    Fixes #1044
    
    Images taken from the following sources, with edits for some of them:
    
    https://opengameart.org/content/space-ship-images
    https://opengameart.org/content/solar-system
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Another image for the intro.
    Replaced the placeholder intro images with some better images.
    
    Fixes #1044
    
    Images taken from the following sources, with edits for some of them:
    
    https://opengameart.org/content/space-ship-images
    https://opengameart.org/content/solar-system
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Temporary graphic for intro.
    Replaced the placeholder intro images with some better images.
    
    Fixes #1044
    
    Images taken from the following sources, with edits for some of them:
    
    https://opengameart.org/content/space-ship-images
    https://opengameart.org/content/solar-system
    Replaced the placeholder intro images with some better images.
    
    Fixes #1044
    
    Images taken from the following sources, with edits for some of them:
    
    https://opengameart.org/content/space-ship-images
    https://opengameart.org/content/solar-system
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Add another intro image.
    Added dark bg to rarity overlays.
    Added rarity overlays.
    Fancy NPC get fancy icon.
    Added dark bg to rarity overlays.
    Added rarity overlays.
    Added dark bg to rarity overlays.
    Added rarity overlays.
    Added dark bg to rarity overlays.
    Added rarity overlays.
    Added dark bg to rarity overlays.
    Added rarity overlays.
    Added dark bg to rarity overlays.
    Added rarity overlays.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Renamed question mark NPC to "unknown", to disambiguate missing portraits from actual unknown NPCs (e.g ec05).
    * Portraits for Rebina and Jorek by grumbel.
    * Added non portrait.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    *  Added news image.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Edited version of the "none" portrait, exclusively for TODO placeholder use.
    * Renamed question mark NPC to "unknown", to disambiguate missing portraits from actual unknown NPCs (e.g ec05).
    * Portraits for Rebina and Jorek by grumbel.
    * Added non portrait.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    Fixed fyrra_m3.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Fixed sirius_fyrra_f3.
    
    Hello again, smudge tool!
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Morrrrrrrrrre portraits
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Morrrrrrrrrre portraits
    Morrrrrrrrrre portraits
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Morrrrrrrrrre portraits
    Morrrrrrrrrre portraits
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Morrrrrrrrrre portraits
    Morrrrrrrrrre portraits
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Morrrrrrrrrre portraits
    Morrrrrrrrrre portraits
    Morrrrrrrrrre portraits
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * New portraits.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Added unique "rodent man" portrait.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Fixed Za'lek "Science Gone Wrong" campaign.
    Added a portrait for and improved Za'lek cargo run mission.
    Fixed Za'lek "Science Gone Wrong" campaign.
    Added a portrait for and improved Za'lek cargo run mission.
    Add the first two missions for the first Za'lek campaign.
    Add the first two missions for the first Za'lek campaign.
    Morrrrrrrrrre portraits
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    Re-did most of the portraits with newer Imagemagick to eliminate ugly aliasing around the characters.
    * New empire official portraits by grumbel.
    Morrrrrrrrrre portraits
    Morrrrrrrrrre portraits
    Morrrrrrrrrre portraits
    Morrrrrrrrrre portraits
    Morrrrrrrrrre portraits
    Morrrrrrrrrre portraits
    Morrrrrrrrrre portraits
    Morrrrrrrrrre portraits
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    Re-did most of the portraits with newer Imagemagick to eliminate ugly aliasing around the characters.
    * New empire official portraits by grumbel.
    Morrrrrrrrrre portraits
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    Re-did most of the portraits with newer Imagemagick to eliminate ugly aliasing around the characters.
    * New empire official portraits by grumbel.
    Morrrrrrrrrre portraits
    Morrrrrrrrrre portraits
    Morrrrrrrrrre portraits
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    Re-did most of the portraits with newer Imagemagick to eliminate ugly aliasing around the characters.
    * New empire official portraits by grumbel.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    Re-did most of the portraits with newer Imagemagick to eliminate ugly aliasing around the characters.
    * Added portraits.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    Re-did most of the portraits with newer Imagemagick to eliminate ugly aliasing around the characters.
    * Added portraits.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    Re-did most of the portraits with newer Imagemagick to eliminate ugly aliasing around the characters.
    * Added portraits.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    Re-did most of the portraits with newer Imagemagick to eliminate ugly aliasing around the characters.
    * Added portraits.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Morrrrrrrrrre portraits
    Morrrrrrrrrre portraits
    Morrrrrrrrrre portraits
    Morrrrrrrrrre portraits
    Morrrrrrrrrre portraits
    Morrrrrrrrrre portraits
    Morrrrrrrrrre portraits
    Morrrrrrrrrre portraits
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Several new portraits by thee_mateo, licensed to grumbel
    * Added missing license for dat/gfx/neutral/female1.png
    Morrrrrrrrrre portraits
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Several new portraits by thee_mateo, licensed to grumbel
    * Added missing license for dat/gfx/neutral/female1.png
    Morrrrrrrrrre portraits
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Several new portraits by thee_mateo, licensed to grumbel
    * Added missing license for dat/gfx/neutral/female1.png
    Morrrrrrrrrre portraits
    Morrrrrrrrrre portraits
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Corrected misnamed file and bad misn.setNPC invocation.
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    Re-did most of the portraits with newer Imagemagick to eliminate ugly aliasing around the characters.
    * New portraits by grumbel.
    Morrrrrrrrrre portraits
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Several new portraits by thee_mateo, licensed to grumbel
    * Added missing license for dat/gfx/neutral/female1.png
    Morrrrrrrrrre portraits
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Morrrrrrrrrre portraits
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Several new portraits by thee_mateo, licensed to grumbel
    * Added missing license for dat/gfx/neutral/female1.png
    Fixed a Dvaered portrait (more image editing)
    Morrrrrrrrrre portraits
    Morrrrrrrrrre portraits
    Morrrrrrrrrre portraits
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Several new portraits by thee_mateo, licensed to grumbel
    * Added missing license for dat/gfx/neutral/female1.png
    Morrrrrrrrrre portraits
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Morrrrrrrrrre portraits
    Morrrrrrrrrre portraits
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Several new portraits by thee_mateo, licensed to grumbel
    * Added missing license for dat/gfx/neutral/female1.png
    Morrrrrrrrrre portraits
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Several new portraits by thee_mateo, licensed to grumbel
    * Added missing license for dat/gfx/neutral/female1.png
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Several new portraits by thee_mateo, licensed to grumbel
    * Added missing license for dat/gfx/neutral/female1.png
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Several new portraits by thee_mateo, licensed to grumbel
    * Added missing license for dat/gfx/neutral/female1.png
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Add pirate portraits by grumbel
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Several new portraits by thee_mateo, licensed to grumbel
    * Added missing license for dat/gfx/neutral/female1.png
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Add pirate portraits by grumbel
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Add pirate portraits by grumbel
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Add pirate portraits by grumbel
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Changed hair and skin tone for variety
    Added a new general female portrait
    Fixed up male7.
    
    This was a simpler fix, but there we go; now the hair and ears
    aren't missing.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Fixed male8 (more image edits)
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Fixed up female7.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    Re-did most of the portraits with newer Imagemagick to eliminate ugly aliasing around the characters.
    * New portraits by grumbel.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * Added barman portrait.
    Touched up the male10 image to make it look less... decapitated
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Fixed up female6.
    
    Removed the light skin next to the eyes and extended the neck to fully
    fill the outline of the shirt.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Several new portraits by thee_mateo, licensed to grumbel
    * Added missing license for dat/gfx/neutral/female1.png
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Fixed up female2.
    
    Mostly discoloration.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    Re-did most of the portraits with newer Imagemagick to eliminate ugly aliasing around the characters.
    * New portraits by grumbel.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * Added generic male portrait for teenager mission.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * New portraits.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    Re-did most of the portraits with newer Imagemagick to eliminate ugly aliasing around the characters.
    * New portraits by grumbel.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Touched up male5.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Touched up male6.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    Re-did most of the portraits with newer Imagemagick to eliminate ugly aliasing around the characters.
    * Added portraits.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Several new portraits by thee_mateo, licensed to grumbel
    * Added missing license for dat/gfx/neutral/female1.png
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Several new portraits by thee_mateo, licensed to grumbel
    * Added missing license for dat/gfx/neutral/female1.png
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * New portraits.
    Fixed up the dealer portrait.
    Fixed Za'lek "Science Gone Wrong" campaign.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * New portraits by grumbel.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    Re-did most of the portraits with newer Imagemagick to eliminate ugly aliasing around the characters.
    *Fixed missing file
    Change to suit personal prefs
    * Portraits for Rebina and Jorek by grumbel.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    arnoldsmith2 -> arnoldsmith (commit 3 of 3)
    
    OK, so an explanation: in these three commits, I just swapped the
    arnoldsmith image with the unfamiliarman image. Nothing major. I did
    it in three commits simply so that the Git history would properly
    record it as renaming (and not modifying) the files.
    
    The reason I swapped the images is because part of Arnold Smith's
    campaign involves things getting more and more sketchy and the
    portrait I originally made for him is dark-skinned, so while this
    wasn't my original intention, that could fuel racial prejudice (in
    the form of belief that PoC that look honest are actually bad or
    something).
    Rename unfamiliarman (part of three commits)
    Fixed up some more portraits.
    
    More image editing magic (i.e. the smudge tool in GNU IMP).
    Added a portrait for the "unfamiliar man" in baron_prince
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Fixed up some more portraits.
    
    More image editing magic (i.e. the smudge tool in GNU IMP).
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * Updated flintley.
    * Grumbel changed license to GPLv3 it seems.
    * New portraits.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Fixed up some more portraits.
    
    More image editing magic (i.e. the smudge tool in GNU IMP).
    Fixed shifty not being replaced
    
    Misspelling
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    the first pirate mission
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Rename arnoldsmith to unfamiliarman (commit 2 of 3)
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * New portraits by grumbel.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * New portrait for young businessman.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    Re-did most of the portraits with newer Imagemagick to eliminate ugly aliasing around the characters.
    * Portraits for Rebina and Jorek by grumbel.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Added a portrait for the Nexus agent.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * New portraits.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * New portraits by grumbel.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * Added reynir portrait.
    Fixed up some more portraits.
    
    More image editing magic (i.e. the smudge tool in GNU IMP).
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    Redo new portraits.
    
    This is a redo of commits on a branch which replaced portrait
    images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    Re-did most of the portraits with newer Imagemagick to eliminate ugly aliasing around the characters.
    * New portraits by grumbel.
    new version of map decorators
    added decorators for the major factions
    new version of map decorators
    added decorators for the major factions
    Added a map graphic for the Proteron.
    Added a map nebula image.
    
    I couldn't figure out how to add text to the map, but here's an
    image (just one of the nebula background images resized and with
    transparency tweaked).
    new version of map decorators
    added decorators for the major factions
    new version of map decorators
    added decorators for the major factions
    Map decorators for Naev, with one as example
    new version of map decorators
    added decorators for the major factions
    new version of map decorators
    added decorators for the major factions
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New optipng optimizes more.
    * Debris implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New outfits by Deiz.
    * Balancing by Deiz.
    * End sprites by Deiz.
    * New sounds.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New optipng optimizes more.
    * Debris implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added and using shield hit graphics.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New optipng optimizes more.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New outfits by Deiz.
    * Balancing by Deiz.
    * End sprites by Deiz.
    * New sounds.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    * Two new explosions.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Gave plasma a special effect.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added and using shield hit graphics.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Ran optipng on all graphics, should reduce size.
    branch:      naev
    added explosions with a primitive special effect system
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New optipng optimizes more.
    * Debris implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New optipng optimizes more.
    * Debris implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New optipng optimizes more.
    * Ran optipng on all graphics, should reduce size.
    branch:      naev
    you can define spfx per outfit, fixed major memory issue
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Ran optipng on all graphics, should reduce size.
    branch:      naev
    you can define spfx per outfit, fixed major memory issue
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New optipng optimizes more.
    * Debris implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng.
    * Two new explosions.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New optipng optimizes more.
    * Rendered cargo.png with same style as the rest of the ships.
    * New nice fancy cargo graphic for when jettisoning cargo.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New optipng optimizes more.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Gave plasma a special effect.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New optipng optimizes more.
    * Debris implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Updated Quicksilver, minor equipment.c change.
    New renders for Vendetta and Goddard.
    * Ship update script should be working again.
    * Added Pirate Kestrel.
    * New ship: The Kestrel.
    * New Ship: Koala.
    * Major upgrade adding all sorts of new featurse to communication window.
    * New Ship: Empire Pacifier.
    * New Ship: Empire Admonisher.
    * New Ship: Empire Hawking.
    * New Ship: Empire Lancelot.
    * Added the dvaered skinned ships.
    * New Ship: Ancestor.
    * New Ship: Pirate Ancestor.
    * New Ship: Pirate Vendetta.
    * New Ship: Schroedinger.
    * Added script to easy updating ship graphics.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Initial commit of seven new Soromid ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    Re-rendered, added proper target. Fixed minor dialogue issue.
    New cruiser by Joss.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Re-rendered, added proper target. Fixed minor dialogue issue.
    New cruiser by Joss.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Re-rendered, added proper target. Fixed minor dialogue issue.
    New cruiser by Joss.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * New perspective, was broken in naev-artwork.
    * Now using isometric rendering mode.
    * Made gawain smaller.
    * New renders with better lighting.
    * Added the extremely maneuverable ship: Gawain.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * Major upgrade adding all sorts of new featurse to communication window.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    general update, hopefully not broken
    general update, hopefully not broken
    general update, hopefully not broken
    * Renamed ver1->demon and ver2->imp as they should have been originally.
    zalek ships and further map fixes
    * Renamed ver1->demon and ver2->imp as they should have been originally.
    zalek ships and further map fixes
    * Renamed ver1->demon and ver2->imp as they should have been originally.
    zalek ships and further map fixes
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Initial commit of seven new Soromid ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Initial commit of seven new Soromid ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Initial commit of seven new Soromid ships.
    Add Thurion destroyer and carrier.
    Add Thurion destroyer and carrier.
    Add Thurion destroyer and carrier.
    Add Thurion destroyer and carrier.
    Add Thurion destroyer and carrier.
    Add Thurion destroyer and carrier.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    Forgot to resize.sh
    Updated Quicksilver to 10x10 (I am the bane of bobbens)
    Five new ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Resized some ships, changed stats.
    Forgot to resize.sh
    Updated Quicksilver to 10x10 (I am the bane of bobbens)
    Five new ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Resized some ships, changed stats.
    Forgot to resize.sh
    Updated Quicksilver to 10x10 (I am the bane of bobbens)
    Five new ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * Added Pirate Kestrel.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * Tweaked size a bit.
    * New ship: The Kestrel.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * Tweaked size a bit.
    * New ship: The Kestrel.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * Added Pirate Kestrel.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added Dvaered faction version of Vigilance.
    New Dvaered destroyer added.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed sprite, added Vigilance to fleets & presences.
    Added Dvaered faction version of Vigilance.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    Added Dvaered faction version of Vigilance.
    New Dvaered destroyer added.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    Added Dvaered faction version of Vigilance.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added Dvaered faction version of Vigilance.
    New Dvaered destroyer added.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed sprite, added Vigilance to fleets & presences.
    Added Dvaered faction version of Vigilance.
    zalek ships and further map fixes
    zalek ships and further map fixes
    zalek ships and further map fixes
    Added a new Thurion freighter and Thurion weapons.
    Added a new Thurion freighter and Thurion weapons.
    Added a new Thurion freighter and Thurion weapons.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    Five new ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Five new ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Five new ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New ship (Phalanx) by bornloser.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New ship (Phalanx) by bornloser.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New ship (Phalanx) by bornloser.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New ship (Phalanx) by bornloser.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New ship (Phalanx) by bornloser.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New ship (Phalanx) by bornloser.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New ship (Phalanx) by bornloser.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New ship (Phalanx) by bornloser.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New ship (Phalanx) by bornloser.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Resized some ships, changed stats.
    Five new ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    Five new ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Resized some ships, changed stats.
    Five new ships.
    Added two new Thurion ships (light fighter and bomber) and some new Thurion modifier outfits.
    Added two new Thurion ships (light fighter and bomber) and some new Thurion modifier outfits.
    Added two new Thurion ships (light fighter and bomber) and some new Thurion modifier outfits.
    major zalek update
    major zalek update
    major zalek update
    major zalek update
    major zalek update
    major zalek update
    major zalek update
    major zalek update
    major zalek update
    major zalek update
    major zalek update
    major zalek update
    general update, hopefully not broken
    general update, hopefully not broken
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * Major upgrade adding all sorts of new featurse to communication window.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    general update, hopefully not broken
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * New perspective, was broken in naev-artwork.
    * Now using isometric rendering mode.
    * New renders with better lighting.
    * Ran optipng on all graphics, should reduce size.
    branch:      naev
    bolt->blt not wpn and added a new ship and outfit (outfit needs gfx)
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * Major upgrade adding all sorts of new featurse to communication window.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Fancier pacifier by Deiz.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * Major upgrade adding all sorts of new featurse to communication window.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Fancier pacifier by Deiz.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Fancier pacifier by Deiz.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * New perspective, was broken in naev-artwork.
    * Now using isometric rendering mode.
    * Made ships smaller.
    * Made ships slower.
    * Weakened Lancelot by a lot.
    * New renders with better lighting.
    * Added pacifier ship.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Fancier pacifier by Deiz.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * New perspective, was broken in naev-artwork.
    * New Ship: Empire Pacifier.
    zalek ships and further map fixes
    major zalek update
    zalek ships and further map fixes
    zalek ships and further map fixes
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Initial commit of seven new Soromid ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Initial commit of seven new Soromid ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Initial commit of seven new Soromid ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added four new Sirius ships by Enigmatic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    Added four new Sirius ships by Enigmatic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added four new Sirius ships by Enigmatic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Shrunk Archimedes, enlarged Goddard.
    New renders for Vendetta and Goddard.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * New perspective, was broken in naev-artwork.
    * Added the dvaered skinned ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * Major upgrade adding all sorts of new featurse to communication window.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Shrunk Archimedes, enlarged Goddard.
    New renders for Vendetta and Goddard.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Shrunk Archimedes, enlarged Goddard.
    New renders for Vendetta and Goddard.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Shrunk Archimedes, enlarged Goddard.
    New renders for Vendetta and Goddard.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * New perspective, was broken in naev-artwork.
    * Now using isometric rendering mode.
    * Made ships smaller.
    * Made ships slower.
    * Weakened Lancelot by a lot.
    * New renders with better lighting.
    * New ship: Goddard.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * Major upgrade adding all sorts of new featurse to communication window.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Initial commit of seven new Soromid ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Initial commit of seven new Soromid ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Initial commit of seven new Soromid ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added Shaman (Sirius Bomber). May need further balancing.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added Shaman (Sirius Bomber). May need further balancing.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added Shaman (Sirius Bomber). May need further balancing.
    major zalek update
    general update, hopefully not broken
    major zalek update
    general update, hopefully not broken
    major zalek update
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Initial commit of seven new Soromid ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Initial commit of seven new Soromid ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Initial commit of seven new Soromid ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * Major upgrade adding all sorts of new featurse to communication window.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * New perspective, was broken in naev-artwork.
    * Now using isometric rendering mode.
    * Made ships smaller.
    * Made ships slower.
    * Weakened Lancelot by a lot.
    * New renders with better lighting.
    * Ran optipng on all graphics, should reduce size.
    branch:      naev
    More lighting on ingame ship graphics
    branch:      naev
    added mule ship to actually use turrets :)
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * New perspective, was broken in naev-artwork.
    * Now using isometric rendering mode.
    * Made ships smaller.
    * Made ships slower.
    * Weakened Lancelot by a lot.
    * New renders with better lighting.
    * Ran optipng on all graphics, should reduce size.
    branch:      naev
    More lighting on ingame ship graphics
    branch:      naev
    [svn] new target graphics!
    new hyena graphic!
    split more colour stuff from player.c to colour.c
    minor gui tweak
    branch:      naev
    [svn] added hyena fully
    noticed that the landing AI is worse then i thought
    branch:      naev
    [svn] Brought render script up to date
    added new ship (still needs target image)
    GUI API should be complete
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * Major upgrade adding all sorts of new featurse to communication window.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Five new ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Five new ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    Five new ships.
    Added two new Thurion ships (light fighter and bomber) and some new Thurion modifier outfits.
    Added two new Thurion ships (light fighter and bomber) and some new Thurion modifier outfits.
    Added two new Thurion ships (light fighter and bomber) and some new Thurion modifier outfits.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * Major upgrade adding all sorts of new featurse to communication window.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * New perspective, was broken in naev-artwork.
    * New Ship: Empire Admonisher.
    * New Ship: Empire Hawking.
    * New Ship: Empire Lancelot.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * Major upgrade adding all sorts of new featurse to communication window.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * New perspective, was broken in naev-artwork.
    * Now using isometric rendering mode.
    * Made ships smaller.
    * Made ships slower.
    * Weakened Lancelot by a lot.
    * New renders with better lighting.
    * Ran optipng on all graphics, should reduce size.
    branch:      naev
    added hawking
    * Renamed ver1->demon and ver2->imp as they should have been originally.
    zalek ships and further map fixes
    * Renamed ver1->demon and ver2->imp as they should have been originally.
    zalek ships and further map fixes
    * Renamed ver1->demon and ver2->imp as they should have been originally.
    zalek ships and further map fixes
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Initial commit of seven new Soromid ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Initial commit of seven new Soromid ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Initial commit of seven new Soromid ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added four new Sirius ships by Enigmatic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    Added four new Sirius ships by Enigmatic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added four new Sirius ships by Enigmatic.
    Add new Thurion ship
    Add new Thurion ship
    Add new Thurion ship
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * Major upgrade adding all sorts of new featurse to communication window.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * New perspective, was broken in naev-artwork.
    * Now using isometric rendering mode.
    * New Ship: Schroedinger.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Reworked the Divinity into a carrier, as it should be.
    Added four new Sirius ships by Enigmatic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Reworked the Divinity into a carrier, as it should be.
    Added four new Sirius ships by Enigmatic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Reworked the Divinity into a carrier, as it should be.
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    Added four new Sirius ships by Enigmatic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added four new Sirius ships by Enigmatic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added four new Sirius ships by Enigmatic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    Added four new Sirius ships by Enigmatic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * Major upgrade adding all sorts of new featurse to communication window.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * Major upgrade adding all sorts of new featurse to communication window.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * New perspective, was broken in naev-artwork.
    * Now using isometric rendering mode.
    * Made ships smaller.
    * Made ships slower.
    * Weakened Lancelot by a lot.
    * New renders with better lighting.
    * Ran optipng on all graphics, should reduce size.
    branch:      naev
    More lighting on ingame ship graphics
    branch:      naev
    [svn] new target graphics!
    new hyena graphic!
    split more colour stuff from player.c to colour.c
    minor gui tweak
    branch:      naev
    [svn] moved everything to directories
    cleaned up Makefile
    improved AI
    branch:      naev
    [svn] working libxml at ship.c
    fixed all memory leakage
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * New perspective, was broken in naev-artwork.
    * New Ship: Empire Admonisher.
    * New Ship: Empire Hawking.
    * New Ship: Empire Lancelot.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * Major upgrade adding all sorts of new featurse to communication window.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * Major upgrade adding all sorts of new featurse to communication window.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * New perspective, was broken in naev-artwork.
    * Now using isometric rendering mode.
    * New Ship: Ancestor.
    * New Ship: Pirate Ancestor.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * Major upgrade adding all sorts of new featurse to communication window.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * New perspective, was broken in naev-artwork.
    * Added the dvaered skinned ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * New perspective, was broken in naev-artwork.
    * Now using isometric rendering mode.
    * New Ship: Ancestor.
    * New Ship: Pirate Ancestor.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New renders for Vendetta and Goddard.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * Major upgrade adding all sorts of new featurse to communication window.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * Major upgrade adding all sorts of new featurse to communication window.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New renders for Vendetta and Goddard.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * New perspective, was broken in naev-artwork.
    * Added the dvaered skinned ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New renders for Vendetta and Goddard.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New renders for Vendetta and Goddard.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * New perspective, was broken in naev-artwork.
    * Now using isometric rendering mode.
    * Lowered specularity.
    * Added Vendetta.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New renders for Vendetta and Goddard.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New renders for Vendetta and Goddard.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * New perspective, was broken in naev-artwork.
    * Now using isometric rendering mode.
    * New Ship: Pirate Vendetta.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * Major upgrade adding all sorts of new featurse to communication window.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * Major upgrade adding all sorts of new featurse to communication window.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * New perspective, was broken in naev-artwork.
    * Now using isometric rendering mode.
    * Renamed "Laser" to "Laser Cannon".
    * Renamed "Plasma Cannon" to "Plasma Blaster".
    * New Ship: Admonisher.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * Major upgrade adding all sorts of new featurse to communication window.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * New perspective, was broken in naev-artwork.
    * New Ship: Empire Admonisher.
    * New Ship: Empire Hawking.
    * New Ship: Empire Lancelot.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * New perspective, was broken in naev-artwork.
    * Now using isometric rendering mode.
    * New Ship: Pirate Admonisher.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * Major upgrade adding all sorts of new featurse to communication window.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Moved Thurion ship gfx data into its proper location.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Resized some ships, changed stats.
    Five new ships.
    * Moved Thurion ship gfx data into its proper location.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Resized some ships, changed stats.
    Five new ships.
    * Moved Thurion ship gfx data into its proper location.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    Five new ships.
    major zalek update
    zalek ships and further map fixes
    major zalek update
    zalek ships and further map fixes
    major zalek update
    zalek ships and further map fixes
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Shrunk Archimedes, enlarged Goddard.
    Five new ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Shrunk Archimedes, enlarged Goddard.
    Five new ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    Five new ships.
    major zalek update
    major zalek update
    major zalek update
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Initial commit of seven new Soromid ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Initial commit of seven new Soromid ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Initial commit of seven new Soromid ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * New perspective, was broken in naev-artwork.
    * Now using isometric rendering mode.
    * Made ships smaller.
    * Made ships slower.
    * Weakened Lancelot by a lot.
    * New renders with better lighting.
    * Ran optipng on all graphics, should reduce size.
    branch:      naev
    More lighting on ingame ship graphics
    branch:      naev
    [svn] moved everything to directories
    cleaned up Makefile
    improved AI
    branch:      naev
    [svn] good blitting system, pilot/ship outline
    branch:      naev
    [svn] blits, opengl loads properly, looking good
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * Major upgrade adding all sorts of new featurse to communication window.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Initial commit of seven new Soromid ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Initial commit of seven new Soromid ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Initial commit of seven new Soromid ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * New Ship: Koala.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New and improved sprites by Deiz.
    * Engine glow done by the great Deiz.
    * Each ship graphic goes in it's own directory.
    * Inherit paths from <GFX> (like _target, _comm and _engine).
    * New lighting/rendering of all ships by Deiz.
    * Also switching number of sprites to at least 8x8 to make smoother.
    * Comm graphics also touched a bit.
    * New Ship: Koala.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added missing comm image for Rhino.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    polygonal collision algorithm
    polygonal collision algorithm
    update on polygon collision
    polygonal collision algorithm
    polygonal collision algorithm
    update on polygon collision
    polygonal collision algorithm
    use automatically generated polygons
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    update on polygon collision
    update on polygon collision
    update on polygon collision
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    use automatically generated polygons
    update on polygon collision
    update on polygon collision
    use automatically generated polygons
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    warn when there is no polygon
    polygonal collision algorithm
    warn when there is no polygon
    use automatically generated polygons
    polygonal collision algorithm
    polygonal collision algorithm
    use automatically generated polygons
    polygonal collision algorithm
    update on polygon collision
    polygonal collision algorithm
    polygonal collision algorithm
    update on polygon collision
    use automatically generated polygons
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    use automatically generated polygons
    polygonal collision algorithm
    polygonal collision algorithm
    update on polygon collision
    polygonal collision algorithm
    update on polygon collision
    update on polygon collision
    use automatically generated polygons
    polygonal collision algorithm
    update on polygon collision
    use automatically generated polygons
    polygonal collision algorithm
    update on polygon collision
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    use automatically generated polygons
    update on polygon collision
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    update on polygon collision
    update on polygon collision
    use automatically generated polygons
    update on polygon collision
    use automatically generated polygons
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    update on polygon collision
    use automatically generated polygons
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    update on polygon collision
    update on polygon collision
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    polygonal collision algorithm
    Sort check.sh output by number of times graphic has been used
    * Fixed check script paths.
    * Made Fury missiles and launchers use their dedicated art.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Update check.sh scripts for non-monolithic XML.
    Rewrote {planet,outfit}/check.sh to improve output and avoid false positives.
    * Allow running of planet check script from anywhere.
    * Allow running of planet check script from anywhere.
    * Renamed planet.xml to asset.xml in check.sh
    * Used the new P03 planet (replaces several other P class planets)
    * Caption was wrong.
    * Added script to control planet graphic usage.
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New system, new landing graphics.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng runs with new version reduced size of quite a few things.
    * Optimized existing planet pngs.
    * Adding new graphics (already optimized).
    branch:      naev
    collective get their own space station now
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng runs with new version reduced size of quite a few things.
    * Optimized existing planet pngs.
    * Adding new graphics (already optimized).
    branch:      naev
    moved planets around using star trek naming system for space, but not exterior
    branch:      naev
    [svn] new target graphics!
    new hyena graphic!
    split more colour stuff from player.c to colour.c
    minor gui tweak
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New system, new landing graphics.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New system, new landing graphics.
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    Create scrapped_station.png
    
    An image of a dark scrapped space station with stores, neon lights and trash on the floor. Suitable for pirate stations and other neglected space stations.
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * More planet exterior graphics.
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng runs with new version reduced size of quite a few things.
    * Optimized existing planet pngs.
    * Adding new graphics (already optimized).
    branch:      naev
    moved planets around using star trek naming system for space, but not exterior
    branch:      naev
    [svn] added support for images of planets
    cosmetic toolkit changes
    changed the gl_blit functions to work with doubles instead of Vector2d pointers
    took opportunity to clean up space.c xml (bringing it up to xml.h standard)
    cleaned up code
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New system, new landing graphics.
    added a landingport image for rocky planets
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New system, new landing graphics.
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New system, new landing graphics.
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * More planet exterior graphics.
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optimized existing planet pngs.
    * Adding new graphics (already optimized).
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New system, new landing graphics.
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New system, new landing graphics.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optimized existing planet pngs.
    * Adding new graphics (already optimized).
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng runs with new version reduced size of quite a few things.
    * Optimized existing planet pngs.
    * Adding new graphics (already optimized).
    branch:      naev
    added new station, added actual empire ships and fights with the collective
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New system, new landing graphics.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng runs with new version reduced size of quite a few things.
    * Optimized existing planet pngs.
    * Adding new graphics (already optimized).
    branch:      naev
    major content addition: 1 new system, 5 new outfits, more data checking
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New uninhabited planet in Collective space.
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    added a landing port image for snowy planets
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optimized existing planet pngs.
    * Adding new graphics (already optimized).
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New system, new landing graphics.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Optipng runs with new version reduced size of quite a few things.
    * New graphics for Cerberus.
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    A new exterior image for D class planets, moons and asteroids (particularly uninhabited ones) - courtesy of the methane.png\!
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New system, new landing graphics.
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    added a landingport image for uninhabited jungle planets
    
    An image of an uninhabited jungle.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New system, new landing graphics.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New system, new landing graphics.
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New system, new landing graphics.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New system, new landing graphics.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Left out an image in last commit.
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    * Four new planets by Andmiw.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New planets and optipng.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New planets and optipng.
    * New artwork by Andmiw.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added seven new stations by Enigmatic.
    Added seven new stations by Enigmatic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Optimized existing planet pngs.
    * Adding new graphics (already optimized).
    branch:      naev
    moved planets around using star trek naming system for space, but not exterior
    branch:      naev
    major content addition: 1 new system, 5 new outfits, more data checking
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added new planet space models by Justin Nichol.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added seven new stations by Enigmatic.
    Added seven new stations by Enigmatic.
    * Two new planets by Andmiw.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New planets and optipng.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added new planet space models by Justin Nichol.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Updated several planet graphics.
    * Couple more systems.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Optimized existing planet pngs.
    * Adding new graphics (already optimized).
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed aliasing issues on numerous planets, new revisions of several of BTAxis's planets.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added a couple new systems with new planets.
    * Change some M type planets to O type.
    * Forgot to optimize M03.png.
    * New aquatic (class M) planet and system to make use of vegastrike's graphics: Acenu in the Draygar system.
    * Four new planets by Andmiw.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New planet by Saturn6.
    
    Signed-off-by: Edgar Simo <bobbens@gmail.com>
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Updated several planet graphics.
    * Couple more systems.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Fixed the shadows on all the planets.
    * Optimized existing planet pngs.
    * Adding new graphics (already optimized).
    branch:      naev
    moved planets around using star trek naming system for space, but not exterior
    Rescaled as D class planets should be planetoid in size - see http://wiki.naev.org/wiki/Needed_2D_Artwork and http://en.wikipedia.org/wiki/Star_Trek_planet_classifications
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed aliasing issues on numerous planets, new revisions of several of BTAxis's planets.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Optimized existing planet pngs.
    * Adding new graphics (already optimized).
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New planets and optipng.
    * More artwork by Andmiw.
    further expanded GUI
    added A04 and N00
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Optimized existing planet pngs.
    * Adding new graphics (already optimized).
    branch:      naev
    moved planets around using star trek naming system for space, but not exterior
    branch:      naev
    [svn] added support for images of planets
    cosmetic toolkit changes
    changed the gl_blit functions to work with doubles instead of Vector2d pointers
    took opportunity to clean up space.c xml (bringing it up to xml.h standard)
    cleaned up code
    branch:      naev
    [svn] added star system support/loading
    added planets
    more minor tweaks and fixes
    general happiness
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New planet space graphic by Vicki Li.
    
    Signed-off-by: Edgar Simo <bobbens@gmail.com>
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added new planet space models by Justin Nichol.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added some more space planet graphics.
    Rescaled as D class planets should be planetoid in size - see http://wiki.naev.org/wiki/Needed_2D_Artwork and http://en.wikipedia.org/wiki/Star_Trek_planet_classifications
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed aliasing issues on numerous planets, new revisions of several of BTAxis's planets.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added some more space planet graphics.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New artwork by Andmiw.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed aliasing issues on numerous planets, new revisions of several of BTAxis's planets.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Optimized existing planet pngs.
    * Adding new graphics (already optimized).
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Optimized existing planet pngs.
    * Adding new graphics (already optimized).
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Several new stations by enigmatic, along with new renders of old ones.
    Added seven new stations by Enigmatic.
    Added seven new stations by Enigmatic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New planets and optipng.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Enlarged and increased line weight of jump point.
    Added jump point sprite.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Several new stations by enigmatic, along with new renders of old ones.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New planets and optipng.
    * New artwork by Andmiw.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New artwork by Andmiw.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New planets and optipng.
    * Updated several planet graphics.
    * Couple more systems.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Optimized existing planet pngs.
    * Adding new graphics (already optimized).
    branch:      naev
    moved planets around using star trek naming system for space, but not exterior
    branch:      naev
    major content addition: 1 new system, 5 new outfits, more data checking
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added new planet space models by Justin Nichol.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Several new stations by enigmatic, along with new renders of old ones.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Optimized existing planet pngs.
    * Adding new graphics (already optimized).
    branch:      naev
    moved planets around using star trek naming system for space, but not exterior
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Fixed the shadows on all the planets.
    * Optimized existing planet pngs.
    * Adding new graphics (already optimized).
    branch:      naev
    moved planets around using star trek naming system for space, but not exterior
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Two more stations by enigmatic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added new planet space models by Justin Nichol.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New planets and optipng.
    Removed unwanted outlines from several planet graphics.
    * Updated several planet graphics.
    * Couple more systems.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added new planet space models by Justin Nichol.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added seven new stations by Enigmatic.
    Added seven new stations by Enigmatic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Yet another new M09 version, should be roughly the same size as the first one.
    * New version of M09 graphic with new glow.
    * New artwork by Andmiw.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added a couple new systems with new planets.
    * Change some M type planets to O type.
    * Added new planet space models by Justin Nichol.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New planets and optipng.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added a couple new systems with new planets.
    * Change some M type planets to O type.
    * Forgot to optimize M03.png.
    * New aquatic (class M) planet and system to make use of vegastrike's graphics: Acenu in the Draygar system.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Bigger station renders.
    * Optipng runs with new version reduced size of quite a few things.
    * New graphics for Cerberus.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added new planet space models by Justin Nichol.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added new planet space models by Justin Nichol.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed aliasing issues on numerous planets, new revisions of several of BTAxis's planets.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added some more space planet graphics.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Removed unwanted outlines from several planet graphics.
    * Updated planets.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Optimized existing planet pngs.
    * Adding new graphics (already optimized).
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed aliasing issues on numerous planets, new revisions of several of BTAxis's planets.
    * More big systems.
    * More planet images by Renderwahn.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New planets and optipng.
    Fixed aliasing issues on numerous planets, new revisions of several of BTAxis's planets.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added some more space planet graphics.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added some more space planet graphics.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New planet by Nikola Whallon.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New planets and optipng.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added the Emperor's Wrath (as an asset).
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added seven new stations by Enigmatic.
    Added seven new stations by Enigmatic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Updated several planet graphics.
    * Couple more systems.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added some more space planet graphics.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New planets and optipng.
    * More systems.
    * More planet tweaks.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added some more space planet graphics.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed aliasing issues on numerous planets, new revisions of several of BTAxis's planets.
    * More big systems.
    * More planet images by Renderwahn.
    * Added a couple new systems with new planets.
    * Change some M type planets to O type.
    * Added new planet space models by Justin Nichol.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New planets and optipng.
    * More artwork by Andmiw.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New planets and optipng.
    * More artwork by Andmiw.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Removed unwanted outlines from several planet graphics.
    * Updated planets.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added some more space planet graphics.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed aliasing issues on numerous planets, new revisions of several of BTAxis's planets.
    * More big systems.
    * More planet images by Renderwahn.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Two more stations by enigmatic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Bigger station renders.
    * Optipng runs with new version reduced size of quite a few things.
    * Optimized existing planet pngs.
    * Adding new graphics (already optimized).
    branch:      naev
    moved planets around using star trek naming system for space, but not exterior
    branch:      naev
    added new station, added actual empire ships and fights with the collective
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added some more space planet graphics.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added new planet space models by Justin Nichol.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed aliasing issues on numerous planets, new revisions of several of BTAxis's planets.
    * More big systems.
    * More planet images by Renderwahn.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added a couple new systems with new planets.
    * Change some M type planets to O type.
    * Forgot to optimize M03.png.
    * New aquatic (class M) planet and system to make use of vegastrike's graphics: Acenu in the Draygar system.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Removed unwanted outlines from several planet graphics.
    * Updated several planet graphics.
    * Couple more systems.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New planet by vicki li.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added some more space planet graphics.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Removed unwanted outlines from several planet graphics.
    * Updated several planet graphics.
    * Couple more systems.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added new planet space models by Justin Nichol.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Optipng runs with new version reduced size of quite a few things.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added new planet space models by Justin Nichol.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New artwork by Andmiw.
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Bigger station renders.
    * Optipng runs with new version reduced size of quite a few things.
    * Optimized existing planet pngs.
    * Adding new graphics (already optimized).
    branch:      naev
    moved planets around using star trek naming system for space, but not exterior
    branch:      naev
    collective get their own space station now
    branch:      naev
    [svn] added support for images of planets
    cosmetic toolkit changes
    changed the gl_blit functions to work with doubles instead of Vector2d pointers
    took opportunity to clean up space.c xml (bringing it up to xml.h standard)
    cleaned up code
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added new planet space models by Justin Nichol.
    * Two new planets by Andmiw.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Several new stations by enigmatic, along with new renders of old ones.
    Added seven new stations by Enigmatic.
    Added seven new stations by Enigmatic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed aliasing issues on numerous planets, new revisions of several of BTAxis's planets.
    * More big systems.
    * More planet images by Renderwahn.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed aliasing issues on numerous planets, new revisions of several of BTAxis's planets.
    * More big systems.
    * More planet images by Renderwahn.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added new planet space models by Justin Nichol.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed aliasing issues on numerous planets, new revisions of several of BTAxis's planets.
    * More big systems.
    * More planet images by Renderwahn.
    * Added a couple new systems with new planets.
    * Change some M type planets to O type.
    * Added new planet space models by Justin Nichol.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed aliasing issues on numerous planets, new revisions of several of BTAxis's planets.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added new planet space models by Justin Nichol.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added some more space planet graphics.
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * More systems.
    * More planet tweaks.
    * Updated several planet graphics.
    * Couple more systems.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added new planet space models by Justin Nichol.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Several new stations by enigmatic, along with new renders of old ones.
    Added seven new stations by Enigmatic.
    Added seven new stations by Enigmatic.
    * Four new planets by Andmiw.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New artwork by Andmiw.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New artwork by Andmiw.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added a couple new systems with new planets.
    * Change some M type planets to O type.
    * Forgot to optimize M03.png.
    * New aquatic (class M) planet and system to make use of vegastrike's graphics: Acenu in the Draygar system.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New planets and optipng.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added new planet space models by Justin Nichol.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added some more space planet graphics.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Optimized existing planet pngs.
    * Adding new graphics (already optimized).
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed aliasing issues on numerous planets, new revisions of several of BTAxis's planets.
    * More big systems.
    * More planet images by Renderwahn.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New planets and optipng.
    * More artwork by Andmiw.
    * Four new planets by Andmiw.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New artwork by Andmiw.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New artwork by Andmiw.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed aliasing issues on numerous planets, new revisions of several of BTAxis's planets.
    * More big systems.
    * More planet images by Renderwahn.
    zalek commit w/ assorted goodies and fixes
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New planets and optipng.
    * More artwork by Andmiw.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Several new stations by enigmatic, along with new renders of old ones.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added jump point buoy image by Deiz.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed edge aliasing on M06
    Fixed aliasing issues on numerous planets, new revisions of several of BTAxis's planets.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added new planet space models by Justin Nichol.
    Remove bad data from D02 to avoid a libpng warning
    Rescaled as D class planets should be planetoid in size - see http://wiki.naev.org/wiki/Needed_2D_Artwork and http://en.wikipedia.org/wiki/Star_Trek_planet_classifications
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed aliasing issues on numerous planets, new revisions of several of BTAxis's planets.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added some more space planet graphics.
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * More big systems.
    * More planet images by Renderwahn.
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added new planet space models by Justin Nichol.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * More systems.
    * More planet tweaks.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Optimized existing planet pngs.
    * Adding new graphics (already optimized).
    branch:      naev
    moved planets around using star trek naming system for space, but not exterior
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New planets and optipng.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Updated several planet graphics.
    * Couple more systems.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added some more space planet graphics.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Several new stations by enigmatic, along with new renders of old ones.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Optimized existing planet pngs.
    * Adding new graphics (already optimized).
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New artwork by Andmiw.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Bigger station renders.
    * Optipng runs with new version reduced size of quite a few things.
    * Optimized existing planet pngs.
    * Adding new graphics (already optimized).
    branch:      naev
    moved planets around using star trek naming system for space, but not exterior
    branch:      naev
    major content addition: 1 new system, 5 new outfits, more data checking
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New artwork by Andmiw.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Removed unwanted outlines from several planet graphics.
    * Updated several planet graphics.
    * Couple more systems.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed aliasing issues on numerous planets, new revisions of several of BTAxis's planets.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added a couple new systems with new planets.
    * Change some M type planets to O type.
    * Added new planet space models by Justin Nichol.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed aliasing issues on numerous planets, new revisions of several of BTAxis's planets.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Optimized existing planet pngs.
    * Adding new graphics (already optimized).
    branch:      naev
    moved planets around using star trek naming system for space, but not exterior
    branch:      naev
    [svn] added support for images of planets
    cosmetic toolkit changes
    changed the gl_blit functions to work with doubles instead of Vector2d pointers
    took opportunity to clean up space.c xml (bringing it up to xml.h standard)
    cleaned up code
    branch:      naev
    [svn] added star system support/loading
    added planets
    more minor tweaks and fixes
    general happiness
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added some more space planet graphics.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Optimized existing planet pngs.
    * Adding new graphics (already optimized).
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New planets and optipng.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added new planet space models by Justin Nichol.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added some more space planet graphics.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New planets and optipng.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New planets and optipng.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New planets and optipng.
    Fixed aliasing issues on numerous planets, new revisions of several of BTAxis's planets.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Optipng runs with new version reduced size of quite a few things.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Added new planet space models by Justin Nichol.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed aliasing issues on numerous planets, new revisions of several of BTAxis's planets.
    * More big systems.
    * More planet images by Renderwahn.
    Added numerous exterior images for rocky/gaseous uninhabited planets plus fixed a moon space image
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    * Renderwahn fixed minor artifacts on the planet graphics. Thanks!
    * Fixed the shadows on all the planets.
    * Optimized existing planet pngs.
    * Adding new graphics (already optimized).
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Removed unwanted outlines from several planet graphics.
    * Added big planets to replace all old, small ones, as well as some new planets.
    * Old planets renamed to moons, using the same classification.
    * Note that many of the big planets still have some aliasing issues.
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    added graphical variation among asteroids
    Optimised, autocropped bunch of asteroid images culled from NASA PD and heavily edited by me - hopefully last attempt to get this right\?
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added loading images for a variety of ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Two new loading graphics, massively improved Archimedes graphic, optipng'd several loading images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added loading images for a variety of ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Improved several loading images.
    Two new loading graphics, massively improved Archimedes graphic, optipng'd several loading images.
    Added four new loading images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Two new loading graphics, massively improved Archimedes graphic, optipng'd several loading images.
    Added four new loading images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New loading graphics rendered by Deiz.
    * Loading graphics look sexier.
    * Moved loading screens into a new directory.
    * Two new loading screens.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    File name consistency.
    * New loading graphics rendered by Deiz.
    * Loading graphics look sexier.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added loading images for a variety of ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added loading images for a variety of ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added loading images for a variety of ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New loading graphics rendered by Deiz.
    * Loading graphics look sexier.
    Correct Schroedinger loading graphic's name
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Two new loading graphics, massively improved Archimedes graphic, optipng'd several loading images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Improved several loading images.
    * New loading graphics rendered by Deiz.
    * Loading graphics look sexier.
    * Moved loading screens into a new directory.
    * New loading screen.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New loading graphics rendered by Deiz.
    * Loading graphics look sexier.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added loading images for a variety of ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added loading images for a variety of ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New loading graphics rendered by Deiz.
    * Loading graphics look sexier.
    * Optipng runs with new version reduced size of quite a few things.
    * Moved loading screens into a new directory.
    * Removed an ugly spec on the loading graphic.
    * Added and implemented loading screens.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New loading graphics rendered by Deiz.
    * Loading graphics look sexier.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed the Fidelity loading image.
    Added loading images for a variety of ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    File name consistency.
    * New loading graphics rendered by Deiz.
    * Loading graphics look sexier.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New loading graphics rendered by Deiz.
    * Loading graphics look sexier.
    * Moved loading screens into a new directory.
    * Two new loading screens.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added loading images for a variety of ships.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New loading graphics rendered by Deiz.
    * Loading graphics look sexier.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New Peacemaker loading graphic.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    File name consistency.
    * New loading graphics rendered by Deiz.
    * Loading graphics look sexier.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New loading graphics rendered by Deiz.
    * Loading graphics look sexier.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New loading graphics rendered by Deiz.
    * Loading graphics look sexier.
    * New loading screen.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Two new loading graphics, massively improved Archimedes graphic, optipng'd several loading images.
    Added four new loading images.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New loading graphics rendered by Deiz.
    * Loading graphics look sexier.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New loading graphics rendered by Deiz.
    * Loading graphics look sexier.
    * Moved loading screens into a new directory.
    * New loading screen.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Improved several loading images.
    Two new loading graphics, massively improved Archimedes graphic, optipng'd several loading images.
    Added four new loading images.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Don't show unknown factions in the GUIs
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Don't incorrectly offset button y value in Slim gui.
    
    Fixes #1072
    Add button to set formation, when player has followers
    
    The button handling code is copied from the brushed gui.
    gettext for slim gui.
    Replace uses of pilot.somemethod(p) with p:somemethod()
    Add optional radian support back to tex.spriteFromDir
    
    It might make sense to do this in other areas, since radians are often
    easier to work with when dealing with functions like atan2().
    Remove some unused lua variables detected by lua-inspect
    Slim GUI: Lowercase j to match info window
    slim gui: Display fuel in addition to jumps remaining
    
    It was confusing that a player in a ship that requires more that 100
    fuel/jump can ask for fuel and is still told the ship has no fuel. This
    makes it more clear.
    * Fixed speed display with 0 max speed.
    Slim GUI: Minor optimization, use mod() instead of dist()
    Slim GUI: Properly represent beam firing and recharging
    Slim GUI: Use player.jumps() instead of a manual calculation
    Print weapon groups on the active outfit icons
    Use the real jump route instead of the minimum distance to the destination
    Slim GUI: Truncate overly-long ship names
    Slim GUI: Refactor and marginal optimization
    Fix missile lock warning light's Y offset
    Stop shield warning light from preempting everything else
    Status indicator
    
    Working, tested status indicator for default slim gui. Status indicator
    is next to the radar, switches colors as shields/armor are damaged.
    corrected credit abbreviations in gui
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    API returns human-readable service names now, so we should use them.
    Slim GUI: Give overheating afterburners a reduced-alpha foreground layer.
    Slim GUI: Optimized planet pane a little.
    Slim GUI: General clean-up.
    Tweaked the cooldown meter's positioning.
    Added a fancier cooldown graphic.
    Added a very crude visual aid for the cooldown.
    * Added heat to pilot.actives().
    * Slim GUI now shows heat for afterburners.
    Added 1px offset from edge
    Fixed up the active outfit bar.
    Slim GUI: Handle lock-on and tracking separately.
    Slim GUI: Indicate lock by ramping from grey to white, finally turning green.
    Slim GUI: Hacked in support for active outfits.
    Slim GUI's jump/jumps if-else was broken.
    Fewer API calls is always preferable.
    Updated GUI call sites of 'known'
    Reset stress properly so that un-scanned pilots show none.
    * Adjusted GUIs to conform to new pilot.inrange return value.
    * Fixed gui.
    * SLim should display proper number of jumps left.
    * Rename default slim, there is no default. Default is dead, long live slim.
    * Slim GUI is now default GUI in name as well.
    * pilot.health() now returns stress.
    * Rename default slim, there is no default. Default is dead, long live slim.
    * Slim GUI is now default GUI in name as well.
    * pilot.health() now returns stress.
    Run a GUI function when faction relationships change. Reduced the number of API calls the Slim GUI makes each frame.
    * Don't give away system name when jump destination is unknown.
    * Fixed default GUI so it doesn't crash, but it's not good either...
    Default GUI should use pilot.colour() too.
    Updated the GUIs to work with the new API calls.
    * You can now set the position of the fps stuff.
    * Removed bottom bar from default GUI, we're not using it anyway.
    * More or less working, however there's issues with custom widgets.
    Don't shown Unknown health.
    Updated GUI to be more like the original.
    * The target_h was wrong, it looks much better now.
    * Display text over ship it target window.
    * Beam secondary weapons should show their cooldown properly now.
    * Properly display secondary weapon name without ammo.
    * Do not display relevant colours for unknown targets.
    * Split the render function into many smaller functions.
    * Handle visibility of pilots.
    * Using gui.osdInit in the default gui.
    * Properly display warnings with the GUI.
    * Run update_system in the gui when changing systems.
    * More comments in the default GUI.
    * Store graphics are fixed 128x96 pixels, however target graphics no longer have a limit.
    * Render the faction logo for the target.
    * Display fuel.
    * Display free cargo space.
    * Pass deltatick to render function in GUI.
    * Energy bar now lowers and displays properly.
    made compatibility
    started adding the new HUD
    * Updated default gui to make usage of new featuers.
    * You can now define the message position from Lua.
    * Allow setting of planet/pilot targetting reticles through the Lua GUI module.
    * Hacked in basic Lua GUI module functionality.
    * Hackfully removed lots of stuff, it's still a horrible mess.
    * Reenable various stuff so it looks much better now.
    * Added nav computer.
    * Now rendering target graphic.
    * Added "hooks" for target and nav computer changing in the GUI lua stuff.
    * GUI shows weapons properly now.
    * Displaying name and status of pilots now.
    * It now loads all the colours and displays some text.
    * Armour and shield now renders with colour properly.
    * Health bars are now rendering correctly.
    * Start trying to render the old GUI.
    * Hacked in primitive support for a Lua GUI.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Don't show unknown factions in the GUIs
    Rename dat/gfx/gui/default to dat/gfx/gui/legacy
    
    Definitely not the default now...
    Replace uses of pilot.somemethod(p) with p:somemethod()
    Made comments gender neutral, for accuracy
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Updated GUI call sites of 'known'
    * Adjusted GUIs to conform to new pilot.inrange return value.
    * Slim GUI is now default GUI in name as well.
    * pilot.health() now returns stress.
    * Rename default slim, there is no default. Default is dead, long live slim.
    * Slim GUI is now default GUI in name as well.
    * pilot.health() now returns stress.
    Run a GUI function when faction relationships change. Reduced the number of API calls the Slim GUI makes each frame.
    * Don't give away system name when jump destination is unknown.
    * Fixed default GUI so it doesn't crash, but it's not good either...
    Default GUI should use pilot.colour() too.
    Updated the GUIs to work with the new API calls.
    * You can now set the position of the fps stuff.
    * Removed bottom bar from default GUI, we're not using it anyway.
    * More or less working, however there's issues with custom widgets.
    Don't shown Unknown health.
    Updated GUI to be more like the original.
    * The target_h was wrong, it looks much better now.
    * Display text over ship it target window.
    * Beam secondary weapons should show their cooldown properly now.
    * Properly display secondary weapon name without ammo.
    * Do not display relevant colours for unknown targets.
    * Split the render function into many smaller functions.
    * Handle visibility of pilots.
    * Using gui.osdInit in the default gui.
    * Properly display warnings with the GUI.
    * Run update_system in the gui when changing systems.
    * More comments in the default GUI.
    * Store graphics are fixed 128x96 pixels, however target graphics no longer have a limit.
    * Render the faction logo for the target.
    * Display fuel.
    * Display free cargo space.
    * Pass deltatick to render function in GUI.
    * Energy bar now lowers and displays properly.
    made compatibility
    started adding the new HUD
    * Updated default gui to make usage of new featuers.
    * You can now define the message position from Lua.
    * Allow setting of planet/pilot targetting reticles through the Lua GUI module.
    * Hacked in basic Lua GUI module functionality.
    * Hackfully removed lots of stuff, it's still a horrible mess.
    * Reenable various stuff so it looks much better now.
    * Added nav computer.
    * Now rendering target graphic.
    * Added "hooks" for target and nav computer changing in the GUI lua stuff.
    * GUI shows weapons properly now.
    * Displaying name and status of pilots now.
    * It now loads all the colours and displays some text.
    * Armour and shield now renders with colour properly.
    * Health bars are now rendering correctly.
    * Start trying to render the old GUI.
    * Hacked in primitive support for a Lua GUI.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    fix of gui when the speed is superior to max
    Fixed spacing in Brushed GUI
    Fixed lockon display in Brushed GUI.
    Don't show unknown factions in the GUIs
    Fixed those corners for real this time.
    
    Not sure if the images had anything to do with it, but I refreshed
    those and also made sure that the Brushed GUI script doesn't overlay
    bar components on top of each other.
    adaptations and corrections in lua scripts and nlua doc
    Fixed speed lights.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed the speed light indicators.
    
    They were offset by 1
    Better FPS pos
    List bar in Brushed GUI.
    Added spaces on the left and right sides of the top and bottotm bars
    
    That took wayyyyyyyyyyy too much work, but the effect is great!
    Shifted everything so that the edges are revealed above and below.
    Shifted the bottom "main" portion up by 32 pixels.
    Shifted the OSD down a bit
    Subtract viewport position for mouse events in the GUI.
    
    This causes mouse positions to be identical to graphical positions
    from a Lua perspective.
    Fixed the icons on the edges.
    
    This involved making the view port smaller. Just to keep everything
    centered, I added a bottom bar as well to balance things out. Seems
    to look pretty nice!
    
    It's still not 100% perfect but it's better.
    Fixed alignment of bottom portion
    Improved formation button look while also making it extensible.
    
    The button is now in a menu which can include any number of buttons
    and can later be used to add fleet commands as well.
    Fixed the planet pane.
    
    I don't know why the fuck I made it *stretch* the middle part when
    it clearly needs to be *tiled*. Fixed now.
    Fixed up the Brushed GUI to show weapsets properly.
    
    A few things are a part of this:
    
    1. The Lua API didn't support grabbing the current weapset ID (only the
       name), so I added this to the Lua API.
    
    2. There was a bug in the weapset value of activated outfits caused by
       a variable not being initialized at the start, which led to unassigned
       activated outfits being listed as an arbitrary slot (1 in all cases
       that I saw but it seems that value isn't a guarantee in any way). Fixed
       that by initializing the weapset variable of structurals and utilities
       when pilots are created.
    
    3. Activated outfits in weapset 10 now show up as "0" instead of "10" (matching
       the key it is assigned to by default).
    
    4. The ID of the current weapon set is shown next to the radar; weapon set 10
       is shown as "0" for the same reason as for activated outfits.
    
    5. Only weapons in the current weapon sets are shown now.
    Brushed GUI: don't show name of dest system if unknown
    Add "Set formation" button to Brushed GUI
    
    Already existed in Slim. Not a particularly good design, but it works.
    Show the fuel light when out of fuel regardless of destination.
    Fixed ordering of outfits.
    Increased the size of the Brushed OSD, made its height dynamic.
    
    I originally wanted to make its width dynamic as well, but the
    way the OSD is set makes that not really work so well. I'm not really
    confident in my ability to fix the OSD code to make it more dynamic
    in this fashion, so for now I've just set it to a wider static OSD
    width.
    Fixed the fuel bar in the Brushed GUI.
    
    Ugh, I'm doing terrible today. Sorry about this. Again. The fuel
    display works correctly now.
    Changed FPS position.
    fixed for real this time
    Mistake
    Initialize navstring (prevent crash)
    New planet pane graphics (based on existing images)
    Fixed a mistake
    Added activated outfits support to the brushed GUI.
    Adapt the message box to the height of the right side, too
    Change the position of the bottom pane depending on window size.
    Missing function from "Slim"
    Added the planet indicator from "Slim" into "Brushed".
    
    Hopefully just a placeholder until a better version is done, but I
    tried to at least make it look decent.
    Added a "render_cooldown" function that uses the omsg feature.
    Round instead of flooring ship speed.
    Show direction of target.
    
    Done by simply using the regular ship images, rather than the
    designated "target image".
    Repositioned message bar to leave more space.
    Replaced velocity bar with lights (like on targets).
    Added player speed indicator.
    Added stress bar to brushed GUI.
    Added system name to Brushed GUI.
    Removed use of "_" as a variable in Brushed GUI script.
    
    Using this variable ruins gettext translation.
    Added ship temperature to Brushed GUI.
    
    Also added a placeholder for cooldown to prevent the game from
    crashing. Will be replaced with something proper later.
    * Attempt to clean up the whitespace mess in Lua a bit.
    Remove pilot.player() function, as it is a duplicate of player.pilot()
    Fix fighter bays in brushed gui
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Adjusted GUIs to conform to new pilot.inrange return value.
    Fixed brushed, but it isn't showing correct damage types.
    Fixed display bugs in slim, added refire, lockon and in_arc display to brushed.
    * Use fuel from stats.
    Run a GUI function when faction relationships change. Reduced the number of API calls the Slim GUI makes each frame.
    Fixed typo causing GUI to flicker when lockons were found.
    added time display to brushed hud.
    it is now possible to turn the centering of the GUI on and off. use
    var.push("gui_brushed_centered", true) to enable.
    a proper interface will be added in time.
    fixed various HUD element's positions
    * Fixed typo.
    finishing touches
    done-ish
    Top Bar. Variable length fields.
    finishing touches
    done-ish
    Top Bar. Variable length fields.
    Added weapon bar popup to the new GUI.
    Added the new brushed GUI.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    slimv2: display beam weapon charge
    slimv2: Add active cooldown display
    
    Just copied from slim. May want to improve later.
    slimv2: show afterburner heat
    Fix slimv2 fuel indicator
    * Fixed speed display with 0 max speed.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed wonky graphics, removed temporary files.
    Expanded by adding active outfits, still buggy though.
    Basic stuff of slimv2 implemented.
    Updated my info.
    Added misnhelper.lua script.
    
    This is just a shortcut to check for any of a list of missions being
    active.
    Fixed method.
    Replaced use of the "static" tag with a "static" standing script.
    
    The reason is using the "static" tag now guarantees standing to always
    be represented as "???", as this text is now defined in Lua.
    More gettext for scripts.
    Modified equip scripts for new hulls
    Renamed a variety of core hulls throughout XML and Lua
    
    'Schafer & Kane' has been replaced with 'S&K' in most places
    Several Unicorp and S&K platings have new names
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Renamed 15 core systems throughout Lua and XML
    Completed engine renaming (in both XML and Lua)
    * Adjust warning message.
    * Lua scripts may now use warn() to print to console and stderr.
    * pilot.rmOutfit() can now remove all core outfits if passed "cores" as its argument.
    * Added a helper script for quickly equipping a pilot's cores.
    * Reorganized tech.xml a bit, no functional change.
    More gettext for scripts.
    Make addRaw() return pilot, instead of single element table
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Corrected example usage.
    * Moved end-user functions to the top of the file.
    * Corrected and clarified usage information.
    Luadoc for fleethelper.lua
    Always randomize ship positions when there's more than one being added.
    Added position randomization to the helper script's pilot.add() wrapper.
    Added helper script for generating and modifying raw ships.
    Made spacing in numstring.lua consistent.
    More or less complete Trader Escort mission overhaul.
    
    Started out with just fixing text, but then I found some problems...
    so here you go, the escort mission doesn't let you "cheat" by jumping
    after only one ship jumps anymore.
    Fixed up the regular cargo mission to be more translatable.
    Added a "creditstring" function to numstring.lua.
    
    This is designed to make proper use of ngettext for credits easier.
    It does the right thing for translation in combination with using
    the numstring function. I've already made use of it in a couple of
    places. I'm essentially recommending this for any time Lua code needs
    to display a certain number of credits.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Simplified and optimized numstring.
    Fixed bug where 1000 became 0 in numstring
    * Added a helper script to convert numbers into human readable strings.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Add button to set formation, when player has followers
    
    The button handling code is copied from the brushed gui.
    use a table in enumerate function, for lua 5.1 compatibility
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added custom enumeration implementation.
    Morrrrrrrrrre portraits
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Changed the way cargo_common sleects dist 1-3 to just rnd.rnd().
    Fixed up the text of longdistancecargo, plus improved it.
    
    This makes the long distance shipping mission actually go... long
    distance.
    More or less complete Trader Escort mission overhaul.
    
    Started out with just fixing text, but then I found some problems...
    so here you go, the escort mission doesn't let you "cheat" by jumping
    after only one ship jumps anymore.
    Removed buildCargoTransportWhatever function.
    
    I removed both uses of this in the last commit. It's not conducive
    to translation.
    Syntax error
    Added support for cargo missions on Proteron worlds.
    
    Also made it so that cargo missions won't choose Thurion assets
    unless the mission comes from another Thurion asset. (This prevents
    Proteron from shipping goods to the Thurion, who they don't even
    know exist.)
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Made pirate transport missions always show up.
    
    This adds a couple options to cargo_common.lua enabling use of hidden
    jumps and enabling always generating regardless of commodity availability,
    then adds those to the pirate cargo mission.
    More gettext for scripts.
    * Attempt to clean up the whitespace mess in Lua a bit.
    add newline to end of file
    Moved piracy risk calculation to the cargo_common script
    Cargo Mission Overhaul
    
    Brief Summary:
    Cargo delivery missions now only deliver commodities offered at the
    origin planet to planets that do not sell that commodity. Jump and
    distance rewards depend on the base price of the commodity being
    delivered. Rewards are also higher for traversing pirated space.
    
    A new mission was created that asks players to deliver a commodity not
    sold on that planet. Pay is dependent on base price of the commodity
    and how much is delivered.
    Fixed a typo (2 times comparison with <60) and converted to 3 tab standard
    Can't do cargo missions to Thurion or Proteron now.
    Add longer-range cargo missions with low probability
    Remove getNextSystem from cargo_common
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    moved jumpdist.lua includes to cargo_common.lua so as to save including it everywhere where cargo_common is used.
    Many more fixes to the anxious merchant but also a few others (and probably more to come)
    * system.adjacentSystems() should not return systems whose jumps are hidden or exit-only.
    * Corrected an insubstantial redundant data retrieval.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Forgot to commit system.jumpPos replacement in scripts/
    * Cargo missions only give missions to landable planets.
    Grant 8 seconds per jump for timed cargo missions.
    * Reduce redundant script code.
    Added a warning when attempting timed cargo missions with overly-slow ships. Reduced the difficulty of rush missions a bit.
    Minor improvements for the cargo title builder.
    Cargo mission title tweaks.
    * Fixed es cargo missions (patch by daniel.oconnor).
    * Improved the abort condition of the cargo missions.
    * Cargo missions weren't properly taking into account the jump distance for reward, reported by CloCkWeRX.
    * Lowered the finished mod due to the increase in payment.
    * Comments.
    * No cargo missions with under 2500 units of travel (and no jumps).
    * Comments.
    * Extracted common stuff from cargo.lua and cargo_rush.lua.
    Use C pathfinding instead of an O(n^bad) algorithm in Lua
    
    In time, the entire thing should be removed, once missions have been
    modified to use system.jumpPath() directly.
    * Removed some debugging stuff.
    * Sanitized hidden jump point handling.
    * jumpDist and adjacentSystems now by default IGNORES hidden jump points, if
      you want to actually handle them, there is a new hidden parameter that lets
      you change the behaviour to how it was beforeish, except it now is
      consistant.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reduce redundant script code.
    * Moved utility function into scripts.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Initial commit of the first two missions in the Academy Hack campaign.
    * Improved proximity script to allow AI ships to act as the focus.
    * Implemented selective pilot clear script for per-faction ship clearing.
    * No-run AI for Sirius.
    * Moved bulky lua code from mission.xml into rehab_common.lua.
    Remove some unused lua variables detected by lua-inspect
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added range function to prng for indexes.
    * Use local variables where they should be used (reduce memory usage and collision).
    * Added API to initialize the prng from a string using a hash.
    * Added Lua pseudo random number generator.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    dos2unix
    More gettext for scripts.
    fix in fleet_form
    fix in fleet_form
    Remove pilot.player() function, as it is a duplicate of player.pilot()
    fix in fleet_form
    add task manager to fleet_form
    Use the asset and jump point given by the land and jump hooks
    fix land/jump hooks in fleet_form
    replace stespeedlimit in fleet_form
    Make fleet_form use faction.enemies() for player too
    Remove some unused lua variables detected by lua-inspect
    changed faction of ships in fleet to match fleader
    Bug fixing player as fleet leader.
    fleets should have 2 or more ships.
    Update pilot.dir() call sites
    cleaning up
    fixing bug in fleet script, and allowing scripter to set preferred fleet leader.
    adding fleet_form.lua to master.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * More work on the Shadow Vigil mission. Also a lot of peripheral edits.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * achack02 fixes by thilo.
    * Expanded proximity script. Can now trigger on sensor range between pilots.
    * Initial commit of the first two missions in the Academy Hack campaign.
    * Improved proximity script to allow AI ships to act as the focus.
    * Implemented selective pilot clear script for per-faction ship clearing.
    * No-run AI for Sirius.
    * Moved bulky lua code from mission.xml into rehab_common.lua.
    * Just in case don't error out.
    * Fancier proximity that saves itself.
    * Finally fixed proximity script.
    * Stupid mistakes are stupid - I totally need to test this after this push.
    * Fixed stupid bug.
    * Fancier proximity implementation using tables to get around changing values.
    * Fixed proximity running hooks before it should.
    ~=, not =~
    * Proximity pseudo-hook auto-terminates on jumpout and land.
    * Reworked Dvaered/FLF missions to work with big big systems and several new features.
    * dv_antiflf03 is still broken.
    * More work on the Shadow Vigil mission. Also a lot of peripheral edits.
    Add a 'local' keyword
    Add 'Drone' class to formation.lua
    Make no formation not a formation
    Add formation.none to clear formation
    Make circle formation use absolute position
    Add formation.keys, which is useful for more than just randomization
    Replace formation.keys() with formation.random_key()
    Add formations.keys() method to get all keys
    
    Since Lua doesn't have a good way to do this...
    Call :followers() in formation code
    
    This way only one argument is needed
    Move formation code to dat/scripts and make it work outside AI
    Single space seperator, instead of double
    Mutiply constants
    Refactor formation.lua to a table of functions
    Some tweaks to formation code
    Use ai.follow_accurate() for formations
    Integrate fleet_form.lua code into AI API
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    * Revamped jumpdist. Should give better results, and more importantly is now orders of magnitude faster especially for large max queries.
    * Sanitized hidden jump point handling.
    * jumpDist and adjacentSystems now by default IGNORES hidden jump points, if
      you want to actually handle them, there is a new hidden parameter that lets
      you change the behaviour to how it was beforeish, except it now is
      consistant.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Replaced example in jumpdist.lua with something more useful.
    * Fixed example in jumpdist.
    * Fixed jumpdist example.
    * Improved coding style a bit.
    * Updated missions to the API change of system.adjacentSystems.
    * Fixed jumpdist.lua that hadn't been updated with the adjacentSystems API change.
    * Use newer API.
    * Fixed bug in system generation.
    * jumpdist actually filters properly now.
    * You can now specify filter function to jumpdist.lua.
    * Attempt to fix BTAxis' line end problem.
    Revert "\r\n -> \n on three files"
    
    This reverts commit deeb0e8295cdff20375ec4099a3bca8b31780df0.
    \r\n -> \n on three files
    * You can now put an interval for jump distance systems.
    * Added common framework for getting system n systems away from another.
    dos2unix
    Add two hooks fired when the player buys and sells an outfit
    
    Hooks
            src/nlua_hook.c
    
    Outifts trade panel
            src/land_outfits.c
    
    Add sample event for testing new hooks
            dat/scripts/debug/debug.lua
            dat/events/_test/test_landed.lua
            dat/event.xml
    Add two hooks fired when the player buys and sells an outfit
    
    Hooks
            src/nlua_hook.c
    
    Outifts trade panel
            src/land_outfits.c
    
    Add sample event for testing new hooks
            dat/scripts/debug/debug.lua
            dat/events/_test/test_landed.lua
            dat/event.xml
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Update unique scripts.
    * Fixed the HCVL/bounty missions.
    * Hacked script into submission for now.
    * Should fix some namespace issues
    * Fixed script.
    * Improved and documented the pilot scripts.
    * Allow generation of pilot without actual creation.
    * Added some scripts to generate pilots and such.
    Some more pirate names with some particular references.
    Fixed a pirate name.
    Updated PO files and fixed up stuff with pirate names.
    Another pirate name component
    Added Gray and Silver.
    More pirate names
    Pirate name
    Pirate name
    Some more pirate names
    Added a whole bunch more choices for pirate names.
    
    I might be getting a bit carried away here. :P
    A couple more pirate name pieces
    Expanded and improved pirate names.
    
    This massively expands the number of possible pirate names and also
    introduces a way to translate:
    
    Just don't. Transliterate only.
    
    I added some combinations from other languages that I could think
    of (mostly Japanese since that's what I'm familiar with). Expanding
    this list with even more languages would make it even better. :)
    
    (Side note: I know that any name using the Spanish words is broken;
    I figure this isn't really a big deal because they're names and not
    meant to be taken seriously. I don't think if a name ended up reading
    "The Chainsaw Red Drunk" it would really matter (if anything it makes
    it funnier).
    Got the new system in and working!
    
    Right now it's just putting generic outfits on everyone. Next step:
    adjust outfits for specific ships and factions.
    had forgotten the Kestrel
    Corrected a small warning in unique
    More gettext for scripts.
    Fix the equip script's dry run functionality
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Fixed path to helper scripts.
    There were more apu's sitting around than I first realized
    Update unique scripts.
    Reworked equipping to allow arbtirary numbers of weapon groups instead of two.
    Updated the Empire and Pirate unique pilot scripts for new weapons.
    * fix 'Unique' event
    
    * "Laser Cannon" => "Laser Cannon MK1" ...
    * Update some outfits in unique scripts.
    * Properly return the outfit list.
    Pirate.lua updated
    * Fixed uniques and the nlua_pilot outfit stuff.
    * Should fix some namespace issues
    * Updates to pilot naming by Deiz.
    * Fixed typo.
    * Give pirates some of the new outfits.
    * Improved and documented the pilot scripts.
    * Better handling of the pirate_create flag.
    * Allow generation of pilot without actual creation.
    * Added simple pirate name generator.
    * Added some scripts to generate pilots and such.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    Fix simple typos in location names: Churchill, Dakron.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    * Minor edit to Thurion space reflecting discussions between me and azar_wolf.
    ** Hidden jump leading from Iris, facilitating "ghost ship" scenario.
    ** Sol cannot be bypassed, barring the route from Iris.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    remove capitals and spaces from data files
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added expensive minerals to more asteroid fields.
    
    There were a bunch that *only* had ore, so I changed that. All
    fields now have at least two kinds of commodities that can be
    extracted, making the Asteroid Scanner more useful and the mining
    experience a bit more dynamic in these systems.
    apply suppression of standard commodities in asset definition
    Added miner presence to several areas.
    Added several more asteroid fields, including asteroid rings around some planets.
    
    Asteroid rings are found around Gammacron IV and Nougat I.
    Vengeance now armorbreaker, added dome Zlk assets, tweaked others
    Slightly better integration of the new factions into the galaxy map.
    
      - Those are minor modifications. The most important of them is likely
        the addition of two jump points from Pirate space to Za'lek space.
      - A few systems have been added near Protera, which has itself been
        moved. Much more work is to be done on Proteron.
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    zalek ships and further map fixes
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added another two-way hidden FLF jump point.
    
    This makes it easier for an FLF-aligned player to get around. There
    are now two viable options to Frontier space: the old way through
    Ingot, and a new way through Myad which avoids most Dvaered space.
    Move a number of assets and jumps closer to system centers
    Added hidden jump points for the FLF.
    
    There's a problem with the previous setup: the FLF is in a position
    that makes what they do impractical at best. As a player, you have
    to either have an unreasonably large fuel tank, or land on the
    planets of your enemies. This has been remedied by adding hidden
    jump points that allow FLF ships to get almost anywhere they would
    like within two jumps of a non-enemy planet, and within three jumps
    for deeper parts of Dvaered space. Also, it's now possible to go
    from the FLF base to the Frontier and back without entering Dvaered
    space at all.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    major zalek update
    commiting more changes, made zalek dark red cause it fit better than purple
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added expensive minerals to more asteroid fields.
    
    There were a bunch that *only* had ore, so I changed that. All
    fields now have at least two kinds of commodities that can be
    extracted, making the Asteroid Scanner more useful and the mining
    experience a bit more dynamic in these systems.
    apply suppression of standard commodities in asset definition
    Added miner presence to several areas.
    Added several more asteroid fields, including asteroid rings around some planets.
    
    Asteroid rings are found around Gammacron IV and Nougat I.
    Add some hidden jump points south of Dvaered space
    
    The existing hidden jumps provide no shortcut; they are the same number
    of jumps as going through normal jumps. It seems they could serve as a
    way to bypass Dvaered space, and these extra jumps help with that. It is
    still necessary to pass through one Dvaered system (Amaroq) and the
    systems all have a Dvaered presence, but this makes it at least a bit
    more realistic for an enemy of the Dvaered, knowing these jumps, to get
    between Za'lek and Sirius space.
    Move pirate presences away from highway systems
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Qorel Expanse added.
    
      - It is a set of pirate systems and stations in the empty space between the
        Empire and the Dvaered allowing a safe^Wpossible route between Vorca and
        New Haven.
      - The map containing the position of the entry and exit points has to
        be bought, and it’s currently a bit expensive if you are begining
        the game, though the pirate missions are at the same time very
        lucrative… (maybe a bit much?)
      - It could be seen as a test to know whether or not other “expanses”
        should be added in the other empty spaces between other factions,
        but IMHO, it makes playing pirate a bit easier. Without that, you
        could not play purely pirate and would have to be allied with at
        least one or two factions (and one of them has to be the Dvaered…)
        to only be able to move through the galaxy…
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    remove capitals and spaces from data files
    * Regenerated more jumps.
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Added miner presence to several areas.
    Added support for exclusion zones.
    
    I also had to clean up some code (magic numbers in particular, replaced
    with an enum). There is an example exclusion zone in Lapis.
    Added some more asteroid fields.
    
    I have a couple criteria for where I place an asteroid field:
    
    1. It must be in a location with pirates (to keep mining a bit interesting).
    2. It should make use of an otherwise useless system.
    3. Thurion space is an exception to this rule, but putting asteroids
       in unstable nebula systems is a must.
    Replaced the polygon definition of asteroid fields with simple circles.
    
    I kind of get why it was implemented that way: you can define all kinds
    of wacky shapes real easily. But in the vast majority of cases don't
    need that, and it makes defining asteroid fields needlessly complicated.
    In the few cases where complicated shapes might be needed, it's easy
    enough to approximate shapes with a series of circles.
    
    The code is much simpler, too.
    
    Display in the map editor has been removed at least temporarily.
    Hopefully should add it back in later.
    Made required changes
    corrected a crash, added radar display of asteroids and display on map editor
    Maintain the Fidelis - Eye of Night link to preserve lore
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Relocate Zied further south so that it doesn't overlap any jumps
    Slightly better integration of the new factions into the galaxy map.
    
      - Those are minor modifications. The most important of them is likely
        the addition of two jump points from Pirate space to Za'lek space.
      - A few systems have been added near Protera, which has itself been
        moved. Much more work is to be done on Proteron.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    More work on the Proteron systems.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    added more types of asteroids
    apply suppression of standard commodities in asset definition
    Render asteroid debris under nebula, add asteroid field to Sol.
    
    Debris was being rendered on top of the nebula overlay, which looked
    silly and made no sense. I've moved it up so that this debris renders
    before (and therefore under) the nebula overlay.
    
    Also added a large asteroid field to Sol to represent destroyed planets.
    * Minor edit to Thurion space reflecting discussions between me and azar_wolf.
    ** Hidden jump leading from Iris, facilitating "ghost ship" scenario.
    ** Sol cannot be bypassed, barring the route from Iris.
    Slightly better integration of the new factions into the galaxy map.
    
      - Those are minor modifications. The most important of them is likely
        the addition of two jump points from Pirate space to Za'lek space.
      - A few systems have been added near Protera, which has itself been
        moved. Much more work is to be done on Proteron.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    remove capitals and spaces from data files
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Added a small invisible "Proteron Dissident" faction.
    
    This is a faction which appears rarely in Proteron systems which looks
    identical to the Civilian faction, but which the Proteron are enemies
    with. Enables hunting down dissidents through the Patrol mission, and
    will enable a modified bounty hunt for dissidents.
    More Proteron stuff.
    
    Also fixed a misalignment with the description and reality of the
    Kahan by making its weapons heavy rather than medium (otherwise the
    Pacifier would just be better than it in that regard).
    Started adding more systems and assets for the Proteron.
    
    I've added in all the systems that I want to, but not all the assets.
    All but one of these systems will have one or two assets added to them
    later; I'm just not doing it right now because I'm tired and it's late.
    
    I also modified Protera Sigma to not offer Proteron ships, instead
    offloading that task to a Proteron station with a military restriction.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    commiting more changes, made zalek dark red cause it fit better than purple
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Made the Protera jump less hidden again.
    More work on the Proteron systems.
    Started adding more systems and assets for the Proteron.
    
    I've added in all the systems that I want to, but not all the assets.
    All but one of these systems will have one or two assets added to them
    later; I'm just not doing it right now because I'm tired and it's late.
    
    I also modified Protera Sigma to not offer Proteron ships, instead
    offloading that task to a Proteron station with a military restriction.
    * Added missing jumps.
    Slightly better integration of the new factions into the galaxy map.
    
      - Those are minor modifications. The most important of them is likely
        the addition of two jump points from Pirate space to Za'lek space.
      - A few systems have been added near Protera, which has itself been
        moved. Much more work is to be done on Proteron.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    remove capitals and spaces from data files
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Added a small invisible "Proteron Dissident" faction.
    
    This is a faction which appears rarely in Proteron systems which looks
    identical to the Civilian faction, but which the Proteron are enemies
    with. Enables hunting down dissidents through the Patrol mission, and
    will enable a modified bounty hunt for dissidents.
    Finished the proteron stuff I think
    
    Need to test
    More
    More work on the Proteron systems.
    More Proteron stuff
    More Proteron stuff.
    
    Also fixed a misalignment with the description and reality of the
    Kahan by making its weapons heavy rather than medium (otherwise the
    Pacifier would just be better than it in that regard).
    Started adding more systems and assets for the Proteron.
    
    I've added in all the systems that I want to, but not all the assets.
    All but one of these systems will have one or two assets added to them
    later; I'm just not doing it right now because I'm tired and it's late.
    
    I also modified Protera Sigma to not offer Proteron ships, instead
    offloading that task to a Proteron station with a military restriction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added more systems and planets to the galaxy. Areze helped.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    s/PSO Moniter/PSO Monitor/ throughout the XML
    Relocate Zied further south so that it doesn't overlap any jumps
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Fixed jumps to the renamed Valt system.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    Qorel Expanse added.
    
      - It is a set of pirate systems and stations in the empty space between the
        Empire and the Dvaered allowing a safe^Wpossible route between Vorca and
        New Haven.
      - The map containing the position of the entry and exit points has to
        be bought, and it’s currently a bit expensive if you are begining
        the game, though the pirate missions are at the same time very
        lucrative… (maybe a bit much?)
      - It could be seen as a test to know whether or not other “expanses”
        should be added in the other empty spaces between other factions,
        but IMHO, it makes playing pirate a bit easier. Without that, you
        could not play purely pirate and would have to be allied with at
        least one or two factions (and one of them has to be the Dvaered…)
        to only be able to move through the galaxy…
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Maintain the Fidelis - Eye of Night link to preserve lore
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Relocate Zied further south so that it doesn't overlap any jumps
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    zalek ships and further map fixes
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Qorel Expanse added.
    
      - It is a set of pirate systems and stations in the empty space between the
        Empire and the Dvaered allowing a safe^Wpossible route between Vorca and
        New Haven.
      - The map containing the position of the entry and exit points has to
        be bought, and it’s currently a bit expensive if you are begining
        the game, though the pirate missions are at the same time very
        lucrative… (maybe a bit much?)
      - It could be seen as a test to know whether or not other “expanses”
        should be added in the other empty spaces between other factions,
        but IMHO, it makes playing pirate a bit easier. Without that, you
        could not play purely pirate and would have to be allied with at
        least one or two factions (and one of them has to be the Dvaered…)
        to only be able to move through the galaxy…
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Move pirate presences away from highway systems
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Qorel Expanse added.
    
      - It is a set of pirate systems and stations in the empty space between the
        Empire and the Dvaered allowing a safe^Wpossible route between Vorca and
        New Haven.
      - The map containing the position of the entry and exit points has to
        be bought, and it’s currently a bit expensive if you are begining
        the game, though the pirate missions are at the same time very
        lucrative… (maybe a bit much?)
      - It could be seen as a test to know whether or not other “expanses”
        should be added in the other empty spaces between other factions,
        but IMHO, it makes playing pirate a bit easier. Without that, you
        could not play purely pirate and would have to be allied with at
        least one or two factions (and one of them has to be the Dvaered…)
        to only be able to move through the galaxy…
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Replaced the polygon definition of asteroid fields with simple circles.
    
    I kind of get why it was implemented that way: you can define all kinds
    of wacky shapes real easily. But in the vast majority of cases don't
    need that, and it makes defining asteroid fields needlessly complicated.
    In the few cases where complicated shapes might be needed, it's easy
    enough to approximate shapes with a series of circles.
    
    The code is much simpler, too.
    
    Display in the map editor has been removed at least temporarily.
    Hopefully should add it back in later.
    Added extensive logging upon entering Universe Editor ; restored Hakoi.xml
    Base file for testing on Hakoi system
    Made Hakoi field non-convex for testing previous change.
    Made Hakoi field larger and 6-points for better testing.
    Add asteroids in Hakoi system for testing.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    Qorel Expanse added.
    
      - It is a set of pirate systems and stations in the empty space between the
        Empire and the Dvaered allowing a safe^Wpossible route between Vorca and
        New Haven.
      - The map containing the position of the entry and exit points has to
        be bought, and it’s currently a bit expensive if you are begining
        the game, though the pirate missions are at the same time very
        lucrative… (maybe a bit much?)
      - It could be seen as a test to know whether or not other “expanses”
        should be added in the other empty spaces between other factions,
        but IMHO, it makes playing pirate a bit easier. Without that, you
        could not play purely pirate and would have to be allied with at
        least one or two factions (and one of them has to be the Dvaered…)
        to only be able to move through the galaxy…
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    commiting more changes, made zalek dark red cause it fit better than purple
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Move a number of assets and jumps closer to system centers
    Added hidden jump points for the FLF.
    
    There's a problem with the previous setup: the FLF is in a position
    that makes what they do impractical at best. As a player, you have
    to either have an unreasonably large fuel tank, or land on the
    planets of your enemies. This has been remedied by adding hidden
    jump points that allow FLF ships to get almost anywhere they would
    like within two jumps of a non-enemy planet, and within three jumps
    for deeper parts of Dvaered space. Also, it's now possible to go
    from the FLF base to the Frontier and back without entering Dvaered
    space at all.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    commiting more changes, made zalek dark red cause it fit better than purple
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    major zalek update
    zalek ships and further map fixes
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Added a "virtual Sindbad" for when Sindbad is not discovered.
    
    This ensures that FLF presence is always in Sigur and surrounding
    systems.
    
    I noticed a bug where for some reason, removing this Virtual
    Sindbad asset caused the Virtual Empire Unpresence to be removed
    too? I'm massively confused by that. "Fixed" by having a redundant
    entry under the FLF_base diff but this should be fixed for real
    later, whatever the cause may be.
    Changed the visibility of some FLF jump points.
    
    It seems like they should match the other jump points in the area,
    so I did that.
    Added virtual Sorimid unpresence to Sigur.
    
    It should be noted that virtual unpresence doesn't work; virtual
    assets, at least, don't have any effect in the system they're in,
    so virtual assets with a range of 0 have no effect at all. But this
    is obviously a bug, so once that's fixed, Sigur will have only FLF
    ships in it.
    Added hidden jump points for the FLF.
    
    There's a problem with the previous setup: the FLF is in a position
    that makes what they do impractical at best. As a player, you have
    to either have an unreasonably large fuel tank, or land on the
    planets of your enemies. This has been remedied by adding hidden
    jump points that allow FLF ships to get almost anywhere they would
    like within two jumps of a non-enemy planet, and within three jumps
    for deeper parts of Dvaered space. Also, it's now possible to go
    from the FLF base to the Frontier and back without entering Dvaered
    space at all.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    added more types of asteroids
    apply suppression of standard commodities in asset definition
    Replaced the polygon definition of asteroid fields with simple circles.
    
    I kind of get why it was implemented that way: you can define all kinds
    of wacky shapes real easily. But in the vast majority of cases don't
    need that, and it makes defining asteroid fields needlessly complicated.
    In the few cases where complicated shapes might be needed, it's easy
    enough to approximate shapes with a series of circles.
    
    The code is much simpler, too.
    
    Display in the map editor has been removed at least temporarily.
    Hopefully should add it back in later.
    Made required changes
    corrected a crash, added radar display of asteroids and display on map editor
    * Added more systems and planets to the galaxy. Areze helped.
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Fixed Gold system XML missing <jumps> tag
    fixes cause im a knob
    general update, hopefully not broken
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Move pirate presences away from highway systems
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Maintain the Fidelis - Eye of Night link to preserve lore
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Move pirate presences away from highway systems
    Added hidden jump points for the FLF.
    
    There's a problem with the previous setup: the FLF is in a position
    that makes what they do impractical at best. As a player, you have
    to either have an unreasonably large fuel tank, or land on the
    planets of your enemies. This has been remedied by adding hidden
    jump points that allow FLF ships to get almost anywhere they would
    like within two jumps of a non-enemy planet, and within three jumps
    for deeper parts of Dvaered space. Also, it's now possible to go
    from the FLF base to the Frontier and back without entering Dvaered
    space at all.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added expensive minerals to more asteroid fields.
    
    There were a bunch that *only* had ore, so I changed that. All
    fields now have at least two kinds of commodities that can be
    extracted, making the Asteroid Scanner more useful and the mining
    experience a bit more dynamic in these systems.
    added more types of asteroids
    apply suppression of standard commodities in asset definition
    Added miner presence to several areas.
    Move pirate presences away from highway systems
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    major zalek update
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Removed virtual Empire unpresence on Toros.
    
    I assume this was for nebula instability but Empire ships don't really
    seem to struggle here. Also it creates an easy place to illegally
    dump waste, which we don't want.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    remove capitals and spaces from data files
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    added more types of asteroids
    apply suppression of standard commodities in asset definition
    Added miner presence to several areas.
    Increased Alteris asteroid field size
    Replaced the polygon definition of asteroid fields with simple circles.
    
    I kind of get why it was implemented that way: you can define all kinds
    of wacky shapes real easily. But in the vast majority of cases don't
    need that, and it makes defining asteroid fields needlessly complicated.
    In the few cases where complicated shapes might be needed, it's easy
    enough to approximate shapes with a series of circles.
    
    The code is much simpler, too.
    
    Display in the map editor has been removed at least temporarily.
    Hopefully should add it back in later.
    Converted the "blackmarket" flag to a "blackmarket" service.
    
    This is cleaner, and it's an easy way to make adjusting this property
    in the editor possible. The "blackmarket" flag outside of the assets
    is still supported for compatibility.
    added management of non-convex fields
    Made required changes
    Added a new field, corrected Euler and added the stabilization step
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added expensive minerals to more asteroid fields.
    
    There were a bunch that *only* had ore, so I changed that. All
    fields now have at least two kinds of commodities that can be
    extracted, making the Asteroid Scanner more useful and the mining
    experience a bit more dynamic in these systems.
    apply suppression of standard commodities in asset definition
    Added some more asteroid fields.
    
    I have a couple criteria for where I place an asteroid field:
    
    1. It must be in a location with pirates (to keep mining a bit interesting).
    2. It should make use of an otherwise useless system.
    3. Thurion space is an exception to this rule, but putting asteroids
       in unstable nebula systems is a must.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    commiting more changes, made zalek dark red cause it fit better than purple
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    zalek ships and further map fixes
    * Force-merged Za'lek space from expand branch.
    * Areze's initial work on Za'lek space.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Qorel Expanse added.
    
      - It is a set of pirate systems and stations in the empty space between the
        Empire and the Dvaered allowing a safe^Wpossible route between Vorca and
        New Haven.
      - The map containing the position of the entry and exit points has to
        be bought, and it’s currently a bit expensive if you are begining
        the game, though the pirate missions are at the same time very
        lucrative… (maybe a bit much?)
      - It could be seen as a test to know whether or not other “expanses”
        should be added in the other empty spaces between other factions,
        but IMHO, it makes playing pirate a bit easier. Without that, you
        could not play purely pirate and would have to be allied with at
        least one or two factions (and one of them has to be the Dvaered…)
        to only be able to move through the galaxy…
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Added two new independent stations between Teller and other Pirate strongholds.
    
    These stations are designed to mainly be refueling stops for pirate
    aligned players, since without them the journey to Teller is nearly
    insurmountable. Incidentally, they're marginally useful for non-pirate
    players too, since they're located closer to the centers of their
    respective systems.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added expensive minerals to more asteroid fields.
    
    There were a bunch that *only* had ore, so I changed that. All
    fields now have at least two kinds of commodities that can be
    extracted, making the Asteroid Scanner more useful and the mining
    experience a bit more dynamic in these systems.
    added more types of asteroids
    apply suppression of standard commodities in asset definition
    Added miner presence to several areas.
    Added some more asteroid fields.
    
    I have a couple criteria for where I place an asteroid field:
    
    1. It must be in a location with pirates (to keep mining a bit interesting).
    2. It should make use of an otherwise useless system.
    3. Thurion space is an exception to this rule, but putting asteroids
       in unstable nebula systems is a must.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Made Thurion invisible by default, reveal them with FLF Catastrophe event.
    
    This change causes most Thurion assets to not exist on the map at first,
    and it causes the Thurion core systems (the only ones not hidden by
    default) to be behind a hidden jump. This ensures that the Thurion
    cannot be discovered until a mission or event has designated them as
    revealed, similar to Sindbad.
    
    This commit also includes adding such a reveal to the FLF Catastrophe
    event, which includes a bunch of new dialog explaining to the player
    who the Thurion are and pointing out that a Thurion ship is needed to
    safely traverse the nebula.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added two new independent stations between Teller and other Pirate strongholds.
    
    These stations are designed to mainly be refueling stops for pirate
    aligned players, since without them the journey to Teller is nearly
    insurmountable. Incidentally, they're marginally useful for non-pirate
    players too, since they're located closer to the centers of their
    respective systems.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    commiting more changes, made zalek dark red cause it fit better than purple
    Removed unused Zalek assets, made dat changes for zalek personaility, and assets
    Vengeance now armorbreaker, added dome Zlk assets, tweaked others
    zalek ships and further map fixes
    * Areze's initial work on Za'lek space.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    major zalek update
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Vengeance now armorbreaker, added dome Zlk assets, tweaked others
    Slightly better integration of the new factions into the galaxy map.
    
      - Those are minor modifications. The most important of them is likely
        the addition of two jump points from Pirate space to Za'lek space.
      - A few systems have been added near Protera, which has itself been
        moved. Much more work is to be done on Proteron.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    Made Thurion invisible by default, reveal them with FLF Catastrophe event.
    
    This change causes most Thurion assets to not exist on the map at first,
    and it causes the Thurion core systems (the only ones not hidden by
    default) to be behind a hidden jump. This ensures that the Thurion
    cannot be discovered until a mission or event has designated them as
    revealed, similar to Sindbad.
    
    This commit also includes adding such a reveal to the FLF Catastrophe
    event, which includes a bunch of new dialog explaining to the player
    who the Thurion are and pointing out that a Thurion ship is needed to
    safely traverse the nebula.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    Added expensive minerals to more asteroid fields.
    
    There were a bunch that *only* had ore, so I changed that. All
    fields now have at least two kinds of commodities that can be
    extracted, making the Asteroid Scanner more useful and the mining
    experience a bit more dynamic in these systems.
    apply suppression of standard commodities in asset definition
    Added several more asteroid fields, including asteroid rings around some planets.
    
    Asteroid rings are found around Gammacron IV and Nougat I.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    added more types of asteroids
    apply suppression of standard commodities in asset definition
    Added miner presence to several areas.
    Added several more asteroid fields, including asteroid rings around some planets.
    
    Asteroid rings are found around Gammacron IV and Nougat I.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    Added a small invisible "Proteron Dissident" faction.
    
    This is a faction which appears rarely in Proteron systems which looks
    identical to the Civilian faction, but which the Proteron are enemies
    with. Enables hunting down dissidents through the Patrol mission, and
    will enable a modified bounty hunt for dissidents.
    More proteron
    
    Just one more system
    More Proteron stuff
    More Proteron stuff.
    
    Also fixed a misalignment with the description and reality of the
    Kahan by making its weapons heavy rather than medium (otherwise the
    Pacifier would just be better than it in that regard).
    Started adding more systems and assets for the Proteron.
    
    I've added in all the systems that I want to, but not all the assets.
    All but one of these systems will have one or two assets added to them
    later; I'm just not doing it right now because I'm tired and it's late.
    
    I also modified Protera Sigma to not offer Proteron ships, instead
    offloading that task to a Proteron station with a military restriction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Move a number of assets and jumps closer to system centers
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Move pirate presences away from highway systems
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    commiting more changes, made zalek dark red cause it fit better than purple
    zalek ships and further map fixes
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Fixed jumps to the renamed Valt system.
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Qorel Expanse added.
    
      - It is a set of pirate systems and stations in the empty space between the
        Empire and the Dvaered allowing a safe^Wpossible route between Vorca and
        New Haven.
      - The map containing the position of the entry and exit points has to
        be bought, and it’s currently a bit expensive if you are begining
        the game, though the pirate missions are at the same time very
        lucrative… (maybe a bit much?)
      - It could be seen as a test to know whether or not other “expanses”
        should be added in the other empty spaces between other factions,
        but IMHO, it makes playing pirate a bit easier. Without that, you
        could not play purely pirate and would have to be allied with at
        least one or two factions (and one of them has to be the Dvaered…)
        to only be able to move through the galaxy…
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    major zalek update
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Qorel Expanse added.
    
      - It is a set of pirate systems and stations in the empty space between the
        Empire and the Dvaered allowing a safe^Wpossible route between Vorca and
        New Haven.
      - The map containing the position of the entry and exit points has to
        be bought, and it’s currently a bit expensive if you are begining
        the game, though the pirate missions are at the same time very
        lucrative… (maybe a bit much?)
      - It could be seen as a test to know whether or not other “expanses”
        should be added in the other empty spaces between other factions,
        but IMHO, it makes playing pirate a bit easier. Without that, you
        could not play purely pirate and would have to be allied with at
        least one or two factions (and one of them has to be the Dvaered…)
        to only be able to move through the galaxy…
    zalek ships and further map fixes
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Move a number of assets and jumps closer to system centers
    Added hidden jump points for the FLF.
    
    There's a problem with the previous setup: the FLF is in a position
    that makes what they do impractical at best. As a player, you have
    to either have an unreasonably large fuel tank, or land on the
    planets of your enemies. This has been remedied by adding hidden
    jump points that allow FLF ships to get almost anywhere they would
    like within two jumps of a non-enemy planet, and within three jumps
    for deeper parts of Dvaered space. Also, it's now possible to go
    from the FLF base to the Frontier and back without entering Dvaered
    space at all.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    major zalek update
    Removed unused Zalek assets, made dat changes for zalek personaility, and assets
    Vengeance now armorbreaker, added dome Zlk assets, tweaked others
    zalek ships and further map fixes
    * Force-merged Za'lek space from expand branch.
    * Areze's initial work on Za'lek space.
    More work on the Proteron systems.
    Started adding more systems and assets for the Proteron.
    
    I've added in all the systems that I want to, but not all the assets.
    All but one of these systems will have one or two assets added to them
    later; I'm just not doing it right now because I'm tired and it's late.
    
    I also modified Protera Sigma to not offer Proteron ships, instead
    offloading that task to a Proteron station with a military restriction.
    Slightly better integration of the new factions into the galaxy map.
    
      - Those are minor modifications. The most important of them is likely
        the addition of two jump points from Pirate space to Za'lek space.
      - A few systems have been added near Protera, which has itself been
        moved. Much more work is to be done on Proteron.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    Move pirate presences away from highway systems
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Move pirate presences away from highway systems
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    commiting more changes, made zalek dark red cause it fit better than purple
    Removed unused Zalek assets, made dat changes for zalek personaility, and assets
    Vengeance now armorbreaker, added dome Zlk assets, tweaked others
    * Force-merged Za'lek space from expand branch.
    * Areze's initial work on Za'lek space.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Move pirate presences away from highway systems
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Qorel Expanse added.
    
      - It is a set of pirate systems and stations in the empty space between the
        Empire and the Dvaered allowing a safe^Wpossible route between Vorca and
        New Haven.
      - The map containing the position of the entry and exit points has to
        be bought, and it’s currently a bit expensive if you are begining
        the game, though the pirate missions are at the same time very
        lucrative… (maybe a bit much?)
      - It could be seen as a test to know whether or not other “expanses”
        should be added in the other empty spaces between other factions,
        but IMHO, it makes playing pirate a bit easier. Without that, you
        could not play purely pirate and would have to be allied with at
        least one or two factions (and one of them has to be the Dvaered…)
        to only be able to move through the galaxy…
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Move pirate presences away from highway systems
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Qorel Expanse added.
    
      - It is a set of pirate systems and stations in the empty space between the
        Empire and the Dvaered allowing a safe^Wpossible route between Vorca and
        New Haven.
      - The map containing the position of the entry and exit points has to
        be bought, and it’s currently a bit expensive if you are begining
        the game, though the pirate missions are at the same time very
        lucrative… (maybe a bit much?)
      - It could be seen as a test to know whether or not other “expanses”
        should be added in the other empty spaces between other factions,
        but IMHO, it makes playing pirate a bit easier. Without that, you
        could not play purely pirate and would have to be allied with at
        least one or two factions (and one of them has to be the Dvaered…)
        to only be able to move through the galaxy…
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    commiting more changes, made zalek dark red cause it fit better than purple
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    added more types of asteroids
    apply suppression of standard commodities in asset definition
    Added several more asteroid fields, including asteroid rings around some planets.
    
    Asteroid rings are found around Gammacron IV and Nougat I.
    Move pirate presences away from highway systems
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    major zalek update
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    Move pirate presences away from highway systems
    Remove virtual Za'lek presences frm Ruadan and reduce its asset presences
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    commiting more changes, made zalek dark red cause it fit better than purple
    zalek ships and further map fixes
    * Force-merged Za'lek space from expand branch.
    * Areze's initial work on Za'lek space.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    commiting more changes, made zalek dark red cause it fit better than purple
    zalek ships and further map fixes
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Added hidden jump points for the FLF.
    
    There's a problem with the previous setup: the FLF is in a position
    that makes what they do impractical at best. As a player, you have
    to either have an unreasonably large fuel tank, or land on the
    planets of your enemies. This has been remedied by adding hidden
    jump points that allow FLF ships to get almost anywhere they would
    like within two jumps of a non-enemy planet, and within three jumps
    for deeper parts of Dvaered space. Also, it's now possible to go
    from the FLF base to the Frontier and back without entering Dvaered
    space at all.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    commiting more changes, made zalek dark red cause it fit better than purple
    Removed unused Zalek assets, made dat changes for zalek personaility, and assets
    * Force-merged Za'lek space from expand branch.
    * Areze's initial work on Za'lek space.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    major zalek update
    commiting more changes, made zalek dark red cause it fit better than purple
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Move pirate presences away from highway systems
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Qorel Expanse added.
    
      - It is a set of pirate systems and stations in the empty space between the
        Empire and the Dvaered allowing a safe^Wpossible route between Vorca and
        New Haven.
      - The map containing the position of the entry and exit points has to
        be bought, and it’s currently a bit expensive if you are begining
        the game, though the pirate missions are at the same time very
        lucrative… (maybe a bit much?)
      - It could be seen as a test to know whether or not other “expanses”
        should be added in the other empty spaces between other factions,
        but IMHO, it makes playing pirate a bit easier. Without that, you
        could not play purely pirate and would have to be allied with at
        least one or two factions (and one of them has to be the Dvaered…)
        to only be able to move through the galaxy…
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Qorel Expanse added.
    
      - It is a set of pirate systems and stations in the empty space between the
        Empire and the Dvaered allowing a safe^Wpossible route between Vorca and
        New Haven.
      - The map containing the position of the entry and exit points has to
        be bought, and it’s currently a bit expensive if you are begining
        the game, though the pirate missions are at the same time very
        lucrative… (maybe a bit much?)
      - It could be seen as a test to know whether or not other “expanses”
        should be added in the other empty spaces between other factions,
        but IMHO, it makes playing pirate a bit easier. Without that, you
        could not play purely pirate and would have to be allied with at
        least one or two factions (and one of them has to be the Dvaered…)
        to only be able to move through the galaxy…
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    Swap the positions of Sollav and Pultatis
    commiting more changes, made zalek dark red cause it fit better than purple
    zalek ships and further map fixes
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Move pirate presences away from highway systems
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    Swap the positions of Sollav and Pultatis
    commiting more changes, made zalek dark red cause it fit better than purple
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added expensive minerals to more asteroid fields.
    
    There were a bunch that *only* had ore, so I changed that. All
    fields now have at least two kinds of commodities that can be
    extracted, making the Asteroid Scanner more useful and the mining
    experience a bit more dynamic in these systems.
    apply suppression of standard commodities in asset definition
    Added some more asteroid fields.
    
    I have a couple criteria for where I place an asteroid field:
    
    1. It must be in a location with pirates (to keep mining a bit interesting).
    2. It should make use of an otherwise useless system.
    3. Thurion space is an exception to this rule, but putting asteroids
       in unstable nebula systems is a must.
    Made Thurion invisible by default, reveal them with FLF Catastrophe event.
    
    This change causes most Thurion assets to not exist on the map at first,
    and it causes the Thurion core systems (the only ones not hidden by
    default) to be behind a hidden jump. This ensures that the Thurion
    cannot be discovered until a mission or event has designated them as
    revealed, similar to Sindbad.
    
    This commit also includes adding such a reveal to the FLF Catastrophe
    event, which includes a bunch of new dialog explaining to the player
    who the Thurion are and pointing out that a Thurion ship is needed to
    safely traverse the nebula.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    Move pirate presences away from highway systems
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    remove capitals and spaces from data files
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Maintain the Fidelis - Eye of Night link to preserve lore
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    major zalek update
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    More Proteron stuff.
    
    Also fixed a misalignment with the description and reality of the
    Kahan by making its weapons heavy rather than medium (otherwise the
    Pacifier would just be better than it in that regard).
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    * Added missing jumps.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    More work on the Proteron systems.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Maintain the Fidelis - Eye of Night link to preserve lore
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    commiting more changes, made zalek dark red cause it fit better than purple
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    commiting more changes, made zalek dark red cause it fit better than purple
    zalek ships and further map fixes
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Qorel Expanse added.
    
      - It is a set of pirate systems and stations in the empty space between the
        Empire and the Dvaered allowing a safe^Wpossible route between Vorca and
        New Haven.
      - The map containing the position of the entry and exit points has to
        be bought, and it’s currently a bit expensive if you are begining
        the game, though the pirate missions are at the same time very
        lucrative… (maybe a bit much?)
      - It could be seen as a test to know whether or not other “expanses”
        should be added in the other empty spaces between other factions,
        but IMHO, it makes playing pirate a bit easier. Without that, you
        could not play purely pirate and would have to be allied with at
        least one or two factions (and one of them has to be the Dvaered…)
        to only be able to move through the galaxy…
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Relocate Zied further south so that it doesn't overlap any jumps
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Qorel Expanse added.
    
      - It is a set of pirate systems and stations in the empty space between the
        Empire and the Dvaered allowing a safe^Wpossible route between Vorca and
        New Haven.
      - The map containing the position of the entry and exit points has to
        be bought, and it’s currently a bit expensive if you are begining
        the game, though the pirate missions are at the same time very
        lucrative… (maybe a bit much?)
      - It could be seen as a test to know whether or not other “expanses”
        should be added in the other empty spaces between other factions,
        but IMHO, it makes playing pirate a bit easier. Without that, you
        could not play purely pirate and would have to be allied with at
        least one or two factions (and one of them has to be the Dvaered…)
        to only be able to move through the galaxy…
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    commiting more changes, made zalek dark red cause it fit better than purple
    Vengeance now armorbreaker, added dome Zlk assets, tweaked others
    zalek ships and further map fixes
    * Areze's initial work on Za'lek space.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    Swap the positions of Sollav and Pultatis
    major zalek update
    commiting more changes, made zalek dark red cause it fit better than purple
    Vengeance now armorbreaker, added dome Zlk assets, tweaked others
    zalek ships and further map fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added Virtual Thurion Local assets to inter-Thurion Nebula systems.
    
    These assets add a tiny presence (10) to these systems, causing
    Thurion music to be played and also making these systems seem less
    empty.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Move pirate presences away from highway systems
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    * Added more systems and planets to the galaxy. Areze helped.
    Made Capricorn less of a death trap (bit of Empire presence and a second jump.)
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added more systems and planets to the galaxy. Areze helped.
    major zalek update
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Qorel Expanse added.
    
      - It is a set of pirate systems and stations in the empty space between the
        Empire and the Dvaered allowing a safe^Wpossible route between Vorca and
        New Haven.
      - The map containing the position of the entry and exit points has to
        be bought, and it’s currently a bit expensive if you are begining
        the game, though the pirate missions are at the same time very
        lucrative… (maybe a bit much?)
      - It could be seen as a test to know whether or not other “expanses”
        should be added in the other empty spaces between other factions,
        but IMHO, it makes playing pirate a bit easier. Without that, you
        could not play purely pirate and would have to be allied with at
        least one or two factions (and one of them has to be the Dvaered…)
        to only be able to move through the galaxy…
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Maintain the Fidelis - Eye of Night link to preserve lore
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Made Thurion invisible by default, reveal them with FLF Catastrophe event.
    
    This change causes most Thurion assets to not exist on the map at first,
    and it causes the Thurion core systems (the only ones not hidden by
    default) to be behind a hidden jump. This ensures that the Thurion
    cannot be discovered until a mission or event has designated them as
    revealed, similar to Sindbad.
    
    This commit also includes adding such a reveal to the FLF Catastrophe
    event, which includes a bunch of new dialog explaining to the player
    who the Thurion are and pointing out that a Thurion ship is needed to
    safely traverse the nebula.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Qorel Expanse added.
    
      - It is a set of pirate systems and stations in the empty space between the
        Empire and the Dvaered allowing a safe^Wpossible route between Vorca and
        New Haven.
      - The map containing the position of the entry and exit points has to
        be bought, and it’s currently a bit expensive if you are begining
        the game, though the pirate missions are at the same time very
        lucrative… (maybe a bit much?)
      - It could be seen as a test to know whether or not other “expanses”
        should be added in the other empty spaces between other factions,
        but IMHO, it makes playing pirate a bit easier. Without that, you
        could not play purely pirate and would have to be allied with at
        least one or two factions (and one of them has to be the Dvaered…)
        to only be able to move through the galaxy…
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    * Minor edit to Thurion space reflecting discussions between me and azar_wolf.
    ** Hidden jump leading from Iris, facilitating "ghost ship" scenario.
    ** Sol cannot be bypassed, barring the route from Iris.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    Maintain the Fidelis - Eye of Night link to preserve lore
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Move pirate presences away from highway systems
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Minor edit to Thurion space reflecting discussions between me and azar_wolf.
    ** Hidden jump leading from Iris, facilitating "ghost ship" scenario.
    ** Sol cannot be bypassed, barring the route from Iris.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    remove capitals and spaces from data files
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    commiting more changes, made zalek dark red cause it fit better than purple
    zalek ships and further map fixes
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added a small invisible "Proteron Dissident" faction.
    
    This is a faction which appears rarely in Proteron systems which looks
    identical to the Civilian faction, but which the Proteron are enemies
    with. Enables hunting down dissidents through the Patrol mission, and
    will enable a modified bounty hunt for dissidents.
    More Proteron stuff
    More Proteron stuff.
    
    Also fixed a misalignment with the description and reality of the
    Kahan by making its weapons heavy rather than medium (otherwise the
    Pacifier would just be better than it in that regard).
    Started adding more systems and assets for the Proteron.
    
    I've added in all the systems that I want to, but not all the assets.
    All but one of these systems will have one or two assets added to them
    later; I'm just not doing it right now because I'm tired and it's late.
    
    I also modified Protera Sigma to not offer Proteron ships, instead
    offloading that task to a Proteron station with a military restriction.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    commiting more changes, made zalek dark red cause it fit better than purple
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Maintain the Fidelis - Eye of Night link to preserve lore
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Qorel Expanse added.
    
      - It is a set of pirate systems and stations in the empty space between the
        Empire and the Dvaered allowing a safe^Wpossible route between Vorca and
        New Haven.
      - The map containing the position of the entry and exit points has to
        be bought, and it’s currently a bit expensive if you are begining
        the game, though the pirate missions are at the same time very
        lucrative… (maybe a bit much?)
      - It could be seen as a test to know whether or not other “expanses”
        should be added in the other empty spaces between other factions,
        but IMHO, it makes playing pirate a bit easier. Without that, you
        could not play purely pirate and would have to be allied with at
        least one or two factions (and one of them has to be the Dvaered…)
        to only be able to move through the galaxy…
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Qorel Expanse added.
    
      - It is a set of pirate systems and stations in the empty space between the
        Empire and the Dvaered allowing a safe^Wpossible route between Vorca and
        New Haven.
      - The map containing the position of the entry and exit points has to
        be bought, and it’s currently a bit expensive if you are begining
        the game, though the pirate missions are at the same time very
        lucrative… (maybe a bit much?)
      - It could be seen as a test to know whether or not other “expanses”
        should be added in the other empty spaces between other factions,
        but IMHO, it makes playing pirate a bit easier. Without that, you
        could not play purely pirate and would have to be allied with at
        least one or two factions (and one of them has to be the Dvaered…)
        to only be able to move through the galaxy…
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added more systems and planets to the galaxy. Areze helped.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added expensive minerals to more asteroid fields.
    
    There were a bunch that *only* had ore, so I changed that. All
    fields now have at least two kinds of commodities that can be
    extracted, making the Asteroid Scanner more useful and the mining
    experience a bit more dynamic in these systems.
    apply suppression of standard commodities in asset definition
    Added miner presence to several areas.
    Added several more asteroid fields, including asteroid rings around some planets.
    
    Asteroid rings are found around Gammacron IV and Nougat I.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Changed the visibility of some FLF jump points.
    
    It seems like they should match the other jump points in the area,
    so I did that.
    Added hidden jump points for the FLF.
    
    There's a problem with the previous setup: the FLF is in a position
    that makes what they do impractical at best. As a player, you have
    to either have an unreasonably large fuel tank, or land on the
    planets of your enemies. This has been remedied by adding hidden
    jump points that allow FLF ships to get almost anywhere they would
    like within two jumps of a non-enemy planet, and within three jumps
    for deeper parts of Dvaered space. Also, it's now possible to go
    from the FLF base to the Frontier and back without entering Dvaered
    space at all.
    reverting some changes I never meant to do
    Many more fixes to the anxious merchant but also a few others (and probably more to come)
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    remove capitals and spaces from data files
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Maintain the Fidelis - Eye of Night link to preserve lore
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Made Thurion invisible by default, reveal them with FLF Catastrophe event.
    
    This change causes most Thurion assets to not exist on the map at first,
    and it causes the Thurion core systems (the only ones not hidden by
    default) to be behind a hidden jump. This ensures that the Thurion
    cannot be discovered until a mission or event has designated them as
    revealed, similar to Sindbad.
    
    This commit also includes adding such a reveal to the FLF Catastrophe
    event, which includes a bunch of new dialog explaining to the player
    who the Thurion are and pointing out that a Thurion ship is needed to
    safely traverse the nebula.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Qorel Expanse added.
    
      - It is a set of pirate systems and stations in the empty space between the
        Empire and the Dvaered allowing a safe^Wpossible route between Vorca and
        New Haven.
      - The map containing the position of the entry and exit points has to
        be bought, and it’s currently a bit expensive if you are begining
        the game, though the pirate missions are at the same time very
        lucrative… (maybe a bit much?)
      - It could be seen as a test to know whether or not other “expanses”
        should be added in the other empty spaces between other factions,
        but IMHO, it makes playing pirate a bit easier. Without that, you
        could not play purely pirate and would have to be allied with at
        least one or two factions (and one of them has to be the Dvaered…)
        to only be able to move through the galaxy…
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Move pirate presences away from highway systems
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Made Thurion invisible by default, reveal them with FLF Catastrophe event.
    
    This change causes most Thurion assets to not exist on the map at first,
    and it causes the Thurion core systems (the only ones not hidden by
    default) to be behind a hidden jump. This ensures that the Thurion
    cannot be discovered until a mission or event has designated them as
    revealed, similar to Sindbad.
    
    This commit also includes adding such a reveal to the FLF Catastrophe
    event, which includes a bunch of new dialog explaining to the player
    who the Thurion are and pointing out that a Thurion ship is needed to
    safely traverse the nebula.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Add some hidden jump points south of Dvaered space
    
    The existing hidden jumps provide no shortcut; they are the same number
    of jumps as going through normal jumps. It seems they could serve as a
    way to bypass Dvaered space, and these extra jumps help with that. It is
    still necessary to pass through one Dvaered system (Amaroq) and the
    systems all have a Dvaered presence, but this makes it at least a bit
    more realistic for an enemy of the Dvaered, knowing these jumps, to get
    between Za'lek and Sirius space.
    Maintain the Fidelis - Eye of Night link to preserve lore
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    * Added more systems and planets to the galaxy. Areze helped.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    Renamed Valt system; name was the same as Valt, Tarsus.
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    commiting more changes, made zalek dark red cause it fit better than purple
    * Force-merged Za'lek space from expand branch.
    * Areze's initial work on Za'lek space.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    major zalek update
    commiting more changes, made zalek dark red cause it fit better than purple
    Removed unused Zalek assets, made dat changes for zalek personaility, and assets
    Vengeance now armorbreaker, added dome Zlk assets, tweaked others
    zalek ships and further map fixes
    * Areze's initial work on Za'lek space.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Add a hidden jump between fried and effetey, and add to qorel map
    
    It is currently hard for a pirate to get between Kretogg and the Qorel
    expanse. This helps to bypass the worst two systems, with significant
    Za'lek, Dvaered, and Empire presence
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    Qorel Expanse added.
    
      - It is a set of pirate systems and stations in the empty space between the
        Empire and the Dvaered allowing a safe^Wpossible route between Vorca and
        New Haven.
      - The map containing the position of the entry and exit points has to
        be bought, and it’s currently a bit expensive if you are begining
        the game, though the pirate missions are at the same time very
        lucrative… (maybe a bit much?)
      - It could be seen as a test to know whether or not other “expanses”
        should be added in the other empty spaces between other factions,
        but IMHO, it makes playing pirate a bit easier. Without that, you
        could not play purely pirate and would have to be allied with at
        least one or two factions (and one of them has to be the Dvaered…)
        to only be able to move through the galaxy…
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Descriptions for a few planets lacking them.
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Move pirate presences away from highway systems
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    remove capitals and spaces from data files
    * Regenerated more jumps.
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Add Sormoid unpresence to New Haven
    Move a number of assets and jumps closer to system centers
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    zalek ships and further map fixes
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    commiting more changes, made zalek dark red cause it fit better than purple
    Slightly better integration of the new factions into the galaxy map.
    
      - Those are minor modifications. The most important of them is likely
        the addition of two jump points from Pirate space to Za'lek space.
      - A few systems have been added near Protera, which has itself been
        moved. Much more work is to be done on Proteron.
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Add a hidden jump between fried and effetey, and add to qorel map
    
    It is currently hard for a pirate to get between Kretogg and the Qorel
    expanse. This helps to bypass the worst two systems, with significant
    Za'lek, Dvaered, and Empire presence
    Move pirate presences away from highway systems
    Swap the positions of Sollav and Pultatis
    major zalek update
    commiting more changes, made zalek dark red cause it fit better than purple
    zalek ships and further map fixes
    * Added more systems and planets to the galaxy. Areze helped.
    * Areze's initial work on Za'lek space.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Added a small invisible "Proteron Dissident" faction.
    
    This is a faction which appears rarely in Proteron systems which looks
    identical to the Civilian faction, but which the Proteron are enemies
    with. Enables hunting down dissidents through the Patrol mission, and
    will enable a modified bounty hunt for dissidents.
    More work on the Proteron systems.
    More Proteron stuff
    More Proteron stuff.
    
    Also fixed a misalignment with the description and reality of the
    Kahan by making its weapons heavy rather than medium (otherwise the
    Pacifier would just be better than it in that regard).
    Started adding more systems and assets for the Proteron.
    
    I've added in all the systems that I want to, but not all the assets.
    All but one of these systems will have one or two assets added to them
    later; I'm just not doing it right now because I'm tired and it's late.
    
    I also modified Protera Sigma to not offer Proteron ships, instead
    offloading that task to a Proteron station with a military restriction.
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added another two-way hidden FLF jump point.
    
    This makes it easier for an FLF-aligned player to get around. There
    are now two viable options to Frontier space: the old way through
    Ingot, and a new way through Myad which avoids most Dvaered space.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    remove capitals and spaces from data files
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added a small invisible "Proteron Dissident" faction.
    
    This is a faction which appears rarely in Proteron systems which looks
    identical to the Civilian faction, but which the Proteron are enemies
    with. Enables hunting down dissidents through the Patrol mission, and
    will enable a modified bounty hunt for dissidents.
    More Proteron stuff
    More Proteron stuff.
    
    Also fixed a misalignment with the description and reality of the
    Kahan by making its weapons heavy rather than medium (otherwise the
    Pacifier would just be better than it in that regard).
    Started adding more systems and assets for the Proteron.
    
    I've added in all the systems that I want to, but not all the assets.
    All but one of these systems will have one or two assets added to them
    later; I'm just not doing it right now because I'm tired and it's late.
    
    I also modified Protera Sigma to not offer Proteron ships, instead
    offloading that task to a Proteron station with a military restriction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added a note on new game creation about the incompleteness of the game.
    
    This is just a message shown at the start of a new game letting the
    player know that the game is incomplete.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Maintain the Fidelis - Eye of Night link to preserve lore
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    remove capitals and spaces from data files
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    commiting more changes, made zalek dark red cause it fit better than purple
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added expensive minerals to more asteroid fields.
    
    There were a bunch that *only* had ore, so I changed that. All
    fields now have at least two kinds of commodities that can be
    extracted, making the Asteroid Scanner more useful and the mining
    experience a bit more dynamic in these systems.
    apply suppression of standard commodities in asset definition
    Replaced the polygon definition of asteroid fields with simple circles.
    
    I kind of get why it was implemented that way: you can define all kinds
    of wacky shapes real easily. But in the vast majority of cases don't
    need that, and it makes defining asteroid fields needlessly complicated.
    In the few cases where complicated shapes might be needed, it's easy
    enough to approximate shapes with a series of circles.
    
    The code is much simpler, too.
    
    Display in the map editor has been removed at least temporarily.
    Hopefully should add it back in later.
    Made required changes
    corrected a crash, added radar display of asteroids and display on map editor
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Qorel Expanse added.
    
      - It is a set of pirate systems and stations in the empty space between the
        Empire and the Dvaered allowing a safe^Wpossible route between Vorca and
        New Haven.
      - The map containing the position of the entry and exit points has to
        be bought, and it’s currently a bit expensive if you are begining
        the game, though the pirate missions are at the same time very
        lucrative… (maybe a bit much?)
      - It could be seen as a test to know whether or not other “expanses”
        should be added in the other empty spaces between other factions,
        but IMHO, it makes playing pirate a bit easier. Without that, you
        could not play purely pirate and would have to be allied with at
        least one or two factions (and one of them has to be the Dvaered…)
        to only be able to move through the galaxy…
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    commiting more changes, made zalek dark red cause it fit better than purple
    Removed unused Zalek assets, made dat changes for zalek personaility, and assets
    Vengeance now armorbreaker, added dome Zlk assets, tweaked others
    zalek ships and further map fixes
    * Force-merged Za'lek space from expand branch.
    * Areze's initial work on Za'lek space.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Add some hidden jump points south of Dvaered space
    
    The existing hidden jumps provide no shortcut; they are the same number
    of jumps as going through normal jumps. It seems they could serve as a
    way to bypass Dvaered space, and these extra jumps help with that. It is
    still necessary to pass through one Dvaered system (Amaroq) and the
    systems all have a Dvaered presence, but this makes it at least a bit
    more realistic for an enemy of the Dvaered, knowing these jumps, to get
    between Za'lek and Sirius space.
    Maintain the Fidelis - Eye of Night link to preserve lore
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Made Thurion invisible by default, reveal them with FLF Catastrophe event.
    
    This change causes most Thurion assets to not exist on the map at first,
    and it causes the Thurion core systems (the only ones not hidden by
    default) to be behind a hidden jump. This ensures that the Thurion
    cannot be discovered until a mission or event has designated them as
    revealed, similar to Sindbad.
    
    This commit also includes adding such a reveal to the FLF Catastrophe
    event, which includes a bunch of new dialog explaining to the player
    who the Thurion are and pointing out that a Thurion ship is needed to
    safely traverse the nebula.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    remove capitals and spaces from data files
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Move pirate presences away from highway systems
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Borla->Merisi jump is now hidden.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    major zalek update
    commiting more changes, made zalek dark red cause it fit better than purple
    zalek ships and further map fixes
    * Force-merged Za'lek space from expand branch.
    * Areze's initial work on Za'lek space.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Relocate Zied further south so that it doesn't overlap any jumps
    * Added more systems and planets to the galaxy. Areze helped.
    Various spelling and grammar fixes.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Qorel Expanse added.
    
      - It is a set of pirate systems and stations in the empty space between the
        Empire and the Dvaered allowing a safe^Wpossible route between Vorca and
        New Haven.
      - The map containing the position of the entry and exit points has to
        be bought, and it’s currently a bit expensive if you are begining
        the game, though the pirate missions are at the same time very
        lucrative… (maybe a bit much?)
      - It could be seen as a test to know whether or not other “expanses”
        should be added in the other empty spaces between other factions,
        but IMHO, it makes playing pirate a bit easier. Without that, you
        could not play purely pirate and would have to be allied with at
        least one or two factions (and one of them has to be the Dvaered…)
        to only be able to move through the galaxy…
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Maintain the Fidelis - Eye of Night link to preserve lore
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added expensive minerals to more asteroid fields.
    
    There were a bunch that *only* had ore, so I changed that. All
    fields now have at least two kinds of commodities that can be
    extracted, making the Asteroid Scanner more useful and the mining
    experience a bit more dynamic in these systems.
    apply suppression of standard commodities in asset definition
    Added miner presence to several areas.
    Added some more asteroid fields.
    
    I have a couple criteria for where I place an asteroid field:
    
    1. It must be in a location with pirates (to keep mining a bit interesting).
    2. It should make use of an otherwise useless system.
    3. Thurion space is an exception to this rule, but putting asteroids
       in unstable nebula systems is a must.
    Move pirate presences away from highway systems
    Purged four uninhabited systems that were overlapping more useful ones
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Regenerated more jumps.
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Swap the positions of Sollav and Pultatis
    commiting more changes, made zalek dark red cause it fit better than purple
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    added more types of asteroids
    apply suppression of standard commodities in asset definition
    Replaced the polygon definition of asteroid fields with simple circles.
    
    I kind of get why it was implemented that way: you can define all kinds
    of wacky shapes real easily. But in the vast majority of cases don't
    need that, and it makes defining asteroid fields needlessly complicated.
    In the few cases where complicated shapes might be needed, it's easy
    enough to approximate shapes with a series of circles.
    
    The code is much simpler, too.
    
    Display in the map editor has been removed at least temporarily.
    Hopefully should add it back in later.
    added the miners faction
    Undid unintentional changes to Zied.
    Added FLF Pirate Alliance mission (flf_dvk02).
    Enabled mining and added variety to the fields
    Made required changes
    added graphical variation among asteroids
    added decorative asteroids
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    Relocate Zied further south so that it doesn't overlap any jumps
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Add some hidden jump points south of Dvaered space
    
    The existing hidden jumps provide no shortcut; they are the same number
    of jumps as going through normal jumps. It seems they could serve as a
    way to bypass Dvaered space, and these extra jumps help with that. It is
    still necessary to pass through one Dvaered system (Amaroq) and the
    systems all have a Dvaered presence, but this makes it at least a bit
    more realistic for an enemy of the Dvaered, knowing these jumps, to get
    between Za'lek and Sirius space.
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed unused Zalek assets, made dat changes for zalek personaility, and assets
    Vengeance now armorbreaker, added dome Zlk assets, tweaked others
    zalek ships and further map fixes
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added expensive minerals to more asteroid fields.
    
    There were a bunch that *only* had ore, so I changed that. All
    fields now have at least two kinds of commodities that can be
    extracted, making the Asteroid Scanner more useful and the mining
    experience a bit more dynamic in these systems.
    added more types of asteroids
    apply suppression of standard commodities in asset definition
    Added some more asteroid fields.
    
    I have a couple criteria for where I place an asteroid field:
    
    1. It must be in a location with pirates (to keep mining a bit interesting).
    2. It should make use of an otherwise useless system.
    3. Thurion space is an exception to this rule, but putting asteroids
       in unstable nebula systems is a must.
    Made Thurion invisible by default, reveal them with FLF Catastrophe event.
    
    This change causes most Thurion assets to not exist on the map at first,
    and it causes the Thurion core systems (the only ones not hidden by
    default) to be behind a hidden jump. This ensures that the Thurion
    cannot be discovered until a mission or event has designated them as
    revealed, similar to Sindbad.
    
    This commit also includes adding such a reveal to the FLF Catastrophe
    event, which includes a bunch of new dialog explaining to the player
    who the Thurion are and pointing out that a Thurion ship is needed to
    safely traverse the nebula.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Maintain the Fidelis - Eye of Night link to preserve lore
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added miner presence to several areas.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    added more types of asteroids
    apply suppression of standard commodities in asset definition
    Added miner presence to several areas.
    Added several more asteroid fields, including asteroid rings around some planets.
    
    Asteroid rings are found around Gammacron IV and Nougat I.
    Move pirate presences away from highway systems
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    remove capitals and spaces from data files
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    Removed unused Zalek assets, made dat changes for zalek personaility, and assets
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Maintain the Fidelis - Eye of Night link to preserve lore
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    Swap the positions of Sollav and Pultatis
    major zalek update
    Removed unused Zalek assets, made dat changes for zalek personaility, and assets
    zalek ships and further map fixes
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    added more types of asteroids
    apply suppression of standard commodities in asset definition
    Added miner presence to several areas.
    Added several more asteroid fields, including asteroid rings around some planets.
    
    Asteroid rings are found around Gammacron IV and Nougat I.
    Relocate Zied further south so that it doesn't overlap any jumps
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    Made Capricorn less of a death trap (bit of Empire presence and a second jump.)
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added several secret jumps to the galaxy. No way to find them without cheating yet, sorry.
    * CONVENTION: All secret jumps have a hide factor of 1.0. Secret jump detection isn't affected by system interference.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Made Thurion invisible by default, reveal them with FLF Catastrophe event.
    
    This change causes most Thurion assets to not exist on the map at first,
    and it causes the Thurion core systems (the only ones not hidden by
    default) to be behind a hidden jump. This ensures that the Thurion
    cannot be discovered until a mission or event has designated them as
    revealed, similar to Sindbad.
    
    This commit also includes adding such a reveal to the FLF Catastrophe
    event, which includes a bunch of new dialog explaining to the player
    who the Thurion are and pointing out that a Thurion ship is needed to
    safely traverse the nebula.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    commiting more changes, made zalek dark red cause it fit better than purple
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Tweaked various systems' interference values
    
    Among the systems that had them, they're mostly lower, to avoid halving
    sensor range (or worse). Interference at varying intensities has also
    been seeded throughout most of the Thurion systems.
    reverting a change I never meant to do
    reverting some changes I never meant to do
    Many more fixes to the anxious merchant but also a few others (and probably more to come)
    * Minor edit to Thurion space reflecting discussions between me and azar_wolf.
    ** Hidden jump leading from Iris, facilitating "ghost ship" scenario.
    ** Sol cannot be bypassed, barring the route from Iris.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    remove capitals and spaces from data files
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Added a small invisible "Proteron Dissident" faction.
    
    This is a faction which appears rarely in Proteron systems which looks
    identical to the Civilian faction, but which the Proteron are enemies
    with. Enables hunting down dissidents through the Patrol mission, and
    will enable a modified bounty hunt for dissidents.
    Started adding more systems and assets for the Proteron.
    
    I've added in all the systems that I want to, but not all the assets.
    All but one of these systems will have one or two assets added to them
    later; I'm just not doing it right now because I'm tired and it's late.
    
    I also modified Protera Sigma to not offer Proteron ships, instead
    offloading that task to a Proteron station with a military restriction.
    Scale the radius of Protera by 5, to be consistent with other systems
    Slightly better integration of the new factions into the galaxy map.
    
      - Those are minor modifications. The most important of them is likely
        the addition of two jump points from Pirate space to Za'lek space.
      - A few systems have been added near Protera, which has itself been
        moved. Much more work is to be done on Proteron.
    Modifications to the in-nebula (mainly Thurion) systems for more consistency with the rest of the galaxy and the wiki’s informations.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Regenerated jumps to set default hide.
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Added a small invisible "Proteron Dissident" faction.
    
    This is a faction which appears rarely in Proteron systems which looks
    identical to the Civilian faction, but which the Proteron are enemies
    with. Enables hunting down dissidents through the Patrol mission, and
    will enable a modified bounty hunt for dissidents.
    More Proteron stuff.
    
    Also fixed a misalignment with the description and reality of the
    Kahan by making its weapons heavy rather than medium (otherwise the
    Pacifier would just be better than it in that regard).
    Started adding more systems and assets for the Proteron.
    
    I've added in all the systems that I want to, but not all the assets.
    All but one of these systems will have one or two assets added to them
    later; I'm just not doing it right now because I'm tired and it's late.
    
    I also modified Protera Sigma to not offer Proteron ships, instead
    offloading that task to a Proteron station with a military restriction.
    Seeded civilian presences around the galaxy
    
    Heuristic used: Inhabited, not a Pirate, Collective, or Thurion system.
    Pirate presence <50, owning faction presence >100.
    
    Each system passing the heuristic gets 1 + (non-hostile presence / 750)
    virtual civilian presences.
    Revamped the highway jump system and moved numerous systems around
    
    Reorganized parts of the Qorel Expanse, as well as the Dvaered to Soromid
    and Dvaered to Sirius routes.
    
    Linked all the highway jumps into a single network, forming a circle around
    Empire and Dvaered space, with three offshoots going north, east, and west.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    Modified asset techs and propagated new tech
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Typo fixes throughout the asset XML
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    Typo fixes throughout the asset XML
    major zalek update
    commiting more changes, made zalek dark red cause it fit better than purple
    apply suppression of standard commodities in asset definition
    Seed beam techs across various assets (primarily Za'lek)
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    Increased visibility of House Za'lek Central Station
    major zalek update
    commiting more changes, made zalek dark red cause it fit better than purple
    fixes and zlk worlds oh my
    Removed unused Zalek assets, made dat changes for zalek personaility, and assets
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Modified commodity prices to make more sense.
    apply suppression of standard commodities in asset definition
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    * Descriptions for a few planets lacking them.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typo fixes throughout the asset XML
    major zalek update
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Finished the proteron stuff I think
    
    Need to test
    More Proteron stuff.
    
    Also fixed a misalignment with the description and reality of the
    Kahan by making its weapons heavy rather than medium (otherwise the
    Pacifier would just be better than it in that regard).
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed "STU", "STP", and "SCU" to "seconds", "periods", and "cycles".
    
    This is meant for better readability; it makes the different units
    more distinguished from each other.
    
    "STU" was replaced with "seconds" instead of "units" for two reasons:
    one, "units" is too generic (it's used for all kinds of measurements,
    not just time measurements), making it a confusing name. Two, the SCU
    is the same as a second in-universe anyway, and I don't see the
    general population abandoning that term.
    
    For the auto generation of "pretty" time text, I replaced e.g "12 STU"
    with "12s", and e.g. "8.32 STP" with "8.32p".
    
    Also fixed some language mistakes in dialogs I happened to notice,
    plus some very weird usage of the time units that probably resulted
    from a misunderstanding of how long they're supposed to be (there
    was a father concerned because his daughter disappeared several
    *seconds* ago, a food station that had a harvest every day, and a
    weekly mining trip to one planet that was talked about as if that
    wasn't frequent).
    
    Just a thought that just came to mind as I was writing this: perhaps
    it would be better to call decaperiods "daps"? Not truly necessary,
    but it would be an interesting idea because it's a name for a unit
    that kind of look like "days", while also serving as a shorthand
    for the full official name. Any thoughts?
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Modified asset techs and propagated new tech
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    major zalek update
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    * Descriptions for a few planets lacking them.
    Modified asset techs and propagated new tech
    Typos, consistency fixes and more descriptions for assets beginning with B
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    commiting more changes, made zalek dark red cause it fit better than purple
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    Typo fixes throughout the asset XML
    commiting more changes, made zalek dark red cause it fit better than purple
    Modified commodity prices to make more sense.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    commiting more changes, made zalek dark red cause it fit better than purple
    zalek ships and further map fixes
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Typo fixes throughout the asset XML
    Typos, consistency fixes and more descriptions for assets beginning with B
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Fix typo
    * Descriptions for a few planets lacking them.
    Typo fixes throughout the asset XML
    major zalek update
    commiting more changes, made zalek dark red cause it fit better than purple
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Converted the "blackmarket" flag to a "blackmarket" service.
    
    This is cleaner, and it's an easy way to make adjusting this property
    in the editor possible. The "blackmarket" flag outside of the assets
    is still supported for compatibility.
    Fixed git-related flub with efferey!
    Fixed git-related flub with efferey!
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    Made all of the Pirate worlds into "black market" planets.
    
    This is the main reason I added the feature of "black market"
    planets. It makes no sense whatsoever for a shop for criminals to
    pay attention to weapon licenses. It should be a black market, and
    that means any weapons available there should be available without
    a license.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Qorel Expanse added.
    
      - It is a set of pirate systems and stations in the empty space between the
        Empire and the Dvaered allowing a safe^Wpossible route between Vorca and
        New Haven.
      - The map containing the position of the entry and exit points has to
        be bought, and it’s currently a bit expensive if you are begining
        the game, though the pirate missions are at the same time very
        lucrative… (maybe a bit much?)
      - It could be seen as a test to know whether or not other “expanses”
        should be added in the other empty spaces between other factions,
        but IMHO, it makes playing pirate a bit easier. Without that, you
        could not play purely pirate and would have to be allied with at
        least one or two factions (and one of them has to be the Dvaered…)
        to only be able to move through the galaxy…
    * Areze's initial work on Za'lek space.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Changed all inhabited stations with hide values of 0.75 to 0.5
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Converted the "blackmarket" flag to a "blackmarket" service.
    
    This is cleaner, and it's an easy way to make adjusting this property
    in the editor possible. The "blackmarket" flag outside of the assets
    is still supported for compatibility.
    Made all of the Pirate worlds into "black market" planets.
    
    This is the main reason I added the feature of "black market"
    planets. It makes no sense whatsoever for a shop for criminals to
    pay attention to weapon licenses. It should be a black market, and
    that means any weapons available there should be available without
    a license.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Modified asset techs and propagated new tech
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    * Descriptions for a few planets lacking them.
    Typo fixes throughout the asset XML
    Modified asset techs and propagated new tech
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    * Added more systems and planets to the galaxy. Areze helped.
    Modified commodity prices to make more sense.
    apply suppression of standard commodities in asset definition
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    * Descriptions for a few planets lacking them.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typo fixes throughout the asset XML
    major zalek update
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    * Descriptions for a few planets lacking them.
    Typo fixes throughout the asset XML
    More typos and consistency fixes...
    * Added more systems and planets to the galaxy. Areze helped.
    commiting more changes, made zalek dark red cause it fit better than purple
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Typos, consistency fixes and more descriptions for assets beginning with B
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    Modified asset techs and propagated new tech
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    * Added Elite core techs to all major factions, all three techs appear once in each faction.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typo fixes throughout the asset XML
    major zalek update
    commiting more changes, made zalek dark red cause it fit better than purple
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    Typo fixes throughout the asset XML
    major zalek update
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    Changed all inhabited stations with hide values of 0.75 to 0.5
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    Typo fixes throughout the asset XML
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Various typo fixes and other little edits.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typo fixes throughout the asset XML
    More typos and consistency fixes...
    Various typo fixes and other little edits.
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    Spelling & grammar
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typo fixes throughout the asset XML
    Modified asset techs and propagated new tech
    major zalek update
    commiting more changes, made zalek dark red cause it fit better than purple
    zalek ships and further map fixes
    apply suppression of standard commodities in asset definition
    Made time units galactic, plus some other small fixes.
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typo fixes throughout the asset XML
    major zalek update
    commiting more changes, made zalek dark red cause it fit better than purple
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Move a number of assets and jumps closer to system centers
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typo fixes throughout the asset XML
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Update rostra.xml
    Spelling & grammar
    Seed beam techs across various assets (primarily Za'lek)
    Typo fixes throughout the asset XML
    major zalek update
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    fixes and zlk worlds oh my
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updated Uhriabi-9 planet class to match
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    More Proteron stuff.
    
    Also fixed a misalignment with the description and reality of the
    Kahan by making its weapons heavy rather than medium (otherwise the
    Pacifier would just be better than it in that regard).
    Started adding more systems and assets for the Proteron.
    
    I've added in all the systems that I want to, but not all the assets.
    All but one of these systems will have one or two assets added to them
    later; I'm just not doing it right now because I'm tired and it's late.
    
    I also modified Protera Sigma to not offer Proteron ships, instead
    offloading that task to a Proteron station with a military restriction.
    fixes and zlk worlds oh my
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Changed Chriik's image.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Seed beam techs across various assets (primarily Za'lek)
    Typo fixes throughout the asset XML
    major zalek update
    commiting more changes, made zalek dark red cause it fit better than purple
    More Proteron stuff
    More Proteron stuff.
    
    Also fixed a misalignment with the description and reality of the
    Kahan by making its weapons heavy rather than medium (otherwise the
    Pacifier would just be better than it in that regard).
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    commiting more changes, made zalek dark red cause it fit better than purple
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Started adding more systems and assets for the Proteron.
    
    I've added in all the systems that I want to, but not all the assets.
    All but one of these systems will have one or two assets added to them
    later; I'm just not doing it right now because I'm tired and it's late.
    
    I also modified Protera Sigma to not offer Proteron ships, instead
    offloading that task to a Proteron station with a military restriction.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Renamed Valt system; name was the same as Valt, Tarsus.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Typo fixes throughout the asset XML
    major zalek update
    commiting more changes, made zalek dark red cause it fit better than purple
    Expanded Anya and Sabe, plus expanded the outfits list for Thurion shipyards.
    Added outfitters to Thurion shipyards.
    Normalize Thurion asset hide values, 0.25 for planets, 0.5 for stations
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    commodity tweaks
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    apply suppression of standard commodities in asset definition
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Increased availability of higher-end hulls and systems
    More typos and consistency fixes...
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Modified commodity prices to make more sense.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    Typo fixes throughout the asset XML
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    Typo fixes throughout the asset XML
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    * Added more systems and planets to the galaxy. Areze helped.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Vengeance now armorbreaker, added dome Zlk assets, tweaked others
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Grammar fixes in darkshed.xml
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Increased availability of higher-end hulls and systems
    Modified asset techs and propagated new tech
    More typos and consistency fixes...
    corrected typo in darkshed.xml
    grammar improvement in darkshed.xml
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Modified asset techs and propagated new tech
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    Hyphenate 'well-to-do'.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Modified commodity prices to make more sense.
    apply suppression of standard commodities in asset definition
    Move a number of assets and jumps closer to system centers
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Modified commodity prices to make more sense.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Fixed typo in Wigheta's description.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed some ableist language pertaining to blindness, and some sexism.
    Move a number of assets and jumps closer to system centers
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Better tech definitions
    Changed "STU", "STP", and "SCU" to "seconds", "periods", and "cycles".
    
    This is meant for better readability; it makes the different units
    more distinguished from each other.
    
    "STU" was replaced with "seconds" instead of "units" for two reasons:
    one, "units" is too generic (it's used for all kinds of measurements,
    not just time measurements), making it a confusing name. Two, the SCU
    is the same as a second in-universe anyway, and I don't see the
    general population abandoning that term.
    
    For the auto generation of "pretty" time text, I replaced e.g "12 STU"
    with "12s", and e.g. "8.32 STP" with "8.32p".
    
    Also fixed some language mistakes in dialogs I happened to notice,
    plus some very weird usage of the time units that probably resulted
    from a misunderstanding of how long they're supposed to be (there
    was a father concerned because his daughter disappeared several
    *seconds* ago, a food station that had a harvest every day, and a
    weekly mining trip to one planet that was talked about as if that
    wasn't frequent).
    
    Just a thought that just came to mind as I was writing this: perhaps
    it would be better to call decaperiods "daps"? Not truly necessary,
    but it would be an interesting idea because it's a name for a unit
    that kind of look like "days", while also serving as a shorthand
    for the full official name. Any thoughts?
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Seed beam techs across various assets (primarily Za'lek)
    Increased availability of higher-end hulls and systems
    Typo fixes throughout the asset XML
    major zalek update
    commiting more changes, made zalek dark red cause it fit better than purple
    Removed unused Zalek assets, made dat changes for zalek personaility, and assets
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added descriptions to Ruadan Prime and Ruadan Bastion.
    
    While the player can never land there, the "system map" feature
    allows the description to be viewed, so descriptions have been
    added. Also deleted the unused Ruadan asset.
    Ruadan and its station can no longer be landed on.
    Seed beam techs across various assets (primarily Za'lek)
    Remove virtual Za'lek presences frm Ruadan and reduce its asset presences
    Changed all inhabited stations with hide values of 0.75 to 0.5
    commiting more changes, made zalek dark red cause it fit better than purple
    Vengeance now armorbreaker, added dome Zlk assets, tweaked others
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Typos, consistency fixes and more descriptions for assets beginning with B
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    Fix simple typos in location names: Churchill, Dakron.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    * Descriptions for a few planets lacking them.
    Typos, consistency fixes and more descriptions for assets beginning with B
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    More Proteron stuff
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Added more systems and planets to the galaxy. Areze helped.
    Made time units galactic, plus some other small fixes.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    * Descriptions for a few planets lacking them.
    Typos, consistency fixes and more descriptions for assets beginning with B
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Descriptions for a few planets lacking them.
    Typo fixes throughout the asset XML
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    Fixed typos in some Dvaered assets.
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    More Proteron stuff
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    More work on the Proteron systems.
    More Proteron stuff
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Modified asset techs and propagated new tech
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    Made time units galactic, plus some other small fixes.
    commodity tweaks
    oops
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    * Descriptions for a few planets lacking them.
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    commodity tweaks
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    support for standard commodities
    Nvm
    Whoops. "Independent", not "Neutral".
    Gave Eiroik the "Neutral" faction.
    
    This fixes some warnings whenever you land on it.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    Typo fixes throughout the asset XML
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    commodity tweaks
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    apply suppression of standard commodities in asset definition
    Modified asset techs and propagated new tech
    More typos and consistency fixes...
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added Elite core techs to all major factions, all three techs appear once in each faction.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Move a number of assets and jumps closer to system centers
    Modified asset techs and propagated new tech
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    commodity tweaks
    oops
    Modified commodity prices to make more sense.
    Added a "virtual Sindbad" for when Sindbad is not discovered.
    
    This ensures that FLF presence is always in Sigur and surrounding
    systems.
    
    I noticed a bug where for some reason, removing this Virtual
    Sindbad asset caused the Virtual Empire Unpresence to be removed
    too? I'm massively confused by that. "Fixed" by having a redundant
    entry under the FLF_base diff but this should be fixed for real
    later, whatever the cause may be.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Typo fixes throughout the asset XML
    * Addressed warnings.
    * Fixed Koga's parameters up a bit.
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typo fixes throughout the asset XML
    zalek ships and further map fixes
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    Made Capricorn less of a death trap (bit of Empire presence and a second jump.)
    Give Omega Station a custom landing function.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified asset techs and propagated new tech
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Spelling fix in geron.xml
    
    See e.g. http://www.thefreedictionary.com/gubernatorial or http://www.merriam-webster.com/dictionary/gubernatorial
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typo fixes throughout the asset XML
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    Seed beam techs across various assets (primarily Za'lek)
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    Remove duplicate tech from two assets
    Typo fixes throughout the asset XML
    Replace obsolete Engines Elite tech on two assets
    major zalek update
    commiting more changes, made zalek dark red cause it fit better than purple
    fixes and zlk worlds oh my
    Removed unused Zalek assets, made dat changes for zalek personaility, and assets
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    Various typo fixes and other little edits.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    added the miners faction
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Renamed Valt system; name was the same as Valt, Tarsus.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Typo fixes throughout the asset XML
    Fixed the wrong planet being a black market.
    
    I was thinking of the system Qorel, and ended up making Qoral (an
    unrelated planet) a black market instead of Qorellia. Fixed now.
    Made all of the Pirate worlds into "black market" planets.
    
    This is the main reason I added the feature of "black market"
    planets. It makes no sense whatsoever for a shop for criminals to
    pay attention to weapon licenses. It should be a black market, and
    that means any weapons available there should be available without
    a license.
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Fixed typo for Stormy description
    apply suppression of standard commodities in asset definition
    commodity tweaks
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    * Added more systems and planets to the galaxy. Areze helped.
    More proteron
    
    Just one more system
    More work on the Proteron systems.
    More Proteron stuff.
    
    Also fixed a misalignment with the description and reality of the
    Kahan by making its weapons heavy rather than medium (otherwise the
    Pacifier would just be better than it in that regard).
    Started adding more systems and assets for the Proteron.
    
    I've added in all the systems that I want to, but not all the assets.
    All but one of these systems will have one or two assets added to them
    later; I'm just not doing it right now because I'm tired and it's late.
    
    I also modified Protera Sigma to not offer Proteron ships, instead
    offloading that task to a Proteron station with a military restriction.
    apply suppression of standard commodities in asset definition
    Made time units galactic, plus some other small fixes.
    Some more typos.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    Typo fixes throughout the asset XML
    major zalek update
    Added mission services to hs and ns planets, bar service to hs planets.
    
    Also enabled most neutral missions for the Thurions. (Excluded bounty
    hunting since it seems the Thurions would be above that.)
    Normalize Thurion asset hide values, 0.25 for planets, 0.5 for stations
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    Changed all inhabited stations with hide values of 0.75 to 0.5
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Move a number of assets and jumps closer to system centers
    Modified asset techs and propagated new tech
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added Elite core techs to all major factions, all three techs appear once in each faction.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    More typos and consistency fixes...
    Tables with displays showing tables is a bit confusing. Let's say graphs instead.
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    Modified asset techs and propagated new tech
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Descriptions for a few planets lacking them.
    Typo fixes throughout the asset XML
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Aldous should be an aquatic planet, not a station in exterior image.
    * Added more systems and planets to the galaxy. Areze helped.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Expanded Anya and Sabe, plus expanded the outfits list for Thurion shipyards.
    Added outfitters to Thurion shipyards.
    Normalize Thurion asset hide values, 0.25 for planets, 0.5 for stations
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    * Descriptions for a few planets lacking them.
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Typo fixes throughout the asset XML
    Modified asset techs and propagated new tech
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    Typos, consistency fixes and more descriptions for assets beginning with B
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added Elite core techs to all major factions, all three techs appear once in each faction.
    * Added more systems and planets to the galaxy. Areze helped.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Modified commodity prices to make more sense.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typo fixes throughout the asset XML
    Fix typos where INSSs were listed as ISSs.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    oops
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Typo fixes throughout the asset XML
    Fixed typos in some Dvaered assets.
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    More proteron
    
    Just one more system
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Typo fixes throughout the asset XML
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified asset techs and propagated new tech
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    More Proteron stuff.
    
    Also fixed a misalignment with the description and reality of the
    Kahan by making its weapons heavy rather than medium (otherwise the
    Pacifier would just be better than it in that regard).
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    Modified commodity prices to make more sense.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added Elite core techs to all major factions, all three techs appear once in each faction.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typo fixes throughout the asset XML
    Modified asset techs and propagated new tech
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Typo fixes throughout the asset XML
    major zalek update
    commiting more changes, made zalek dark red cause it fit better than purple
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Changed all inhabited stations with hide values of 0.75 to 0.5
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified asset techs and propagated new tech
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Typo fixes throughout the asset XML
    * Added more systems and planets to the galaxy. Areze helped.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Remove PSO Monitor's odd low-value, long-range presence
    s/PSO Moniter/PSO Monitor/ throughout the XML
    Rename PSO Moniter to PSO Monitor
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typo fixes throughout the asset XML
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Expanded Anya and Sabe, plus expanded the outfits list for Thurion shipyards.
    Added outfitters to Thurion shipyards.
    Normalize Thurion asset hide values, 0.25 for planets, 0.5 for stations
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Descriptions for a few planets lacking them.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    * Added more systems and planets to the galaxy. Areze helped.
    Move a number of assets and jumps closer to system centers
    Renamed Valt system; name was the same as Valt, Tarsus.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Modified asset techs and propagated new tech
    Fixed typos in Vault's description.
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Typos, consistency fixes and more descriptions for assets beginning with B
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    commiting more changes, made zalek dark red cause it fit better than purple
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    commodity tweaks
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    Expanded Anya and Sabe, plus expanded the outfits list for Thurion shipyards.
    Added outfitters to Thurion shipyards.
    Added Thurion outfits
    
    sy237 is one of the first reachable system.
    Normalize Thurion asset hide values, 0.25 for planets, 0.5 for stations
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Modified commodity prices to make more sense.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Typo fixes throughout the asset XML
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    Various typo fixes and other little edits.
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Added two new independent stations between Teller and other Pirate strongholds.
    
    These stations are designed to mainly be refueling stops for pirate
    aligned players, since without them the journey to Teller is nearly
    insurmountable. Incidentally, they're marginally useful for non-pirate
    players too, since they're located closer to the centers of their
    respective systems.
    Expanded Anya and Sabe, plus expanded the outfits list for Thurion shipyards.
    Normalize Thurion asset hide values, 0.25 for planets, 0.5 for stations
    Typo fixes throughout the asset XML
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    apply suppression of standard commodities in asset definition
    * Removed color escape codes from planet description.
    * Descriptions for a few planets lacking them.
    Typo fixes throughout the asset XML
    Typos, consistency fixes and more descriptions for assets beginning with B
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    * Added more systems and planets to the galaxy. Areze helped.
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added Elite core techs to all major factions, all three techs appear once in each faction.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Typos, consistency fixes and more descriptions for assets beginning with B
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Move a number of assets and jumps closer to system centers
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    major zalek update
    commiting more changes, made zalek dark red cause it fit better than purple
    apply suppression of standard commodities in asset definition
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    Seed beam techs across various assets (primarily Za'lek)
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typo fixes throughout the asset XML
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified asset techs and propagated new tech
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Move a number of assets and jumps closer to system centers
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    * Descriptions for a few planets lacking them.
    Typos, consistency fixes and more descriptions for assets beginning with B
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Typo fixes throughout the asset XML
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added miner presence to several areas.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Typo fixes throughout the asset XML
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Force-merged Za'lek space from expand branch.
    * Areze's initial work on Za'lek space.
    Updated pirate cargo mission text.
    apply suppression of standard commodities in asset definition
    Typo fixes throughout the asset XML
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Typo fixes throughout the asset XML
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Move a number of assets and jumps closer to system centers
    Modified asset techs and propagated new tech
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    major zalek update
    Vengeance now armorbreaker, added dome Zlk assets, tweaked others
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    Some more typos.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed "STU", "STP", and "SCU" to "seconds", "periods", and "cycles".
    
    This is meant for better readability; it makes the different units
    more distinguished from each other.
    
    "STU" was replaced with "seconds" instead of "units" for two reasons:
    one, "units" is too generic (it's used for all kinds of measurements,
    not just time measurements), making it a confusing name. Two, the SCU
    is the same as a second in-universe anyway, and I don't see the
    general population abandoning that term.
    
    For the auto generation of "pretty" time text, I replaced e.g "12 STU"
    with "12s", and e.g. "8.32 STP" with "8.32p".
    
    Also fixed some language mistakes in dialogs I happened to notice,
    plus some very weird usage of the time units that probably resulted
    from a misunderstanding of how long they're supposed to be (there
    was a father concerned because his daughter disappeared several
    *seconds* ago, a food station that had a harvest every day, and a
    weekly mining trip to one planet that was talked about as if that
    wasn't frequent).
    
    Just a thought that just came to mind as I was writing this: perhaps
    it would be better to call decaperiods "daps"? Not truly necessary,
    but it would be an interesting idea because it's a name for a unit
    that kind of look like "days", while also serving as a shorthand
    for the full official name. Any thoughts?
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    Modified asset techs and propagated new tech
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Added more systems and planets to the galaxy. Areze helped.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Added mission services to hs and ns planets, bar service to hs planets.
    
    Also enabled most neutral missions for the Thurions. (Excluded bounty
    hunting since it seems the Thurions would be above that.)
    Normalize Thurion asset hide values, 0.25 for planets, 0.5 for stations
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    Modified commodity prices to make more sense.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Spelling error.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    * Descriptions for a few planets lacking them.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typo fixes throughout the asset XML
    major zalek update
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Typos, consistency fixes and more descriptions for assets beginning with B
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    Spelling & grammar
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Qorel Expanse added.
    
      - It is a set of pirate systems and stations in the empty space between the
        Empire and the Dvaered allowing a safe^Wpossible route between Vorca and
        New Haven.
      - The map containing the position of the entry and exit points has to
        be bought, and it’s currently a bit expensive if you are begining
        the game, though the pirate missions are at the same time very
        lucrative… (maybe a bit much?)
      - It could be seen as a test to know whether or not other “expanses”
        should be added in the other empty spaces between other factions,
        but IMHO, it makes playing pirate a bit easier. Without that, you
        could not play purely pirate and would have to be allied with at
        least one or two factions (and one of them has to be the Dvaered…)
        to only be able to move through the galaxy…
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    commiting more changes, made zalek dark red cause it fit better than purple
    zalek ships and further map fixes
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Increased availability of higher-end hulls and systems
    Typo fixes throughout the asset XML
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added Elite core techs to all major factions, all three techs appear once in each faction.
    * Added more systems and planets to the galaxy. Areze helped.
    * Descriptions for a few planets lacking them.
    Typos, consistency fixes and more descriptions for assets beginning with B
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    Fixed typos in planet and bar messages
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added a "virtual Sindbad" for when Sindbad is not discovered.
    
    This ensures that FLF presence is always in Sigur and surrounding
    systems.
    
    I noticed a bug where for some reason, removing this Virtual
    Sindbad asset caused the Virtual Empire Unpresence to be removed
    too? I'm massively confused by that. "Fixed" by having a redundant
    entry under the FLF_base diff but this should be fixed for real
    later, whatever the cause may be.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Modified commodity prices to make more sense.
    apply suppression of standard commodities in asset definition
    Added a mission tab to Facett Outpost.
    
    Not really important, but this allows a player with access to the station a
    more convenient stop if they're hunting bounties or doing patrols in the
    southward pirate-infested region.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Various typo fixes and other little edits.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Expanded Anya and Sabe, plus expanded the outfits list for Thurion shipyards.
    Added outfitters to Thurion shipyards.
    Normalize Thurion asset hide values, 0.25 for planets, 0.5 for stations
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    major zalek update
    commiting more changes, made zalek dark red cause it fit better than purple
    fixes and zlk worlds oh my
    Removed unused Zalek assets, made dat changes for zalek personaility, and assets
    major zalek update
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    Vengeance now armorbreaker, added dome Zlk assets, tweaked others
    * Areze's initial work on Za'lek space.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added mission services to hs and ns planets, bar service to hs planets.
    
    Also enabled most neutral missions for the Thurions. (Excluded bounty
    hunting since it seems the Thurions would be above that.)
    Normalize Thurion asset hide values, 0.25 for planets, 0.5 for stations
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    More Proteron stuff.
    
    Also fixed a misalignment with the description and reality of the
    Kahan by making its weapons heavy rather than medium (otherwise the
    Pacifier would just be better than it in that regard).
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Added more systems and planets to the galaxy. Areze helped.
    More typos and consistency fixes...
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    More work on the Proteron systems.
    More Proteron stuff.
    
    Also fixed a misalignment with the description and reality of the
    Kahan by making its weapons heavy rather than medium (otherwise the
    Pacifier would just be better than it in that regard).
    commiting more changes, made zalek dark red cause it fit better than purple
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Changed "STU", "STP", and "SCU" to "seconds", "periods", and "cycles".
    
    This is meant for better readability; it makes the different units
    more distinguished from each other.
    
    "STU" was replaced with "seconds" instead of "units" for two reasons:
    one, "units" is too generic (it's used for all kinds of measurements,
    not just time measurements), making it a confusing name. Two, the SCU
    is the same as a second in-universe anyway, and I don't see the
    general population abandoning that term.
    
    For the auto generation of "pretty" time text, I replaced e.g "12 STU"
    with "12s", and e.g. "8.32 STP" with "8.32p".
    
    Also fixed some language mistakes in dialogs I happened to notice,
    plus some very weird usage of the time units that probably resulted
    from a misunderstanding of how long they're supposed to be (there
    was a father concerned because his daughter disappeared several
    *seconds* ago, a food station that had a harvest every day, and a
    weekly mining trip to one planet that was talked about as if that
    wasn't frequent).
    
    Just a thought that just came to mind as I was writing this: perhaps
    it would be better to call decaperiods "daps"? Not truly necessary,
    but it would be an interesting idea because it's a name for a unit
    that kind of look like "days", while also serving as a shorthand
    for the full official name. Any thoughts?
    Talking about varying conditions means weather, not climate. And a dozen STP is 33 Earth hours, so let's make that a bit longer (and more variable).
    Grammatical pedantry: use an adverb instead of an adjective phrase.
    Fix extraneous word in Jorlan's bar's description.
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added mission services to hs and ns planets, bar service to hs planets.
    
    Also enabled most neutral missions for the Thurions. (Excluded bounty
    hunting since it seems the Thurions would be above that.)
    Normalize Thurion asset hide values, 0.25 for planets, 0.5 for stations
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    More proteron
    
    Just one more system
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    Typos, consistency fixes and more descriptions for assets beginning with B
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Typo fixes throughout the asset XML
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Expanded Anya and Sabe, plus expanded the outfits list for Thurion shipyards.
    Added outfitters to Thurion shipyards.
    Normalize Thurion asset hide values, 0.25 for planets, 0.5 for stations
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Modified asset techs and propagated new tech
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Made time units galactic, plus some other small fixes.
    Typo fixes throughout the asset XML
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Made time units galactic, plus some other small fixes.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    Consistent capitalisation of Station in names, and a few other minor fixes.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Typo fixes throughout the asset XML
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Various spelling and grammar fixes.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Grammar
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    Modified commodity prices to make more sense.
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typo fixes throughout the asset XML
    major zalek update
    fixes and zlk worlds oh my
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Made Westeros Station landable and added desc, etc.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Added more systems and planets to the galaxy. Areze helped.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    commodity tweaks
    Update hznss3.xml
    oops
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Made time units galactic, plus some other small fixes.
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    Made time units galactic, plus some other small fixes.
    Move a number of assets and jumps closer to system centers
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    fixes and zlk worlds oh my
    * Fixed improper planet graphic assignment.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    major zalek update
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    apply suppression of standard commodities in asset definition
    Small grammar fix were i found one
    
    This is such a great EV tribute, now I get to be a part of it! Muwahahhaha
    More typos and consistency fixes...
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    More minor data fixes.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Changed 'eastern' to 'Western' as that's where it seems to be...
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added Virtual Thurion Local assets to inter-Thurion Nebula systems.
    
    These assets add a tiny presence (10) to these systems, causing
    Thurion music to be played and also making these systems seem less
    empty.
    added the miners faction
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    * Descriptions for a few planets lacking them.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    More proteron
    
    Just one more system
    More Proteron stuff.
    
    Also fixed a misalignment with the description and reality of the
    Kahan by making its weapons heavy rather than medium (otherwise the
    Pacifier would just be better than it in that regard).
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added two new independent stations between Teller and other Pirate strongholds.
    
    These stations are designed to mainly be refueling stops for pirate
    aligned players, since without them the journey to Teller is nearly
    insurmountable. Incidentally, they're marginally useful for non-pirate
    players too, since they're located closer to the centers of their
    respective systems.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    * Descriptions for a few planets lacking them.
    Typo fixes throughout the asset XML
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typo fixes throughout the asset XML
    major zalek update
    zalek ships and further map fixes
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    Increased visibility of Emperor's Wrath
    Typo fixes throughout the asset XML
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    commiting more changes, made zalek dark red cause it fit better than purple
    fixes and zlk worlds oh my
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Areze's initial work on Za'lek space.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Various spelling and grammar fixes.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    fixing typos in eiger.xml and gordons_exchange.xml
    Typo fixes throughout the asset XML
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Added mission services to hs and ns planets, bar service to hs planets.
    
    Also enabled most neutral missions for the Thurions. (Excluded bounty
    hunting since it seems the Thurions would be above that.)
    Normalize Thurion asset hide values, 0.25 for planets, 0.5 for stations
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    More Proteron stuff.
    
    Also fixed a misalignment with the description and reality of the
    Kahan by making its weapons heavy rather than medium (otherwise the
    Pacifier would just be better than it in that regard).
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Move a number of assets and jumps closer to system centers
    Seed beam techs across various assets (primarily Za'lek)
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    Removed commodities from Sindbad.
    
    This has the effect of making the FLF Commodity Run mission appear,
    and not allowing buying of commodities (ore can still be found in
    Arcanis, though).
    apply suppression of standard commodities in asset definition
    Consolidated missile and launcher descriptions, removed missiles from shop
    
    This commit modifies all launcher descriptions to incorporate important
    information from the missile/rocket descriptions; previously most of
    them just said something like "a launcher that launches X missiles",
    which was always annoying but is absolutely no good with auto-refilling
    missiles. Additionally, rockets have been removed from all shops (even
    Bon Sebb), since their presence there is no longer needed (although the
    missile outfits themselves remain in the game mostly as an interesting
    relic of the past; changing the system to not have them at all would be too
    time-consuming to be worth it in my opinion).
    Converted the "blackmarket" flag to a "blackmarket" service.
    
    This is cleaner, and it's an easy way to make adjusting this property
    in the editor possible. The "blackmarket" flag outside of the assets
    is still supported for compatibility.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typo fixes throughout the asset XML
    Made Sindbad into a black market planet.
    
    While not as blatant as the pirate worlds, it doesn't make much
    sense for Sindbad (the FLF base) to check your licenses when
    selling you stuff. While the FLF is certainly more noble than
    pirates, it is still an illegal organization, and you're only ever
    let into the base at all if you're deemed to be trustworthy.
    
    This doesn't have much if any real effect, because it sells ships
    that require no licenses and the only weapon it sells is mace
    rockets. This change is more for the principle of it than anything.
    Modified the structure of the FLF's techs.
    Added hidden jump points for the FLF.
    
    There's a problem with the previous setup: the FLF is in a position
    that makes what they do impractical at best. As a player, you have
    to either have an unreasonably large fuel tank, or land on the
    planets of your enemies. This has been remedied by adding hidden
    jump points that allow FLF ships to get almost anywhere they would
    like within two jumps of a non-enemy planet, and within three jumps
    for deeper parts of Dvaered space. Also, it's now possible to go
    from the FLF base to the Frontier and back without entering Dvaered
    space at all.
    Various small tweaks.
    
    Conflicts:
    
            src/player_autonav.c
    Added basic facilities to the FLF base.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed unused Zalek assets, made dat changes for zalek personaility, and assets
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    major zalek update
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Typo fixes throughout the asset XML
    Modified asset techs and propagated new tech
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added Elite core techs to all major factions, all three techs appear once in each faction.
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typos, consistency fixes and more descriptions for assets beginning with B
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    More Proteron stuff.
    
    Also fixed a misalignment with the description and reality of the
    Kahan by making its weapons heavy rather than medium (otherwise the
    Pacifier would just be better than it in that regard).
    major zalek update
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Move a number of assets and jumps closer to system centers
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    More Proteron stuff
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Descriptions for a few planets lacking them.
    Typos, consistency fixes and more descriptions for assets beginning with B
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    Seed beam techs across various assets (primarily Za'lek)
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Increased availability of higher-end hulls and systems
    Typo fixes throughout the asset XML
    Modified asset techs and propagated new tech
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Vengeance now armorbreaker, added dome Zlk assets, tweaked others
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Added more systems and planets to the galaxy. Areze helped.
    zalek ships and further map fixes
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Upgraded Sevlow.
    Normalize Thurion asset hide values, 0.25 for planets, 0.5 for stations
    Typo fixes throughout the asset XML
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Move a number of assets and jumps closer to system centers
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Fix typos where INSSs were listed as ISSs.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Seed beam techs across various assets (primarily Za'lek)
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    Modified asset techs and propagated new tech
    major zalek update
    commiting more changes, made zalek dark red cause it fit better than purple
    Removed unused Zalek assets, made dat changes for zalek personaility, and assets
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    zalek ships and further map fixes
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified asset techs and propagated new tech
    Minor typo in Varaati's description.
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Fixed reference to nonexistent planet.
    Either a typo or a unique mention of some in-universe technology.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Fixed some wrong images.
    
    Some exterior gfx that don't match the asset type. Whoops!
    More work on the Proteron systems.
    More Proteron stuff.
    
    Also fixed a misalignment with the description and reality of the
    Kahan by making its weapons heavy rather than medium (otherwise the
    Pacifier would just be better than it in that regard).
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    Typo fixes throughout the asset XML
    major zalek update
    commiting more changes, made zalek dark red cause it fit better than purple
    fixes and zlk worlds oh my
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    commiting more changes, made zalek dark red cause it fit better than purple
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    * Descriptions for a few planets lacking them.
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    Changed all inhabited stations with hide values of 0.75 to 0.5
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Typos, consistency fixes and more descriptions for assets beginning with B
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed unused Zalek assets, made dat changes for zalek personaility, and assets
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Expanded Anya and Sabe, plus expanded the outfits list for Thurion shipyards.
    Added outfitters to Thurion shipyards.
    Normalize Thurion asset hide values, 0.25 for planets, 0.5 for stations
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seed beam techs across various assets (primarily Za'lek)
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    Typo fixes throughout the asset XML
    Modified asset techs and propagated new tech
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Modified commodity prices to make more sense.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Fixed several errors in the description of Tartarus and its bar.
    * Added more systems and planets to the galaxy. Areze helped.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typo fixes throughout the asset XML
    * Added more systems and planets to the galaxy. Areze helped.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Addressed warnings.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Normalize Thurion asset hide values, 0.25 for planets, 0.5 for stations
    Typo fixes throughout the asset XML
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    * Added more systems and planets to the galaxy. Areze helped.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    removed military ships from Dolmen in Pastor
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    commiting more changes, made zalek dark red cause it fit better than purple
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Typo fixes throughout the asset XML
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Added more systems and planets to the galaxy. Areze helped.
    * Descriptions for a few planets lacking them.
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    Changed Europea's mention of First Growth to Second Growth; the First Growth was the Frontier, only.
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    apply suppression of standard commodities in asset definition
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Modified asset techs and propagated new tech
    Adjusted the description to better fit where Turnpike is in the map and added some basic ships for the shipyard to sell.
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Various spelling and grammar fixes.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    fixes and zlk worlds oh my
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Consistent capitalisation of Station in names, and a few other minor fixes.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Aspirant = having high hopes; aspiring = wanting to become. The latter seems to fit better here.
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    Added mission services to hs and ns planets, bar service to hs planets.
    
    Also enabled most neutral missions for the Thurions. (Excluded bounty
    hunting since it seems the Thurions would be above that.)
    Normalize Thurion asset hide values, 0.25 for planets, 0.5 for stations
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Addressed warnings.
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Better tech definitions
    Changed all inhabited stations with hide values of 0.75 to 0.5
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Changed all inhabited stations with hide values of 0.75 to 0.5
    commiting more changes, made zalek dark red cause it fit better than purple
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typo fixes throughout the asset XML
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    * Descriptions for a few planets lacking them.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    major zalek update
    * Areze's initial work on Za'lek space.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Changed all inhabited stations with hide values of 0.75 to 0.5
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Various spelling and grammar fixes.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Add refuel to DVNN Central and Procyon Shipyards
    Typo fixes throughout the asset XML
    * Areze's initial work on Za'lek space.
    apply suppression of standard commodities in asset definition
    Made time units galactic, plus some other small fixes.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Various typo fixes and other little edits.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added mission services to hs and ns planets, bar service to hs planets.
    
    Also enabled most neutral missions for the Thurions. (Excluded bounty
    hunting since it seems the Thurions would be above that.)
    Normalize Thurion asset hide values, 0.25 for planets, 0.5 for stations
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Finished the proteron stuff I think
    
    Need to test
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Added a description to Steiner.
    * Added more systems and planets to the galaxy. Areze helped.
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Spelling & grammar
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Move a number of assets and jumps closer to system centers
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Salsax Station now uses station instead of planet graphics.
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    Modified commodity prices to make more sense.
    apply suppression of standard commodities in asset definition
    Enabled mining and added variety to the fields
    Typo fixes throughout the asset XML
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    * Bon Sebb has a presence range of 0.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    major zalek update
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Expanded Anya and Sabe, plus expanded the outfits list for Thurion shipyards.
    Normalize Thurion asset hide values, 0.25 for planets, 0.5 for stations
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Changed "STU", "STP", and "SCU" to "seconds", "periods", and "cycles".
    
    This is meant for better readability; it makes the different units
    more distinguished from each other.
    
    "STU" was replaced with "seconds" instead of "units" for two reasons:
    one, "units" is too generic (it's used for all kinds of measurements,
    not just time measurements), making it a confusing name. Two, the SCU
    is the same as a second in-universe anyway, and I don't see the
    general population abandoning that term.
    
    For the auto generation of "pretty" time text, I replaced e.g "12 STU"
    with "12s", and e.g. "8.32 STP" with "8.32p".
    
    Also fixed some language mistakes in dialogs I happened to notice,
    plus some very weird usage of the time units that probably resulted
    from a misunderstanding of how long they're supposed to be (there
    was a father concerned because his daughter disappeared several
    *seconds* ago, a food station that had a harvest every day, and a
    weekly mining trip to one planet that was talked about as if that
    wasn't frequent).
    
    Just a thought that just came to mind as I was writing this: perhaps
    it would be better to call decaperiods "daps"? Not truly necessary,
    but it would be an interesting idea because it's a name for a unit
    that kind of look like "days", while also serving as a shorthand
    for the full official name. Any thoughts?
    Revert "Gave Ulios its own faction."
    
    This reverts commit 678b4f54cf4ceb336825e4c6e1b837e99704a589.
    Gave Ulios its own faction.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    * Force-merged Za'lek space from expand branch.
    * Areze's initial work on Za'lek space.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Added more systems and planets to the galaxy. Areze helped.
    Modified commodity prices to make more sense.
    Fixed Fury Station class.
    Fixed a typo. (Sorry, just notice it while viewing on GitHub.)
    Added FLF Pirate Alliance mission (flf_dvk02).
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Typo fixes throughout the asset XML
    Modified asset techs and propagated new tech
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added Elite core techs to all major factions, all three techs appear once in each faction.
    * Added more systems and planets to the galaxy. Areze helped.
    commiting more changes, made zalek dark red cause it fit better than purple
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    Seed beam techs across various assets (primarily Za'lek)
    Typo fixes throughout the asset XML
    major zalek update
    commiting more changes, made zalek dark red cause it fit better than purple
    Vengeance now armorbreaker, added dome Zlk assets, tweaked others
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typo fixes throughout the asset XML
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    Fixed typos in some Dvaered assets.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Expanded Anya and Sabe, plus expanded the outfits list for Thurion shipyards.
    Added outfitters to Thurion shipyards.
    Normalize Thurion asset hide values, 0.25 for planets, 0.5 for stations
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Move a number of assets and jumps closer to system centers
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    support for standard commodities
    commodity tweaks
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Add refuel to DVNN Central and Procyon Shipyards
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Descriptions for a few planets lacking them.
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Descriptions for a few planets lacking them.
    Typo fixes throughout the asset XML
    Modified asset techs and propagated new tech
    Typos, consistency fixes and more descriptions for assets beginning with B
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Areze's initial work on Za'lek space.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Various typo fixes and other little edits.
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Move a number of assets and jumps closer to system centers
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Added access to the jump nearby Kretogg for the pirates.
    Converted the "blackmarket" flag to a "blackmarket" service.
    
    This is cleaner, and it's an easy way to make adjusting this property
    in the editor possible. The "blackmarket" flag outside of the assets
    is still supported for compatibility.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    Increased availability of higher-end hulls and systems
    Typo fixes throughout the asset XML
    Made all of the Pirate worlds into "black market" planets.
    
    This is the main reason I added the feature of "black market"
    planets. It makes no sense whatsoever for a shop for criminals to
    pay attention to weapon licenses. It should be a black market, and
    that means any weapons available there should be available without
    a license.
    Pirate maps added.
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    major zalek update
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified asset techs and propagated new tech
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Modified commodity prices to make more sense.
    apply suppression of standard commodities in asset definition
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    * Descriptions for a few planets lacking them.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typo fixes throughout the asset XML
    major zalek update
    apply suppression of standard commodities in asset definition
    Typo fixes throughout the asset XML
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Typos, consistency fixes and more descriptions for assets beginning with B
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    Modified asset techs and propagated new tech
    fixed grammatical mistakes in em_1 description
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    zalek ships and further map fixes
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Modified asset techs and propagated new tech
    Missed a typo in Morgan Station.
    Fixed contradiction ('subtle but obvious' -> 'low-key but obvious').
    Numerous small spelling and punctuation fixes.
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    * Descriptions for a few planets lacking them.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typo fixes throughout the asset XML
    major zalek update
    commiting more changes, made zalek dark red cause it fit better than purple
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    Removed unused Zalek assets, made dat changes for zalek personaility, and assets
    * Areze's initial work on Za'lek space.
    Better tech definitions
    Changed "STU", "STP", and "SCU" to "seconds", "periods", and "cycles".
    
    This is meant for better readability; it makes the different units
    more distinguished from each other.
    
    "STU" was replaced with "seconds" instead of "units" for two reasons:
    one, "units" is too generic (it's used for all kinds of measurements,
    not just time measurements), making it a confusing name. Two, the SCU
    is the same as a second in-universe anyway, and I don't see the
    general population abandoning that term.
    
    For the auto generation of "pretty" time text, I replaced e.g "12 STU"
    with "12s", and e.g. "8.32 STP" with "8.32p".
    
    Also fixed some language mistakes in dialogs I happened to notice,
    plus some very weird usage of the time units that probably resulted
    from a misunderstanding of how long they're supposed to be (there
    was a father concerned because his daughter disappeared several
    *seconds* ago, a food station that had a harvest every day, and a
    weekly mining trip to one planet that was talked about as if that
    wasn't frequent).
    
    Just a thought that just came to mind as I was writing this: perhaps
    it would be better to call decaperiods "daps"? Not truly necessary,
    but it would be an interesting idea because it's a name for a unit
    that kind of look like "days", while also serving as a shorthand
    for the full official name. Any thoughts?
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    More work on the Proteron systems.
    More Proteron stuff
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    Match up Eclipse Station's exterior and space graphics.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    commiting more changes, made zalek dark red cause it fit better than purple
    Renamed Valt system; name was the same as Valt, Tarsus.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Typo fixes throughout the asset XML
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    Typo fixes throughout the asset XML
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Spelling fix in mouddar.xml
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Typo fixes throughout the asset XML
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Fixed typo and shortened sentences.
    Fixed typo and shortened sentences.
    Fixed typo and shortened sentences.
    Fixed typo and shortened sentences.
    Fixed typo and shortened sentences.
    Fixed typo and shortened sentences.
    Fixed typo and shortened sentences.
    Corrected grammar - spelling now moot
    Corrected grammar - spelling now moot
    Corrected grammar - spelling now moot
    Corrected grammar - spelling now moot
    Replaced the description of Arrentil's bar "(null)" with something more appropriate
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    More Proteron stuff.
    
    Also fixed a misalignment with the description and reality of the
    Kahan by making its weapons heavy rather than medium (otherwise the
    Pacifier would just be better than it in that regard).
    Started adding more systems and assets for the Proteron.
    
    I've added in all the systems that I want to, but not all the assets.
    All but one of these systems will have one or two assets added to them
    later; I'm just not doing it right now because I'm tired and it's late.
    
    I also modified Protera Sigma to not offer Proteron ships, instead
    offloading that task to a Proteron station with a military restriction.
    fixes and zlk worlds oh my
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Finished the proteron stuff I think
    
    Need to test
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    commiting more changes, made zalek dark red cause it fit better than purple
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Typos, consistency fixes and more descriptions for assets beginning with B
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Removed extra 'Ore' entries and fixed grammer
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Move a number of assets and jumps closer to system centers
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Fixed some wrong images.
    
    Some exterior gfx that don't match the asset type. Whoops!
    Finished the proteron stuff I think
    
    Need to test
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    More work on the Proteron systems.
    More Proteron stuff.
    
    Also fixed a misalignment with the description and reality of the
    Kahan by making its weapons heavy rather than medium (otherwise the
    Pacifier would just be better than it in that regard).
    Started adding more systems and assets for the Proteron.
    
    I've added in all the systems that I want to, but not all the assets.
    All but one of these systems will have one or two assets added to them
    later; I'm just not doing it right now because I'm tired and it's late.
    
    I also modified Protera Sigma to not offer Proteron ships, instead
    offloading that task to a Proteron station with a military restriction.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    Changed all inhabited stations with hide values of 0.75 to 0.5
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Typo fixes throughout the asset XML
    * Added more systems and planets to the galaxy. Areze helped.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Modified asset techs and propagated new tech
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Addressed warnings.
    * Added more systems and planets to the galaxy. Areze helped.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    Move a number of assets and jumps closer to system centers
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    More work on the Proteron systems.
    More Proteron stuff.
    
    Also fixed a misalignment with the description and reality of the
    Kahan by making its weapons heavy rather than medium (otherwise the
    Pacifier would just be better than it in that regard).
    Started adding more systems and assets for the Proteron.
    
    I've added in all the systems that I want to, but not all the assets.
    All but one of these systems will have one or two assets added to them
    later; I'm just not doing it right now because I'm tired and it's late.
    
    I also modified Protera Sigma to not offer Proteron ships, instead
    offloading that task to a Proteron station with a military restriction.
    Fixed Fury Station class.
    Fixed a typo. (Sorry, just notice it while viewing on GitHub.)
    Added FLF Pirate Alliance mission (flf_dvk02).
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    More work on the Proteron systems.
    More Proteron stuff.
    
    Also fixed a misalignment with the description and reality of the
    Kahan by making its weapons heavy rather than medium (otherwise the
    Pacifier would just be better than it in that regard).
    Started adding more systems and assets for the Proteron.
    
    I've added in all the systems that I want to, but not all the assets.
    All but one of these systems will have one or two assets added to them
    later; I'm just not doing it right now because I'm tired and it's late.
    
    I also modified Protera Sigma to not offer Proteron ships, instead
    offloading that task to a Proteron station with a military restriction.
    apply suppression of standard commodities in asset definition
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Vengeance now armorbreaker, added dome Zlk assets, tweaked others
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Typo fixes throughout the asset XML
    * Fixed two Frontier worlds written up as settled by the same colony ship.
    Planet had a station exterior.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified asset techs and propagated new tech
    Numerous small spelling and punctuation fixes.
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    * Added more systems and planets to the galaxy. Areze helped.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typo fixes throughout the asset XML
    Typos, consistency fixes and more descriptions for assets beginning with B
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Various typo fixes and other little edits.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added mission services to hs and ns planets, bar service to hs planets.
    
    Also enabled most neutral missions for the Thurions. (Excluded bounty
    hunting since it seems the Thurions would be above that.)
    Normalize Thurion asset hide values, 0.25 for planets, 0.5 for stations
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Descriptions for a few planets lacking them.
    Typos, consistency fixes and more descriptions for assets beginning with B
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified asset techs and propagated new tech
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Addressed warnings.
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    Various typo fixes and other little edits.
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Changed all inhabited stations with hide values of 0.75 to 0.5
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Spelling & grammar
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    Typo fix in Grandard's description
    Typo fixes throughout the asset XML
    Modified asset techs and propagated new tech
    Fixed typo in Grandard's bar description
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added Elite core techs to all major factions, all three techs appear once in each faction.
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added Elite core techs to all major factions, all three techs appear once in each faction.
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    commodity tweaks
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Typo fixes throughout the asset XML
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    * Descriptions for a few planets lacking them.
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    What on Earth (or Culex) is 'forensic' traffic?
    * Added more systems and planets to the galaxy. Areze helped.
    Typo fixes caught by raptorfx.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Typos, consistency fixes and more descriptions for assets beginning with B
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added descriptions to Ruadan Prime and Ruadan Bastion.
    
    While the player can never land there, the "system map" feature
    allows the description to be viewed, so descriptions have been
    added. Also deleted the unused Ruadan asset.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Seed beam techs across various assets (primarily Za'lek)
    Remove virtual Za'lek presences frm Ruadan and reduce its asset presences
    Remove duplicate tech from two assets
    Replace obsolete Engines Elite tech on two assets
    commiting more changes, made zalek dark red cause it fit better than purple
    Removed unused Zalek assets, made dat changes for zalek personaility, and assets
    zalek ships and further map fixes
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified asset techs and propagated new tech
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    Changed all inhabited stations with hide values of 0.75 to 0.5
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Adjusted New Haven's techs.
    
    Just fixing some anomalies and also slightly downgrading New Haven
    in some areas to make Sanchez stand out a little better.
    Converted the "blackmarket" flag to a "blackmarket" service.
    
    This is cleaner, and it's an easy way to make adjusting this property
    in the editor possible. The "blackmarket" flag outside of the assets
    is still supported for compatibility.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    Seed beam techs across various assets (primarily Za'lek)
    Increased availability of higher-end hulls and systems
    Made all of the Pirate worlds into "black market" planets.
    
    This is the main reason I added the feature of "black market"
    planets. It makes no sense whatsoever for a shop for criminals to
    pay attention to weapon licenses. It should be a black market, and
    that means any weapons available there should be available without
    a license.
    Vengeance now armorbreaker, added dome Zlk assets, tweaked others
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    Pirate maps added.
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Typo fixes throughout the asset XML
    major zalek update
    commiting more changes, made zalek dark red cause it fit better than purple
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    Move a number of assets and jumps closer to system centers
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    commiting more changes, made zalek dark red cause it fit better than purple
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    commiting more changes, made zalek dark red cause it fit better than purple
    Typos, consistency fixes and more descriptions for assets beginning with B
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Seed beam techs across various assets (primarily Za'lek)
    Typo fixes throughout the asset XML
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    Typo fixes throughout the asset XML
    major zalek update
    commiting more changes, made zalek dark red cause it fit better than purple
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    fixes and zlk worlds oh my
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    More Proteron stuff
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Typo fixes throughout the asset XML
    Modified asset techs and propagated new tech
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    Consistent capitalisation of Station in names, and a few other minor fixes.
    ...and that's why you check the contents of your commits.
    Typo and phrasing fixes by Sudarshan S
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    Move a number of assets and jumps closer to system centers
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typo fixes throughout the asset XML
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Added more systems and planets to the galaxy. Areze helped.
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    * Added more systems and planets to the galaxy. Areze helped.
    * Areze's initial work on Za'lek space.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typo fixes throughout the asset XML
    major zalek update
    Vengeance now armorbreaker, added dome Zlk assets, tweaked others
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Modified asset techs and propagated new tech
    * Added more systems and planets to the galaxy. Areze helped.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    * Added more systems and planets to the galaxy. Areze helped.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Modified asset techs and propagated new tech
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    fixing typos in eiger.xml and gordons_exchange.xml
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    zalek ships and further map fixes
    * Added more systems and planets to the galaxy. Areze helped.
    * Areze's initial work on Za'lek space.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    commiting more changes, made zalek dark red cause it fit better than purple
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Typo fixes throughout the asset XML
    commiting more changes, made zalek dark red cause it fit better than purple
    fixes and zlk worlds oh my
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Typo fixes throughout the asset XML
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Added more systems and planets to the galaxy. Areze helped.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    * Added more systems and planets to the galaxy. Areze helped.
    * Areze's initial work on Za'lek space.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added some more techs to Sanchez.
    
    This just adds some more techs to Sanchez so that it has most core
    outfits and all ion weapons.
    Converted the "blackmarket" flag to a "blackmarket" service.
    
    This is cleaner, and it's an easy way to make adjusting this property
    in the editor possible. The "blackmarket" flag outside of the assets
    is still supported for compatibility.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    Increased availability of higher-end hulls and systems
    Made all of the Pirate worlds into "black market" planets.
    
    This is the main reason I added the feature of "black market"
    planets. It makes no sense whatsoever for a shop for criminals to
    pay attention to weapon licenses. It should be a black market, and
    that means any weapons available there should be available without
    a license.
    Sanchez’ description: forgot one damn typo. :-/
    Typos in Sanchez’ file.
    Pirate maps added.
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    * Added more systems and planets to the galaxy. Areze helped.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Descriptions for a few planets lacking them.
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    zalek ships and further map fixes
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Typos, consistency fixes and more descriptions for assets beginning with B
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Made time units galactic, plus some other small fixes.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Typo fixes throughout the asset XML
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Rewrite Sander's description to avoid referencing non-existent planet
    
    Reported by DarthKev
    Typo fixes throughout the asset XML
    * Added more systems and planets to the galaxy. Areze helped.
    Removed some more ableist language.
    Modified asset techs and propagated new tech
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    Various typo fixes and other little edits.
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    Consistent capitalisation of Station in names, and a few other minor fixes.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added Elite core techs to all major factions, all three techs appear once in each faction.
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typo fixes throughout the asset XML
    Modified asset techs and propagated new tech
    Fix minor typo in planet description.
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    * Descriptions for a few planets lacking them.
    Typos, consistency fixes and more descriptions for assets beginning with B
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Added ore as a commodity on Long Rock.
    
    Long Rock's description says it's a mining world, so it makes sense
    for it to be possible to buy ore from it.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Typo fix
    Typo fixes throughout the asset XML
    * Added more systems and planets to the galaxy. Areze helped.
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    Move a number of assets and jumps closer to system centers
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Modified asset techs and propagated new tech
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Addressed warnings.
    * Added more systems and planets to the galaxy. Areze helped.
    commiting more changes, made zalek dark red cause it fit better than purple
    zalek ships and further map fixes
    * Force-merged Za'lek space from expand branch.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Descriptions for a few planets lacking them.
    Typos, consistency fixes and more descriptions for assets beginning with B
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Started adding more systems and assets for the Proteron.
    
    I've added in all the systems that I want to, but not all the assets.
    All but one of these systems will have one or two assets added to them
    later; I'm just not doing it right now because I'm tired and it's late.
    
    I also modified Protera Sigma to not offer Proteron ships, instead
    offloading that task to a Proteron station with a military restriction.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Expanded Anya and Sabe, plus expanded the outfits list for Thurion shipyards.
    Added outfitters to Thurion shipyards.
    Normalize Thurion asset hide values, 0.25 for planets, 0.5 for stations
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Modified commodity prices to make more sense.
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typo fixes throughout the asset XML
    * Added more systems and planets to the galaxy. Areze helped.
    Typo fixes caught by raptorfx.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Move a number of assets and jumps closer to system centers
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    major zalek update
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Seed beam techs across various assets (primarily Za'lek)
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added Elite core techs to all major factions, all three techs appear once in each faction.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    commiting more changes, made zalek dark red cause it fit better than purple
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Added mission services to hs and ns planets, bar service to hs planets.
    
    Also enabled most neutral missions for the Thurions. (Excluded bounty
    hunting since it seems the Thurions would be above that.)
    Normalize Thurion asset hide values, 0.25 for planets, 0.5 for stations
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    More Proteron stuff.
    
    Also fixed a misalignment with the description and reality of the
    Kahan by making its weapons heavy rather than medium (otherwise the
    Pacifier would just be better than it in that regard).
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    More Proteron stuff.
    
    Also fixed a misalignment with the description and reality of the
    Kahan by making its weapons heavy rather than medium (otherwise the
    Pacifier would just be better than it in that regard).
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Descriptions for a few planets lacking them.
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Addressed warnings.
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Typo fixes throughout the asset XML
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    commiting more changes, made zalek dark red cause it fit better than purple
    fixes and zlk worlds oh my
    * Fixed improper planet graphic assignment.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    More proteron
    
    Just one more system
    More work on the Proteron systems.
    More Proteron stuff.
    
    Also fixed a misalignment with the description and reality of the
    Kahan by making its weapons heavy rather than medium (otherwise the
    Pacifier would just be better than it in that regard).
    commiting more changes, made zalek dark red cause it fit better than purple
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Changed all inhabited stations with hide values of 0.75 to 0.5
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Typo fixes throughout the asset XML
    major zalek update
    commiting more changes, made zalek dark red cause it fit better than purple
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added two new independent stations between Teller and other Pirate strongholds.
    
    These stations are designed to mainly be refueling stops for pirate
    aligned players, since without them the journey to Teller is nearly
    insurmountable. Incidentally, they're marginally useful for non-pirate
    players too, since they're located closer to the centers of their
    respective systems.
    apply suppression of standard commodities in asset definition
    Seed beam techs across various assets (primarily Za'lek)
    Changed all inhabited stations with hide values of 0.75 to 0.5
    major zalek update
    commiting more changes, made zalek dark red cause it fit better than purple
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Move a number of assets and jumps closer to system centers
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Typos, consistency fixes and more descriptions for assets beginning with B
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    More Proteron stuff.
    
    Also fixed a misalignment with the description and reality of the
    Kahan by making its weapons heavy rather than medium (otherwise the
    Pacifier would just be better than it in that regard).
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Typos, consistency fixes and more descriptions for assets beginning with B
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    Move a number of assets and jumps closer to system centers
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Typo fixes throughout the asset XML
    major zalek update
    commiting more changes, made zalek dark red cause it fit better than purple
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    Move a number of assets and jumps closer to system centers
    * Descriptions for a few planets lacking them.
    Modified asset techs and propagated new tech
    More typos and consistency fixes...
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    More proteron
    
    Just one more system
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Typo fixes throughout the asset XML
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Move a number of assets and jumps closer to system centers
    fixed grammar in adham description
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Modified commodity prices to make more sense.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    * Descriptions for a few planets lacking them.
    Typo fixes throughout the asset XML
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Finished the proteron stuff I think
    
    Need to test
    More
    More work on the Proteron systems.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Various typo fixes and other little edits.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    * Descriptions for a few planets lacking them.
    Typo fixes throughout the asset XML
    major zalek update
    Removed unused Zalek assets, made dat changes for zalek personaility, and assets
    Vengeance now armorbreaker, added dome Zlk assets, tweaked others
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    Removed unused Zalek assets, made dat changes for zalek personaility, and assets
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Added more systems and planets to the galaxy. Areze helped.
    Converted the "blackmarket" flag to a "blackmarket" service.
    
    This is cleaner, and it's an easy way to make adjusting this property
    in the editor possible. The "blackmarket" flag outside of the assets
    is still supported for compatibility.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    Fixed the wrong planet being a black market.
    
    I was thinking of the system Qorel, and ended up making Qoral (an
    unrelated planet) a black market instead of Qorellia. Fixed now.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Qorel Expanse added.
    
      - It is a set of pirate systems and stations in the empty space between the
        Empire and the Dvaered allowing a safe^Wpossible route between Vorca and
        New Haven.
      - The map containing the position of the entry and exit points has to
        be bought, and it’s currently a bit expensive if you are begining
        the game, though the pirate missions are at the same time very
        lucrative… (maybe a bit much?)
      - It could be seen as a test to know whether or not other “expanses”
        should be added in the other empty spaces between other factions,
        but IMHO, it makes playing pirate a bit easier. Without that, you
        could not play purely pirate and would have to be allied with at
        least one or two factions (and one of them has to be the Dvaered…)
        to only be able to move through the galaxy…
    Better tech definitions
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    Za'lek space expansion
    
    Added some additional content in Za'lek space.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    Typos, consistency fixes and more descriptions for assets beginning with B
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Modified commodity prices to make more sense.
    apply suppression of standard commodities in asset definition
    Move a number of assets and jumps closer to system centers
    Changed all inhabited stations with hide values of 0.75 to 0.5
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    Typo fixes throughout the asset XML
    major zalek update
    * Descriptions for a few planets lacking them.
    Typos, consistency fixes and more descriptions for assets beginning with B
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Typo fixes throughout the asset XML
    Fixed a typo.
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    commiting more changes, made zalek dark red cause it fit better than purple
    fixes and zlk worlds oh my
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Move a number of assets and jumps closer to system centers
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Added more systems and planets to the galaxy. Areze helped.
    Move a number of assets and jumps closer to system centers
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Added mission services to hs and ns planets, bar service to hs planets.
    
    Also enabled most neutral missions for the Thurions. (Excluded bounty
    hunting since it seems the Thurions would be above that.)
    Normalize Thurion asset hide values, 0.25 for planets, 0.5 for stations
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Numerous small spelling and punctuation fixes.
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    Consistent capitalisation of Station in names, and a few other minor fixes.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Made time units galactic, plus some other small fixes.
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Changed all inhabited stations with hide values of 0.75 to 0.5
    Increased availability of higher-end hulls and systems
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Modified asset techs and propagated new tech
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added High core techs to all major factions. Each tech appears three times for each faction.
    * All Pirate worlds also sell all high core outfits.
    * Added more systems and planets to the galaxy. Areze helped.
    Finished the proteron stuff I think
    
    Need to test
    * Descriptions for a few planets lacking them.
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Changed ships produced to sirius to match description.  Sofar soromid ships
    were build in a sirius military asset...
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Added more systems and planets to the galaxy. Areze helped.
    More
    Expanded Anya and Sabe, plus expanded the outfits list for Thurion shipyards.
    Added outfitters to Thurion shipyards.
    Normalize Thurion asset hide values, 0.25 for planets, 0.5 for stations
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added a small invisible "Proteron Dissident" faction.
    
    This is a faction which appears rarely in Proteron systems which looks
    identical to the Civilian faction, but which the Proteron are enemies
    with. Enables hunting down dissidents through the Patrol mission, and
    will enable a modified bounty hunt for dissidents.
    Added Virtual Thurion Local assets to inter-Thurion Nebula systems.
    
    These assets add a tiny presence (10) to these systems, causing
    Thurion music to be played and also making these systems seem less
    empty.
    added the miners faction
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Addressed warnings.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Seed beam techs across various assets (primarily Za'lek)
    Additional galaxy changes - Za'lek, trader presence, asset ranges
    
    The Za'lek systems are now more heavily interlinked, and their highway now
    extends down to Ruadan.
    
    Many low-value Empire assets have had their presence ranges reduced.
    
    Trader presence has been added along highway routes.
    * Descriptions for a few planets lacking them.
    Fixed Cynthia mission having broken it when I moved it (apologies) and a number of typos, grammar fixes and planet consistancy fixes
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Descriptions for a few planets lacking them.
    Typo fixes throughout the asset XML
    Typos etc. for assets beginning with C plus a small rewrite for brock that was bugging me
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Added access to the jump nearby Kretogg for the pirates.
    Converted the "blackmarket" flag to a "blackmarket" service.
    
    This is cleaner, and it's an easy way to make adjusting this property
    in the editor possible. The "blackmarket" flag outside of the assets
    is still supported for compatibility.
    Added the "blackmarket" flag to Wardens End.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    Fixed a typo, slightly modified some text.
    
    Checking a dictionary, I don't think talking about a "quiet and
    stable calm" is technically incorrect, but it just sounds off to me.
    Maybe it's just a regional thing, but I've always thought of "calm"
    as an adjective.
    Warden's End is now landable and has assets, etc.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Expanded Anya and Sabe, plus expanded the outfits list for Thurion shipyards.
    Added outfitters to Thurion shipyards.
    Normalize Thurion asset hide values, 0.25 for planets, 0.5 for stations
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Brought thurion space up to date.
    apply suppression of standard commodities in asset definition
    Changed all inhabited stations with hide values of 0.75 to 0.5
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of asset named e* plus added Z class space image to match Eiroik exterior image and description
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    * Descriptions for a few planets lacking them.
    More typos and consistency fixes...
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Various typo fixes and other little edits.
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    Finished the proteron stuff I think
    
    Need to test
    Proofread and corrected classes of assets named f* plus did pirate assets so I remembered to set their stations to interfactional
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Modified commodity prices to make more sense.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Changed "STU", "STP", and "SCU" to "seconds", "periods", and "cycles".
    
    This is meant for better readability; it makes the different units
    more distinguished from each other.
    
    "STU" was replaced with "seconds" instead of "units" for two reasons:
    one, "units" is too generic (it's used for all kinds of measurements,
    not just time measurements), making it a confusing name. Two, the SCU
    is the same as a second in-universe anyway, and I don't see the
    general population abandoning that term.
    
    For the auto generation of "pretty" time text, I replaced e.g "12 STU"
    with "12s", and e.g. "8.32 STP" with "8.32p".
    
    Also fixed some language mistakes in dialogs I happened to notice,
    plus some very weird usage of the time units that probably resulted
    from a misunderstanding of how long they're supposed to be (there
    was a father concerned because his daughter disappeared several
    *seconds* ago, a food station that had a harvest every day, and a
    weekly mining trip to one planet that was talked about as if that
    wasn't frequent).
    
    Just a thought that just came to mind as I was writing this: perhaps
    it would be better to call decaperiods "daps"? Not truly necessary,
    but it would be an interesting idea because it's a name for a unit
    that kind of look like "days", while also serving as a shorthand
    for the full official name. Any thoughts?
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    Modified asset techs and propagated new tech
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    Modified Soromid commodities completely.
    
    Previous definitions followed no clear patterns and didn't seem to
    follow the lores written for the respective planets. I've addressed
    this by going through every Soromid asset and redefining commodities
    to make more sense and make Soromid space more diverse as far as its
    economy goes.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Added more systems and planets to the galaxy. Areze helped.
    apply suppression of standard commodities in asset definition
    Changed all inhabited stations with hide values of 0.75 to 0.5
    * Randomly sprinkled Low and Medium core techs on ALL assets that sell outfits.
      This was done using a Perl script that rolled for each tech separately.
      Probability used was 0.35.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Removed an alarming number of empty Commodity services.
    
    These empty Commodity services are a problem if you're actually
    looking for a place to buy/sell commodities, because the indicator
    that a planet has commodities becomes almost useless. This took some
    fiddling about with grep, but I think I've removed all instances
    of planets with empty Commodity services (i.e. offering the service
    but no commodities).
    * Added more systems and planets to the galaxy. Areze helped.
    * Added more systems and planets to the galaxy. Areze helped.
    remove capitals and spaces from data files
    * Split asset.xml into dat/assets/*.xml.
    * Split ssys.xml into dat/ssys/*.xml.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed naming inconsistencies.
    Added the rest of the bio-fins.
    Start of bio fins
    
    Just need the in-between stages now.
    Changed rarity of Heavy Weapon License weapons to 1.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    madding more crap complicated by merge conflicts, i am a tool
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Increased all swivel values to 22 degrees.
    
    The reason for this is to make aiming less difficult and to reduce
    the need to use autoaim. I tested with both a Kestrel and a Hyena.
    It seems to be a good swivel value.
    
    Set all of them to the same value because I don't think the game was
    benefiting from having different swivel values for different
    weapons.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Merge master into slots, part deux.
    * Split outfit.xml into separate files.
    Changed rarity of Heavy Weapon License weapons to 1.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Quick attempt at rebalancing beams
    
    Beams now have sustained DPS on par with similarly-sized bolt weapons.
    Consequently, ships can achieve extremely high peak DPS with beams,
    though I think this is counterbalanced by beams' fairly short range.
    Add minimum durations to beams.
    major zalek update
    madding more crap complicated by merge conflicts, i am a tool
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Merge master into slots, part deux.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Added Medium Weapon License requirement to a lot of weapons.
    
    This prevents weirdness like the Gauss Gun being less restricted than
    the generally weaker Laser PD MK3.
    
    This commit also fixes swivel for the bio weapons.
    Increased all swivel values to 22 degrees.
    
    The reason for this is to make aiming less difficult and to reduce
    the need to use autoaim. I tested with both a Kestrel and a Hyena.
    It seems to be a good swivel value.
    
    Set all of them to the same value because I don't think the game was
    benefiting from having different swivel values for different
    weapons.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Merge master into slots, part deux.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Whoops, forgot Laser Cannon.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Merge master into slots, part deux.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Increased all swivel values to 22 degrees.
    
    The reason for this is to make aiming less difficult and to reduce
    the need to use autoaim. I tested with both a Kestrel and a Hyena.
    It seems to be a good swivel value.
    
    Set all of them to the same value because I don't think the game was
    benefiting from having different swivel values for different
    weapons.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity of Heavy Weapon License weapons to 1.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Quick attempt at rebalancing beams
    
    Beams now have sustained DPS on par with similarly-sized bolt weapons.
    Consequently, ships can achieve extremely high peak DPS with beams,
    though I think this is counterbalanced by beams' fairly short range.
    Add minimum durations to beams.
    major zalek update
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Increased all swivel values to 22 degrees.
    
    The reason for this is to make aiming less difficult and to reduce
    the need to use autoaim. I tested with both a Kestrel and a Hyena.
    It seems to be a good swivel value.
    
    Set all of them to the same value because I don't think the game was
    benefiting from having different swivel values for different
    weapons.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Increased all swivel values to 22 degrees.
    
    The reason for this is to make aiming less difficult and to reduce
    the need to use autoaim. I tested with both a Kestrel and a Hyena.
    It seems to be a good swivel value.
    
    Set all of them to the same value because I don't think the game was
    benefiting from having different swivel values for different
    weapons.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Merge master into slots, part deux.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity of Heavy Weapon License weapons to 1.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Merge master into slots, part deux.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Increased all swivel values to 22 degrees.
    
    The reason for this is to make aiming less difficult and to reduce
    the need to use autoaim. I tested with both a Kestrel and a Hyena.
    It seems to be a good swivel value.
    
    Set all of them to the same value because I don't think the game was
    benefiting from having different swivel values for different
    weapons.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Merge master into slots, part deux.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Increased all swivel values to 22 degrees.
    
    The reason for this is to make aiming less difficult and to reduce
    the need to use autoaim. I tested with both a Kestrel and a Hyena.
    It seems to be a good swivel value.
    
    Set all of them to the same value because I don't think the game was
    benefiting from having different swivel values for different
    weapons.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Merge master into slots, part deux.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Increased all swivel values to 22 degrees.
    
    The reason for this is to make aiming less difficult and to reduce
    the need to use autoaim. I tested with both a Kestrel and a Hyena.
    It seems to be a good swivel value.
    
    Set all of them to the same value because I don't think the game was
    benefiting from having different swivel values for different
    weapons.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Increased all swivel values to 22 degrees.
    
    The reason for this is to make aiming less difficult and to reduce
    the need to use autoaim. I tested with both a Kestrel and a Hyena.
    It seems to be a good swivel value.
    
    Set all of them to the same value because I don't think the game was
    benefiting from having different swivel values for different
    weapons.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Assorted Changes
    
    Makes Za'lek drones more drone-like (They'll never be piloted by the
    player under legit circumstances). Further trying to balance Electron
    Cannons so a mob of Col. HDs can't annihilate heavy ships quite as
    easily (will probably have to switch their damage to shieldbreaker to
    coinside with their desc.).
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Whoops, forgot Laser Cannon.
    Fix a delay that was still using milliseconds instead of seconds
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add laser point defense turrets
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Bump Laser PD MK3's penetration value
    
    Fixes #554.
    Add laser point defense turrets
    Changed rarity of Heavy Weapon License weapons to 1.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add Heavy Razor Turret and large razor sprites
    
    Balance for the turret is largely by Ragwortshire
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Increased all swivel values to 22 degrees.
    
    The reason for this is to make aiming less difficult and to reduce
    the need to use autoaim. I tested with both a Kestrel and a Hyena.
    It seems to be a good swivel value.
    
    Set all of them to the same value because I don't think the game was
    benefiting from having different swivel values for different
    weapons.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Merge master into slots, part deux.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Increased all swivel values to 22 degrees.
    
    The reason for this is to make aiming less difficult and to reduce
    the need to use autoaim. I tested with both a Kestrel and a Hyena.
    It seems to be a good swivel value.
    
    Set all of them to the same value because I don't think the game was
    benefiting from having different swivel values for different
    weapons.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Merge master into slots, part deux.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Added descriptions for plasma turrets, changed Orion Beam image
    
    The plasma turrets have just had the Plasma Blaster MK2 description
    copied and pasted for them, so I've given them some proper descriptions.
    I also changed the Orion Beam gfx to "ragnarok" instead of "orion" to
    match other (turreted) beams. (Of course dedicated gfx should be
    used for each of these in the future but this at leastt makes things
    consistent for now.)
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Added descriptions for plasma turrets, changed Orion Beam image
    
    The plasma turrets have just had the Plasma Blaster MK2 description
    copied and pasted for them, so I've given them some proper descriptions.
    I also changed the Orion Beam gfx to "ragnarok" instead of "orion" to
    match other (turreted) beams. (Of course dedicated gfx should be
    used for each of these in the future but this at leastt makes things
    consistent for now.)
    Quick attempt at rebalancing beams
    
    Beams now have sustained DPS on par with similarly-sized bolt weapons.
    Consequently, ships can achieve extremely high peak DPS with beams,
    though I think this is counterbalanced by beams' fairly short range.
    Remove minimum duration from the Orion Lance
    Add minimum durations to beams.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Added Medium Weapon License requirement to a lot of weapons.
    
    This prevents weirdness like the Gauss Gun being less restricted than
    the generally weaker Laser PD MK3.
    
    This commit also fixes swivel for the bio weapons.
    Increased all swivel values to 22 degrees.
    
    The reason for this is to make aiming less difficult and to reduce
    the need to use autoaim. I tested with both a Kestrel and a Hyena.
    It seems to be a good swivel value.
    
    Set all of them to the same value because I don't think the game was
    benefiting from having different swivel values for different
    weapons.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Merge master into slots, part deux.
    * Split outfit.xml into separate files.
    Changed rarity of Heavy Weapon License weapons to 1.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Merge master into slots, part deux.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Increased all swivel values to 22 degrees.
    
    The reason for this is to make aiming less difficult and to reduce
    the need to use autoaim. I tested with both a Kestrel and a Hyena.
    It seems to be a good swivel value.
    
    Set all of them to the same value because I don't think the game was
    benefiting from having different swivel values for different
    weapons.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Merge master into slots, part deux.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Quick attempt at rebalancing beams
    
    Beams now have sustained DPS on par with similarly-sized bolt weapons.
    Consequently, ships can achieve extremely high peak DPS with beams,
    though I think this is counterbalanced by beams' fairly short range.
    Update the Shattershield Lance's filename
    Add minimum durations to beams.
    major zalek update
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Za'lek weapons tweak
    
    Added two new missile launchers for medium and heavy Za'lek ships. Balanced close to Thurion launchers as the two factions are close tech-wise. Also modified the equip file so Za'lek ships should use the launchers.
    Added descriptions for plasma turrets, changed Orion Beam image
    
    The plasma turrets have just had the Plasma Blaster MK2 description
    copied and pasted for them, so I've given them some proper descriptions.
    I also changed the Orion Beam gfx to "ragnarok" instead of "orion" to
    match other (turreted) beams. (Of course dedicated gfx should be
    used for each of these in the future but this at leastt makes things
    consistent for now.)
    Quick attempt at rebalancing beams
    
    Beams now have sustained DPS on par with similarly-sized bolt weapons.
    Consequently, ships can achieve extremely high peak DPS with beams,
    though I think this is counterbalanced by beams' fairly short range.
    Remove minimum duration from the Orion Lance
    Add minimum durations to beams.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Increased all swivel values to 22 degrees.
    
    The reason for this is to make aiming less difficult and to reduce
    the need to use autoaim. I tested with both a Kestrel and a Hyena.
    It seems to be a good swivel value.
    
    Set all of them to the same value because I don't think the game was
    benefiting from having different swivel values for different
    weapons.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Increased all swivel values to 22 degrees.
    
    The reason for this is to make aiming less difficult and to reduce
    the need to use autoaim. I tested with both a Kestrel and a Hyena.
    It seems to be a good swivel value.
    
    Set all of them to the same value because I don't think the game was
    benefiting from having different swivel values for different
    weapons.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add medium weapon license requirement to Razor MK2/3 turrets
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Whoops, forgot Laser Cannon.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Merge master into slots, part deux.
    * Split outfit.xml into separate files.
    Changed rarity of Heavy Weapon License weapons to 1.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add a Heavy Ripper Turret, meant for destroyers
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    FIXED: cheater's laser cannon (used by Four Winds in darkshadow) had a delay of 850.
    Assuming that was supposed to be the range, and gave it the 0.6 delay from the normal laser.  They now pose an actual threat, but are beatable by a cruiser if it can keep them at range.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Quick attempt at rebalancing beams
    
    Beams now have sustained DPS on par with similarly-sized bolt weapons.
    Consequently, ships can achieve extremely high peak DPS with beams,
    though I think this is counterbalanced by beams' fairly short range.
    Add minimum durations to beams.
    madding more crap complicated by merge conflicts, i am a tool
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity of Heavy Weapon License weapons to 1.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Purge many unused core outfits
    Quick attempt at rebalancing beams
    
    Beams now have sustained DPS on par with similarly-sized bolt weapons.
    Consequently, ships can achieve extremely high peak DPS with beams,
    though I think this is counterbalanced by beams' fairly short range.
    Add minimum durations to beams.
    major zalek update
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Added Medium Weapon License requirement to a lot of weapons.
    
    This prevents weirdness like the Gauss Gun being less restricted than
    the generally weaker Laser PD MK3.
    
    This commit also fixes swivel for the bio weapons.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Merge master into slots, part deux.
    * Split outfit.xml into separate files.
    Tweaked the rarities as suggested by bobbens
    Changed rarity of Heavy Weapon License weapons to 1.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Increased all swivel values to 22 degrees.
    
    The reason for this is to make aiming less difficult and to reduce
    the need to use autoaim. I tested with both a Kestrel and a Hyena.
    It seems to be a good swivel value.
    
    Set all of them to the same value because I don't think the game was
    benefiting from having different swivel values for different
    weapons.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Merge master into slots, part deux.
    * Split outfit.xml into separate files.
    Changed rarity of Heavy Weapon License weapons to 1.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Increased all swivel values to 22 degrees.
    
    The reason for this is to make aiming less difficult and to reduce
    the need to use autoaim. I tested with both a Kestrel and a Hyena.
    It seems to be a good swivel value.
    
    Set all of them to the same value because I don't think the game was
    benefiting from having different swivel values for different
    weapons.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Merge master into slots, part deux.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Added Medium Weapon License requirement to a lot of weapons.
    
    This prevents weirdness like the Gauss Gun being less restricted than
    the generally weaker Laser PD MK3.
    
    This commit also fixes swivel for the bio weapons.
    Increased all swivel values to 22 degrees.
    
    The reason for this is to make aiming less difficult and to reduce
    the need to use autoaim. I tested with both a Kestrel and a Hyena.
    It seems to be a good swivel value.
    
    Set all of them to the same value because I don't think the game was
    benefiting from having different swivel values for different
    weapons.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Merge master into slots, part deux.
    * Split outfit.xml into separate files.
    Changed rarity of Heavy Weapon License weapons to 1.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Increased all swivel values to 22 degrees.
    
    The reason for this is to make aiming less difficult and to reduce
    the need to use autoaim. I tested with both a Kestrel and a Hyena.
    It seems to be a good swivel value.
    
    Set all of them to the same value because I don't think the game was
    benefiting from having different swivel values for different
    weapons.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Merge master into slots, part deux.
    * Split outfit.xml into separate files.
    Changed rarity of Heavy Weapon License weapons to 1.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Merge master into slots, part deux.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Quick attempt at rebalancing beams
    
    Beams now have sustained DPS on par with similarly-sized bolt weapons.
    Consequently, ships can achieve extremely high peak DPS with beams,
    though I think this is counterbalanced by beams' fairly short range.
    Add minimum durations to beams.
    general update, hopefully not broken
    major zalek update
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Whoops, forgot Laser Cannon.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Merge master into slots, part deux.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Increased all swivel values to 22 degrees.
    
    The reason for this is to make aiming less difficult and to reduce
    the need to use autoaim. I tested with both a Kestrel and a Hyena.
    It seems to be a good swivel value.
    
    Set all of them to the same value because I don't think the game was
    benefiting from having different swivel values for different
    weapons.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Added Medium Weapon License requirement to a lot of weapons.
    
    This prevents weirdness like the Gauss Gun being less restricted than
    the generally weaker Laser PD MK3.
    
    This commit also fixes swivel for the bio weapons.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Merge master into slots, part deux.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add medium weapon license requirement to Razor MK2/3 turrets
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add laser point defense turrets
    Changed rarity of Heavy Weapon License weapons to 1.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity of Heavy Weapon License weapons to 1.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Increased all swivel values to 22 degrees.
    
    The reason for this is to make aiming less difficult and to reduce
    the need to use autoaim. I tested with both a Kestrel and a Hyena.
    It seems to be a good swivel value.
    
    Set all of them to the same value because I don't think the game was
    benefiting from having different swivel values for different
    weapons.
    Increase the heavy ripper cannon's penetration
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Increased all swivel values to 22 degrees.
    
    The reason for this is to make aiming less difficult and to reduce
    the need to use autoaim. I tested with both a Kestrel and a Hyena.
    It seems to be a good swivel value.
    
    Set all of them to the same value because I don't think the game was
    benefiting from having different swivel values for different
    weapons.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Merge master into slots, part deux.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Quick attempt at rebalancing beams
    
    Beams now have sustained DPS on par with similarly-sized bolt weapons.
    Consequently, ships can achieve extremely high peak DPS with beams,
    though I think this is counterbalanced by beams' fairly short range.
    Remove minimum duration from the Orion Lance
    Add minimum durations to beams.
    major zalek update
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Added descriptions for plasma turrets, changed Orion Beam image
    
    The plasma turrets have just had the Plasma Blaster MK2 description
    copied and pasted for them, so I've given them some proper descriptions.
    I also changed the Orion Beam gfx to "ragnarok" instead of "orion" to
    match other (turreted) beams. (Of course dedicated gfx should be
    used for each of these in the future but this at leastt makes things
    consistent for now.)
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Merge master into slots, part deux.
    * Split outfit.xml into separate files.
    Tweaked the rarities as suggested by bobbens
    Changed rarity of Heavy Weapon License weapons to 1.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Increased all swivel values to 22 degrees.
    
    The reason for this is to make aiming less difficult and to reduce
    the need to use autoaim. I tested with both a Kestrel and a Hyena.
    It seems to be a good swivel value.
    
    Set all of them to the same value because I don't think the game was
    benefiting from having different swivel values for different
    weapons.
    Revert "Further Heavy Drone Tweakery"
    
    This reverts commit f279292bb2cbad7c676999156c5140b4c4a30ae3.
    Further Heavy Drone Tweakery
    
    maek heaby drone stronk :DDDDD
    Rebalance the Heavy Neutron Disruptor
    general update, hopefully not broken
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Automatically give access to all GUIs at the start.
    
    This is a bit of an ugly way to make all GUIs available, but it
    seems to be the only way at the moment. A proper fix in the C code
    can come some other time.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Another pirate bounty mission replacement.
    
    Actually, I replaced my previous pirate bounty mission replacement
    with two missions: the "Dead or Alive" bounty mission, and the "Alive"
    bounty mission. Both of these require a new "Mercenary License".
    
    Conflicts:
    
            dat/missions/neutral/pirbounty.lua
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Split outfit.xml into separate files.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Automatically give access to all GUIs at the start.
    
    This is a bit of an ugly way to make all GUIs available, but it
    seems to be the only way at the moment. A proper fix in the C code
    can come some other time.
    Legacy GUI outfit
    
    Added a buyable legacy GUI outfit
    * Split outfit.xml into separate files.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Automatically give access to all GUIs at the start.
    
    This is a bit of an ugly way to make all GUIs available, but it
    seems to be the only way at the moment. A proper fix in the C code
    can come some other time.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Split outfit.xml into separate files.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Automatically give access to all GUIs at the start.
    
    This is a bit of an ugly way to make all GUIs available, but it
    seems to be the only way at the moment. A proper fix in the C code
    can come some other time.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    Added all the remaining Soromid brains.
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Changed rarity indications for outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    Added all the remaining Soromid brains.
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    Added all the remaining Soromid brains.
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    Added all the remaining Soromid brains.
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    Added all the remaining Soromid brains.
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    Added all the remaining Soromid brains.
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    Added all the remaining Soromid brains.
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Changed rarity indications for outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    Added all the remaining Soromid brains.
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    Added all the remaining Soromid brains.
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    Added all the remaining Soromid brains.
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Changed rarity indications for outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    Added all the remaining Soromid brains.
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Changed rarity indications for outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    Added all the remaining Soromid brains.
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    Added all the remaining Soromid brains.
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Changed rarity indications for outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    Added all the remaining Soromid brains.
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Brain prices
    Added all the remaining Soromid brains.
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Split outfit.xml into separate files.
    Renamed Boarding Androids outfits to comply with typical naming conventions.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Change Large Fuel Pod to 800 fuel, add Medium Fuel Pod
    add a larger fuel pod
    * Description edits and minor tweaks to modifier outfits.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Replace energy_regen_flat with energy_usage.
    * Edits by Areze.
    * Forgot the sizes.
    * Removed medium and heavy emergency shield boosters.
    * Added medium and heavy regular shield boosters.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Fix sillyness in sensor array description
    
    More powerful sensors should be able to detect ships further way, thus increasing the distance at which ships can be detected.
    Fixed a typo in an item description.
    Added two new Thurion ships (light fighter and bomber) and some new Thurion modifier outfits.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Replace energy_regen_flat with energy_usage.
    * Removed medium and heavy emergency shield boosters.
    * Added medium and heavy regular shield boosters.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Added two new Thurion ships (light fighter and bomber) and some new Thurion modifier outfits.
    major zalek update
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Description edits and minor tweaks to modifier outfits.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Changed reactor energy regen values to round numbers.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Replace energy_regen_flat with energy_usage.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Fixed various outfits using up energy capacity when they should be using regen.
    * Description edits and minor tweaks to modifier outfits.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Added medium and large cargo pods, similar to medium and large fuel pods.
    Same price increase, same mass increase and same capazity increase.
    * Description edits and minor tweaks to modifier outfits.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Split outfit.xml into separate files.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Added two new Thurion ships (light fighter and bomber) and some new Thurion modifier outfits.
    major zalek update
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Split outfit.xml into separate files.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Added two new Thurion ships (light fighter and bomber) and some new Thurion modifier outfits.
    Replace energy_regen_flat with energy_usage.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Description edits and minor tweaks to modifier outfits.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Replace energy_regen_flat with energy_usage.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    fixed warnings
    * Fixed various outfits using up energy capacity when they should be using regen.
    * Added jump scanner outfit.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Limit to one reverse thruster
    
    Additional reverse thrusters currently have no effect, so they should be
    limited to only one, or alternately additional ones should add more
    reverse thrust. This commit implements the first option.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Description edits and minor tweaks to modifier outfits.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Added two new Thurion ships (light fighter and bomber) and some new Thurion modifier outfits.
    major zalek update
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Split outfit.xml into separate files.
    typos
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    added more types of asteroids
    misc update on mining
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Description edits and minor tweaks to modifier outfits.
    * Split outfit.xml into separate files.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Added two new Thurion ships (light fighter and bomber) and some new Thurion modifier outfits.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Split outfit.xml into separate files.
    Renamed Boarding Androids outfits to comply with typical naming conventions.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    First pass at putting jam functionality into scramblers.
    
    It doesn't work right. The numbers are wrong. Need some help on that.
    Nerf the Milspec Scrambler slightly
    Replace energy_regen_flat with energy_usage.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * hide_rel is replaced by ew_hide.
    * Fixed various outfits using up energy capacity when they should be using regen.
    * Description edits and minor tweaks to modifier outfits.
    New Fury graphics by admiral_cheater.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Replace energy_regen_flat with energy_usage.
    * Edits by Areze.
    * Forgot the sizes.
    * Removed medium and heavy emergency shield boosters.
    * Added medium and heavy regular shield boosters.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Added medium and large cargo pods, similar to medium and large fuel pods.
    Same price increase, same mass increase and same capazity increase.
    * Description edits and minor tweaks to modifier outfits.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Split outfit.xml into separate files.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Added a cost to "Nebular Shielding Prototype".
    
    I think I get what they were going for when they made it 0, but it's
    inconsistent. Just gave it a modest price of 10,000 credits.
    Replace energy_regen_flat with energy_usage.
    Added nebu_absorb_shield shipstat
    
    Added nebu_absorb_shield shipstat, as well as a prototype outfit, nebula_shielding0,
    that uses it.  If a ship has nebu_absorb_shield, it will be applied to nebula damage
    in the same way that dmg_absorb is applied to normal damage.  Removed nebula_dmg_shield,
    nebula_dmg_armor, since they were presumably meant to do the same thing, but didn't
    have any real code attached to them in the damage calcs.  The Thurion Integrity will
    need to be updated, since it uses the old values, and since they didn't do anything,
    I have no way of knowing what -80 and -97 were supposed to mean in that context.
    I also added a nebu_absorb_armor shipstat as a placeholder, but it doesn't do anything
    yet.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Replace energy_regen_flat with energy_usage.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Description edits and minor tweaks to modifier outfits.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Replace energy_regen_flat with energy_usage.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Description edits and minor tweaks to modifier outfits.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Changed reactor energy regen values to round numbers.
    * Description edits and minor tweaks to modifier outfits.
    * Split outfit.xml into separate files.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    New large fuel pod graphic to differentiate from medium fuel pod
    Change Large Fuel Pod to 800 fuel, add Medium Fuel Pod
    add a larger fuel pod
    * Description edits and minor tweaks to modifier outfits.
    * Split outfit.xml into separate files.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Added two new Thurion ships (light fighter and bomber) and some new Thurion modifier outfits.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Description edits and minor tweaks to modifier outfits.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Description edits and minor tweaks to modifier outfits.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Changed reactor energy regen values to round numbers.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Give the stabilizer -5% mass limit to discourage its use.
    Replace energy_regen_flat with energy_usage.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Description edits and minor tweaks to modifier outfits.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    First pass at putting jam functionality into scramblers.
    
    It doesn't work right. The numbers are wrong. Need some help on that.
    Replace energy_regen_flat with energy_usage.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * hide_rel is replaced by ew_hide.
    * Fixed various outfits using up energy capacity when they should be using regen.
    New Fury graphics by admiral_cheater.
    * Split outfit.xml into separate files.
    Renamed Valkyrie Ride to Valkyrie Beam.
    Added some new weapons to the travelling merchant.
    Lowered damage of Hades torch.
    Added some new weapons to the travelling merchant.
    Changed rarity indications for outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    First pass at putting jam functionality into scramblers.
    
    It doesn't work right. The numbers are wrong. Need some help on that.
    Add manually-defined weapon groups to most active outfits
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Merge master into slots, part deux.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    First pass at putting jam functionality into scramblers.
    
    It doesn't work right. The numbers are wrong. Need some help on that.
    Add manually-defined weapon groups to most active outfits
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Merge master into slots, part deux.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    * Hidden jump points can now be detected by ships that have the "hidden jump detect" ship stat.
    * Added a hidden jump scanner (activated) that provides said stat.
    Changed rarity indications for outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Increased the active/cooldown times to half of what they originally were.
    Reduced the active and cooldown times of emergency shield booster.
    
    This gives the outfit more of a "pulse" effect, which is much more
    useful since the whole point of the outfit is to dramatically boost
    shield usage at a cost of dramatically boosting energy usage.
    Give the emergency shield booster energy_loss
    
    energy_usage is simply a modifier for energy_regen, and fits into the
    same exponential curve, so at full energy, negative energy_regen will
    result in no change.
    
    TODO: Sort out the confused nomenclature and document it.
    Add manually-defined weapon groups to most active outfits
    Increased the energy usage of the Emergency Shield Booster.
    
    The text describing this outfit claims that energy use is
    "disproportionately high", which is complete nonsense. The cost
    before was *incredibly* cheap. It has been more than quintupled,
    to 160. This amount of energy usage does not render the outfit
    useless for small ships, though it does make the energy usage
    actually a problem for these ships.
    Replace energy_regen_flat with energy_usage.
    * Edits by Areze.
    * Can only have one emergency shield booster per ship.
    * Added Emergency Shield Booster activated outfits.
    * Recolored a couple of graphics for the occasion.
    Changed rarity indications for outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add manually-defined weapon groups to most active outfits
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Afterburners heat up more slowly.
    * Scripted temperature thresholds for afterburners.
    * Afterburners support start, on, and end sounds.
    * Still needs to be done via the generic activated outfit framework.
    * Tweaked heat values.
    * Rewrote descriptions.
    * Some code for heat on afterburners. Todo:
    ** Show afterburner heat.
    ** Don't toggle afterburner when used via weapon group.
    * Merge master into slots, part deux.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Add manually-defined weapon groups to most active outfits
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Afterburners heat up more slowly.
    * Scripted temperature thresholds for afterburners.
    * Afterburners support start, on, and end sounds.
    * Still needs to be done via the generic activated outfit framework.
    * Tweaked heat values.
    * Rewrote descriptions.
    * Some code for heat on afterburners. Todo:
    ** Show afterburner heat.
    ** Don't toggle afterburner when used via weapon group.
    * Merge master into slots, part deux.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Added Medium Weapon License requirement to a lot of weapons.
    
    This prevents weirdness like the Gauss Gun being less restricted than
    the generally weaker Laser PD MK3.
    
    This commit also fixes swivel for the bio weapons.
    Fixed BioPlasma Organ not being defined with the bio_weapon prop
    Added BioPlasma Organ, fixed upgrade script errors
    Start of bio fins
    
    Just need the in-between stages now.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Merge master into slots, part deux.
    Give bioplasma outfits non-zero mass.
    * Split outfit.xml into separate files.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Added Medium Weapon License requirement to a lot of weapons.
    
    This prevents weirdness like the Gauss Gun being less restricted than
    the generally weaker Laser PD MK3.
    
    This commit also fixes swivel for the bio weapons.
    Fixed BioPlasma Organ not being defined with the bio_weapon prop
    Added BioPlasma Organ, fixed upgrade script errors
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Added Medium Weapon License requirement to a lot of weapons.
    
    This prevents weirdness like the Gauss Gun being less restricted than
    the generally weaker Laser PD MK3.
    
    This commit also fixes swivel for the bio weapons.
    Fixed BioPlasma Organ not being defined with the bio_weapon prop
    Added BioPlasma Organ, fixed upgrade script errors
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Some rarity additions to outfits.
    Added Medium Weapon License requirement to a lot of weapons.
    
    This prevents weirdness like the Gauss Gun being less restricted than
    the generally weaker Laser PD MK3.
    
    This commit also fixes swivel for the bio weapons.
    Fixed BioPlasma Organ not being defined with the bio_weapon prop
    Added BioPlasma Organ, fixed upgrade script errors
    Start of bio fins
    
    Just need the in-between stages now.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Give bioplasma outfits non-zero mass.
    * Split outfit.xml into separate files.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    reduced overuse of gfx
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Reduce the thrust of all core engines by one third
    
    Previously, they used circa-0.5.3 values, however in 0.5.3, thrust was
    reduced by any added mass, with most ships having 30-40% more mass once
    fully equipped. This change brings top speeds back to 0.5.3 levels.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Wrote descriptions for 24 of the rebalanced engines
    Completely rebalanced 27 engines
    
    This has some implications for missions and other Lua scripts, because the
    engine mass limits originally scaled up rather linearly, whereas they're
    now divided into six explicit classes.
    Completed engine renaming (in both XML and Lua)
    Renamed numerous engines in preparation for rebalancing
    Replace energy_regen_flat with energy_usage.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Reduce the thrust of all core engines by one third
    
    Previously, they used circa-0.5.3 values, however in 0.5.3, thrust was
    reduced by any added mass, with most ships having 30-40% more mass once
    fully equipped. This change brings top speeds back to 0.5.3 levels.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Wrote descriptions for 24 of the rebalanced engines
    Completely rebalanced 27 engines
    
    This has some implications for missions and other Lua scripts, because the
    engine mass limits originally scaled up rather linearly, whereas they're
    now divided into six explicit classes.
    Completed engine renaming (in both XML and Lua)
    Renamed numerous engines in preparation for rebalancing
    Replace energy_regen_flat with energy_usage.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    linked some outfits to more atwork from Unnamed
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Reduce the thrust of all core engines by one third
    
    Previously, they used circa-0.5.3 values, however in 0.5.3, thrust was
    reduced by any added mass, with most ships having 30-40% more mass once
    fully equipped. This change brings top speeds back to 0.5.3 levels.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Wrote descriptions for 24 of the rebalanced engines
    Completely rebalanced 27 engines
    
    This has some implications for missions and other Lua scripts, because the
    engine mass limits originally scaled up rather linearly, whereas they're
    now divided into six explicit classes.
    Completed engine renaming (in both XML and Lua)
    Renamed numerous engines in preparation for rebalancing
    Replace energy_regen_flat with energy_usage.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    reduced overuse of gfx
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Reduce the thrust of all core engines by one third
    
    Previously, they used circa-0.5.3 values, however in 0.5.3, thrust was
    reduced by any added mass, with most ships having 30-40% more mass once
    fully equipped. This change brings top speeds back to 0.5.3 levels.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Wrote descriptions for 24 of the rebalanced engines
    Completely rebalanced 27 engines
    
    This has some implications for missions and other Lua scripts, because the
    engine mass limits originally scaled up rather linearly, whereas they're
    now divided into six explicit classes.
    Completed engine renaming (in both XML and Lua)
    Renamed numerous engines in preparation for rebalancing
    Replace energy_regen_flat with energy_usage.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    reduced overuse of gfx
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Reduce the thrust of all core engines by one third
    
    Previously, they used circa-0.5.3 values, however in 0.5.3, thrust was
    reduced by any added mass, with most ships having 30-40% more mass once
    fully equipped. This change brings top speeds back to 0.5.3 levels.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Wrote descriptions for 24 of the rebalanced engines
    Completely rebalanced 27 engines
    
    This has some implications for missions and other Lua scripts, because the
    engine mass limits originally scaled up rather linearly, whereas they're
    now divided into six explicit classes.
    Completed engine renaming (in both XML and Lua)
    Renamed numerous engines in preparation for rebalancing
    Replace energy_regen_flat with energy_usage.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    reduced overuse of gfx
    linked some outfits to more atwork from Unnamed
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Reduce the thrust of all core engines by one third
    
    Previously, they used circa-0.5.3 values, however in 0.5.3, thrust was
    reduced by any added mass, with most ships having 30-40% more mass once
    fully equipped. This change brings top speeds back to 0.5.3 levels.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Wrote descriptions for 24 of the rebalanced engines
    Completely rebalanced 27 engines
    
    This has some implications for missions and other Lua scripts, because the
    engine mass limits originally scaled up rather linearly, whereas they're
    now divided into six explicit classes.
    Completed engine renaming (in both XML and Lua)
    Renamed numerous engines in preparation for rebalancing
    Replace energy_regen_flat with energy_usage.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    reduced overuse of gfx
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Reduce the thrust of all core engines by one third
    
    Previously, they used circa-0.5.3 values, however in 0.5.3, thrust was
    reduced by any added mass, with most ships having 30-40% more mass once
    fully equipped. This change brings top speeds back to 0.5.3 levels.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Wrote descriptions for 24 of the rebalanced engines
    Completely rebalanced 27 engines
    
    This has some implications for missions and other Lua scripts, because the
    engine mass limits originally scaled up rather linearly, whereas they're
    now divided into six explicit classes.
    Completed engine renaming (in both XML and Lua)
    Renamed numerous engines in preparation for rebalancing
    Replace energy_regen_flat with energy_usage.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Removed positive characteristics from "beat up" engines.
    
    These engines previously had particularly high engine mass limits
    and particularly low energy usage. I have changed it so that they
    have standard engine mass limits and particularly high energy usage.
    These engines are supposed to be a last resort, after all.
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Reduce the thrust of all core engines by one third
    
    Previously, they used circa-0.5.3 values, however in 0.5.3, thrust was
    reduced by any added mass, with most ships having 30-40% more mass once
    fully equipped. This change brings top speeds back to 0.5.3 levels.
    Differentiate the three types of core systems, to improve sorting
    Completely rebalanced 27 engines
    
    This has some implications for missions and other Lua scripts, because the
    engine mass limits originally scaled up rather linearly, whereas they're
    now divided into six explicit classes.
    Replace energy_regen_flat with energy_usage.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Reduce the thrust of all core engines by one third
    
    Previously, they used circa-0.5.3 values, however in 0.5.3, thrust was
    reduced by any added mass, with most ships having 30-40% more mass once
    fully equipped. This change brings top speeds back to 0.5.3 levels.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Wrote descriptions for 24 of the rebalanced engines
    Completely rebalanced 27 engines
    
    This has some implications for missions and other Lua scripts, because the
    engine mass limits originally scaled up rather linearly, whereas they're
    now divided into six explicit classes.
    Completed engine renaming (in both XML and Lua)
    Renamed numerous engines in preparation for rebalancing
    Replace energy_regen_flat with energy_usage.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Reduce the thrust of all core engines by one third
    
    Previously, they used circa-0.5.3 values, however in 0.5.3, thrust was
    reduced by any added mass, with most ships having 30-40% more mass once
    fully equipped. This change brings top speeds back to 0.5.3 levels.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Wrote descriptions for 24 of the rebalanced engines
    Completely rebalanced 27 engines
    
    This has some implications for missions and other Lua scripts, because the
    engine mass limits originally scaled up rather linearly, whereas they're
    now divided into six explicit classes.
    Completed engine renaming (in both XML and Lua)
    Renamed numerous engines in preparation for rebalancing
    Replace energy_regen_flat with energy_usage.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    reduced overuse of gfx
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Reduce the thrust of all core engines by one third
    
    Previously, they used circa-0.5.3 values, however in 0.5.3, thrust was
    reduced by any added mass, with most ships having 30-40% more mass once
    fully equipped. This change brings top speeds back to 0.5.3 levels.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Wrote descriptions for 24 of the rebalanced engines
    Completely rebalanced 27 engines
    
    This has some implications for missions and other Lua scripts, because the
    engine mass limits originally scaled up rather linearly, whereas they're
    now divided into six explicit classes.
    Completed engine renaming (in both XML and Lua)
    Renamed numerous engines in preparation for rebalancing
    Replace energy_regen_flat with energy_usage.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    linked some outfits to more atwork from Unnamed
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Reduce the thrust of all core engines by one third
    
    Previously, they used circa-0.5.3 values, however in 0.5.3, thrust was
    reduced by any added mass, with most ships having 30-40% more mass once
    fully equipped. This change brings top speeds back to 0.5.3 levels.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Wrote descriptions for 24 of the rebalanced engines
    Completely rebalanced 27 engines
    
    This has some implications for missions and other Lua scripts, because the
    engine mass limits originally scaled up rather linearly, whereas they're
    now divided into six explicit classes.
    Completed engine renaming (in both XML and Lua)
    Renamed numerous engines in preparation for rebalancing
    Replace energy_regen_flat with energy_usage.
    Tweaked the rarities as suggested by bobbens
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    reduced overuse of gfx
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Reduce the thrust of all core engines by one third
    
    Previously, they used circa-0.5.3 values, however in 0.5.3, thrust was
    reduced by any added mass, with most ships having 30-40% more mass once
    fully equipped. This change brings top speeds back to 0.5.3 levels.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Wrote descriptions for 24 of the rebalanced engines
    Completely rebalanced 27 engines
    
    This has some implications for missions and other Lua scripts, because the
    engine mass limits originally scaled up rather linearly, whereas they're
    now divided into six explicit classes.
    Completed engine renaming (in both XML and Lua)
    Renamed numerous engines in preparation for rebalancing
    Replace energy_regen_flat with energy_usage.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Reduce the thrust of all core engines by one third
    
    Previously, they used circa-0.5.3 values, however in 0.5.3, thrust was
    reduced by any added mass, with most ships having 30-40% more mass once
    fully equipped. This change brings top speeds back to 0.5.3 levels.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Wrote descriptions for 24 of the rebalanced engines
    Completely rebalanced 27 engines
    
    This has some implications for missions and other Lua scripts, because the
    engine mass limits originally scaled up rather linearly, whereas they're
    now divided into six explicit classes.
    Completed engine renaming (in both XML and Lua)
    Renamed numerous engines in preparation for rebalancing
    Replace energy_regen_flat with energy_usage.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Removed positive characteristics from "beat up" engines.
    
    These engines previously had particularly high engine mass limits
    and particularly low energy usage. I have changed it so that they
    have standard engine mass limits and particularly high energy usage.
    These engines are supposed to be a last resort, after all.
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Reduce the thrust of all core engines by one third
    
    Previously, they used circa-0.5.3 values, however in 0.5.3, thrust was
    reduced by any added mass, with most ships having 30-40% more mass once
    fully equipped. This change brings top speeds back to 0.5.3 levels.
    Differentiate the three types of core systems, to improve sorting
    Completely rebalanced 27 engines
    
    This has some implications for missions and other Lua scripts, because the
    engine mass limits originally scaled up rather linearly, whereas they're
    now divided into six explicit classes.
    Replace energy_regen_flat with energy_usage.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    reduced overuse of gfx
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Reduce the thrust of all core engines by one third
    
    Previously, they used circa-0.5.3 values, however in 0.5.3, thrust was
    reduced by any added mass, with most ships having 30-40% more mass once
    fully equipped. This change brings top speeds back to 0.5.3 levels.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Forgot to write two engine descriptions
    Completely rebalanced 27 engines
    
    This has some implications for missions and other Lua scripts, because the
    engine mass limits originally scaled up rather linearly, whereas they're
    now divided into six explicit classes.
    Completed engine renaming (in both XML and Lua)
    Renamed numerous engines in preparation for rebalancing
    Replace energy_regen_flat with energy_usage.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Reduce the thrust of all core engines by one third
    
    Previously, they used circa-0.5.3 values, however in 0.5.3, thrust was
    reduced by any added mass, with most ships having 30-40% more mass once
    fully equipped. This change brings top speeds back to 0.5.3 levels.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Wrote descriptions for 24 of the rebalanced engines
    Completely rebalanced 27 engines
    
    This has some implications for missions and other Lua scripts, because the
    engine mass limits originally scaled up rather linearly, whereas they're
    now divided into six explicit classes.
    Completed engine renaming (in both XML and Lua)
    Renamed numerous engines in preparation for rebalancing
    Replace energy_regen_flat with energy_usage.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    reduced overuse of gfx
    linked some outfits to more atwork from Unnamed
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Reduce the thrust of all core engines by one third
    
    Previously, they used circa-0.5.3 values, however in 0.5.3, thrust was
    reduced by any added mass, with most ships having 30-40% more mass once
    fully equipped. This change brings top speeds back to 0.5.3 levels.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Wrote descriptions for 24 of the rebalanced engines
    Completely rebalanced 27 engines
    
    This has some implications for missions and other Lua scripts, because the
    engine mass limits originally scaled up rather linearly, whereas they're
    now divided into six explicit classes.
    Completed engine renaming (in both XML and Lua)
    Renamed numerous engines in preparation for rebalancing
    Replace energy_regen_flat with energy_usage.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    reduced overuse of gfx
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Reduce the thrust of all core engines by one third
    
    Previously, they used circa-0.5.3 values, however in 0.5.3, thrust was
    reduced by any added mass, with most ships having 30-40% more mass once
    fully equipped. This change brings top speeds back to 0.5.3 levels.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Forgot to write two engine descriptions
    Completely rebalanced 27 engines
    
    This has some implications for missions and other Lua scripts, because the
    engine mass limits originally scaled up rather linearly, whereas they're
    now divided into six explicit classes.
    Completed engine renaming (in both XML and Lua)
    Renamed numerous engines in preparation for rebalancing
    Replace energy_regen_flat with energy_usage.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Reduce the thrust of all core engines by one third
    
    Previously, they used circa-0.5.3 values, however in 0.5.3, thrust was
    reduced by any added mass, with most ships having 30-40% more mass once
    fully equipped. This change brings top speeds back to 0.5.3 levels.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Wrote descriptions for 24 of the rebalanced engines
    Completely rebalanced 27 engines
    
    This has some implications for missions and other Lua scripts, because the
    engine mass limits originally scaled up rather linearly, whereas they're
    now divided into six explicit classes.
    Completed engine renaming (in both XML and Lua)
    Renamed numerous engines in preparation for rebalancing
    Replace energy_regen_flat with energy_usage.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    reduced overuse of gfx
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Reduce the thrust of all core engines by one third
    
    Previously, they used circa-0.5.3 values, however in 0.5.3, thrust was
    reduced by any added mass, with most ships having 30-40% more mass once
    fully equipped. This change brings top speeds back to 0.5.3 levels.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Wrote descriptions for 24 of the rebalanced engines
    Completely rebalanced 27 engines
    
    This has some implications for missions and other Lua scripts, because the
    engine mass limits originally scaled up rather linearly, whereas they're
    now divided into six explicit classes.
    Completed engine renaming (in both XML and Lua)
    Renamed numerous engines in preparation for rebalancing
    Replace energy_regen_flat with energy_usage.
    Adjusted rarities and such
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Add a zalek generic mission
    Adjusted rarities and such
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Finished the "Assault on Raelid" mission.
    
    Finally, it's finished! When you beat it, Raelid Outpost is wiped
    from the map, which angers the Empire and turns them into an enemy.
    The general feel at the end is victorious, yet worrisome.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    linked some outfits to more atwork from Unnamed
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Reduce the thrust of all core engines by one third
    
    Previously, they used circa-0.5.3 values, however in 0.5.3, thrust was
    reduced by any added mass, with most ships having 30-40% more mass once
    fully equipped. This change brings top speeds back to 0.5.3 levels.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Wrote descriptions for 24 of the rebalanced engines
    Completely rebalanced 27 engines
    
    This has some implications for missions and other Lua scripts, because the
    engine mass limits originally scaled up rather linearly, whereas they're
    now divided into six explicit classes.
    Completed engine renaming (in both XML and Lua)
    Renamed numerous engines in preparation for rebalancing
    Replace energy_regen_flat with energy_usage.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    reduced overuse of gfx
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Reduce the thrust of all core engines by one third
    
    Previously, they used circa-0.5.3 values, however in 0.5.3, thrust was
    reduced by any added mass, with most ships having 30-40% more mass once
    fully equipped. This change brings top speeds back to 0.5.3 levels.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Wrote descriptions for 24 of the rebalanced engines
    Completely rebalanced 27 engines
    
    This has some implications for missions and other Lua scripts, because the
    engine mass limits originally scaled up rather linearly, whereas they're
    now divided into six explicit classes.
    Completed engine renaming (in both XML and Lua)
    Renamed numerous engines in preparation for rebalancing
    Replace energy_regen_flat with energy_usage.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    linked some outfits to more atwork from Unnamed
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Reduce the thrust of all core engines by one third
    
    Previously, they used circa-0.5.3 values, however in 0.5.3, thrust was
    reduced by any added mass, with most ships having 30-40% more mass once
    fully equipped. This change brings top speeds back to 0.5.3 levels.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Wrote descriptions for 24 of the rebalanced engines
    Completely rebalanced 27 engines
    
    This has some implications for missions and other Lua scripts, because the
    engine mass limits originally scaled up rather linearly, whereas they're
    now divided into six explicit classes.
    Completed engine renaming (in both XML and Lua)
    Renamed numerous engines in preparation for rebalancing
    Replace energy_regen_flat with energy_usage.
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Removed positive characteristics from "beat up" engines.
    
    These engines previously had particularly high engine mass limits
    and particularly low energy usage. I have changed it so that they
    have standard engine mass limits and particularly high energy usage.
    These engines are supposed to be a last resort, after all.
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Reduce the thrust of all core engines by one third
    
    Previously, they used circa-0.5.3 values, however in 0.5.3, thrust was
    reduced by any added mass, with most ships having 30-40% more mass once
    fully equipped. This change brings top speeds back to 0.5.3 levels.
    Differentiate the three types of core systems, to improve sorting
    Completely rebalanced 27 engines
    
    This has some implications for missions and other Lua scripts, because the
    engine mass limits originally scaled up rather linearly, whereas they're
    now divided into six explicit classes.
    Replace energy_regen_flat with energy_usage.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    reduced overuse of gfx
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Reduce the thrust of all core engines by one third
    
    Previously, they used circa-0.5.3 values, however in 0.5.3, thrust was
    reduced by any added mass, with most ships having 30-40% more mass once
    fully equipped. This change brings top speeds back to 0.5.3 levels.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Wrote descriptions for 24 of the rebalanced engines
    Completely rebalanced 27 engines
    
    This has some implications for missions and other Lua scripts, because the
    engine mass limits originally scaled up rather linearly, whereas they're
    now divided into six explicit classes.
    Completed engine renaming (in both XML and Lua)
    Renamed numerous engines in preparation for rebalancing
    Replace energy_regen_flat with energy_usage.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    reduced overuse of gfx
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Replace the kestrel's speed boost with a one-off engine
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    reduced overuse of gfx
    * Several new outfit graphics by Unnamed.
    * Some new graphics used for core engines.
    Reduce the thrust of all core engines by one third
    
    Previously, they used circa-0.5.3 values, however in 0.5.3, thrust was
    reduced by any added mass, with most ships having 30-40% more mass once
    fully equipped. This change brings top speeds back to 0.5.3 levels.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Wrote descriptions for 24 of the rebalanced engines
    Bump the Buffalo engine's mass
    Completely rebalanced 27 engines
    
    This has some implications for missions and other Lua scripts, because the
    engine mass limits originally scaled up rather linearly, whereas they're
    now divided into six explicit classes.
    Completed engine renaming (in both XML and Lua)
    Renamed numerous engines in preparation for rebalancing
    Replace energy_regen_flat with energy_usage.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add specialized core system icons.
    Add new core system icons and cargo hull icons.
    linked some outfits to more atwork from Unnamed
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Initial rewrite of core system descriptions
    Renamed 15 core systems throughout Lua and XML
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    Rename numerous core systems in preparation for rebalancing
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new core system icons and cargo hull icons.
    linked some outfits to more atwork from Unnamed
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Initial rewrite of core system descriptions
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Changed rarity indications for outfits.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new core system icons and cargo hull icons.
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Initial rewrite of core system descriptions
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new core system icons and cargo hull icons.
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new core system icons and cargo hull icons.
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Initial rewrite of core system descriptions
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add specialized core system icons.
    Add new core system icons and cargo hull icons.
    linked some outfits to more atwork from Unnamed
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Initial rewrite of core system descriptions
    Renamed 15 core systems throughout Lua and XML
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    Rename numerous core systems in preparation for rebalancing
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add specialized core system icons.
    Add new core system icons and cargo hull icons.
    linked some outfits to more atwork from Unnamed
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Initial rewrite of core system descriptions
    Renamed 15 core systems throughout Lua and XML
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    Rename numerous core systems in preparation for rebalancing
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add specialized core system icons.
    Add new core system icons and cargo hull icons.
    linked some outfits to more atwork from Unnamed
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Initial rewrite of core system descriptions
    Renamed 15 core systems throughout Lua and XML
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    Rename numerous core systems in preparation for rebalancing
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add specialized core system icons.
    Add new core system icons and cargo hull icons.
    reduced overuse of gfx
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Add a new line of light cruiser core systems
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Initial rewrite of core system descriptions
    Renamed 15 core systems throughout Lua and XML
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    Rename numerous core systems in preparation for rebalancing
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add specialized core system icons.
    Add new core system icons and cargo hull icons.
    linked some outfits to more atwork from Unnamed
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Initial rewrite of core system descriptions
    Renamed 15 core systems throughout Lua and XML
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    Rename numerous core systems in preparation for rebalancing
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add specialized core system icons.
    Add new core system icons and cargo hull icons.
    linked some outfits to more atwork from Unnamed
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Initial rewrite of core system descriptions
    Renamed 15 core systems throughout Lua and XML
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    Rename numerous core systems in preparation for rebalancing
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new core system icons and cargo hull icons.
    reduced overuse of gfx
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Add a new line of light cruiser core systems
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Initial rewrite of core system descriptions
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new core system icons and cargo hull icons.
    reduced overuse of gfx
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Initial rewrite of core system descriptions
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add specialized core system icons.
    Add new core system icons and cargo hull icons.
    linked some outfits to more atwork from Unnamed
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Initial rewrite of core system descriptions
    Renamed 15 core systems throughout Lua and XML
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    Rename numerous core systems in preparation for rebalancing
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new core system icons and cargo hull icons.
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Initial rewrite of core system descriptions
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add specialized core system icons.
    Add new core system icons and cargo hull icons.
    linked some outfits to more atwork from Unnamed
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Initial rewrite of core system descriptions
    Renamed 15 core systems throughout Lua and XML
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    Rename numerous core systems in preparation for rebalancing
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add specialized core system icons.
    Add new core system icons and cargo hull icons.
    linked some outfits to more atwork from Unnamed
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Initial rewrite of core system descriptions
    Renamed 15 core systems throughout Lua and XML
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    Rename numerous core systems in preparation for rebalancing
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add specialized core system icons.
    Add new core system icons and cargo hull icons.
    reduced overuse of gfx
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Add a new line of light cruiser core systems
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Initial rewrite of core system descriptions
    Renamed 15 core systems throughout Lua and XML
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    Rename numerous core systems in preparation for rebalancing
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Changed rarity indications for outfits.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new core system icons and cargo hull icons.
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Initial rewrite of core system descriptions
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Changed rarity indications for outfits.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new core system icons and cargo hull icons.
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Add a new line of light cruiser core systems
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add specialized core system icons.
    Add new core system icons and cargo hull icons.
    reduced overuse of gfx
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Initial rewrite of core system descriptions
    Renamed 15 core systems throughout Lua and XML
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    Rename numerous core systems in preparation for rebalancing
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new core system icons and cargo hull icons.
    linked some outfits to more atwork from Unnamed
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Initial rewrite of core system descriptions
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add specialized core system icons.
    Add new core system icons and cargo hull icons.
    linked some outfits to more atwork from Unnamed
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Initial rewrite of core system descriptions
    Renamed 15 core systems throughout Lua and XML
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    Rename numerous core systems in preparation for rebalancing
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Adjusted rarities and such
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Fixed Dummy Systems gfx
    Re-added Dummy Systems.
    
    It was removed accidentally in 3db3d851e57829b2416e6cee57ee39a13d89d723
    Add specialized core system icons.
    Gave dummy_systems a valid image.
    Finished the "Assault on Raelid" mission.
    
    Finally, it's finished! When you beat it, Raelid Outpost is wiped
    from the map, which angers the Empire and turns them into an enemy.
    The general feel at the end is victorious, yet worrisome.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new core system icons and cargo hull icons.
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new core system icons and cargo hull icons.
    linked some outfits to more atwork from Unnamed
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Initial rewrite of core system descriptions
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new core system icons and cargo hull icons.
    linked some outfits to more atwork from Unnamed
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Initial rewrite of core system descriptions
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add specialized core system icons.
    Add new core system icons and cargo hull icons.
    reduced overuse of gfx
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Add a new line of light cruiser core systems
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Initial rewrite of core system descriptions
    Renamed 15 core systems throughout Lua and XML
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    Rename numerous core systems in preparation for rebalancing
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add specialized core system icons.
    Add new core system icons and cargo hull icons.
    reduced overuse of gfx
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Initial rewrite of core system descriptions
    Renamed 15 core systems throughout Lua and XML
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    Rename numerous core systems in preparation for rebalancing
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add specialized core system icons.
    Add new core system icons and cargo hull icons.
    reduced overuse of gfx
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Initial rewrite of core system descriptions
    Renamed 15 core systems throughout Lua and XML
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    Rename numerous core systems in preparation for rebalancing
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add specialized core system icons.
    Add new core system icons and cargo hull icons.
    linked some outfits to more atwork from Unnamed
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Initial rewrite of core system descriptions
    Renamed 15 core systems throughout Lua and XML
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    Rename numerous core systems in preparation for rebalancing
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new core system icons and cargo hull icons.
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new core system icons and cargo hull icons.
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Initial rewrite of core system descriptions
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add specialized core system icons.
    Add new core system icons and cargo hull icons.
    linked some outfits to more atwork from Unnamed
    * More outfit graphics by Unnamed.
    * Assigned new graphics to core systems.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Increase core system energy regeneration by a third (roughly)
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Initial rewrite of core system descriptions
    Renamed 15 core systems throughout Lua and XML
    Initial rebalance of core systems
    
    This commit only touches the XML; equip scripts and missions have yet
    to be updated.
    Rename numerous core systems in preparation for rebalancing
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Finished stage 1 of flf_dvk02.
    
    The player discovers a small group of pirate ships, but they just
    won't budge. So the player has to show them who's boss. When they
    do, they are given a map, and a quest...
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Update maps and add Sirius and Za'lek core maps
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Added access to the jump nearby Kretogg for the pirates.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Updated the Sirian border systems map
    Update Qorel Expanse and Sirian Border Systems maps
    Remove short_desc from the maps, as it's done by type internally.
    load maps.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Update maps and add Sirius and Za'lek core maps
    Remove short_desc from the maps, as it's done by type internally.
    load maps.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Added two new independent stations between Teller and other Pirate strongholds.
    
    These stations are designed to mainly be refueling stops for pirate
    aligned players, since without them the journey to Teller is nearly
    insurmountable. Incidentally, they're marginally useful for non-pirate
    players too, since they're located closer to the centers of their
    respective systems.
    Update maps and add Sirius and Za'lek core maps
    Consistency fixes for the First Growth colony ships.
    Remove short_desc from the maps, as it's done by type internally.
    load maps.
    * Split outfit.xml into separate files.
    Adjusted rarities and such
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Made Thurion invisible by default, reveal them with FLF Catastrophe event.
    
    This change causes most Thurion assets to not exist on the map at first,
    and it causes the Thurion core systems (the only ones not hidden by
    default) to be behind a hidden jump. This ensures that the Thurion
    cannot be discovered until a mission or event has designated them as
    revealed, similar to Sindbad.
    
    This commit also includes adding such a reveal to the FLF Catastrophe
    event, which includes a bunch of new dialog explaining to the player
    who the Thurion are and pointing out that a Thurion ship is needed to
    safely traverse the nebula.
    Finished the FLF Catastrophe event.
    
    Just needs testing.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Remove short_desc from the maps, as it's done by type internally.
    load maps.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Update maps and add Sirius and Za'lek core maps
    Remove short_desc from the maps, as it's done by type internally.
    load maps.
    * Split outfit.xml into separate files.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Hidden jump points around New Haven and corresponding map added, sold only to pirates on pirate clan worlds, of course.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Remove short_desc from the maps, as it's done by type internally.
    load maps.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Update maps and add Sirius and Za'lek core maps
    Remove short_desc from the maps, as it's done by type internally.
    load maps.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Update maps and add Sirius and Za'lek core maps
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Added another two-way hidden FLF jump point.
    
    This makes it easier for an FLF-aligned player to get around. There
    are now two viable options to Frontier space: the old way through
    Ingot, and a new way through Myad which avoids most Dvaered space.
    Added hidden jump points for the FLF.
    
    There's a problem with the previous setup: the FLF is in a position
    that makes what they do impractical at best. As a player, you have
    to either have an unreasonably large fuel tank, or land on the
    planets of your enemies. This has been remedied by adding hidden
    jump points that allow FLF ships to get almost anywhere they would
    like within two jumps of a non-enemy planet, and within three jumps
    for deeper parts of Dvaered space. Also, it's now possible to go
    from the FLF base to the Frontier and back without entering Dvaered
    space at all.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    * Lowered price.
    * Local map should now detect all normal jumps and all normal assets.
    * Local map is available in basic outfits.
    * Map planets too.
    * Finished local map implementation.
    * Added local map.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Update maps and add Sirius and Za'lek core maps
    Remove short_desc from the maps, as it's done by type internally.
    load maps.
    * Split outfit.xml into separate files.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Added the unused hidden jump near Qorellia to the "Qorel Expanse" map
    
    This makes sense to me and is useful for pirate players. Plus, that
    hidden jump was going unused and so far as I can tell there were no
    plans to change that.
    Add a hidden jump between fried and effetey, and add to qorel map
    
    It is currently hard for a pirate to get between Kretogg and the Qorel
    expanse. This helps to bypass the worst two systems, with significant
    Za'lek, Dvaered, and Empire presence
    Update Qorel Expanse and Sirian Border Systems maps
    Removed a jump to Zied from the Qorel Expanse map.
    
    Zied can't be reached through normal means and seems to be designed
    as a sort of cheat hub. Having a jump to it being revealed is
    confusing.
    Qorel Expanse added.
    
      - It is a set of pirate systems and stations in the empty space between the
        Empire and the Dvaered allowing a safe^Wpossible route between Vorca and
        New Haven.
      - The map containing the position of the entry and exit points has to
        be bought, and it’s currently a bit expensive if you are begining
        the game, though the pirate missions are at the same time very
        lucrative… (maybe a bit much?)
      - It could be seen as a test to know whether or not other “expanses”
        should be added in the other empty spaces between other factions,
        but IMHO, it makes playing pirate a bit easier. Without that, you
        could not play purely pirate and would have to be allied with at
        least one or two factions (and one of them has to be the Dvaered…)
        to only be able to move through the galaxy…
    Fixed Thurion map rarity
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Made Thurion invisible by default, reveal them with FLF Catastrophe event.
    
    This change causes most Thurion assets to not exist on the map at first,
    and it causes the Thurion core systems (the only ones not hidden by
    default) to be behind a hidden jump. This ensures that the Thurion
    cannot be discovered until a mission or event has designated them as
    revealed, similar to Sindbad.
    
    This commit also includes adding such a reveal to the FLF Catastrophe
    event, which includes a bunch of new dialog explaining to the player
    who the Thurion are and pointing out that a Thurion ship is needed to
    safely traverse the nebula.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Changed the Sol map's description to better fit Sol's purpose.
    
    The description now explains that Sol is "rendered dead" and covered
    in an unstable nebula, with a teaser about what lies beyond.
    Remove short_desc from the maps, as it's done by type internally.
    load maps.
    * Split outfit.xml into separate files.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Added two new independent stations between Teller and other Pirate strongholds.
    
    These stations are designed to mainly be refueling stops for pirate
    aligned players, since without them the journey to Teller is nearly
    insurmountable. Incidentally, they're marginally useful for non-pirate
    players too, since they're located closer to the centers of their
    respective systems.
    Update maps and add Sirius and Za'lek core maps
    Remove short_desc from the maps, as it's done by type internally.
    load maps.
    * Split outfit.xml into separate files.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Consolidated missile and launcher descriptions, removed missiles from shop
    
    This commit modifies all launcher descriptions to incorporate important
    information from the missile/rocket descriptions; previously most of
    them just said something like "a launcher that launches X missiles",
    which was always annoying but is absolutely no good with auto-refilling
    missiles. Additionally, rockets have been removed from all shops (even
    Bon Sebb), since their presence there is no longer needed (although the
    missile outfits themselves remain in the game mostly as an interesting
    relic of the past; changing the system to not have them at all would be too
    time-consuming to be worth it in my opinion).
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Rebalance fighter bay prices, fighter quantities, and delays.
    major zalek update
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Modified the numbers some more.
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Tweaked launcher descriptions to look nicer.
    Consolidated missile and launcher descriptions, removed missiles from shop
    
    This commit modifies all launcher descriptions to incorporate important
    information from the missile/rocket descriptions; previously most of
    them just said something like "a launcher that launches X missiles",
    which was always annoying but is absolutely no good with auto-refilling
    missiles. Additionally, rockets have been removed from all shops (even
    Bon Sebb), since their presence there is no longer needed (although the
    missile outfits themselves remain in the game mostly as an interesting
    relic of the past; changing the system to not have them at all would be too
    time-consuming to be worth it in my opinion).
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Initial attempt at rebalancing missiles.
    
    ew_target values are mostly clumped now, for a given missile type. Lock-on
    times have generally been reduced, as have delays. DPS largely falls within
    the 20-40 range, with torpedoes and unguided rockets doing a fair bit more.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Launchers should now lock on faster.
    * Split outfit.xml into separate files.
    Renamed "dumb"/"dumbfire" rockets to "unguided".
    
    The term "dumbfire" (which doesn't seem to be in common use outside
    of a select few video games) comes from the term "dumb", which is
    ableist on two counts: firstly, it's sanist because the meaning
    "dumbfire" is derived from is "stupid" or "of low intelligence".
    Secondly, the term "dumb" actually originates from ableism against
    mute people, albeit in the German language rather than English.
    
    The term is imprecise, anyway, so I've changed it to the more precise
    and non-ableist term, "unguided".
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Modified missiles to make guided missiles medium.
    
    This is an attempt to redesign the way missiles are balanced: guided
    missiles of all kinds have been redefined as medium (weights adjusted
    accordingly), and the Banshee rocket has been redefined as small. The
    idea here is to restrict guided missiles to bombers and up, mainly for
    use by bombers, corvettes, and light destroyers.
    
    This of course will cause equipping of AI fighters to stop working
    correctly. I will address that in the next commit.
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Tweaked launcher descriptions to look nicer.
    Consolidated missile and launcher descriptions, removed missiles from shop
    
    This commit modifies all launcher descriptions to incorporate important
    information from the missile/rocket descriptions; previously most of
    them just said something like "a launcher that launches X missiles",
    which was always annoying but is absolutely no good with auto-refilling
    missiles. Additionally, rockets have been removed from all shops (even
    Bon Sebb), since their presence there is no longer needed (although the
    missile outfits themselves remain in the game mostly as an interesting
    relic of the past; changing the system to not have them at all would be too
    time-consuming to be worth it in my opinion).
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Initial attempt at rebalancing missiles.
    
    ew_target values are mostly clumped now, for a given missile type. Lock-on
    times have generally been reduced, as have delays. DPS largely falls within
    the 20-40 range, with torpedoes and unguided rockets doing a fair bit more.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Modified missiles to make guided missiles medium.
    
    This is an attempt to redesign the way missiles are balanced: guided
    missiles of all kinds have been redefined as medium (weights adjusted
    accordingly), and the Banshee rocket has been redefined as small. The
    idea here is to restrict guided missiles to bombers and up, mainly for
    use by bombers, corvettes, and light destroyers.
    
    This of course will cause equipping of AI fighters to stop working
    correctly. I will address that in the next commit.
    Modified the numbers some more.
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Consolidated missile and launcher descriptions, removed missiles from shop
    
    This commit modifies all launcher descriptions to incorporate important
    information from the missile/rocket descriptions; previously most of
    them just said something like "a launcher that launches X missiles",
    which was always annoying but is absolutely no good with auto-refilling
    missiles. Additionally, rockets have been removed from all shops (even
    Bon Sebb), since their presence there is no longer needed (although the
    missile outfits themselves remain in the game mostly as an interesting
    relic of the past; changing the system to not have them at all would be too
    time-consuming to be worth it in my opinion).
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Initial attempt at rebalancing missiles.
    
    ew_target values are mostly clumped now, for a given missile type. Lock-on
    times have generally been reduced, as have delays. DPS largely falls within
    the 20-40 range, with torpedoes and unguided rockets doing a fair bit more.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Launchers should now lock on faster.
    * Split outfit.xml into separate files.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Modified missiles to make guided missiles medium.
    
    This is an attempt to redesign the way missiles are balanced: guided
    missiles of all kinds have been redefined as medium (weights adjusted
    accordingly), and the Banshee rocket has been redefined as small. The
    idea here is to restrict guided missiles to bombers and up, mainly for
    use by bombers, corvettes, and light destroyers.
    
    This of course will cause equipping of AI fighters to stop working
    correctly. I will address that in the next commit.
    Modified the numbers some more.
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Tweaked launcher descriptions to look nicer.
    Consolidated missile and launcher descriptions, removed missiles from shop
    
    This commit modifies all launcher descriptions to incorporate important
    information from the missile/rocket descriptions; previously most of
    them just said something like "a launcher that launches X missiles",
    which was always annoying but is absolutely no good with auto-refilling
    missiles. Additionally, rockets have been removed from all shops (even
    Bon Sebb), since their presence there is no longer needed (although the
    missile outfits themselves remain in the game mostly as an interesting
    relic of the past; changing the system to not have them at all would be too
    time-consuming to be worth it in my opinion).
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Added a new Thurion freighter and Thurion weapons.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Fixed up Thurion energy missiles.
    
    I've reworked them to balance with everything else a bit better.
    Some things I did:
    
    * Lowered the Energy Dart and Energy Missile the same speed and with
      the same turn rate as the Energy Torpedo.
    
    * Lowered the duration of the Energy Dart, increased the duration of
      the others (each size energy dart now has a range comparable to
      cannons of the same size).
    
    * Added prices to these weapons rather than offering them up for free.
    
    * Lowered the lock-on time from 1 second to 0.2 seconds for all sizes,
      so that these weapons can be used rapidly (important because they're
      short-range weapons).
    Modified the numbers some more.
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Auto add / remove missiles, plus set missile costs to 0
    
    Just the start of the work here. This causes it to be unnecessary
    to buy missiles. They remain in the shop at cost 0 for the time
    being (and do nothing). Next up is removing those missiles from the
    shops, and consolidating the info about missiles and their launchers
    into the launchers themselves. Missiles will stay separate outfits,
    so I'm thinking of just adding a button to the launcher to view the
    missile's info, or otherwise I might just programmatically paste the
    missile info into the launcher somehow. Undecided.
    Added a new Thurion freighter and Thurion weapons.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Fixed wrong spacing in some descriptions.
    Za'lek weapons tweak
    
    Added two new missile launchers for medium and heavy Za'lek ships. Balanced close to Thurion launchers as the two factions are close tech-wise. Also modified the equip file so Za'lek ships should use the launchers.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Modified the numbers some more.
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Consolidated missile and launcher descriptions, removed missiles from shop
    
    This commit modifies all launcher descriptions to incorporate important
    information from the missile/rocket descriptions; previously most of
    them just said something like "a launcher that launches X missiles",
    which was always annoying but is absolutely no good with auto-refilling
    missiles. Additionally, rockets have been removed from all shops (even
    Bon Sebb), since their presence there is no longer needed (although the
    missile outfits themselves remain in the game mostly as an interesting
    relic of the past; changing the system to not have them at all would be too
    time-consuming to be worth it in my opinion).
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Modified the numbers some more.
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Rebalance fighter bay prices, fighter quantities, and delays.
    major zalek update
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Fixed wrong spacing in some descriptions.
    Za'lek weapons tweak
    
    Added two new missile launchers for medium and heavy Za'lek ships. Balanced close to Thurion launchers as the two factions are close tech-wise. Also modified the equip file so Za'lek ships should use the launchers.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Rebalance fighter bay prices, fighter quantities, and delays.
    major zalek update
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Modified missiles to make guided missiles medium.
    
    This is an attempt to redesign the way missiles are balanced: guided
    missiles of all kinds have been redefined as medium (weights adjusted
    accordingly), and the Banshee rocket has been redefined as small. The
    idea here is to restrict guided missiles to bombers and up, mainly for
    use by bombers, corvettes, and light destroyers.
    
    This of course will cause equipping of AI fighters to stop working
    correctly. I will address that in the next commit.
    Modified the numbers some more.
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Tweaked launcher descriptions to look nicer.
    Consolidated missile and launcher descriptions, removed missiles from shop
    
    This commit modifies all launcher descriptions to incorporate important
    information from the missile/rocket descriptions; previously most of
    them just said something like "a launcher that launches X missiles",
    which was always annoying but is absolutely no good with auto-refilling
    missiles. Additionally, rockets have been removed from all shops (even
    Bon Sebb), since their presence there is no longer needed (although the
    missile outfits themselves remain in the game mostly as an interesting
    relic of the past; changing the system to not have them at all would be too
    time-consuming to be worth it in my opinion).
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Initial attempt at rebalancing missiles.
    
    ew_target values are mostly clumped now, for a given missile type. Lock-on
    times have generally been reduced, as have delays. DPS largely falls within
    the 20-40 range, with torpedoes and unguided rockets doing a fair bit more.
    * Fixed check script paths.
    * Made Fury missiles and launchers use their dedicated art.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Launchers should now lock on faster.
    New Fury graphics by admiral_cheater.
    * Split outfit.xml into separate files.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Modified missiles to make guided missiles medium.
    
    This is an attempt to redesign the way missiles are balanced: guided
    missiles of all kinds have been redefined as medium (weights adjusted
    accordingly), and the Banshee rocket has been redefined as small. The
    idea here is to restrict guided missiles to bombers and up, mainly for
    use by bombers, corvettes, and light destroyers.
    
    This of course will cause equipping of AI fighters to stop working
    correctly. I will address that in the next commit.
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Consolidated missile and launcher descriptions, removed missiles from shop
    
    This commit modifies all launcher descriptions to incorporate important
    information from the missile/rocket descriptions; previously most of
    them just said something like "a launcher that launches X missiles",
    which was always annoying but is absolutely no good with auto-refilling
    missiles. Additionally, rockets have been removed from all shops (even
    Bon Sebb), since their presence there is no longer needed (although the
    missile outfits themselves remain in the game mostly as an interesting
    relic of the past; changing the system to not have them at all would be too
    time-consuming to be worth it in my opinion).
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Added a new Thurion freighter and Thurion weapons.
    Renamed "dumb"/"dumbfire" rockets to "unguided".
    
    The term "dumbfire" (which doesn't seem to be in common use outside
    of a select few video games) comes from the term "dumb", which is
    ableist on two counts: firstly, it's sanist because the meaning
    "dumbfire" is derived from is "stupid" or "of low intelligence".
    Secondly, the term "dumb" actually originates from ableism against
    mute people, albeit in the German language rather than English.
    
    The term is imprecise, anyway, so I've changed it to the more precise
    and non-ableist term, "unguided".
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Modified missiles to make guided missiles medium.
    
    This is an attempt to redesign the way missiles are balanced: guided
    missiles of all kinds have been redefined as medium (weights adjusted
    accordingly), and the Banshee rocket has been redefined as small. The
    idea here is to restrict guided missiles to bombers and up, mainly for
    use by bombers, corvettes, and light destroyers.
    
    This of course will cause equipping of AI fighters to stop working
    correctly. I will address that in the next commit.
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Tweaked launcher descriptions to look nicer.
    Consolidated missile and launcher descriptions, removed missiles from shop
    
    This commit modifies all launcher descriptions to incorporate important
    information from the missile/rocket descriptions; previously most of
    them just said something like "a launcher that launches X missiles",
    which was always annoying but is absolutely no good with auto-refilling
    missiles. Additionally, rockets have been removed from all shops (even
    Bon Sebb), since their presence there is no longer needed (although the
    missile outfits themselves remain in the game mostly as an interesting
    relic of the past; changing the system to not have them at all would be too
    time-consuming to be worth it in my opinion).
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Initial attempt at rebalancing missiles.
    
    ew_target values are mostly clumped now, for a given missile type. Lock-on
    times have generally been reduced, as have delays. DPS largely falls within
    the 20-40 range, with torpedoes and unguided rockets doing a fair bit more.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Launchers should now lock on faster.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Modified the numbers some more.
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Tweaked launcher descriptions to look nicer.
    Consolidated missile and launcher descriptions, removed missiles from shop
    
    This commit modifies all launcher descriptions to incorporate important
    information from the missile/rocket descriptions; previously most of
    them just said something like "a launcher that launches X missiles",
    which was always annoying but is absolutely no good with auto-refilling
    missiles. Additionally, rockets have been removed from all shops (even
    Bon Sebb), since their presence there is no longer needed (although the
    missile outfits themselves remain in the game mostly as an interesting
    relic of the past; changing the system to not have them at all would be too
    time-consuming to be worth it in my opinion).
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Initial attempt at rebalancing missiles.
    
    ew_target values are mostly clumped now, for a given missile type. Lock-on
    times have generally been reduced, as have delays. DPS largely falls within
    the 20-40 range, with torpedoes and unguided rockets doing a fair bit more.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Launchers should now lock on faster.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Modified the numbers some more.
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Tweaked launcher descriptions to look nicer.
    Consolidated missile and launcher descriptions, removed missiles from shop
    
    This commit modifies all launcher descriptions to incorporate important
    information from the missile/rocket descriptions; previously most of
    them just said something like "a launcher that launches X missiles",
    which was always annoying but is absolutely no good with auto-refilling
    missiles. Additionally, rockets have been removed from all shops (even
    Bon Sebb), since their presence there is no longer needed (although the
    missile outfits themselves remain in the game mostly as an interesting
    relic of the past; changing the system to not have them at all would be too
    time-consuming to be worth it in my opinion).
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Initial attempt at rebalancing missiles.
    
    ew_target values are mostly clumped now, for a given missile type. Lock-on
    times have generally been reduced, as have delays. DPS largely falls within
    the 20-40 range, with torpedoes and unguided rockets doing a fair bit more.
    * Enygma Vengeance launcher now uses the correct ammo type. Fixes issue 202.
    * Moved Enygma's turreted launchers to the correct directory.
    * Also set the right graphic for the Fury launcher.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Modified the numbers some more.
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Tweaked launcher descriptions to look nicer.
    Consolidated missile and launcher descriptions, removed missiles from shop
    
    This commit modifies all launcher descriptions to incorporate important
    information from the missile/rocket descriptions; previously most of
    them just said something like "a launcher that launches X missiles",
    which was always annoying but is absolutely no good with auto-refilling
    missiles. Additionally, rockets have been removed from all shops (even
    Bon Sebb), since their presence there is no longer needed (although the
    missile outfits themselves remain in the game mostly as an interesting
    relic of the past; changing the system to not have them at all would be too
    time-consuming to be worth it in my opinion).
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Initial attempt at rebalancing missiles.
    
    ew_target values are mostly clumped now, for a given missile type. Lock-on
    times have generally been reduced, as have delays. DPS largely falls within
    the 20-40 range, with torpedoes and unguided rockets doing a fair bit more.
    * Spelling.
    * Moved Enygma's turreted launchers to the correct directory.
    * Also set the right graphic for the Fury launcher.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Za'lek weapons tweak
    
    Added two new missile launchers for medium and heavy Za'lek ships. Balanced close to Thurion launchers as the two factions are close tech-wise. Also modified the equip file so Za'lek ships should use the launchers.
    Modified the numbers some more.
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Consolidated missile and launcher descriptions, removed missiles from shop
    
    This commit modifies all launcher descriptions to incorporate important
    information from the missile/rocket descriptions; previously most of
    them just said something like "a launcher that launches X missiles",
    which was always annoying but is absolutely no good with auto-refilling
    missiles. Additionally, rockets have been removed from all shops (even
    Bon Sebb), since their presence there is no longer needed (although the
    missile outfits themselves remain in the game mostly as an interesting
    relic of the past; changing the system to not have them at all would be too
    time-consuming to be worth it in my opinion).
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Initial attempt at rebalancing missiles.
    
    ew_target values are mostly clumped now, for a given missile type. Lock-on
    times have generally been reduced, as have delays. DPS largely falls within
    the 20-40 range, with torpedoes and unguided rockets doing a fair bit more.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Modified missiles to make guided missiles medium.
    
    This is an attempt to redesign the way missiles are balanced: guided
    missiles of all kinds have been redefined as medium (weights adjusted
    accordingly), and the Banshee rocket has been redefined as small. The
    idea here is to restrict guided missiles to bombers and up, mainly for
    use by bombers, corvettes, and light destroyers.
    
    This of course will cause equipping of AI fighters to stop working
    correctly. I will address that in the next commit.
    Modified the numbers some more.
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Tweaked launcher descriptions to look nicer.
    Consolidated missile and launcher descriptions, removed missiles from shop
    
    This commit modifies all launcher descriptions to incorporate important
    information from the missile/rocket descriptions; previously most of
    them just said something like "a launcher that launches X missiles",
    which was always annoying but is absolutely no good with auto-refilling
    missiles. Additionally, rockets have been removed from all shops (even
    Bon Sebb), since their presence there is no longer needed (although the
    missile outfits themselves remain in the game mostly as an interesting
    relic of the past; changing the system to not have them at all would be too
    time-consuming to be worth it in my opinion).
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Initial attempt at rebalancing missiles.
    
    ew_target values are mostly clumped now, for a given missile type. Lock-on
    times have generally been reduced, as have delays. DPS largely falls within
    the 20-40 range, with torpedoes and unguided rockets doing a fair bit more.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Launchers should now lock on faster.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Modified missiles to make guided missiles medium.
    
    This is an attempt to redesign the way missiles are balanced: guided
    missiles of all kinds have been redefined as medium (weights adjusted
    accordingly), and the Banshee rocket has been redefined as small. The
    idea here is to restrict guided missiles to bombers and up, mainly for
    use by bombers, corvettes, and light destroyers.
    
    This of course will cause equipping of AI fighters to stop working
    correctly. I will address that in the next commit.
    Modified the numbers some more.
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Consolidated missile and launcher descriptions, removed missiles from shop
    
    This commit modifies all launcher descriptions to incorporate important
    information from the missile/rocket descriptions; previously most of
    them just said something like "a launcher that launches X missiles",
    which was always annoying but is absolutely no good with auto-refilling
    missiles. Additionally, rockets have been removed from all shops (even
    Bon Sebb), since their presence there is no longer needed (although the
    missile outfits themselves remain in the game mostly as an interesting
    relic of the past; changing the system to not have them at all would be too
    time-consuming to be worth it in my opinion).
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Initial attempt at rebalancing missiles.
    
    ew_target values are mostly clumped now, for a given missile type. Lock-on
    times have generally been reduced, as have delays. DPS largely falls within
    the 20-40 range, with torpedoes and unguided rockets doing a fair bit more.
    * Fixed check script paths.
    * Made Fury missiles and launchers use their dedicated art.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Launchers should now lock on faster.
    New Fury graphics by admiral_cheater.
    * Split outfit.xml into separate files.
    Removed "crippled" (ableist term) from Electron Burst Cannon description
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Modified the numbers some more.
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Various Collective Heavy Drone modifications.
    
    In particular, I've modified the Electron Burst Cannon again, making
    it shorter-ranged and a constant velocity rather than accelerating,
    and I've also changed it to a shieldbreaker and cut down its damage.
    Heavy Drones also now have a -50% ammo and -50% missile range penalty.
    On the flipside, I made it so that heavy drones get equipped with
    Heavy Neutron Disruptors, which were removed from them for some reason.
    Assorted Changes
    
    Makes Za'lek drones more drone-like (They'll never be piloted by the
    player under legit circumstances). Further trying to balance Electron
    Cannons so a mob of Col. HDs can't annihilate heavy ships quite as
    easily (will probably have to switch their damage to shieldbreaker to
    coinside with their desc.).
    Adding pseudo-missiles to Collective
    
    Gives The Collective Heavy Drones More Teeth. Possibly start working to
    return them to medium ship status? Would need to scale up sprite sheet
    in that event.
    Changed rarity of Heavy Weapon License weapons to 1.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Consolidated missile and launcher descriptions, removed missiles from shop
    
    This commit modifies all launcher descriptions to incorporate important
    information from the missile/rocket descriptions; previously most of
    them just said something like "a launcher that launches X missiles",
    which was always annoying but is absolutely no good with auto-refilling
    missiles. Additionally, rockets have been removed from all shops (even
    Bon Sebb), since their presence there is no longer needed (although the
    missile outfits themselves remain in the game mostly as an interesting
    relic of the past; changing the system to not have them at all would be too
    time-consuming to be worth it in my opinion).
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Initial attempt at rebalancing missiles.
    
    ew_target values are mostly clumped now, for a given missile type. Lock-on
    times have generally been reduced, as have delays. DPS largely falls within
    the 20-40 range, with torpedoes and unguided rockets doing a fair bit more.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Consistent capitalisation of Station in names, and a few other minor fixes.
    * Launchers should now lock on faster.
    * Split outfit.xml into separate files.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Fixed up Thurion energy missiles.
    
    I've reworked them to balance with everything else a bit better.
    Some things I did:
    
    * Lowered the Energy Dart and Energy Missile the same speed and with
      the same turn rate as the Energy Torpedo.
    
    * Lowered the duration of the Energy Dart, increased the duration of
      the others (each size energy dart now has a range comparable to
      cannons of the same size).
    
    * Added prices to these weapons rather than offering them up for free.
    
    * Lowered the lock-on time from 1 second to 0.2 seconds for all sizes,
      so that these weapons can be used rapidly (important because they're
      short-range weapons).
    Modified the numbers some more.
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Auto add / remove missiles, plus set missile costs to 0
    
    Just the start of the work here. This causes it to be unnecessary
    to buy missiles. They remain in the shop at cost 0 for the time
    being (and do nothing). Next up is removing those missiles from the
    shops, and consolidating the info about missiles and their launchers
    into the launchers themselves. Missiles will stay separate outfits,
    so I'm thinking of just adding a button to the launcher to view the
    missile's info, or otherwise I might just programmatically paste the
    missile info into the launcher somehow. Undecided.
    Added a new Thurion freighter and Thurion weapons.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Modified missiles to make guided missiles medium.
    
    This is an attempt to redesign the way missiles are balanced: guided
    missiles of all kinds have been redefined as medium (weights adjusted
    accordingly), and the Banshee rocket has been redefined as small. The
    idea here is to restrict guided missiles to bombers and up, mainly for
    use by bombers, corvettes, and light destroyers.
    
    This of course will cause equipping of AI fighters to stop working
    correctly. I will address that in the next commit.
    Modified the numbers some more.
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Tweaked launcher descriptions to look nicer.
    Consolidated missile and launcher descriptions, removed missiles from shop
    
    This commit modifies all launcher descriptions to incorporate important
    information from the missile/rocket descriptions; previously most of
    them just said something like "a launcher that launches X missiles",
    which was always annoying but is absolutely no good with auto-refilling
    missiles. Additionally, rockets have been removed from all shops (even
    Bon Sebb), since their presence there is no longer needed (although the
    missile outfits themselves remain in the game mostly as an interesting
    relic of the past; changing the system to not have them at all would be too
    time-consuming to be worth it in my opinion).
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Initial attempt at rebalancing missiles.
    
    ew_target values are mostly clumped now, for a given missile type. Lock-on
    times have generally been reduced, as have delays. DPS largely falls within
    the 20-40 range, with torpedoes and unguided rockets doing a fair bit more.
    * Moved Enygma's turreted launchers to the correct directory.
    * Also set the right graphic for the Fury launcher.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    New Fury graphics by admiral_cheater.
    * Split outfit.xml into separate files.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Modified the numbers some more.
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Add dedicated store graphics for (empire) lancelot fighter bay
    Rebalance fighter bay prices, fighter quantities, and delays.
    major zalek update
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Modified missiles to make guided missiles medium.
    
    This is an attempt to redesign the way missiles are balanced: guided
    missiles of all kinds have been redefined as medium (weights adjusted
    accordingly), and the Banshee rocket has been redefined as small. The
    idea here is to restrict guided missiles to bombers and up, mainly for
    use by bombers, corvettes, and light destroyers.
    
    This of course will cause equipping of AI fighters to stop working
    correctly. I will address that in the next commit.
    Modified the numbers some more.
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Consolidated missile and launcher descriptions, removed missiles from shop
    
    This commit modifies all launcher descriptions to incorporate important
    information from the missile/rocket descriptions; previously most of
    them just said something like "a launcher that launches X missiles",
    which was always annoying but is absolutely no good with auto-refilling
    missiles. Additionally, rockets have been removed from all shops (even
    Bon Sebb), since their presence there is no longer needed (although the
    missile outfits themselves remain in the game mostly as an interesting
    relic of the past; changing the system to not have them at all would be too
    time-consuming to be worth it in my opinion).
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Initial attempt at rebalancing missiles.
    
    ew_target values are mostly clumped now, for a given missile type. Lock-on
    times have generally been reduced, as have delays. DPS largely falls within
    the 20-40 range, with torpedoes and unguided rockets doing a fair bit more.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Launchers should now lock on faster.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Modified the numbers some more.
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Tweaked launcher descriptions to look nicer.
    Consolidated missile and launcher descriptions, removed missiles from shop
    
    This commit modifies all launcher descriptions to incorporate important
    information from the missile/rocket descriptions; previously most of
    them just said something like "a launcher that launches X missiles",
    which was always annoying but is absolutely no good with auto-refilling
    missiles. Additionally, rockets have been removed from all shops (even
    Bon Sebb), since their presence there is no longer needed (although the
    missile outfits themselves remain in the game mostly as an interesting
    relic of the past; changing the system to not have them at all would be too
    time-consuming to be worth it in my opinion).
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Modified missiles to make guided missiles medium.
    
    This is an attempt to redesign the way missiles are balanced: guided
    missiles of all kinds have been redefined as medium (weights adjusted
    accordingly), and the Banshee rocket has been redefined as small. The
    idea here is to restrict guided missiles to bombers and up, mainly for
    use by bombers, corvettes, and light destroyers.
    
    This of course will cause equipping of AI fighters to stop working
    correctly. I will address that in the next commit.
    Modified the numbers some more.
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Tweaked launcher descriptions to look nicer.
    Consolidated missile and launcher descriptions, removed missiles from shop
    
    This commit modifies all launcher descriptions to incorporate important
    information from the missile/rocket descriptions; previously most of
    them just said something like "a launcher that launches X missiles",
    which was always annoying but is absolutely no good with auto-refilling
    missiles. Additionally, rockets have been removed from all shops (even
    Bon Sebb), since their presence there is no longer needed (although the
    missile outfits themselves remain in the game mostly as an interesting
    relic of the past; changing the system to not have them at all would be too
    time-consuming to be worth it in my opinion).
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Initial attempt at rebalancing missiles.
    
    ew_target values are mostly clumped now, for a given missile type. Lock-on
    times have generally been reduced, as have delays. DPS largely falls within
    the 20-40 range, with torpedoes and unguided rockets doing a fair bit more.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Launchers should now lock on faster.
    * Split outfit.xml into separate files.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Rebalance fighter bay prices, fighter quantities, and delays.
    major zalek update
    madding more crap complicated by merge conflicts, i am a tool
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Changed rarity of Heavy Weapon License weapons to 1.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Modified the numbers some more.
    Consolidated missile and launcher descriptions, removed missiles from shop
    
    This commit modifies all launcher descriptions to incorporate important
    information from the missile/rocket descriptions; previously most of
    them just said something like "a launcher that launches X missiles",
    which was always annoying but is absolutely no good with auto-refilling
    missiles. Additionally, rockets have been removed from all shops (even
    Bon Sebb), since their presence there is no longer needed (although the
    missile outfits themselves remain in the game mostly as an interesting
    relic of the past; changing the system to not have them at all would be too
    time-consuming to be worth it in my opinion).
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Initial attempt at rebalancing missiles.
    
    ew_target values are mostly clumped now, for a given missile type. Lock-on
    times have generally been reduced, as have delays. DPS largely falls within
    the 20-40 range, with torpedoes and unguided rockets doing a fair bit more.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    Removed an unwanted space.
    * Split outfit.xml into separate files.
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Modified the numbers some more.
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Consolidated missile and launcher descriptions, removed missiles from shop
    
    This commit modifies all launcher descriptions to incorporate important
    information from the missile/rocket descriptions; previously most of
    them just said something like "a launcher that launches X missiles",
    which was always annoying but is absolutely no good with auto-refilling
    missiles. Additionally, rockets have been removed from all shops (even
    Bon Sebb), since their presence there is no longer needed (although the
    missile outfits themselves remain in the game mostly as an interesting
    relic of the past; changing the system to not have them at all would be too
    time-consuming to be worth it in my opinion).
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Initial attempt at rebalancing missiles.
    
    ew_target values are mostly clumped now, for a given missile type. Lock-on
    times have generally been reduced, as have delays. DPS largely falls within
    the 20-40 range, with torpedoes and unguided rockets doing a fair bit more.
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Launchers should now lock on faster.
    * Split outfit.xml into separate files.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Fixed up Thurion energy missiles.
    
    I've reworked them to balance with everything else a bit better.
    Some things I did:
    
    * Lowered the Energy Dart and Energy Missile the same speed and with
      the same turn rate as the Energy Torpedo.
    
    * Lowered the duration of the Energy Dart, increased the duration of
      the others (each size energy dart now has a range comparable to
      cannons of the same size).
    
    * Added prices to these weapons rather than offering them up for free.
    
    * Lowered the lock-on time from 1 second to 0.2 seconds for all sizes,
      so that these weapons can be used rapidly (important because they're
      short-range weapons).
    Modified the numbers some more.
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Auto add / remove missiles, plus set missile costs to 0
    
    Just the start of the work here. This causes it to be unnecessary
    to buy missiles. They remain in the shop at cost 0 for the time
    being (and do nothing). Next up is removing those missiles from the
    shops, and consolidating the info about missiles and their launchers
    into the launchers themselves. Missiles will stay separate outfits,
    so I'm thinking of just adding a button to the launcher to view the
    missile's info, or otherwise I might just programmatically paste the
    missile info into the launcher somehow. Undecided.
    Added a new Thurion freighter and Thurion weapons.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Modified the numbers some more.
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Consolidated missile and launcher descriptions, removed missiles from shop
    
    This commit modifies all launcher descriptions to incorporate important
    information from the missile/rocket descriptions; previously most of
    them just said something like "a launcher that launches X missiles",
    which was always annoying but is absolutely no good with auto-refilling
    missiles. Additionally, rockets have been removed from all shops (even
    Bon Sebb), since their presence there is no longer needed (although the
    missile outfits themselves remain in the game mostly as an interesting
    relic of the past; changing the system to not have them at all would be too
    time-consuming to be worth it in my opinion).
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Rebalance fighter bay prices, fighter quantities, and delays.
    major zalek update
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Modified the numbers some more.
    Revert "Revert "Removal of reload restriction + numbers adjustment""
    
    This reverts commit 52ec9e8ed113a3b5dcbf6bea012c5393d42cdf16.
    Revert "Removal of reload restriction + numbers adjustment"
    
    This reverts commit d01b1d6f6dbe48d4604239d96b4cbd0783627646.
    Removal of reload restriction + numbers adjustment
    
    This is a small change seeing what it's like to get rid of the
    restriction on reloading while shooting while still basically doing
    what I was thinking it should do.
    
    Most notable difference here is that mace rockets have to have very
    slow reload like the rest of them.
    Added auto-refilling of missiles.
    
    Woot! Now all I need to do is clean up the appearance of the shop and
    this little bit will be done! :D
    Add dedicated store graphics for (empire) lancelot fighter bay
    Rebalance fighter bay prices, fighter quantities, and delays.
    major zalek update
    madding more crap complicated by merge conflicts, i am a tool
    * Moved all <cpu> nodes into <general>. Reverted all <cpu_flat> nodes.
    * cpu value for modifications is no longer a magic number. The cpu value now ALWAYS means CPU usage, and it must ALWAYS be negative.
    * Added cpu_max node to modifications, for increasing CPU capacity. This must always be positive.
    * Updated outfit XML to reflect new changes.
    * Fixed some CPU related logic here and there.
    * Split outfit.xml into separate files.
    Renamed "dumb"/"dumbfire" rockets to "unguided".
    
    The term "dumbfire" (which doesn't seem to be in common use outside
    of a select few video games) comes from the term "dumb", which is
    ableist on two counts: firstly, it's sanist because the meaning
    "dumbfire" is derived from is "stupid" or "of low intelligence".
    Secondly, the term "dumb" actually originates from ableism against
    mute people, albeit in the German language rather than English.
    
    The term is imprecise, anyway, so I've changed it to the more precise
    and non-ableist term, "unguided".
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Moved rockets to their own subdirectory.
    Auto add / remove missiles, plus set missile costs to 0
    
    Just the start of the work here. This causes it to be unnecessary
    to buy missiles. They remain in the shop at cost 0 for the time
    being (and do nothing). Next up is removing those missiles from the
    shops, and consolidating the info about missiles and their launchers
    into the launchers themselves. Missiles will stay separate outfits,
    so I'm thinking of just adding a button to the launcher to view the
    missile's info, or otherwise I might just programmatically paste the
    missile info into the launcher somehow. Undecided.
    * Split outfit.xml into separate files.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    OK, we got it!
    
    I repurposed Jam Resistance to be used as "tracking" and adjusted
    the numbers. Seems to work pretty decently well.
    Fixed up Thurion energy missiles.
    
    I've reworked them to balance with everything else a bit better.
    Some things I did:
    
    * Lowered the Energy Dart and Energy Missile the same speed and with
      the same turn rate as the Energy Torpedo.
    
    * Lowered the duration of the Energy Dart, increased the duration of
      the others (each size energy dart now has a range comparable to
      cannons of the same size).
    
    * Added prices to these weapons rather than offering them up for free.
    
    * Lowered the lock-on time from 1 second to 0.2 seconds for all sizes,
      so that these weapons can be used rapidly (important because they're
      short-range weapons).
    Moved rockets to their own subdirectory.
    Auto add / remove missiles, plus set missile costs to 0
    
    Just the start of the work here. This causes it to be unnecessary
    to buy missiles. They remain in the shop at cost 0 for the time
    being (and do nothing). Next up is removing those missiles from the
    shops, and consolidating the info about missiles and their launchers
    into the launchers themselves. Missiles will stay separate outfits,
    so I'm thinking of just adding a button to the launcher to view the
    missile's info, or otherwise I might just programmatically paste the
    missile info into the launcher somehow. Undecided.
    Added a new Thurion freighter and Thurion weapons.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    OK, we got it!
    
    I repurposed Jam Resistance to be used as "tracking" and adjusted
    the numbers. Seems to work pretty decently well.
    Moved rockets to their own subdirectory.
    Auto add / remove missiles, plus set missile costs to 0
    
    Just the start of the work here. This causes it to be unnecessary
    to buy missiles. They remain in the shop at cost 0 for the time
    being (and do nothing). Next up is removing those missiles from the
    shops, and consolidating the info about missiles and their launchers
    into the launchers themselves. Missiles will stay separate outfits,
    so I'm thinking of just adding a button to the launcher to view the
    missile's info, or otherwise I might just programmatically paste the
    missile info into the launcher somehow. Undecided.
    Rebalance ammo masses
    Initial attempt at rebalancing missiles.
    
    ew_target values are mostly clumped now, for a given missile type. Lock-on
    times have generally been reduced, as have delays. DPS largely falls within
    the 20-40 range, with torpedoes and unguided rockets doing a fair bit more.
    * Fixed check script paths.
    * Made Fury missiles and launchers use their dedicated art.
    * Added more systems and planets to the galaxy. Areze helped.
    * Fury missile now uses proper store gfx.
    New Fury graphics by admiral_cheater.
    * Split outfit.xml into separate files.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Lowered the lancelot "ammo" mass.
    Moved rockets to their own subdirectory.
    Auto add / remove missiles, plus set missile costs to 0
    
    Just the start of the work here. This causes it to be unnecessary
    to buy missiles. They remain in the shop at cost 0 for the time
    being (and do nothing). Next up is removing those missiles from the
    shops, and consolidating the info about missiles and their launchers
    into the launchers themselves. Missiles will stay separate outfits,
    so I'm thinking of just adding a button to the launcher to view the
    missile's info, or otherwise I might just programmatically paste the
    missile info into the launcher somehow. Undecided.
    major zalek update
    * Split outfit.xml into separate files.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Moved rockets to their own subdirectory.
    Auto add / remove missiles, plus set missile costs to 0
    
    Just the start of the work here. This causes it to be unnecessary
    to buy missiles. They remain in the shop at cost 0 for the time
    being (and do nothing). Next up is removing those missiles from the
    shops, and consolidating the info about missiles and their launchers
    into the launchers themselves. Missiles will stay separate outfits,
    so I'm thinking of just adding a button to the launcher to view the
    missile's info, or otherwise I might just programmatically paste the
    missile info into the launcher somehow. Undecided.
    Rebalance ammo masses
    Initial attempt at rebalancing missiles.
    
    ew_target values are mostly clumped now, for a given missile type. Lock-on
    times have generally been reduced, as have delays. DPS largely falls within
    the 20-40 range, with torpedoes and unguided rockets doing a fair bit more.
    Vengeance now armorbreaker, added dome Zlk assets, tweaked others
    * Split outfit.xml into separate files.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    OK, we got it!
    
    I repurposed Jam Resistance to be used as "tracking" and adjusted
    the numbers. Seems to work pretty decently well.
    Moved rockets to their own subdirectory.
    Auto add / remove missiles, plus set missile costs to 0
    
    Just the start of the work here. This causes it to be unnecessary
    to buy missiles. They remain in the shop at cost 0 for the time
    being (and do nothing). Next up is removing those missiles from the
    shops, and consolidating the info about missiles and their launchers
    into the launchers themselves. Missiles will stay separate outfits,
    so I'm thinking of just adding a button to the launcher to view the
    missile's info, or otherwise I might just programmatically paste the
    missile info into the launcher somehow. Undecided.
    * Fixed check script paths.
    * Made Fury missiles and launchers use their dedicated art.
    * Split outfit.xml into separate files.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Moved rockets to their own subdirectory.
    Auto add / remove missiles, plus set missile costs to 0
    
    Just the start of the work here. This causes it to be unnecessary
    to buy missiles. They remain in the shop at cost 0 for the time
    being (and do nothing). Next up is removing those missiles from the
    shops, and consolidating the info about missiles and their launchers
    into the launchers themselves. Missiles will stay separate outfits,
    so I'm thinking of just adding a button to the launcher to view the
    missile's info, or otherwise I might just programmatically paste the
    missile info into the launcher somehow. Undecided.
    major zalek update
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Lowered the lancelot "ammo" mass.
    Moved rockets to their own subdirectory.
    Auto add / remove missiles, plus set missile costs to 0
    
    Just the start of the work here. This causes it to be unnecessary
    to buy missiles. They remain in the shop at cost 0 for the time
    being (and do nothing). Next up is removing those missiles from the
    shops, and consolidating the info about missiles and their launchers
    into the launchers themselves. Missiles will stay separate outfits,
    so I'm thinking of just adding a button to the launcher to view the
    missile's info, or otherwise I might just programmatically paste the
    missile info into the launcher somehow. Undecided.
    major zalek update
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    OK, we got it!
    
    I repurposed Jam Resistance to be used as "tracking" and adjusted
    the numbers. Seems to work pretty decently well.
    Fixed up Thurion energy missiles.
    
    I've reworked them to balance with everything else a bit better.
    Some things I did:
    
    * Lowered the Energy Dart and Energy Missile the same speed and with
      the same turn rate as the Energy Torpedo.
    
    * Lowered the duration of the Energy Dart, increased the duration of
      the others (each size energy dart now has a range comparable to
      cannons of the same size).
    
    * Added prices to these weapons rather than offering them up for free.
    
    * Lowered the lock-on time from 1 second to 0.2 seconds for all sizes,
      so that these weapons can be used rapidly (important because they're
      short-range weapons).
    Moved rockets to their own subdirectory.
    Auto add / remove missiles, plus set missile costs to 0
    
    Just the start of the work here. This causes it to be unnecessary
    to buy missiles. They remain in the shop at cost 0 for the time
    being (and do nothing). Next up is removing those missiles from the
    shops, and consolidating the info about missiles and their launchers
    into the launchers themselves. Missiles will stay separate outfits,
    so I'm thinking of just adding a button to the launcher to view the
    missile's info, or otherwise I might just programmatically paste the
    missile info into the launcher somehow. Undecided.
    Added a new Thurion freighter and Thurion weapons.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Za'lek weapons tweak
    
    Added two new missile launchers for medium and heavy Za'lek ships. Balanced close to Thurion launchers as the two factions are close tech-wise. Also modified the equip file so Za'lek ships should use the launchers.
    Renamed "dumb"/"dumbfire" rockets to "unguided".
    
    The term "dumbfire" (which doesn't seem to be in common use outside
    of a select few video games) comes from the term "dumb", which is
    ableist on two counts: firstly, it's sanist because the meaning
    "dumbfire" is derived from is "stupid" or "of low intelligence".
    Secondly, the term "dumb" actually originates from ableism against
    mute people, albeit in the German language rather than English.
    
    The term is imprecise, anyway, so I've changed it to the more precise
    and non-ableist term, "unguided".
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Za'lek weapons tweak
    
    Added two new missile launchers for medium and heavy Za'lek ships. Balanced close to Thurion launchers as the two factions are close tech-wise. Also modified the equip file so Za'lek ships should use the launchers.
    Moved rockets to their own subdirectory.
    Auto add / remove missiles, plus set missile costs to 0
    
    Just the start of the work here. This causes it to be unnecessary
    to buy missiles. They remain in the shop at cost 0 for the time
    being (and do nothing). Next up is removing those missiles from the
    shops, and consolidating the info about missiles and their launchers
    into the launchers themselves. Missiles will stay separate outfits,
    so I'm thinking of just adding a button to the launcher to view the
    missile's info, or otherwise I might just programmatically paste the
    missile info into the launcher somehow. Undecided.
    Rebalance ammo masses
    Initial attempt at rebalancing missiles.
    
    ew_target values are mostly clumped now, for a given missile type. Lock-on
    times have generally been reduced, as have delays. DPS largely falls within
    the 20-40 range, with torpedoes and unguided rockets doing a fair bit more.
    * Split outfit.xml into separate files.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Moved rockets to their own subdirectory.
    Auto add / remove missiles, plus set missile costs to 0
    
    Just the start of the work here. This causes it to be unnecessary
    to buy missiles. They remain in the shop at cost 0 for the time
    being (and do nothing). Next up is removing those missiles from the
    shops, and consolidating the info about missiles and their launchers
    into the launchers themselves. Missiles will stay separate outfits,
    so I'm thinking of just adding a button to the launcher to view the
    missile's info, or otherwise I might just programmatically paste the
    missile info into the launcher somehow. Undecided.
    major zalek update
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Za'lek weapons tweak
    
    Added two new missile launchers for medium and heavy Za'lek ships. Balanced close to Thurion launchers as the two factions are close tech-wise. Also modified the equip file so Za'lek ships should use the launchers.
    Renamed "dumb"/"dumbfire" rockets to "unguided".
    
    The term "dumbfire" (which doesn't seem to be in common use outside
    of a select few video games) comes from the term "dumb", which is
    ableist on two counts: firstly, it's sanist because the meaning
    "dumbfire" is derived from is "stupid" or "of low intelligence".
    Secondly, the term "dumb" actually originates from ableism against
    mute people, albeit in the German language rather than English.
    
    The term is imprecise, anyway, so I've changed it to the more precise
    and non-ableist term, "unguided".
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Moved rockets to their own subdirectory.
    Auto add / remove missiles, plus set missile costs to 0
    
    Just the start of the work here. This causes it to be unnecessary
    to buy missiles. They remain in the shop at cost 0 for the time
    being (and do nothing). Next up is removing those missiles from the
    shops, and consolidating the info about missiles and their launchers
    into the launchers themselves. Missiles will stay separate outfits,
    so I'm thinking of just adding a button to the launcher to view the
    missile's info, or otherwise I might just programmatically paste the
    missile info into the launcher somehow. Undecided.
    Various Collective Heavy Drone modifications.
    
    In particular, I've modified the Electron Burst Cannon again, making
    it shorter-ranged and a constant velocity rather than accelerating,
    and I've also changed it to a shieldbreaker and cut down its damage.
    Heavy Drones also now have a -50% ammo and -50% missile range penalty.
    On the flipside, I made it so that heavy drones get equipped with
    Heavy Neutron Disruptors, which were removed from them for some reason.
    Reverted the range increase of the Electron Energy Cell from before.
    
    Commit 04dd81706c75a451894dc16eacd81845f02f1372 increased the range
    of this weapon, used by the Collective Heavy Drone, dramatically.
    The range was so much that these drones could shoot you from halfway
    across the system, meaning that their presence was pretty much a
    guaranteed death sentence (especially given how powerful this weapon
    is). This is simply a reversion of that range increase while retaining
    all the other buffs the weapon got.
    
    The result is still extremely powerful, but survivable. It also shouldn't
    have any real effect on usability by players since using an unguided
    bullet at such a large range is impractical unless you have a whole
    swarm on your side (which, as a player, you never do).
    Assorted Changes
    
    Makes Za'lek drones more drone-like (They'll never be piloted by the
    player under legit circumstances). Further trying to balance Electron
    Cannons so a mob of Col. HDs can't annihilate heavy ships quite as
    easily (will probably have to switch their damage to shieldbreaker to
    coinside with their desc.).
    Buff to EBC
    
    Still needs to be fine-tune balanced. Projectiles should be stronger
    given how near-impossible it is to aim the things.
    Minor sound/gfx fix fix
    
    doesn't make much sense for an energy burst to explode like a bomb.
    Adding pseudo-missiles to Collective
    
    Gives The Collective Heavy Drones More Teeth. Possibly start working to
    return them to medium ship status? Would need to scale up sprite sheet
    in that event.
    Renamed "dumb"/"dumbfire" rockets to "unguided".
    
    The term "dumbfire" (which doesn't seem to be in common use outside
    of a select few video games) comes from the term "dumb", which is
    ableist on two counts: firstly, it's sanist because the meaning
    "dumbfire" is derived from is "stupid" or "of low intelligence".
    Secondly, the term "dumb" actually originates from ableism against
    mute people, albeit in the German language rather than English.
    
    The term is imprecise, anyway, so I've changed it to the more precise
    and non-ableist term, "unguided".
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Modified missiles to make guided missiles medium.
    
    This is an attempt to redesign the way missiles are balanced: guided
    missiles of all kinds have been redefined as medium (weights adjusted
    accordingly), and the Banshee rocket has been redefined as small. The
    idea here is to restrict guided missiles to bombers and up, mainly for
    use by bombers, corvettes, and light destroyers.
    
    This of course will cause equipping of AI fighters to stop working
    correctly. I will address that in the next commit.
    Moved rockets to their own subdirectory.
    Auto add / remove missiles, plus set missile costs to 0
    
    Just the start of the work here. This causes it to be unnecessary
    to buy missiles. They remain in the shop at cost 0 for the time
    being (and do nothing). Next up is removing those missiles from the
    shops, and consolidating the info about missiles and their launchers
    into the launchers themselves. Missiles will stay separate outfits,
    so I'm thinking of just adding a button to the launcher to view the
    missile's info, or otherwise I might just programmatically paste the
    missile info into the launcher somehow. Undecided.
    Initial attempt at rebalancing missiles.
    
    ew_target values are mostly clumped now, for a given missile type. Lock-on
    times have generally been reduced, as have delays. DPS largely falls within
    the 20-40 range, with torpedoes and unguided rockets doing a fair bit more.
    * Split outfit.xml into separate files.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Moved rockets to their own subdirectory.
    Auto add / remove missiles, plus set missile costs to 0
    
    Just the start of the work here. This causes it to be unnecessary
    to buy missiles. They remain in the shop at cost 0 for the time
    being (and do nothing). Next up is removing those missiles from the
    shops, and consolidating the info about missiles and their launchers
    into the launchers themselves. Missiles will stay separate outfits,
    so I'm thinking of just adding a button to the launcher to view the
    missile's info, or otherwise I might just programmatically paste the
    missile info into the launcher somehow. Undecided.
    Rebalance ammo masses
    Initial attempt at rebalancing missiles.
    
    ew_target values are mostly clumped now, for a given missile type. Lock-on
    times have generally been reduced, as have delays. DPS largely falls within
    the 20-40 range, with torpedoes and unguided rockets doing a fair bit more.
    madding more crap complicated by merge conflicts, i am a tool
    * Split outfit.xml into separate files.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    OK, we got it!
    
    I repurposed Jam Resistance to be used as "tracking" and adjusted
    the numbers. Seems to work pretty decently well.
    Moved rockets to their own subdirectory.
    Auto add / remove missiles, plus set missile costs to 0
    
    Just the start of the work here. This causes it to be unnecessary
    to buy missiles. They remain in the shop at cost 0 for the time
    being (and do nothing). Next up is removing those missiles from the
    shops, and consolidating the info about missiles and their launchers
    into the launchers themselves. Missiles will stay separate outfits,
    so I'm thinking of just adding a button to the launcher to view the
    missile's info, or otherwise I might just programmatically paste the
    missile info into the launcher somehow. Undecided.
    Rebalance ammo masses
    Initial attempt at rebalancing missiles.
    
    ew_target values are mostly clumped now, for a given missile type. Lock-on
    times have generally been reduced, as have delays. DPS largely falls within
    the 20-40 range, with torpedoes and unguided rockets doing a fair bit more.
    * Split outfit.xml into separate files.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Moved rockets to their own subdirectory.
    Auto add / remove missiles, plus set missile costs to 0
    
    Just the start of the work here. This causes it to be unnecessary
    to buy missiles. They remain in the shop at cost 0 for the time
    being (and do nothing). Next up is removing those missiles from the
    shops, and consolidating the info about missiles and their launchers
    into the launchers themselves. Missiles will stay separate outfits,
    so I'm thinking of just adding a button to the launcher to view the
    missile's info, or otherwise I might just programmatically paste the
    missile info into the launcher somehow. Undecided.
    Rebalance ammo masses
    Initial attempt at rebalancing missiles.
    
    ew_target values are mostly clumped now, for a given missile type. Lock-on
    times have generally been reduced, as have delays. DPS largely falls within
    the 20-40 range, with torpedoes and unguided rockets doing a fair bit more.
    general update, hopefully not broken
    madding more crap complicated by merge conflicts, i am a tool
    * Split outfit.xml into separate files.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Moved rockets to their own subdirectory.
    Auto add / remove missiles, plus set missile costs to 0
    
    Just the start of the work here. This causes it to be unnecessary
    to buy missiles. They remain in the shop at cost 0 for the time
    being (and do nothing). Next up is removing those missiles from the
    shops, and consolidating the info about missiles and their launchers
    into the launchers themselves. Missiles will stay separate outfits,
    so I'm thinking of just adding a button to the launcher to view the
    missile's info, or otherwise I might just programmatically paste the
    missile info into the launcher somehow. Undecided.
    major zalek update
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    OK, we got it!
    
    I repurposed Jam Resistance to be used as "tracking" and adjusted
    the numbers. Seems to work pretty decently well.
    Moved rockets to their own subdirectory.
    Auto add / remove missiles, plus set missile costs to 0
    
    Just the start of the work here. This causes it to be unnecessary
    to buy missiles. They remain in the shop at cost 0 for the time
    being (and do nothing). Next up is removing those missiles from the
    shops, and consolidating the info about missiles and their launchers
    into the launchers themselves. Missiles will stay separate outfits,
    so I'm thinking of just adding a button to the launcher to view the
    missile's info, or otherwise I might just programmatically paste the
    missile info into the launcher somehow. Undecided.
    * Launchers should now lock on faster.
    * Split outfit.xml into separate files.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Moved rockets to their own subdirectory.
    Auto add / remove missiles, plus set missile costs to 0
    
    Just the start of the work here. This causes it to be unnecessary
    to buy missiles. They remain in the shop at cost 0 for the time
    being (and do nothing). Next up is removing those missiles from the
    shops, and consolidating the info about missiles and their launchers
    into the launchers themselves. Missiles will stay separate outfits,
    so I'm thinking of just adding a button to the launcher to view the
    missile's info, or otherwise I might just programmatically paste the
    missile info into the launcher somehow. Undecided.
    major zalek update
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    OK, we got it!
    
    I repurposed Jam Resistance to be used as "tracking" and adjusted
    the numbers. Seems to work pretty decently well.
    Fixed up Thurion energy missiles.
    
    I've reworked them to balance with everything else a bit better.
    Some things I did:
    
    * Lowered the Energy Dart and Energy Missile the same speed and with
      the same turn rate as the Energy Torpedo.
    
    * Lowered the duration of the Energy Dart, increased the duration of
      the others (each size energy dart now has a range comparable to
      cannons of the same size).
    
    * Added prices to these weapons rather than offering them up for free.
    
    * Lowered the lock-on time from 1 second to 0.2 seconds for all sizes,
      so that these weapons can be used rapidly (important because they're
      short-range weapons).
    Moved rockets to their own subdirectory.
    Auto add / remove missiles, plus set missile costs to 0
    
    Just the start of the work here. This causes it to be unnecessary
    to buy missiles. They remain in the shop at cost 0 for the time
    being (and do nothing). Next up is removing those missiles from the
    shops, and consolidating the info about missiles and their launchers
    into the launchers themselves. Missiles will stay separate outfits,
    so I'm thinking of just adding a button to the launcher to view the
    missile's info, or otherwise I might just programmatically paste the
    missile info into the launcher somehow. Undecided.
    Added a new Thurion freighter and Thurion weapons.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    OK, we got it!
    
    I repurposed Jam Resistance to be used as "tracking" and adjusted
    the numbers. Seems to work pretty decently well.
    Moved rockets to their own subdirectory.
    Auto add / remove missiles, plus set missile costs to 0
    
    Just the start of the work here. This causes it to be unnecessary
    to buy missiles. They remain in the shop at cost 0 for the time
    being (and do nothing). Next up is removing those missiles from the
    shops, and consolidating the info about missiles and their launchers
    into the launchers themselves. Missiles will stay separate outfits,
    so I'm thinking of just adding a button to the launcher to view the
    missile's info, or otherwise I might just programmatically paste the
    missile info into the launcher somehow. Undecided.
    Added a new Thurion freighter and Thurion weapons.
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Moved rockets to their own subdirectory.
    Auto add / remove missiles, plus set missile costs to 0
    
    Just the start of the work here. This causes it to be unnecessary
    to buy missiles. They remain in the shop at cost 0 for the time
    being (and do nothing). Next up is removing those missiles from the
    shops, and consolidating the info about missiles and their launchers
    into the launchers themselves. Missiles will stay separate outfits,
    so I'm thinking of just adding a button to the launcher to view the
    missile's info, or otherwise I might just programmatically paste the
    missile info into the launcher somehow. Undecided.
    major zalek update
    * Split outfit.xml into separate files.
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Removed "&" from file names.
    Add new core system icons and cargo hull icons.
    Made the cargo hulls give less protection.
    
    There really wasn't much difference in terms of protection between
    the cargo hulls and the high-end combat platings. I think this is
    a bad design, so I have changed the cargo hulls to all have low-end
    protection (equivalent to the standard Unicorp components of the
    same size) to make it more of a trade-off.
    Add variety to plating graphics
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rebalanced core hulls, added several new ones with placeholder descs
    Renamed a variety of core hulls throughout XML and Lua
    
    'Schafer & Kane' has been replaced with 'S&K' in most places
    Several Unicorp and S&K platings have new names
    Rename numerous core hulls in preparation for rebalancing
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Removed "&" from file names.
    Add remaining hull icons.
    Add new hull icons.
    Add variety to plating graphics
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rewrote descriptions for most core hulls
    Rebalanced core hulls, added several new ones with placeholder descs
    Renamed a variety of core hulls throughout XML and Lua
    
    'Schafer & Kane' has been replaced with 'S&K' in most places
    Several Unicorp and S&K platings have new names
    Rename numerous core hulls in preparation for rebalancing
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Removed "&" from file names.
    Add new core system icons and cargo hull icons.
    Made the cargo hulls give less protection.
    
    There really wasn't much difference in terms of protection between
    the cargo hulls and the high-end combat platings. I think this is
    a bad design, so I have changed the cargo hulls to all have low-end
    protection (equivalent to the standard Unicorp components of the
    same size) to make it more of a trade-off.
    Add variety to plating graphics
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rebalanced core hulls, added several new ones with placeholder descs
    Renamed a variety of core hulls throughout XML and Lua
    
    'Schafer & Kane' has been replaced with 'S&K' in most places
    Several Unicorp and S&K platings have new names
    Rename numerous core hulls in preparation for rebalancing
    Adjusted rarities and such
    Changed rarity indications for outfits.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Finished the "Assault on Raelid" mission.
    
    Finally, it's finished! When you beat it, Raelid Outpost is wiped
    from the map, which angers the Empire and turns them into an enemy.
    The general feel at the end is victorious, yet worrisome.
    Add variety to plating graphics
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rebalanced core hulls, added several new ones with placeholder descs
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Removed "&" from file names.
    Add new hull icons.
    Add variety to plating graphics
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rewrote descriptions for most core hulls
    Rebalanced core hulls, added several new ones with placeholder descs
    Renamed a variety of core hulls throughout XML and Lua
    
    'Schafer & Kane' has been replaced with 'S&K' in most places
    Several Unicorp and S&K platings have new names
    Rename numerous core hulls in preparation for rebalancing
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Removed "&" from file names.
    Add new hull icons.
    Add variety to plating graphics
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rebalanced core hulls, added several new ones with placeholder descs
    Renamed a variety of core hulls throughout XML and Lua
    
    'Schafer & Kane' has been replaced with 'S&K' in most places
    Several Unicorp and S&K platings have new names
    Rename numerous core hulls in preparation for rebalancing
    Changed rarity indications for outfits.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add variety to plating graphics
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rebalanced core hulls, added several new ones with placeholder descs
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Removed "&" from file names.
    Add new hull icons.
    Add variety to plating graphics
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rebalanced core hulls, added several new ones with placeholder descs
    Renamed a variety of core hulls throughout XML and Lua
    
    'Schafer & Kane' has been replaced with 'S&K' in most places
    Several Unicorp and S&K platings have new names
    Rename numerous core hulls in preparation for rebalancing
    Changed rarity indications for outfits.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new hull icons.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rewrote descriptions for most core hulls
    Rebalanced core hulls, added several new ones with placeholder descs
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add remaining hull icons.
    Add new hull icons.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rewrote descriptions for most core hulls
    Rebalanced core hulls, added several new ones with placeholder descs
    Renamed a variety of core hulls throughout XML and Lua
    
    'Schafer & Kane' has been replaced with 'S&K' in most places
    Several Unicorp and S&K platings have new names
    Rename numerous core hulls in preparation for rebalancing
    Changed rarity indications for outfits.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new hull icons.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rewrote descriptions for most core hulls
    Rebalanced core hulls, added several new ones with placeholder descs
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Removed "&" from file names.
    Add remaining hull icons.
    Add new hull icons.
    Add variety to plating graphics
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Reduce stealth plating hide to a uniform 30%
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rewrote descriptions for most core hulls
    Rebalanced core hulls, added several new ones with placeholder descs
    Renamed a variety of core hulls throughout XML and Lua
    
    'Schafer & Kane' has been replaced with 'S&K' in most places
    Several Unicorp and S&K platings have new names
    Rename numerous core hulls in preparation for rebalancing
    Changed rarity indications for outfits.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add remaining hull icons.
    Add new hull icons.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rewrote descriptions for most core hulls
    Rebalanced core hulls, added several new ones with placeholder descs
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Removed "&" from file names.
    Add new hull icons.
    Add variety to plating graphics
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rewrote descriptions for most core hulls
    Rebalanced core hulls, added several new ones with placeholder descs
    Renamed a variety of core hulls throughout XML and Lua
    
    'Schafer & Kane' has been replaced with 'S&K' in most places
    Several Unicorp and S&K platings have new names
    Rename numerous core hulls in preparation for rebalancing
    Changed rarity indications for outfits.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new hull icons.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rewrote descriptions for most core hulls
    Rebalanced core hulls, added several new ones with placeholder descs
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add remaining hull icons.
    Add new hull icons.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rewrote descriptions for most core hulls
    Rebalanced core hulls, added several new ones with placeholder descs
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Removed "&" from file names.
    Add new core system icons and cargo hull icons.
    Made the cargo hulls give less protection.
    
    There really wasn't much difference in terms of protection between
    the cargo hulls and the high-end combat platings. I think this is
    a bad design, so I have changed the cargo hulls to all have low-end
    protection (equivalent to the standard Unicorp components of the
    same size) to make it more of a trade-off.
    Add variety to plating graphics
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rebalanced core hulls, added several new ones with placeholder descs
    Renamed a variety of core hulls throughout XML and Lua
    
    'Schafer & Kane' has been replaced with 'S&K' in most places
    Several Unicorp and S&K platings have new names
    Rename numerous core hulls in preparation for rebalancing
    Changed rarity indications for outfits.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add variety to plating graphics
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rebalanced core hulls, added several new ones with placeholder descs
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add remaining hull icons.
    Add new hull icons.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rewrote descriptions for most core hulls
    Rebalanced core hulls, added several new ones with placeholder descs
    Renamed a variety of core hulls throughout XML and Lua
    
    'Schafer & Kane' has been replaced with 'S&K' in most places
    Several Unicorp and S&K platings have new names
    Rename numerous core hulls in preparation for rebalancing
    Changed rarity indications for outfits.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add remaining hull icons.
    Add new hull icons.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rewrote descriptions for most core hulls
    Rebalanced core hulls, added several new ones with placeholder descs
    Changed rarity indications for outfits.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new hull icons.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rewrote descriptions for most core hulls
    Rebalanced core hulls, added several new ones with placeholder descs
    Renamed a variety of core hulls throughout XML and Lua
    
    'Schafer & Kane' has been replaced with 'S&K' in most places
    Several Unicorp and S&K platings have new names
    Rename numerous core hulls in preparation for rebalancing
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new hull icons.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rewrote descriptions for most core hulls
    Rebalanced core hulls, added several new ones with placeholder descs
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Removed "&" from file names.
    Add remaining hull icons.
    Add new hull icons.
    Add variety to plating graphics
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rebalanced core hulls, added several new ones with placeholder descs
    Renamed a variety of core hulls throughout XML and Lua
    
    'Schafer & Kane' has been replaced with 'S&K' in most places
    Several Unicorp and S&K platings have new names
    Rename numerous core hulls in preparation for rebalancing
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Removed "&" from file names.
    Add new hull icons.
    Add variety to plating graphics
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Reduce stealth plating hide to a uniform 30%
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rewrote descriptions for most core hulls
    Rebalanced core hulls, added several new ones with placeholder descs
    Renamed a variety of core hulls throughout XML and Lua
    
    'Schafer & Kane' has been replaced with 'S&K' in most places
    Several Unicorp and S&K platings have new names
    Rename numerous core hulls in preparation for rebalancing
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Removed "&" from file names.
    Add remaining hull icons.
    Add new hull icons.
    Add variety to plating graphics
    Reduce stealth plating hide to a uniform 30%
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rewrote descriptions for most core hulls
    Rebalanced core hulls, added several new ones with placeholder descs
    Renamed a variety of core hulls throughout XML and Lua
    
    'Schafer & Kane' has been replaced with 'S&K' in most places
    Several Unicorp and S&K platings have new names
    Rename numerous core hulls in preparation for rebalancing
    Changed rarity indications for outfits.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add variety to plating graphics
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rebalanced core hulls, added several new ones with placeholder descs
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Removed "&" from file names.
    Add remaining hull icons.
    Add new hull icons.
    Add variety to plating graphics
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rewrote descriptions for most core hulls
    Rebalanced core hulls, added several new ones with placeholder descs
    Renamed a variety of core hulls throughout XML and Lua
    
    'Schafer & Kane' has been replaced with 'S&K' in most places
    Several Unicorp and S&K platings have new names
    Rename numerous core hulls in preparation for rebalancing
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add remaining hull icons.
    Add new hull icons.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Fix sort priority of the Unicorp D12 plating
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rewrote descriptions for most core hulls
    Rebalanced core hulls, added several new ones with placeholder descs
    Renamed a variety of core hulls throughout XML and Lua
    
    'Schafer & Kane' has been replaced with 'S&K' in most places
    Several Unicorp and S&K platings have new names
    Rename numerous core hulls in preparation for rebalancing
    Changed rarity indications for outfits.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new hull icons.
    Core system and hull rebalance
    
    Heavy cruiser (Milspec 9xxx and Unicorp PT-1000) systems have been
    buffed by 15-20% in preparation for a line of light cruiser systems.
    
    Mid-range systems now weigh 15% of the relevant class's engine limit,
    and hulls are ~20% (down from 20-28%).
    
    Light fighter systems are an exception, they're only 8-9% of the limit
    to give players an incentive to use them rather than the heavy fighter
    systems.
    Differentiate the three types of core systems, to improve sorting
    Add priority tags to most core outfits
    
    3 is used for the smaller class within each slot size, e.g. corvettes
    in the medium slot, and 7 is used for the larger, such as destroyers,
    also in the medium slot.
    Rewrote descriptions for most core hulls
    Rebalanced core hulls, added several new ones with placeholder descs
    Renamed a variety of core hulls throughout XML and Lua
    
    'Schafer & Kane' has been replaced with 'S&K' in most places
    Several Unicorp and S&K platings have new names
    Rename numerous core hulls in preparation for rebalancing
    camoflauge -> camouflage
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Restored original priorities.
    Added rarity to all outfits.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    camoflauge -> camouflage
    Tweaked the rarities as suggested by bobbens
    Changed rarity indications for outfits.
    Fixed some (but not all) spacing.
    Added rarity to all outfits.
    Fixed overzealous sed stuff.
    My sed-fu sucks.
    wtf was I thinking. priority->rarity
    Rewrote all the xml files with balancer (shouldn't change anything other than minor syntax stuff).
    Add new biocore outfit icons.
    
    Update ARTWORK_LICENSE.
    Fixed biocores using old (no longer available) gfx names
    Start of bio fins
    
    Just need the in-between stages now.
    Bio shells + better bio brains
    Added price to accessories.
    Made all accessories unique.
    typo
    Added lower priority to racing trophy and updated description.
    Changed image to placeholder.
    Added an example of a "Racing Trophy" accessory which you can get from the race mission.
    Added initial implementation of the travelling merchant.
    Added price to accessories.
    Made all accessories unique.
    Added satellite mock-up accessory as reward for nebula satellite mission.
    Added swamp bombing accessory.
    typo
    Added lower priority to racing trophy and updated description.
    Changed image to placeholder.
    Added an example of a "Racing Trophy" accessory which you can get from the race mission.
    Added price to accessories.
    Made all accessories unique.
    Grammar
    Toy drone for science gone wrong.
    typo
    Added lower priority to racing trophy and updated description.
    Changed image to placeholder.
    Added an example of a "Racing Trophy" accessory which you can get from the race mission.
    Added price to accessories.
    Made all accessories unique.
    Added ugly statue as reward for baron prince mission.
    Added price to accessories.
    Made all accessories unique.
    Reward accessory for collective campaign.
    Added satellite mock-up accessory as reward for nebula satellite mission.
    Added swamp bombing accessory.
    typo
    Added lower priority to racing trophy and updated description.
    Changed image to placeholder.
    Added an example of a "Racing Trophy" accessory which you can get from the race mission.
    Added price to accessories.
    Made all accessories unique.
    Added love letter reward.
    Added price to accessories.
    Made all accessories unique.
    Rename Octogon of Valor to Pentagram of Valor so we can use same graphics as Star of Valor \o/
    Octogon of Valor!
    Star of Valor.
    typo
    Added lower priority to racing trophy and updated description.
    Changed image to placeholder.
    Added an example of a "Racing Trophy" accessory which you can get from the race mission.
    Added price to accessories.
    Made all accessories unique.
    Added swamp bombing accessory.
    typo
    Added lower priority to racing trophy and updated description.
    Changed image to placeholder.
    Added an example of a "Racing Trophy" accessory which you can get from the race mission.
    Added price to accessories.
    Made all accessories unique.
    Star of Valor.
    typo
    Added lower priority to racing trophy and updated description.
    Changed image to placeholder.
    Added an example of a "Racing Trophy" accessory which you can get from the race mission.
    Added price to accessories.
    Made all accessories unique.
    Sandwich holder as a reward for the shark campaign.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Added "Fake ID" pirate "mission".
    
    This is the same concept as rehabilitation missions, except that the
    fake ID "mission" has no victory condition. It simply gives you a
    fake reputation with the major factions that you can use to conduct
    your business uninterrupted, but takes that away if you do too much
    to get noticed.
    
    Namely, you lose your fake ID if you ever wrong an affected faction
    in any way (as with rehab missions), if you gain reputation on an
    affected faction after its mission cap has been adjusted (i.e. doing
    major campaigns for the faction, since that gets you attention which
    means added scrutiny), and occasionally when you gain pirate
    reputation within one of the affected factions' systems.
    
    Of course, the effect is reversed when aborting the "mission", too.
    
    This can serve three purposes:
    
    1. To help pirate-aligned players travel and do pirate cargo missions more easily.
    2. To allow former pirates or FLF pilots to give up on a life of piracy/terrorism.
    3. As a part of some campaigns (like maybe the Thurion and/or Proteron campaigns).
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    Fix the failure conditions for rehab missions
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Tweak wording of rehabilitation missions.
    * Rehab missions now properly terminate when aborted.
    * Initial commit of the first two missions in the Academy Hack campaign.
    * Improved proximity script to allow AI ships to act as the focus.
    * Implemented selective pilot clear script for per-faction ship clearing.
    * No-run AI for Sirius.
    * Moved bulky lua code from mission.xml into rehab_common.lua.
    * Format rehab cost.
    * Make the rehab mission actually take money away, not give it.
    * Also make it end properly.
    * Fixed common rehab standing hook.
    * Removed pointless hook.
    * Initial commit of rehabilitation missions.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed tutorial-common.lua -> tutorial_common.lua
    Renamed tutorial.lua -> tutorial_land.lua
    Added a news event suggested on Discord.
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs for neutral one-off missions.
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Added some more NPC hints and increased the chance of getting them.
    
    I was originally going to add an extended tutorial but wasn't able
    to figure out a way to do that in a way that it wouldn't just be a
    giant, confusing exposition. So instead I added some more NPC hints
    explaining the things I want explained with a bit of extra emphasis
    during the tutorial that talking to NPCs is a good idea.
    Fixed misspelling
    Set title, reward, and description for tutorial mission.
    
    Fixes #1063
    Gave the tutorial-giver the Captain T. Practice name.
    Substantially improved the tutorial mission.
    Made the target practice drone a bit easier to kill.
    Added license header to the tutorial mission
    Improved start-of-game tutorial, replacing the menu tutorial
    
    I decided to do this because the classic tutorial is quite long, and
    yet the intro text I had previously added is inadequate. This new
    tutorial is designed to be a nice middle-ground.
    
    As before, the tutorial is optional, offered to you at the start of
    the game. Unlike before, you go through an entire mission
    demonstrating all the important game mechanics, rather than just
    having a bunch of information thrown at you.
    
    This makes the tutorials (which I haven't recommended to anyone in
    years) obsolete, so the "Tutorial" button and old tutorial mission
    have been removed.
    Added logs to the Shadow campaign.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Added 3rd "Coming Out" mission, plus fixed some minor fixes to other stuff.
    Fixed method.
    Replaced use of the "static" tag with a "static" standing script.
    
    The reason is using the "static" tag now guarantees standing to always
    be represented as "???", as this text is now defined in Lua.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs to the Shadow campaign.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Improved Shadowrun OSD.
    
    Also removed unnecessary periods from a lot of OSD text (mostly old
    stuff).
    And the modified Lua files (taking advantage of new images).
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    Changed "STU", "STP", and "SCU" to "seconds", "periods", and "cycles".
    
    This is meant for better readability; it makes the different units
    more distinguished from each other.
    
    "STU" was replaced with "seconds" instead of "units" for two reasons:
    one, "units" is too generic (it's used for all kinds of measurements,
    not just time measurements), making it a confusing name. Two, the SCU
    is the same as a second in-universe anyway, and I don't see the
    general population abandoning that term.
    
    For the auto generation of "pretty" time text, I replaced e.g "12 STU"
    with "12s", and e.g. "8.32 STP" with "8.32p".
    
    Also fixed some language mistakes in dialogs I happened to notice,
    plus some very weird usage of the time units that probably resulted
    from a misunderstanding of how long they're supposed to be (there
    was a father concerned because his daughter disappeared several
    *seconds* ago, a food station that had a harvest every day, and a
    weekly mining trip to one planet that was talked about as if that
    wasn't frequent).
    
    Just a thought that just came to mind as I was writing this: perhaps
    it would be better to call decaperiods "daps"? Not truly necessary,
    but it would be an interesting idea because it's a name for a unit
    that kind of look like "days", while also serving as a shorthand
    for the full official name. Any thoughts?
    gettext for shadow missions.
    Typo fix in Shadowrun, spotted by speckmade
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    added missing quote to shadowrun.lua
    Incorrect homonym: discrete -> discreet.
    More minor data fixes.
    * Fixed issue 168 (shadowrun mission script error).
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    removed old osdCreate lines from shadowrun that were causing errors
    * Shadowrun fixes and improvements.
    * Shadowrun fixes and improvements.
    * Prevent infinite loop.
    * Use proper time comparison format.
    * Attempt to make the Shadowrun date hook more precise when running out of time.
    * Fixed Shadowrun, also reduced deadlines further.
    * Increased time limit, it's STP not STU.
    * Halved time limit for shadowrun.
    * More usage of active board including turning it off.
    fixed shadowrun enter function
    * Use pilot.setActiveBoard for missions that involve boarding ships.
    * Fixed shadowrun time api usage (patch by daniel.oconnor).
    * Fixed a couple of file headers I messed up.
    * Replaced all instances of system.get() with system.cur()
    * Minor edits to Dark Shadow.
    * Added overlay related commands to several missions.
    * Typo in Manis' bar text.
    * Adjusted Shadowrun for big planets.
    * Minor progress on Dark Shadow.
    * Shadowrun now claims systems.
    * Moved Shadow and Baron missions into their own subdirectories.
    * Update all the missions to use the new marker API.
    * Shadowrun cleanup.
    * Updated more missions to use the new pilot.add API.
    * Changed the "def" hardcoded value to nil for pilot.add's AI parameter.
    * Updated missions using "def" so that they now use nil.
    * Indent unification on Shadowrun.
    * 4-space indents on the first lines of Shadowrun's dialogues.
    A few quick grammar fixes/improvements
    * Updated shadowrun to use the misn.npcAdd API.
    * Portraits for Rebina and Jorek by grumbel.
    Shadowrun mission: Seiryuu is now invincible.
    * Don't kill the kestrel damnit (Blame Deiz).
    * Mission update.
    * New mission by BTAxis.
    typos and gettext
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    More whitespace
    Added logs to the Shadow campaign.
    corrected a few distances in wrong way
    Removed logid from lua.  Logs now created/appended using the id string.
    Replaced overwrite with a boolean to allow restarting of a log.
    Added a log identifier for creating logs - so that logs can be shared between relevant missions.
    Created nlua_shiplog, and moved log stuff out of nlua_mission.
    Updated example in shadowvigil.lua.
    Added shiplog to the shadowvigil mission, to get started.
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    All right -> alright
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Some minor fixes to Shadow Vigil
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for shadow missions.
    Quick fix for Shadow Vigil (make the diplomat always visible)
    
    This should prevent the attackers from aimlessly wandering the system
    and potentially jumping out, landing, etc.
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Tweaks to Shadow Vigil that should hopefully fix the issues with escorts.
    Protegee isn't used in this sense (and the diplomat is called 'him', but the masculine is 'protege').
    Some more typos.
    Various spelling and grammar fixes.
    Typo and phrasing fixes by Sudarshan S
    * Improvements to Shadow Vigil, to address issue 169 (shadowvigil.lua script bug).
    ** Player can no longer land during the escort.
    ** Mission explicitly sends the player to Nova Shakar and informs him about fuel requirements.
    ** No random pirates will spawn during the mission.
    ** Mission no longer calls the player a fag on failure.
    * Shadow Vigil ambushers don't run away.
    * Sanity check, removed obsolete TODO comment.
    Shadow Vigil mission fixes.
    * Reduce redundant script code.
    * Increased shadow vigil payment to match payment for other shadow missions.
    * Made talks longer.
    * Fixed api usage (timerStop is non-existant now).
    * Moved utility function into scripts.
    * Fixed typos and other small things.
    * Increased pay.
    * Use markers for rendevous point.
    * More usage of active board including turning it off.
    fixed typo in shadowvigil mission, however it now causes SIGSEGV.
    * Use pilot.setActiveBoard for missions that involve boarding ships.
    * Progress on combat tutorial.
    * Renamed "nojump" ais to "norun", for consistency.
    * Use cinematics in Shadow Vigil.
    * Sneaked in some mission tweaks.
    * Update missions according to recent API changes.
    * System claims (or no-claim comments) for several missions.
    * Added overlay related commands to several missions.
    * Slowed down the camera for Shadow Vigil.
    * Shadow Vigil now uses the camera module and player control.
    * Shadow Vigil now claims systems.
    * Moved Shadow and Baron missions into their own subdirectories.
    * Renamed getHealth and getEnergy as health and energy respectively.
    * Added pilot conditionals (read-only).
    * Renamed getHealth and getEnergy as health and energy respectively.
    * Added pilot conditionals (read-only).
    * Use proper syntax.
    * Shadow Vigil now has a marker leading back to the Seiryuu's system at the end.
    * Use pilot.face() in Shadow Vigil.
    * Tweaks to Shadow Vigil.
    * Updated Shadow Vigil and Prince to use new mission marker systemy.
    * Misc updates and fixes to related events.
    * Cleanup.
    * Shadow Vigil mission is now basically complete. Probably still buggy.
    * More progress on Shadow Vigil mission.
    * WIP.
    * Before I forget, set the damn OST.
    * WIP commits are here again.
    * Hijack a different faction for Shadow Vigil mission.
    * Goto command no longer brakes.
    * More work on the Shadow Vigil mission. Also a lot of peripheral edits.
    * WIP. Mission is partially working.
    * WIPpery.
    * WIPpery.
    * More WIPness.
    * More work on Shadow Vigil.
    * Committed something. Probably important.
    * WIP edits for Shadow Vigil mission.
    * Cleanups, remove non-space whitespaces.
    * WIP commit for Shadow Vigil mission.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs to the Shadow campaign.
    Made it impossible for the Genbu to die.
    
    Fixes #1155
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed referring to the player as a man in Dark Shadow.
    Fixed trying to check the pos of destroyed patrollers
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    again a _ bug
    gettext for shadow missions.
    Change bar hook to generic land hook
    
    Should fix the issue illustrated in [1], where the bar hook was
    creating duplicate NPCs every time the bar tab was clicked.
    
    [1] https://forum.naev.org/viewtopic.php?t=1105
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    Corrected comment
    Made the in-game text gender neutral, because females can play too
    * Typo fix, closes issue #201.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Minor spelling/grammar fixes.
    Capitalise Captain when used as a title.
    Fix broken string substitution.
    Consistency fixes for the First Growth colony ships.
    Updated missions and scripts to use jump.pos() instead of system.jumpPos()
    * Patch by Patrick to fix barman appearance in darkshadow mission.
    * Spawn only a limited amount of Lancelot waves.
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * cocking clamp -> docking clamp.
    * Don't have (null) reward.
    * Use new barman portrait, remove TODO comments.
    * More usage of active board including turning it off.
    * Use cinematics in Dark Shadow.
    * Sneaked in some mission tweaks.
    * Added a marker for Dark Shadow to show the player where to get it.
    * Fixes to Dark Shadow. Mission is completable.
    * Fixed XML.
    * Dark Shadow writing done.
    * Planet Nonuri is now actually implemented.
    * Made things shorter.
    * Update missions according to recent API changes.
    * Dark shadow WIPpery.
    * Fixed Four Winds flagship defs, mainly.
    * More work on Dark Shadow.
    * Some more work on Dark Shadow.
    * Fixed a couple of file headers I messed up.
    * Replaced all instances of system.get() with system.cur()
    * Minor edits to Dark Shadow.
    * Typo in Manis' bar text.
    * Adjusted Shadowrun for big planets.
    * Minor progress on Dark Shadow.
    * WIP commit on Dark Shadow.
    * Some cosmetic edits.
    * Some writing done for Dark Shadow.
    * WIP commit for Dark Shadow
    * Added a new system and planet for the purpose of Dark Shadow (uninhabited)
    Added Heretic campaign logs.
    Added logs for achack campaign.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Added 3rd "Coming Out" mission, plus fixed some minor fixes to other stuff.
    Fixed method.
    Replaced use of the "static" tag with a "static" standing script.
    
    The reason is using the "static" tag now guarantees standing to always
    be represented as "???", as this text is now defined in Lua.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    More OSD fixes.
    Fixed several more instances of not using numstring.
    gettext for sirius ferry mission.
    Add extra leeway to time limits for long-distance cargo missions
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    moved jumpdist.lua includes to cargo_common.lua so as to save including it everywhere where cargo_common is used.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced a huge swath of tabs with spaces in  dat/
    Minor mission.xml and Sirius pilgrimage fixes.
    * New generic mission by NeD.
    ** The player can ferry Sirian pilgrims to their holy planet (or somewhere nearby).
    ** Pilgrim are more fussy the higher their Echelon. Some will only want to travel in a Sirian ship.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    * Initial commit of rehabilitation missions.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs for achack campaign.
    All right -> alright
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    corrected an other underline bug
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for academy hack missions.
    use a table in enumerate function, for lua 5.1 compatibility
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Clean up variable after the mission completes successfully.
    * Initial commit of achack04.
    * WIP commit for achack04.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs for achack campaign.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for academy hack missions.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    * Initial commit of the first two missions in the Academy Hack campaign.
    * Improved proximity script to allow AI ships to act as the focus.
    * Implemented selective pilot clear script for per-faction ship clearing.
    * No-run AI for Sirius.
    * Moved bulky lua code from mission.xml into rehab_common.lua.
    * Name correctness.
    * Initial commit of achack01. Needs portraits and matching writing.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Removed "stupid", "idiot", "moron" occurrences.
    
    These are also sanist terms, so I replaced them with better terms,
    like "fool" (the term with the same literal meaning in contemporary
    usage), or generalist insults like "asshole".
    Added logs for achack campaign.
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    Changed "STU", "STP", and "SCU" to "seconds", "periods", and "cycles".
    
    This is meant for better readability; it makes the different units
    more distinguished from each other.
    
    "STU" was replaced with "seconds" instead of "units" for two reasons:
    one, "units" is too generic (it's used for all kinds of measurements,
    not just time measurements), making it a confusing name. Two, the SCU
    is the same as a second in-universe anyway, and I don't see the
    general population abandoning that term.
    
    For the auto generation of "pretty" time text, I replaced e.g "12 STU"
    with "12s", and e.g. "8.32 STP" with "8.32p".
    
    Also fixed some language mistakes in dialogs I happened to notice,
    plus some very weird usage of the time units that probably resulted
    from a misunderstanding of how long they're supposed to be (there
    was a father concerned because his daughter disappeared several
    *seconds* ago, a food station that had a harvest every day, and a
    weekly mining trip to one planet that was talked about as if that
    wasn't frequent).
    
    Just a thought that just came to mind as I was writing this: perhaps
    it would be better to call decaperiods "daps"? Not truly necessary,
    but it would be an interesting idea because it's a name for a unit
    that kind of look like "days", while also serving as a shorthand
    for the full official name. Any thoughts?
    gettext for academy hack missions.
    Remove pilot.player() function, as it is a duplicate of player.pilot()
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    Potential partial fix for fuel bug in Joanne mission and full fix for Issue 216: Tutorial - Communication possible to get stuck plus title correction (why you would do this tutorial if you knew how to break it I don't know though...
    added a hint to set automatic refueling for this mission as you can't manually refuel and therefore can't complete the mission wihtout a heck'of'a large supply...
    change joannes route
    Reduce the speed of joannes ship to match the players ship. unless the player ship is to slow, then abort mission
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * achack02 fixes by thilo.
    * Clean up stack variables on mission finish.
    * Use final OSD message.
    * Initial commit of the first two missions in the Academy Hack campaign.
    * Improved proximity script to allow AI ships to act as the focus.
    * Implemented selective pilot clear script for per-faction ship clearing.
    * No-run AI for Sirius.
    * Moved bulky lua code from mission.xml into rehab_common.lua.
    * Initial commit of rehabilitation missions.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs for achack campaign.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Made time units galactic, plus some other small fixes.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for academy hack missions.
    Replace pilot.memory() and pilot.memoryCheck() with one function, taking
    advantage of the single Lua state.
    Fixed some bugs with achack03.
    
    Specifically, police defending Harja, and a case where the OSD was
    being inappropriately reset.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Updated a slew of former system.hasPresence() call-sites.
    * Repeat var should be popped, not pushed on mission completion.
    * Applied thilo's patch for achack03.
    * Clean up stack variables on mission finish.
    * Initial commit of the third Academy Hack mission.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added Heretic campaign logs.
    Added logs for neutral one-off missions.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    And the modified Lua files (taking advantage of new images).
    More fixes
    Fixed up some of the Heretic campaign.
    Fixed more player gender references, plus some minor fixes.
    
    I systematically searched through with grep -rP "\b[Hh]e\b",
    grep -rP "\b[Hh]im\b", grep -rP "\b[Mm]r\b", and grep -rP "\b[Ss]ir\b".
    The first two returned a very large number of results (most referring
    to NPCs), so it's possible I missed some, but I did look through the
    list pretty thoroughly and think I weeded out all the references to
    the player's gender. In total I found two of them in actual game
    dialog (I also fixed it in some mission script comments and fixed
    indentation in one mission).
    
    Did this because of the mention by @BTAxis in #842 of "Mr." still being
    left in flf_pre01. That was one of the fixes.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    Changed "STU", "STP", and "SCU" to "seconds", "periods", and "cycles".
    
    This is meant for better readability; it makes the different units
    more distinguished from each other.
    
    "STU" was replaced with "seconds" instead of "units" for two reasons:
    one, "units" is too generic (it's used for all kinds of measurements,
    not just time measurements), making it a confusing name. Two, the SCU
    is the same as a second in-universe anyway, and I don't see the
    general population abandoning that term.
    
    For the auto generation of "pretty" time text, I replaced e.g "12 STU"
    with "12s", and e.g. "8.32 STP" with "8.32p".
    
    Also fixed some language mistakes in dialogs I happened to notice,
    plus some very weird usage of the time units that probably resulted
    from a misunderstanding of how long they're supposed to be (there
    was a father concerned because his daughter disappeared several
    *seconds* ago, a food station that had a harvest every day, and a
    weekly mining trip to one planet that was talked about as if that
    wasn't frequent).
    
    Just a thought that just came to mind as I was writing this: perhaps
    it would be better to call decaperiods "daps"? Not truly necessary,
    but it would be an interesting idea because it's a name for a unit
    that kind of look like "days", while also serving as a shorthand
    for the full official name. Any thoughts?
    gettext for heretic campaign.
    Replace uses of pilot.somemethod(p) with p:somemethod()
    Remove pilot.player() function, as it is a duplicate of player.pilot()
    Avoid clobbering Heretic missions' formatted text on reload
    Fix its/it's and lets/let's errors in Lua
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    * Do not use tostring, use the appropriate name() functions instead.
    * Spelling fixes.
    couple more comment changes
    fixing some errors!
    added in the heretic campaign prologue
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added Heretic campaign logs.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    And the modified Lua files (taking advantage of new images).
    More fixes
    Typo
    Heretic campaign fixed up I think
    Fixed up some of the Heretic campaign.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    Changed "STU", "STP", and "SCU" to "seconds", "periods", and "cycles".
    
    This is meant for better readability; it makes the different units
    more distinguished from each other.
    
    "STU" was replaced with "seconds" instead of "units" for two reasons:
    one, "units" is too generic (it's used for all kinds of measurements,
    not just time measurements), making it a confusing name. Two, the SCU
    is the same as a second in-universe anyway, and I don't see the
    general population abandoning that term.
    
    For the auto generation of "pretty" time text, I replaced e.g "12 STU"
    with "12s", and e.g. "8.32 STP" with "8.32p".
    
    Also fixed some language mistakes in dialogs I happened to notice,
    plus some very weird usage of the time units that probably resulted
    from a misunderstanding of how long they're supposed to be (there
    was a father concerned because his daughter disappeared several
    *seconds* ago, a food station that had a harvest every day, and a
    weekly mining trip to one planet that was talked about as if that
    wasn't frequent).
    
    Just a thought that just came to mind as I was writing this: perhaps
    it would be better to call decaperiods "daps"? Not truly necessary,
    but it would be an interesting idea because it's a name for a unit
    that kind of look like "days", while also serving as a shorthand
    for the full official name. Any thoughts?
    fixed typo in heretic2.lua
    gettext for heretic campaign.
    * Attempt to clean up the whitespace mess in Lua a bit.
    Avoid clobbering Heretic missions' formatted text on reload
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    * Partially rewrote heretic3, plus applied the usual proofing.
    * Do not use "pilot" as a variable.
    * Spelling, grammar, style (heretic2).
    * Excised all calls to tostring() and tonumber().
    Fixed a mission claiming issue.
    Used the variable rep instead of nasin_rep in the reward formula, screwing things up. Fixed.
    couple more comment changes
    fixing some errors!
    added in the heretic campaign prologue
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added Heretic campaign logs.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    And the modified Lua files (taking advantage of new images).
    More fixes
    Heretic campaign fixed up I think
    Fixed heretic3.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for heretic campaign.
    * Attempt to clean up the whitespace mess in Lua a bit.
    Avoid clobbering Heretic missions' formatted text on reload
    Get rid of debug message when claim fails
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    * Call correct function.
    * Partially rewrote heretic3, plus applied the usual proofing.
    * Do not use "pilot" as a variable.
    * Excised all calls to tostring() and tonumber().
    Fixed a mission claiming issue.
    Used the variable rep instead of nasin_rep in the reward formula, screwing things up. Fixed.
    finished up the formatting, added in some comments, and corrected a misn.claim call.
    fixing some errors!
    added in the heretic campaign prologue
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added Heretic campaign logs.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    And the modified Lua files (taking advantage of new images).
    Another fix
    Heretic campaign fixed up I think
    Removed obsolete line
    More fixes
    Fixed up some of the Heretic campaign.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for heretic campaign.
    * Attempt to clean up the whitespace mess in Lua a bit.
    Avoid clobbering Heretic missions' formatted text on reload
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    * Spelling, grammar, style (heretic1).
    * Excised all calls to tostring() and tonumber().
    Used the variable rep instead of nasin_rep in the reward formula, screwing things up. Fixed.
    couple more comment changes
    fixing some errors!
    added in the heretic campaign prologue
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added Heretic campaign logs.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    And the modified Lua files (taking advantage of new images).
    More fixes. Finally all working.
    Another fix
    More fixes
    Heretic campaign fixed up I think
    Fixed more player gender references, plus some minor fixes.
    
    I systematically searched through with grep -rP "\b[Hh]e\b",
    grep -rP "\b[Hh]im\b", grep -rP "\b[Mm]r\b", and grep -rP "\b[Ss]ir\b".
    The first two returned a very large number of results (most referring
    to NPCs), so it's possible I missed some, but I did look through the
    list pretty thoroughly and think I weeded out all the references to
    the player's gender. In total I found two of them in actual game
    dialog (I also fixed it in some mission script comments and fixed
    indentation in one mission).
    
    Did this because of the mention by @BTAxis in #842 of "Mr." still being
    left in flf_pre01. That was one of the fixes.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for heretic campaign.
    * Attempt to clean up the whitespace mess in Lua a bit.
    Replace uses of pilot.somemethod(p) with p:somemethod()
    Remove pilot.player() function, as it is a duplicate of player.pilot()
    add missing ')'
    Avoid clobbering Heretic missions' formatted text on reload
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    * Spelling, grammar, style (heretic4)
    * Take off automatically on accepting.
    * No saving during the mission. This ensures the player can't get stuck with a mission he can't complete.
    * Fixed broken syntax, combined calls.
    * Excised all calls to tostring() and tonumber().
    Used the variable rep instead of nasin_rep in the reward formula, screwing things up. Fixed.
    finished up the formatting, added in some comments, and corrected a misn.claim call.
    fixing some errors!
    added in the heretic campaign prologue
    gettext and typos
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added Baron campaign and Za'lek cargo run logs.
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Another dialogue fix
    Added a portrait for and improved Za'lek cargo run mission.
    More OSD fixes.
    Fixed several more instances of not using numstring.
    Fixed more player gender references, plus some minor fixes.
    
    I systematically searched through with grep -rP "\b[Hh]e\b",
    grep -rP "\b[Hh]im\b", grep -rP "\b[Mm]r\b", and grep -rP "\b[Ss]ir\b".
    The first two returned a very large number of results (most referring
    to NPCs), so it's possible I missed some, but I did look through the
    list pretty thoroughly and think I weeded out all the references to
    the player's gender. In total I found two of them in actual game
    dialog (I also fixed it in some mission script comments and fixed
    indentation in one mission).
    
    Did this because of the mention by @BTAxis in #842 of "Mr." still being
    left in flf_pre01. That was one of the fixes.
    gettext for remaining za'lek missions.
    Fixing some spelling errors in the new zalek missions
    Remove pilot.player() function, as it is a duplicate of player.pilot()
    Text fixes in Za'lek Shipping Delivery, spotted by speckmade
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    major zalek update
    Change message based on whether or not the player has a za'lek ship (should be very unlikely though).
    Add log messages for the Za'lek campaign missions.
    Added Science Gone Wrong logs.
    Added Baron campaign and Za'lek cargo run logs.
    Added logs for neutral one-off missions.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Added 3rd "Coming Out" mission, plus fixed some minor fixes to other stuff.
    Fixed method.
    Replaced use of the "static" tag with a "static" standing script.
    
    The reason is using the "static" tag now guarantees standing to always
    be represented as "???", as this text is now defined in Lua.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    major zalek update
    * Initial commit of rehabilitation missions.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed Za'lek Test mission reward calculation.
    
    It was using avgrisk as tier and often calculating much too high
    rewards as a result.
    
    Fixes #1071
    Made time units galactic, plus some other small fixes.
    Another tweak
    Fixed ZT
    Fixed Za'lek Test mission.
    More OSD fixes.
    gettext for remaining za'lek missions.
    Fixes #579.
    Use string claim to avoid missions from using the same core slot.
    Fixed Za'lek Test continued being slow after completion.
    
    When during the Za'lek Test Engine mission the engine looses power,
    and the engine doesn't recover its speed after a while
    and the player lands on the final detsination planet without landing
    on any other planet after loosing power to the test engine,
    then the player stayed slow (the player did not recover its speed).
    spelling fix
    small improvement on zlk test mission
    Fixing some spelling errors in the new zalek missions
    Add a zalek generic mission
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed "dumb"/"dumbfire" rockets to "unguided".
    
    The term "dumbfire" (which doesn't seem to be in common use outside
    of a select few video games) comes from the term "dumb", which is
    ableist on two counts: firstly, it's sanist because the meaning
    "dumbfire" is derived from is "stupid" or "of low intelligence".
    Secondly, the term "dumb" actually originates from ableism against
    mute people, albeit in the German language rather than English.
    
    The term is imprecise, anyway, so I've changed it to the more precise
    and non-ableist term, "unguided".
    gettext stuff
    Added require for nebula research mission 01.
    include -> require
    upgrade on mission map
    Removed unneeded lua nodes.
    Add log messages for the Za'lek campaign missions.
    Use creditstring.
    Add the first two missions for the first Za'lek campaign.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Basic spell checking.
    Next Za'lek campaign mission.
    gettext and typos
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Removed some more ableist language.
    Fix missing array after save game load
    Change message based on whether or not the player has a za'lek ship (should be very unlikely though).
    Fixed the Za'lek neburesearch 0 mission I think.
    
    The problem also exists in the others, but those need other fixing
    up so not focusing on those right now.
    include -> require
    Fixed missing osd_title
    upgrade on mission map
    Fixed up the text / variables of neburesearch_00.
    Removed unneeded lua nodes.
    Add log messages for the Za'lek campaign missions.
    Replaced the destination of the first mission (Arandon) by Iris.
    Removed ghost ship in the Novice Nebula Research mission.
    Text changes of Novice Nebula Research mission.
    Use creditstring.
    Add the first two missions for the first Za'lek campaign.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Removed some more ableist language.
    Basic spell checking.
    Next Za'lek campaign mission.
    typos
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Fixed a bad import in sciwrong2.
    
    It was an input that was both wrongly formatted and not actually
    needed by the script. Not sure what happened there.
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Toy drone for science gone wrong.
    Added more ships for pirate ship stealing.
    
    This also changes "Za'lek Prototype Cruiser" to just "Za'lek Prototype"
    and adds Za'lek ships that were mission from tech.xml.
    forgotten a few setnodisable
    Made nodisable and nodeath compatible
    Added Science Gone Wrong logs.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed Za'lek "Science Gone Wrong" campaign.
    More OSD fixes.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for remaining za'lek missions.
    Make addRaw() return pilot, instead of single element table
    * Correctly finish the 02_sciwrong mission.
    Fixing some spelling errors in the new zalek missions
    3rd mission in ZaLek campaign
    First new missions for campaign
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    "nuts" (sanist term) -> "foolish"
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added Science Gone Wrong logs.
    Removed unused cargo strings, fixed typos in sciwrong.
    Fixed sciwrong01 trying to use a nil title.
    
    Fixes #1159
    Fixed Za'lek "Science Gone Wrong" campaign.
    More OSD fixes.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for remaining za'lek missions.
    Replace pilot.memory() and pilot.memoryCheck() with one function, taking
    advantage of the single Lua state.
    Fixing some spelling errors in the new zalek missions
    First new missions for campaign
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added Science Gone Wrong logs.
    Removed unused cargo strings, fixed typos in sciwrong.
    Fixed scigonewrong0 trying to call name() on planet/sys names.
    
    Fixes #1156
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Syntax error
    Fixed Za'lek "Science Gone Wrong" campaign.
    More OSD fixes.
    Fixed more player gender references, plus some minor fixes.
    
    I systematically searched through with grep -rP "\b[Hh]e\b",
    grep -rP "\b[Hh]im\b", grep -rP "\b[Mm]r\b", and grep -rP "\b[Ss]ir\b".
    The first two returned a very large number of results (most referring
    to NPCs), so it's possible I missed some, but I did look through the
    list pretty thoroughly and think I weeded out all the references to
    the player's gender. In total I found two of them in actual game
    dialog (I also fixed it in some mission script comments and fixed
    indentation in one mission).
    
    Did this because of the mention by @BTAxis in #842 of "Mr." still being
    left in flf_pre01. That was one of the fixes.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for remaining za'lek missions.
    Fixing some spelling errors in the new zalek missions
    First new missions for campaign
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Typo ("commmon")
    Added Baron campaign and Za'lek cargo run logs.
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Replaced jumpin hook in baron_baron to enter hook.
    
    This fixes a bug where the baron disappears if you land and then
    takeoff.
    Removed some fatmisia
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Gave the player the option to "angrily refuse" the baron mission.
    
    This replaces my last commit which reduced the chance of it happening
    over time. This instead allows the player to explicitly indicate that
    they definitely don't want to do the mission ever. If you "angrily
    refuse", the pilot decides that you're useless and the event never
    happens again.
    fixed the baron
    gettext for baron missions.
    Fixes Baron mission
    
    Use of an undefined variable broke the Baron mission in
    05dc196080f165c8b720760cdc47b5cce90e7eac such that a player could not
    advance past the point where the Baron's ship needed to be hailed.
    convert to tab=3 style
    new mission: The ruse. Not sure which context to put it in
    Split paragraphs in baron_baron into their own message boxes.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    Various wording and typo fixes.
    * Baron mission now has somewhat saner spawn conditions.
    * Baron missions now use API instead of the stack to track active status.
    Properly restore the Baron mission.
    Restored the Baron mission to it's original form.
    Renamed ruse.lua to runaway.lua and adjusted the Baron
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    fix typos in baron missions
    
    Signed-off-by: Nicolas Kaiser <nikai@nikai.net>
    Split success message for first Baron misson into two in order to solve problem of message going off screen when in window mode.
    * More usage of active board including turning it off.
    * DIsable active board after boarding the pinnacle.
    * Use a proper AI for the baron mission.
    * Remove idle hook when not required.
    * Use pilot.setActiveBoard for missions that involve boarding ships.
    * Progress on combat tutorial.
    * Renamed "nojump" ais to "norun", for consistency.
    * Fixed syntax error.
    * Fixed syntax error.
    * System claims (or no-claim comments) for several missions.
    * Added overlay related commands to several missions.
    * Moved Shadow and Baron missions into their own subdirectories.
    * Update all the missions to use the new marker API.
    * Cleanups, tweaks. WIP commit.
    * WIP commit for Prince mission.
    * Renamed misn.addCargo, misn.rmCargo and misn.jetCargo to misn.cargoAdd, misn.cargoRm and misn.cargoJet.
    * Added hook infrastructure for returning parameters.
    * Added generic "board" and "hail" hooks.
    * Civilians and traders now call the universe their home.
    * Zied is now Independent.
    * Added a new landable planet in Ingot (for the Baron missions).
    * Baron's ship now circles the planet in the baron_baron mission.
    * Minor tweak to trader spawn script.
    * Updated more missions to use the new pilot.add API.
    * Comm message in Baron mission now correctly uses the player's ship's name.
    * The baron mission now reappears after the player aborts it.
    * The baroncomm event should now reappear if the player declines the mission (no longer unique).
    * New portraits by grumbel.
    * Fixed weird unicode issue in baron mission.
    * Player was being paid twice for the baron mission.
    * Revised the more style-invasive edits.
    * Pay the player after he completes the baron holopainting mission.
    Revert "* Player now gets paid."
    
    This reverts commit 11383745c4bbd857f05206095f249aeeacc5e2f7.
    * Player now gets paid.
    * Ran dos2unix on baron_baron.lua.
    * Grammar fixes, expansion, and Del appeasement.
    * Baron mission should now pay.
    english tweak
    * Changed wording on Baron mission slightly to allow for female NPCs.
    * Added missing description.
    * Some more tweakage.
    * Tweakage on the first Mad Baron mission. Mission is done, pending comm system.
    * WIP commit for the first Mad Baron mission
    Added Baron campaign and Za'lek cargo run logs.
    Added logs for neutral one-off missions.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Added 3rd "Coming Out" mission, plus fixed some minor fixes to other stuff.
    Fixed method.
    Replaced use of the "static" tag with a "static" standing script.
    
    The reason is using the "static" tag now guarantees standing to always
    be represented as "???", as this text is now defined in Lua.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added ugly statue as reward for baron prince mission.
    Added Baron campaign and Za'lek cargo run logs.
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    All right -> alright
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    artefact -> artifact
    Removed some fatmisia
    Added a portrait for the "unfamiliar man" in baron_prince
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    gettext for baron missions.
    Make addRaw() return pilot, instead of single element table
    convert to tab=3 style
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Corrections that belonged here, not in branch 'afgncaap'.
    Various spelling and grammar fixes.
    * Baron mission now has somewhat saner spawn conditions.
    * Baron missions now use API instead of the stack to track active status.
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    fix typos in baron missions
    
    Signed-off-by: Nicolas Kaiser <nikai@nikai.net>
    * Added a helper script to convert numbers into human readable strings.
    * Use regular player name, not the mangled one.
    * Added missing argument to format statement.
    * Using new portraits.
    Fixed some conditionals in mission.xml
    Don't need to use the wrapper function for single ships.
    Artefact hunters should chase you when you have the known-good one.
    Generate fleets on-the-fly in the Baron Prince mission.
    Minor fixes for the second baron mission.
    Fixed: Boarding failed due to missing 3rd argument.
    * Remove idle hook when not required.
    * Use pilot.setActiveBoard for missions that involve boarding ships.
    * Use pilot-specific board hook, not global board hook.
    * Use pilot-specific board hook, not global board hook.
    * System claims (or no-claim comments) for several missions.
    * Added overlay related commands to several missions.
    * Moved Shadow and Baron missions into their own subdirectories.
    * Make use of updated goto API.
    * Set Prince appearance probability to 10%.
    * First completable version of Prince mission.
    * Misc fixes.
    * Updated Shadow Vigil and Prince to use new mission marker systemy.
    * Misc updates and fixes to related events.
    * WIP commit.
    * Cleanups, tweaks. WIP commit.
    * WIP commit for Prince mission.
    * Set shadowcomm event probability to 3%.
    * Filled in most of the strings for Prince mission.
    * Updated baron and shadow events with new pilot.add behavior.
    * WIP commit for Prince mission.
    * WIP commit on Prince mission
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Made ES cargo missions use same type of titles as normal cargo missions.
    Fixed up the text of longdistancecargo, plus improved it.
    
    This makes the long distance shipping mission actually go... long
    distance.
    Removed unused cargo strings, fixed typos in sciwrong.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    More OSD fixes.
    gettext for some empire missions.
    * Attempt to clean up the whitespace mess in Lua a bit.
    Moved piracy risk calculation to the cargo_common script
    Cargo Mission Overhaul
    
    Brief Summary:
    Cargo delivery missions now only deliver commodities offered at the
    origin planet to planets that do not sell that commodity. Jump and
    distance rewards depend on the base price of the commodity being
    delivered. Rewards are also higher for traversing pirated space.
    
    A new mission was created that asks players to deliver a commodity not
    sold on that planet. Pay is dependent on base price of the commodity
    and how much is delivered.
    Replace uses of pilot.somemethod(p) with p:somemethod()
    Add extra leeway to time limits for long-distance cargo missions
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    moved jumpdist.lua includes to cargo_common.lua so as to save including it everywhere where cargo_common is used.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * No need for artificial cap.
    modPlyerSIngle -> modPlayerSingle
    * Use modPlayerSingle, not modPlayerRaw for most cases.
    * Moved from player-based faction commands to faction-based player commands.
    * Added a helper script to convert numbers into human readable strings.
    * Missions now only affect the relevant factions. No secondary hits.
    Sixteen whole seconds\!
    Grant 8 seconds per jump for timed cargo missions.
    Changed the ES Cargo mission to be similar to the rush cargo missions, albeit easier.
    Added a warning when attempting timed cargo missions with overly-slow ships. Reduced the difficulty of rush missions a bit.
    * Whitespace.
    * fix "Empire Shipping" missions
    * Left in change that shouldn't be there.
    * Fixed es cargo missions (patch by daniel.oconnor).
    * Improved the abort condition of the cargo missions.
    * Re-implemented cargo missions (standard only).
    * Replaced planet.get() usage with planet.cur().
    ES cargo missions are now higher-priority than normal cargo missions.
    Added bulk cargo missions. Warn players when they attempt a time-sensitive cargo mission with an overly-slow ship.
    Modified ES cargo missions. Difficulty now ranges from 5 to 7 STU per jump, and compensates for landing every 3 jumps.
    * More claims or claim comments.
    All missions should now work with the new API calls.
    * Update all the missions to use the new marker API.
    * Renamed misn.addCargo, misn.rmCargo and misn.jetCargo to misn.cargoAdd, misn.cargoRm and misn.cargoJet.
    * Renamed function playerfreeCargo() => player.cargoFree().
    
    Signed-off-by: Edgar Simo <bobbens@gmail.com>
    * Replaced all instances of misn/evt.timerStart with hook.timer
    * Replaced all instances of misn/evt.timerStop with hook.rm
    * Removed hook.time. Use hook.enter until furthur notice.
    * Make sure planets are landable for cargo missions.
    * Cargo delivery missions should always send you to a system that's accessible.
    * Replaced rnd.int with rnd.rnd in es_cargo.lua
    * Fixed typo in ES too many missions dialog.
    * Enormous diff that basically points out that bobbens' punctuation sucks.
    * Increase time on rush missions.
    * Some missions properly use marker types now.
    * Should upgrade all the missions to the new API changes.
    * Cargo missions should never give same-system missions.
    * Updated missions to new API change.
    * Spelling corrections by skwurp.
    * Put some order to the missions.
    * Aborted missions should also drop cargo.
    * Delay + jettison also introduced for ES missions.
    * More table usage for mission static stuff so it doesn't get saved.
    * Gave missions some headers with simple explanations..
    * Step two of the lua api conversion, needs heavy testing.
    * Step one of updating lua api to use metatables.
    * misn_lua.c: More debug magic.
    * dat/missions: All missions should be using setMarker now.
    missions increase/lower faction, fixed bug with factions
    fixed the annoying as hell mission disappearing when no carge space
    big update to add another mission
    ES cargo missions are always timed now
    added a couple more commodities
    fixed mission typo
    cargo missions now take into account freight distance
    es missions keep a counter now
    more tab removal, fixed up mission var stuff
    added new Empire shipping cargo mission, not fully implemented requirement though
    cargo missions now state system location
    unique missions are now actually unique :)
    fix typo bug
    pretend to be multilingual for easier future conversion
    removed debug print
    fixed bug
    randomized mission names a bit
    mission tracks cargo and makes sure you have it
    introduced the concept of mission cargo - not-tradeable
    improved lua api for missions by alot
    fixed bugs so that missions actually work now :)
    fixed the toolkit module in lua, fixed accept bug, segfaults :)
    fixed segfault and proper hook cleanup
    game now tries to load up the missions properly, except lua needs more bindings :)
    initial support for hooks
    first import of mission stuff
    Increase pirate mission cap with Hitman missions.
    
    Also fixes the way it's done in empbounty_dead.
    Added logs to the Collective campaign.
    Added logs for the Empire shipping division unique missions.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * Use the common empire framework to bump up the reputation cap.
    * Missed Lua file in a few commits ago.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Fixed lack of indentation.
    Added logs for the Empire shipping division unique missions.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed a bug where emp_cargo00 would leave phantom markers.
    
    It was adding the marker before checking if the mission was being
    accepted, so this would cause two markers to appear if you declined
    and then accepted. Fixed by moving the addition of the marker to
    afer ther dialog.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for some empire missions.
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    Grammar correction in emp_cargo00.lua
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * New destination selection algorithm for Empire Recruitment mission.
    * Addresses issue 162 (Mission: Empire Recruitment on restricted targets).
    modPlyerSIngle -> modPlayerSingle
    * Use modPlayerSingle, not modPlayerRaw for most cases.
    * Moved from player-based faction commands to faction-based player commands.
    * Added a helper script to convert numbers into human readable strings.
    * Missions now only affect the relevant factions. No secondary hits.
    * Added some osd mission messages
    * Re-implemented cargo missions (standard only).
    * Replaced planet.get() usage with planet.cur().
    * More claims or claim comments.
    * Update all the missions to use the new marker API.
    * Renamed misn.addCargo, misn.rmCargo and misn.jetCargo to misn.cargoAdd, misn.cargoRm and misn.cargoJet.
    Fixed Collective Scouting and Empire Shipping intro.
    * Make sure planets are landable for cargo missions.
    * Cargo delivery missions should always send you to a system that's accessible.
    * English and a bit of polish for cargo00.
    * Added authorship for empire missions.
    * Enormous diff that basically points out that bobbens' punctuation sucks.
    * Added portraits.
    * Almost all missions should work with the new bar system.
    * Should upgrade all the missions to the new API changes.
    * Cargo missions should never give same-system missions.
    * Updated missions to new API change.
    * Put some order to the missions.
    * Gave missions some headers with simple explanations..
    * Step two of the lua api conversion, needs heavy testing.
    * Step one of updating lua api to use metatables.
    * misn_lua.c: More debug magic.
    * dat/missions: All missions should be using setMarker now.
    * Mission fixes.
    missions increase/lower faction, fixed bug with factions
    big update to add another mission
    more tab removal, fixed up mission var stuff
    updated mission text
    unique missions are now actually unique :)
    fixed invalid char generated from '\t' and removed tabs from missions
    fixed some introduced bugs
    pretend to be multilingual for easier future conversion
    major commit, first fancy bar mission, alot of improvement
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    * Initial commit of rehabilitation missions.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Made nodisable and nodeath compatible
    Nerfed Operation Black Trinity.
    
    Black Trinity was nearly impossibly hard; the Trinity was very eager
    to flee, meaning you had to pummel it with very powerful shots very
    quickly, and it had a huge swarm of drones, meaning you had to be
    able to deal with them too. The overall result of this was that it
    was basically impossible to "win" the mission without a large and
    very powerful ship, and without entering from the top (which clearly
    isn't the place you're "supposed" to enter). This has been remedied
    by substantially nerfing the fight:
    
    * The Trinity runs when its armor is damaged rather than when its
      shield is at 70%.
    * The first swarm of drones does not spawn, only the reinforcements
      do.
    * The Collective Sml Swarm fleet has been reduced in number slightly
      (3 drones and 1 large drone rather than 4 drones and 2 large). I
      made sure, and this doesn't affect any other missions in any
      noticeable way other than the visuals of ec02 (you'll see four
      drones a swarm instead of six in the cutscene).
    
    Also fixed a typo.
    Added logs to the Collective campaign.
    Fixed wrong quotation in Collective missions.
    
    A closing quotation mark should only be used when the quote is being
    interrupted or ending. Using two quotes back-to-back makes it look
    like back-to-back dialog.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed a typo
    More OSD fixes.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    Some fixes to Black Trinity.
    Changed "STU", "STP", and "SCU" to "seconds", "periods", and "cycles".
    
    This is meant for better readability; it makes the different units
    more distinguished from each other.
    
    "STU" was replaced with "seconds" instead of "units" for two reasons:
    one, "units" is too generic (it's used for all kinds of measurements,
    not just time measurements), making it a confusing name. Two, the SCU
    is the same as a second in-universe anyway, and I don't see the
    general population abandoning that term.
    
    For the auto generation of "pretty" time text, I replaced e.g "12 STU"
    with "12s", and e.g. "8.32 STP" with "8.32p".
    
    Also fixed some language mistakes in dialogs I happened to notice,
    plus some very weird usage of the time units that probably resulted
    from a misunderstanding of how long they're supposed to be (there
    was a father concerned because his daughter disappeared several
    *seconds* ago, a food station that had a harvest every day, and a
    weekly mining trip to one planet that was talked about as if that
    wasn't frequent).
    
    Just a thought that just came to mind as I was writing this: perhaps
    it would be better to call decaperiods "daps"? Not truly necessary,
    but it would be an interesting idea because it's a name for a unit
    that kind of look like "days", while also serving as a shorthand
    for the full official name. Any thoughts?
    gettext for collective campaign.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    * If the black trinity escorts die, shouldn't blow up anymore.
    wording.
    wording
    * decaSTU is too short of a waiting period.
    modPlyerSIngle -> modPlayerSingle
    * Use modPlayerSingle, not modPlayerRaw for most cases.
    * Moved from player-based faction commands to faction-based player commands.
    * Missions now only affect the relevant factions. No secondary hits.
    * Shoot while fleeing.
    * Made the trinity mission a bit more interesting and sane.
    * Every good badguy needs taunts.
    * Trinity fights for 30 seconds before running.
    * Made trinity fight easier.
    * Renamed question mark NPC to "unknown", to disambiguate missing portraits from actual unknown NPCs (e.g ec05).
    * Save OSD string tables in the save file.
    * Letting the Trinity get away does not fail the campaign.
    * Removed TODO.
    * ec05 works again.
    * Re-implemented cargo missions (standard only).
    * Replaced planet.get() usage with planet.cur().
    * Replace misn.timerStart and misn.timerStop with hook functions.
    * Replace misn.timerStart and misn.timerStop with hook functions.
    * Fixed a couple of file headers I messed up.
    * Replaced all instances of system.get() with system.cur()
    * Minor edits to Dark Shadow.
    * System claims (or no-claim comments) for several missions.
    * Update all the missions to use the new marker API.
    * Updated more missions to use the new pilot.add API.
    * Updated system names in Collective missions. Not sure if I used the right ones.
    * English and a bit of polish for ec05.
    * Added authorship for empire missions.
    * Fixed typo in collection mission, episode 5.
    * Bosses are no longer disable-able.
    s/.  /. /
    * Minor mission corrections.
    * Sergeant Dimitri has become Lt. Commander Dimitri with the new ranks.
    * Almost all missions should work with the new bar system.
    * Have escorts jump in.
    * Should upgrade all the missions to the new API changes.
    * More enforcing of pilot hostile status.
    * More robust checking of ship hostileness.
    * Missions now enforce hostile/friendly status in some missions.
    * Spelling corrections by skwurp.
    * Put some order to the missions.
    * Added another stage for when deffering escape and utter failure.
    * Collective campaign now takes failure into account.
    * Small correction tweaks.
    * Allow missions to interact with music subsystem.
    * Have missions use music.
    * Added many more fleets in anticipation of the final collective mission.
    * Updated Operation Black Trinity to work with new fleets.
    * Improved some commentaries.
    * More fine tuning for missions.
    * Fixed Operation Black Trinity.
    * Fixed all sorts of minor bugs preventing campaign from working.
    * New Mission:  Operation Black Trinity.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Removed some ableist language pertaining to blindness, and some sexism.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs to the Collective campaign.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    More OSD fixes.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for collective campaign.
    Prevent duplicate scan timers in ec01 (reported by ECC)
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    * Prevent scanning of systems that were already scanned in ec01.
    * The game no longer saves on Eiroik during ec04.
    * ec01 gives the player a (partial) map of Collective space at the start.
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    modPlyerSIngle -> modPlayerSingle
    * Use modPlayerSingle, not modPlayerRaw for most cases.
    * Moved from player-based faction commands to faction-based player commands.
    * Missions now only affect the relevant factions. No secondary hits.
    * Save OSD string tables in the save file.
    * ec01 is now actually finishable.
    * Improved second Collective mission.
    * Fixed typo, closes #105.
    * Re-implemented cargo missions (standard only).
    * Replaced planet.get() usage with planet.cur().
    * System claims (or no-claim comments) for several missions.
    * Update all the missions to use the new marker API.
    * Fixed collective misisons _AGAIN_.
    * Use names as keys, factions can not be used in keys for sys:factions().
    * Fixed misisons to use that.
    * Fixed some collective campaign missions not updated with the sys:faction() change.
    * English and a bit of polish for ec01.
    * Added authorship for empire missions.
    * Inform user he'll need more fuel.
    * Whitespace.
    * Added portraits.
    * Sergeant Dimitri has become Lt. Commander Dimitri with the new ranks.
    * Almost all missions should work with the new bar system.
    * Polished the first Collective campaign missions.
    * Should upgrade all the missions to the new API changes.
    * Spelling corrections by skwurp.
    * Put some order to the missions.
    * Added mission titles.
    * Fixed typo.
    * Fixed spelling mistakes.
    * Gave missions some headers with simple explanations..
    * Fixed bug that converted an 100% chance mission to 0%.
    * Step two of the lua api conversion, needs heavy testing.
    * Step one of updating lua api to use metatables.
    * Removed useless ; from lua.
    * More mission string formatting weirdness.
    * Fixed bug in mission text formatting.
    * Changed mission naming system.
    * Added new mission in collective campaign.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs to the Collective campaign.
    This week -> the last few decaperiods
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    More OSD fixes.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for collective campaign.
    Add missing abort function to ec00
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    modPlyerSIngle -> modPlayerSingle
    * Use modPlayerSingle, not modPlayerRaw for most cases.
    * Moved from player-based faction commands to faction-based player commands.
    * Missions now only affect the relevant factions. No secondary hits.
    * Save OSD string tables in the save file.
    * Removed erroneously copied TODO
    * Updated first Collective mission.
    Clarify ec00 a bit.
    * fix: Collective Scout mission should only available at Omega station
    
    * add osd messages
    * Re-implemented cargo missions (standard only).
    * Replaced planet.get() usage with planet.cur().
    * Fixed a couple of file headers I messed up.
    * Replaced all instances of system.get() with system.cur()
    * Minor edits to Dark Shadow.
    * System claims (or no-claim comments) for several missions.
    * Update all the missions to use the new marker API.
    * Updated system names in Collective missions. Not sure if I used the right ones.
    * English and a bit of polish for ec00.
    * Added authorship for empire missions.
    * Fixed wording in first collective mission.
    Fixed typos.
    s/.  /. /
    * Added portraits.
    * Sergeant Dimitri has become Lt. Commander Dimitri with the new ranks.
    * Almost all missions should work with the new bar system.
    * Fixed mission mistake.
    * Polished the first Collective campaign missions.
    * Should upgrade all the missions to the new API changes.
    * New mission.  Last of the new campaign.
    * Tweaked other missions/campaign to be based on completing this one.
    * Fixed the empire collective 00 mission.
    * Put some order to the missions.
    * Collective campaign now takes failure into account.
    * Fixed broken mission due to AI changes.
    * Added mission titles.
    * Fixed typo.
    * Fixed spelling mistakes.
    * Gave missions some headers with simple explanations..
    * Fixed bugs to make mission emp_collective00.lua doable again.
    * Step two of the lua api conversion, needs heavy testing.
    * Step one of updating lua api to use metatables.
    * NCG is wrong, shouldbe NGC (New General Catalogue).
    * Removed useless ; from lua.
    * Changed mission naming system.
    * Added new mission in collective campaign.
    * Added two new pilot hooks: board and disable.
    * Made lua debug macros more verbose.
    * Code cleanup.
    * ai.c: ai.dist() now accepts pilot ids as parameters.
    * misn_lua.c: pilot.add() can override fleet ai with second parameter.
    * ai/scout.lua: Added a new hard to kill ai that only tries to survives.
    * dat/missions/emp_scout00.lua: Scout uses new scout ai.
    * misn_lua.c: More debug magic.
    * dat/missions: All missions should be using setMarker now.
    * Made mission text a bit more verbose.
    * Mission fixes.
    misc fixes and you can now use lua as conditionals for missions
    missions increase/lower faction, fixed bug with factions
    ...and i forget to upload the new mission...
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs to the Collective campaign.
    Fixed wrong quotation in Collective missions.
    
    A closing quotation mark should only be used when the quote is being
    interrupted or ending. Using two quotes back-to-back makes it look
    like back-to-back dialog.
    More OSD fixes.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for collective campaign.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    collective/ec02: fix OSD text
    
    Planet and system were switched.
    
    Signed-off-by: Nicolas Kaiser <nikai@nikai.net>
    modPlyerSIngle -> modPlayerSingle
    * Use modPlayerSingle, not modPlayerRaw for most cases.
    * Moved from player-based faction commands to faction-based player commands.
    * Missions now only affect the relevant factions. No secondary hits.
    * Fixed OSD message in ec02 reported by /dev/random.
    * Save OSD string tables in the save file.
    * Revamped ec02.
    * Re-implemented cargo missions (standard only).
    * Replaced planet.get() usage with planet.cur().
    * System claims (or no-claim comments) for several missions.
    * Update all the missions to use the new marker API.
    * English and a bit of polish for ec02.
    * Added authorship for empire missions.
    s/.  /. /
    * Inform user he'll need more fuel.
    * Whitespace.
    * Added portraits.
    * Sergeant Dimitri has become Lt. Commander Dimitri with the new ranks.
    * Almost all missions should work with the new bar system.
    * Should upgrade all the missions to the new API changes.
    * Use landing_sinister when landing on Eiroik for missions.
    * Put some order to the missions.
    * Fixed all sorts of minor bugs preventing campaign from working.
    * Fixed typo.
    * Added mission titles.
    * Fixed typo.
    * Fixed spelling mistakes.
    * Gave missions some headers with simple explanations..
    * Step two of the lua api conversion, needs heavy testing.
    * Step one of updating lua api to use metatables.
    * Fixed typos making mission unbeatable.
    * Added another mission in the collective campaign.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs to the Collective campaign.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    More OSD fixes.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for collective campaign.
    Remove pilot.player() function, as it is a duplicate of player.pilot()
    Update several missions for variable fuel consumption
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * The game no longer saves on Eiroik during ec04.
    * ec01 gives the player a (partial) map of Collective space at the start.
    * Properly update mission OSD.
    * Use load hook to force takeoff on load.
    modPlyerSIngle -> modPlayerSingle
    * Use modPlayerSingle, not modPlayerRaw for most cases.
    * Moved from player-based faction commands to faction-based player commands.
    * Missions now only affect the relevant factions. No secondary hits.
    * Save OSD string tables in the save file.
    * More deterministic placement when it's time to run.
    Avoid multiple windows with identical titles.
    * Use pilot.add rather than addRawShips.
    * TODO message
    * Initial commit of ec04 revamp. Currently crashes the game.
    * Re-implemented cargo missions (standard only).
    * Replaced planet.get() usage with planet.cur().
    * Replace misn.timerStart and misn.timerStop with hook functions.
    * Replace misn.timerStart and misn.timerStop with hook functions.
    * Fixed a couple of file headers I messed up.
    * Replaced all instances of system.get() with system.cur()
    * Minor edits to Dark Shadow.
    * System claims (or no-claim comments) for several missions.
    * Update all the missions to use the new marker API.
    * Renamed misn.addCargo, misn.rmCargo and misn.jetCargo to misn.cargoAdd, misn.cargoRm and misn.cargoJet.
    * Fixed collective misisons _AGAIN_.
    * Use names as keys, factions can not be used in keys for sys:factions().
    * Fixed misisons to use that.
    * Fixed some collective campaign missions not updated with the sys:faction() change.
    * Changed the "def" hardcoded value to nil for pilot.add's AI parameter.
    * Updated missions using "def" so that they now use nil.
    * Updated system names in Collective missions. Not sure if I used the right ones.
    * English and a bit of polish for ec04.
    * Added authorship for empire missions.
    A few quick grammar fixes/improvements
    s/.  /. /
    * Sergeant Dimitri has become Lt. Commander Dimitri with the new ranks.
    * Make sure player has enough fuel for the polemic mission.
    * Added a few more drones at blocade system.
    * Made ec04 easier.
    * Should upgrade all the missions to the new API changes.
    * Updated missions to new API change.
    * Use landing_sinister when landing on Eiroik for missions.
    * Spelling corrections by skwurp.
    * Put some order to the missions.
    * Fixed all sorts of minor bugs preventing campaign from working.
    * Some text tweakage.
    * Changed style fornmatting a bit.
    * Renamed Operation Green Giant to Collective Distraction.
    * New Mission in Collective Campaign:  Operation Green Giant.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Fixed spacing.
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Reward accessory for collective campaign.
    Made nodisable and nodeath compatible
    Added logs to the Collective campaign.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed what ec06 reported it was paying you.
    More OSD fixes.
    Fixed calling a nonexistent function in ec06.
    
    It calls abort() which isn't defined in this mission. Replaced that
    with the obvious misn.finish(false) instead.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for collective campaign.
    Made it so that the refueling ship in Cold Metal never leaves.
    
    I haven't tested this since I don't have a save where I'm at or
    near that point, but it should do the trick. It's really annoying
    if you fail to respond to the refueling ship and it runs away,
    effectively forcing you to start the mission over again since there's
    no other way to refuel for three systems.
    Changed Cold Metal to warp the Empire ships in, not make them wait for you.
    
    This is mainly to fix #597.
    Adjusted the fleets in Operation Cold Metal to make it more fun/climactic.
    
    There were two problems with Cold Metal: one, you don't even have to
    participate; you can just sit back and let the Empire ships do all the
    work and the mission will succeed. Two, if you go in and try to help
    anyway, the Collective drones were so concentrated in one spot that
    this was practically a death sentence if you didn't have a super-heavy
    ship.
    
    I can't think of a way to address the first problem, and it's not that
    big of a deal, anyway (and might even be considered a good thing). But
    I've addressed the second problem here by spreading out the Collective
    drones. Being more spread out means you can join in the fight without
    getting your butt blasted every time, so that at the very least makes
    your participation more fun, if still entirely pointless.
    
    I've also added some heavy Collective drones to the Collective fleet,
    and reduced the size of the Empire fleet (now one Peacemaker instead
    of three and six Pacifiers instead of seven), to at least make your
    participation *feel* a little less pointless.
    full out -> all-out
    Spelling & grammar
    Split paragraphs in baron_baron into their own message boxes.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    Minor typo: Keeras -> Keer as
    * Collective diff is now applied upon Trinity death. This ensures no drones will spawn on the return trip.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Cleaned up wrong comment.
    Avoid namespace collision with jump module.
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * Trinity should get collective faction properly.
    Starfire should get Empire equipment.
    modPlyerSIngle -> modPlayerSingle
    * Use modPlayerSingle, not modPlayerRaw for most cases.
    * Moved from player-based faction commands to faction-based player commands.
    * It's incReputation not modReputation.
    * Use the common empire framework to bump up the reputation cap.
    * Missions now only affect the relevant factions. No secondary hits.
    * ec06 now increases the Empire reputation cap on completion.
    * Save OSD string tables in the save file.
    * Revamped ec06, pending further tweaks.
    * Re-implemented cargo missions (standard only).
    * Replaced planet.get() usage with planet.cur().
    * Replace misn.timerStart and misn.timerStop with hook functions.
    * Replace misn.timerStart and misn.timerStop with hook functions.
    * Fixed a couple of file headers I messed up.
    * Replaced all instances of system.get() with system.cur()
    * Minor edits to Dark Shadow.
    * System claims (or no-claim comments) for several missions.
    * Update all the missions to use the new marker API.
    * Updated more missions to use the new pilot.add API.
    * Changed the "def" hardcoded value to nil for pilot.add's AI parameter.
    * Updated missions using "def" so that they now use nil.
    * English and a bit of polish for ec06.
    * Added authorship for empire missions.
    * Refuel ships now have escorts.
    * Using new API.
    * Bosses are no longer disable-able.
    * Renamed pilot.alive to pilot.exists since it makes more sense.
    s/.  /. /
    * Explicitly name the fuel tanker to be more obvious.
    * Refuel the ship in middle of the final collective mission.
    * Added portraits.
    * Almost all missions should work with the new bar system.
    * Should upgrade all the missions to the new API changes.
    * More robust checking of ship hostileness.
    * Missions now enforce hostile/friendly status in some missions.
    * Cleaned up final mission a bit, wanted to make it cooler, but it looks like
       that'll have to be done via better AI.
    * Should fix a (null) that appears in a mission.
    * Put some order to the missions.
    * Collective campaign now takes failure into account.
    * Fixed mission finishing before it should.
    * First release of the unidiff system.
    * Decreased ships a bit, increased spread.
    * Added final collective campaign mission.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs to the Collective campaign.
    Fixed wrong quotation in Collective missions.
    
    A closing quotation mark should only be used when the quote is being
    interrupted or ending. Using two quotes back-to-back makes it look
    like back-to-back dialog.
    Fixed attempts to translate empty strings.
    
    Empty strings are not valid translation identifiers in gettext and
    not needed. In both cases it was just placeholder strings until the
    real strings were place on top.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    More OSD fixes.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    Changed "STU", "STP", and "SCU" to "seconds", "periods", and "cycles".
    
    This is meant for better readability; it makes the different units
    more distinguished from each other.
    
    "STU" was replaced with "seconds" instead of "units" for two reasons:
    one, "units" is too generic (it's used for all kinds of measurements,
    not just time measurements), making it a confusing name. Two, the SCU
    is the same as a second in-universe anyway, and I don't see the
    general population abandoning that term.
    
    For the auto generation of "pretty" time text, I replaced e.g "12 STU"
    with "12s", and e.g. "8.32 STP" with "8.32p".
    
    Also fixed some language mistakes in dialogs I happened to notice,
    plus some very weird usage of the time units that probably resulted
    from a misunderstanding of how long they're supposed to be (there
    was a father concerned because his daughter disappeared several
    *seconds* ago, a food station that had a harvest every day, and a
    weekly mining trip to one planet that was talked about as if that
    wasn't frequent).
    
    Just a thought that just came to mind as I was writing this: perhaps
    it would be better to call decaperiods "daps"? Not truly necessary,
    but it would be an interesting idea because it's a name for a unit
    that kind of look like "days", while also serving as a shorthand
    for the full official name. Any thoughts?
    gettext for collective campaign.
    Update ec03.lua
    
    Destroying Heavy Drones should count for the distraction, too.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    Avoid namespace collision with jump module.
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    modPlyerSIngle -> modPlayerSingle
    * Use modPlayerSingle, not modPlayerRaw for most cases.
    * Moved from player-based faction commands to faction-based player commands.
    * Missions now only affect the relevant factions. No secondary hits.
    * Cosmetic edits of ec03.
    * Revamped ec03, may need more tweaking.
    * More time corrections.
    * Using new time api to allow to create a delay between missions.
    * Re-implemented cargo missions (standard only).
    * Replaced planet.get() usage with planet.cur().
    * Fixed a couple of file headers I messed up.
    * Replaced all instances of system.get() with system.cur()
    * Minor edits to Dark Shadow.
    * System claims (or no-claim comments) for several missions.
    * Update all the missions to use the new marker API.
    * Fixed collective misisons _AGAIN_.
    * Use names as keys, factions can not be used in keys for sys:factions().
    * Fixed misisons to use that.
    * Fixed some collective campaign missions not updated with the sys:faction() change.
    * Updated system names in Collective missions. Not sure if I used the right ones.
    Fixed two typos in Collective Espionage mission.
    * English and a bit of polish for ec03.
    * Added authorship for empire missions.
    A few quick grammar fixes/improvements
    s/.  /. /
    * Added portraits.
    * Sergeant Dimitri has become Lt. Commander Dimitri with the new ranks.
    * Almost all missions should work with the new bar system.
    * Should upgrade all the missions to the new API changes.
    * Put some order to the missions.
    * Fixed all sorts of minor bugs preventing campaign from working.
    * New Mission in Collective Campaign:  Operation Green Giant.
    * Some doxygen for land.c.
    * Implemented outfits/shipyard/land missions.
    * More properly landing cleanup.
    * Fixed bug with exiting while landing and switching pilots causing space warping.
    * New Mission in the Collective Campaign:  Collective Espionage 3.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs for the Empire shipping division unique missions.
    Aramda -> Armada
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    More OSD fixes.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for empire long distance cargo missions.
    Master (#621)
    
    * long distance cargo missions
    
    ————Summary—————
    Added a mission chain that culminates in a new repeatable “long
    distance” shipping missions. These missions require going from empire
    space to other faction space, and require 3 to 6 jumps. In return, they
    pay a bit more per jump and give a little more rep per mission. As with
    the other empire shipping missions, the deadlines are easy to make.
    This is the first campaign I’ve scripted, and it was mostly
    cannibalized from the previous empire shipping line.
    
    ———Extended Details————
    The first mission has a 30% chance of appearing once the player
    complete the empire recruitment. The player flies bureaucrats to 5
    factions, and then takes Lieutenant Czesc (of the first empire shipping
    mission fame) back to Gamma Polaris. The factions are, in order:
    Soromid, Dvaered, Za’lek, Frontier, and Sirius. After the first
    mission, each mission has a 75% chance of appearing in a bar in Empire
    space, except the last mission, which has a 100% chance of appearing.
    Afterwards, long-distance shipping routes appear in the mission
    computer, requiring at least 3 jumps and ending in non-Empire space.
    
    The idea is to encourage pilots to explore the universe a bit,
    although, to make it easier, I picked stations at the border of a given
    territory. The long-distance routes are more lucrative in terms of
    payment (compared to regular ES missions) and add a little more danger
    because they go into non-Empire controlled space.
    
    * long-distance mission.xml file
    
    updated mission.xml file with the empire shipping long-distance
    campaign.
    long distance cargo missions
    
    ————Summary—————
    Added a mission chain that culminates in a new repeatable “long
    distance” shipping missions. These missions require going from empire
    space to other faction space, and require 3 to 6 jumps. In return, they
    pay a bit more per jump and give a little more rep per mission. As with
    the other empire shipping missions, the deadlines are easy to make.
    This is the first campaign I’ve scripted, and it was mostly
    cannibalized from the previous empire shipping line.
    
    ———Extended Details————
    The first mission has a 30% chance of appearing once the player
    complete the empire recruitment. The player flies bureaucrats to 5
    factions, and then takes Lieutenant Czesc (of the first empire shipping
    mission fame) back to Gamma Polaris. The factions are, in order:
    Soromid, Dvaered, Za’lek, Frontier, and Sirius. After the first
    mission, each mission has a 75% chance of appearing in a bar in Empire
    space, except the last mission, which has a 100% chance of appearing.
    Afterwards, long-distance shipping routes appear in the mission
    computer, requiring at least 3 jumps and ending in non-Empire space.
    
    The idea is to encourage pilots to explore the universe a bit,
    although, to make it easier, I picked stations at the border of a given
    territory. The long-distance routes are more lucrative in terms of
    payment (compared to regular ES missions) and add a little more danger
    because they go into non-Empire controlled space.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Typos and other text stuff.
    
    Fixes #1187. Also adjusted the way "levels" are handled so that
    other translation problems don't occur.
    Fixed a typo.
    Added logs for the Empire shipping division unique missions.
    Aramda -> Armada
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    More OSD fixes.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for empire long distance cargo missions.
    Master (#621)
    
    * long distance cargo missions
    
    ————Summary—————
    Added a mission chain that culminates in a new repeatable “long
    distance” shipping missions. These missions require going from empire
    space to other faction space, and require 3 to 6 jumps. In return, they
    pay a bit more per jump and give a little more rep per mission. As with
    the other empire shipping missions, the deadlines are easy to make.
    This is the first campaign I’ve scripted, and it was mostly
    cannibalized from the previous empire shipping line.
    
    ———Extended Details————
    The first mission has a 30% chance of appearing once the player
    complete the empire recruitment. The player flies bureaucrats to 5
    factions, and then takes Lieutenant Czesc (of the first empire shipping
    mission fame) back to Gamma Polaris. The factions are, in order:
    Soromid, Dvaered, Za’lek, Frontier, and Sirius. After the first
    mission, each mission has a 75% chance of appearing in a bar in Empire
    space, except the last mission, which has a 100% chance of appearing.
    Afterwards, long-distance shipping routes appear in the mission
    computer, requiring at least 3 jumps and ending in non-Empire space.
    
    The idea is to encourage pilots to explore the universe a bit,
    although, to make it easier, I picked stations at the border of a given
    territory. The long-distance routes are more lucrative in terms of
    payment (compared to regular ES missions) and add a little more danger
    because they go into non-Empire controlled space.
    
    * long-distance mission.xml file
    
    updated mission.xml file with the empire shipping long-distance
    campaign.
    long distance cargo missions
    
    ————Summary—————
    Added a mission chain that culminates in a new repeatable “long
    distance” shipping missions. These missions require going from empire
    space to other faction space, and require 3 to 6 jumps. In return, they
    pay a bit more per jump and give a little more rep per mission. As with
    the other empire shipping missions, the deadlines are easy to make.
    This is the first campaign I’ve scripted, and it was mostly
    cannibalized from the previous empire shipping line.
    
    ———Extended Details————
    The first mission has a 30% chance of appearing once the player
    complete the empire recruitment. The player flies bureaucrats to 5
    factions, and then takes Lieutenant Czesc (of the first empire shipping
    mission fame) back to Gamma Polaris. The factions are, in order:
    Soromid, Dvaered, Za’lek, Frontier, and Sirius. After the first
    mission, each mission has a 75% chance of appearing in a bar in Empire
    space, except the last mission, which has a 100% chance of appearing.
    Afterwards, long-distance shipping routes appear in the mission
    computer, requiring at least 3 jumps and ending in non-Empire space.
    
    The idea is to encourage pilots to explore the universe a bit,
    although, to make it easier, I picked stations at the border of a given
    territory. The long-distance routes are more lucrative in terms of
    payment (compared to regular ES missions) and add a little more danger
    because they go into non-Empire controlled space.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Fixed up the text of longdistancecargo, plus improved it.
    
    This makes the long distance shipping mission actually go... long
    distance.
    Added logs for the Empire shipping division unique missions.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    More OSD fixes.
    gettext for empire long distance cargo missions.
    * Attempt to clean up the whitespace mess in Lua a bit.
    Moved piracy risk calculation to the cargo_common script
    Cargo Mission Overhaul
    
    Brief Summary:
    Cargo delivery missions now only deliver commodities offered at the
    origin planet to planets that do not sell that commodity. Jump and
    distance rewards depend on the base price of the commodity being
    delivered. Rewards are also higher for traversing pirated space.
    
    A new mission was created that asks players to deliver a commodity not
    sold on that planet. Pay is dependent on base price of the commodity
    and how much is delivered.
    Minor changes to long-distance shipping missions.
    
    Changed the Za’lek recruitment to require landing on Gerhart Station
    (Za’lek controlled) rather than Outbound Station (Empire controlled).
    
    Also, increased rewards for long-distance missions slightly and made
    sure they always require at least 3 jumps.
    Master (#621)
    
    * long distance cargo missions
    
    ————Summary—————
    Added a mission chain that culminates in a new repeatable “long
    distance” shipping missions. These missions require going from empire
    space to other faction space, and require 3 to 6 jumps. In return, they
    pay a bit more per jump and give a little more rep per mission. As with
    the other empire shipping missions, the deadlines are easy to make.
    This is the first campaign I’ve scripted, and it was mostly
    cannibalized from the previous empire shipping line.
    
    ———Extended Details————
    The first mission has a 30% chance of appearing once the player
    complete the empire recruitment. The player flies bureaucrats to 5
    factions, and then takes Lieutenant Czesc (of the first empire shipping
    mission fame) back to Gamma Polaris. The factions are, in order:
    Soromid, Dvaered, Za’lek, Frontier, and Sirius. After the first
    mission, each mission has a 75% chance of appearing in a bar in Empire
    space, except the last mission, which has a 100% chance of appearing.
    Afterwards, long-distance shipping routes appear in the mission
    computer, requiring at least 3 jumps and ending in non-Empire space.
    
    The idea is to encourage pilots to explore the universe a bit,
    although, to make it easier, I picked stations at the border of a given
    territory. The long-distance routes are more lucrative in terms of
    payment (compared to regular ES missions) and add a little more danger
    because they go into non-Empire controlled space.
    
    * long-distance mission.xml file
    
    updated mission.xml file with the empire shipping long-distance
    campaign.
    Replace uses of pilot.somemethod(p) with p:somemethod()
    Add extra leeway to time limits for long-distance cargo missions
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    moved jumpdist.lua includes to cargo_common.lua so as to save including it everywhere where cargo_common is used.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * No need for artificial cap.
    modPlyerSIngle -> modPlayerSingle
    * Use modPlayerSingle, not modPlayerRaw for most cases.
    * Moved from player-based faction commands to faction-based player commands.
    * Added a helper script to convert numbers into human readable strings.
    * Missions now only affect the relevant factions. No secondary hits.
    Sixteen whole seconds\!
    Grant 8 seconds per jump for timed cargo missions.
    Changed the ES Cargo mission to be similar to the rush cargo missions, albeit easier.
    Added a warning when attempting timed cargo missions with overly-slow ships. Reduced the difficulty of rush missions a bit.
    * Whitespace.
    * fix "Empire Shipping" missions
    * Left in change that shouldn't be there.
    * Fixed es cargo missions (patch by daniel.oconnor).
    * Improved the abort condition of the cargo missions.
    * Re-implemented cargo missions (standard only).
    * Replaced planet.get() usage with planet.cur().
    ES cargo missions are now higher-priority than normal cargo missions.
    Added bulk cargo missions. Warn players when they attempt a time-sensitive cargo mission with an overly-slow ship.
    Modified ES cargo missions. Difficulty now ranges from 5 to 7 STU per jump, and compensates for landing every 3 jumps.
    * More claims or claim comments.
    All missions should now work with the new API calls.
    * Update all the missions to use the new marker API.
    * Renamed misn.addCargo, misn.rmCargo and misn.jetCargo to misn.cargoAdd, misn.cargoRm and misn.cargoJet.
    * Renamed function playerfreeCargo() => player.cargoFree().
    
    Signed-off-by: Edgar Simo <bobbens@gmail.com>
    * Replaced all instances of misn/evt.timerStart with hook.timer
    * Replaced all instances of misn/evt.timerStop with hook.rm
    * Removed hook.time. Use hook.enter until furthur notice.
    * Make sure planets are landable for cargo missions.
    * Cargo delivery missions should always send you to a system that's accessible.
    * Replaced rnd.int with rnd.rnd in es_cargo.lua
    * Fixed typo in ES too many missions dialog.
    * Enormous diff that basically points out that bobbens' punctuation sucks.
    * Increase time on rush missions.
    * Some missions properly use marker types now.
    * Should upgrade all the missions to the new API changes.
    * Cargo missions should never give same-system missions.
    * Updated missions to new API change.
    * Spelling corrections by skwurp.
    * Put some order to the missions.
    * Aborted missions should also drop cargo.
    * Delay + jettison also introduced for ES missions.
    * More table usage for mission static stuff so it doesn't get saved.
    * Gave missions some headers with simple explanations..
    * Step two of the lua api conversion, needs heavy testing.
    * Step one of updating lua api to use metatables.
    * misn_lua.c: More debug magic.
    * dat/missions: All missions should be using setMarker now.
    missions increase/lower faction, fixed bug with factions
    fixed the annoying as hell mission disappearing when no carge space
    big update to add another mission
    ES cargo missions are always timed now
    added a couple more commodities
    fixed mission typo
    cargo missions now take into account freight distance
    es missions keep a counter now
    more tab removal, fixed up mission var stuff
    added new Empire shipping cargo mission, not fully implemented requirement though
    cargo missions now state system location
    unique missions are now actually unique :)
    fix typo bug
    pretend to be multilingual for easier future conversion
    removed debug print
    fixed bug
    randomized mission names a bit
    mission tracks cargo and makes sure you have it
    introduced the concept of mission cargo - not-tradeable
    improved lua api for missions by alot
    fixed bugs so that missions actually work now :)
    fixed the toolkit module in lua, fixed accept bug, segfaults :)
    fixed segfault and proper hook cleanup
    game now tries to load up the missions properly, except lua needs more bindings :)
    initial support for hooks
    first import of mission stuff
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs for the Empire shipping division unique missions.
    Aramda -> Armada
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    More OSD fixes.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for empire long distance cargo missions.
    Minor changes to long-distance shipping missions.
    
    Changed the Za’lek recruitment to require landing on Gerhart Station
    (Za’lek controlled) rather than Outbound Station (Empire controlled).
    
    Also, increased rewards for long-distance missions slightly and made
    sure they always require at least 3 jumps.
    Master (#621)
    
    * long distance cargo missions
    
    ————Summary—————
    Added a mission chain that culminates in a new repeatable “long
    distance” shipping missions. These missions require going from empire
    space to other faction space, and require 3 to 6 jumps. In return, they
    pay a bit more per jump and give a little more rep per mission. As with
    the other empire shipping missions, the deadlines are easy to make.
    This is the first campaign I’ve scripted, and it was mostly
    cannibalized from the previous empire shipping line.
    
    ———Extended Details————
    The first mission has a 30% chance of appearing once the player
    complete the empire recruitment. The player flies bureaucrats to 5
    factions, and then takes Lieutenant Czesc (of the first empire shipping
    mission fame) back to Gamma Polaris. The factions are, in order:
    Soromid, Dvaered, Za’lek, Frontier, and Sirius. After the first
    mission, each mission has a 75% chance of appearing in a bar in Empire
    space, except the last mission, which has a 100% chance of appearing.
    Afterwards, long-distance shipping routes appear in the mission
    computer, requiring at least 3 jumps and ending in non-Empire space.
    
    The idea is to encourage pilots to explore the universe a bit,
    although, to make it easier, I picked stations at the border of a given
    territory. The long-distance routes are more lucrative in terms of
    payment (compared to regular ES missions) and add a little more danger
    because they go into non-Empire controlled space.
    
    * long-distance mission.xml file
    
    updated mission.xml file with the empire shipping long-distance
    campaign.
    long distance cargo missions
    
    ————Summary—————
    Added a mission chain that culminates in a new repeatable “long
    distance” shipping missions. These missions require going from empire
    space to other faction space, and require 3 to 6 jumps. In return, they
    pay a bit more per jump and give a little more rep per mission. As with
    the other empire shipping missions, the deadlines are easy to make.
    This is the first campaign I’ve scripted, and it was mostly
    cannibalized from the previous empire shipping line.
    
    ———Extended Details————
    The first mission has a 30% chance of appearing once the player
    complete the empire recruitment. The player flies bureaucrats to 5
    factions, and then takes Lieutenant Czesc (of the first empire shipping
    mission fame) back to Gamma Polaris. The factions are, in order:
    Soromid, Dvaered, Za’lek, Frontier, and Sirius. After the first
    mission, each mission has a 75% chance of appearing in a bar in Empire
    space, except the last mission, which has a 100% chance of appearing.
    Afterwards, long-distance shipping routes appear in the mission
    computer, requiring at least 3 jumps and ending in non-Empire space.
    
    The idea is to encourage pilots to explore the universe a bit,
    although, to make it easier, I picked stations at the border of a given
    territory. The long-distance routes are more lucrative in terms of
    payment (compared to regular ES missions) and add a little more danger
    because they go into non-Empire controlled space.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs for the Empire shipping division unique missions.
    Aramda -> Armada
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    More OSD fixes.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for empire long distance cargo missions.
    Master (#621)
    
    * long distance cargo missions
    
    ————Summary—————
    Added a mission chain that culminates in a new repeatable “long
    distance” shipping missions. These missions require going from empire
    space to other faction space, and require 3 to 6 jumps. In return, they
    pay a bit more per jump and give a little more rep per mission. As with
    the other empire shipping missions, the deadlines are easy to make.
    This is the first campaign I’ve scripted, and it was mostly
    cannibalized from the previous empire shipping line.
    
    ———Extended Details————
    The first mission has a 30% chance of appearing once the player
    complete the empire recruitment. The player flies bureaucrats to 5
    factions, and then takes Lieutenant Czesc (of the first empire shipping
    mission fame) back to Gamma Polaris. The factions are, in order:
    Soromid, Dvaered, Za’lek, Frontier, and Sirius. After the first
    mission, each mission has a 75% chance of appearing in a bar in Empire
    space, except the last mission, which has a 100% chance of appearing.
    Afterwards, long-distance shipping routes appear in the mission
    computer, requiring at least 3 jumps and ending in non-Empire space.
    
    The idea is to encourage pilots to explore the universe a bit,
    although, to make it easier, I picked stations at the border of a given
    territory. The long-distance routes are more lucrative in terms of
    payment (compared to regular ES missions) and add a little more danger
    because they go into non-Empire controlled space.
    
    * long-distance mission.xml file
    
    updated mission.xml file with the empire shipping long-distance
    campaign.
    long distance cargo missions
    
    ————Summary—————
    Added a mission chain that culminates in a new repeatable “long
    distance” shipping missions. These missions require going from empire
    space to other faction space, and require 3 to 6 jumps. In return, they
    pay a bit more per jump and give a little more rep per mission. As with
    the other empire shipping missions, the deadlines are easy to make.
    This is the first campaign I’ve scripted, and it was mostly
    cannibalized from the previous empire shipping line.
    
    ———Extended Details————
    The first mission has a 30% chance of appearing once the player
    complete the empire recruitment. The player flies bureaucrats to 5
    factions, and then takes Lieutenant Czesc (of the first empire shipping
    mission fame) back to Gamma Polaris. The factions are, in order:
    Soromid, Dvaered, Za’lek, Frontier, and Sirius. After the first
    mission, each mission has a 75% chance of appearing in a bar in Empire
    space, except the last mission, which has a 100% chance of appearing.
    Afterwards, long-distance shipping routes appear in the mission
    computer, requiring at least 3 jumps and ending in non-Empire space.
    
    The idea is to encourage pilots to explore the universe a bit,
    although, to make it easier, I picked stations at the border of a given
    territory. The long-distance routes are more lucrative in terms of
    payment (compared to regular ES missions) and add a little more danger
    because they go into non-Empire controlled space.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs for the Empire shipping division unique missions.
    Aramda -> Armada
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    More OSD fixes.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for empire long distance cargo missions.
    Master (#621)
    
    * long distance cargo missions
    
    ————Summary—————
    Added a mission chain that culminates in a new repeatable “long
    distance” shipping missions. These missions require going from empire
    space to other faction space, and require 3 to 6 jumps. In return, they
    pay a bit more per jump and give a little more rep per mission. As with
    the other empire shipping missions, the deadlines are easy to make.
    This is the first campaign I’ve scripted, and it was mostly
    cannibalized from the previous empire shipping line.
    
    ———Extended Details————
    The first mission has a 30% chance of appearing once the player
    complete the empire recruitment. The player flies bureaucrats to 5
    factions, and then takes Lieutenant Czesc (of the first empire shipping
    mission fame) back to Gamma Polaris. The factions are, in order:
    Soromid, Dvaered, Za’lek, Frontier, and Sirius. After the first
    mission, each mission has a 75% chance of appearing in a bar in Empire
    space, except the last mission, which has a 100% chance of appearing.
    Afterwards, long-distance shipping routes appear in the mission
    computer, requiring at least 3 jumps and ending in non-Empire space.
    
    The idea is to encourage pilots to explore the universe a bit,
    although, to make it easier, I picked stations at the border of a given
    territory. The long-distance routes are more lucrative in terms of
    payment (compared to regular ES missions) and add a little more danger
    because they go into non-Empire controlled space.
    
    * long-distance mission.xml file
    
    updated mission.xml file with the empire shipping long-distance
    campaign.
    long distance cargo missions
    
    ————Summary—————
    Added a mission chain that culminates in a new repeatable “long
    distance” shipping missions. These missions require going from empire
    space to other faction space, and require 3 to 6 jumps. In return, they
    pay a bit more per jump and give a little more rep per mission. As with
    the other empire shipping missions, the deadlines are easy to make.
    This is the first campaign I’ve scripted, and it was mostly
    cannibalized from the previous empire shipping line.
    
    ———Extended Details————
    The first mission has a 30% chance of appearing once the player
    complete the empire recruitment. The player flies bureaucrats to 5
    factions, and then takes Lieutenant Czesc (of the first empire shipping
    mission fame) back to Gamma Polaris. The factions are, in order:
    Soromid, Dvaered, Za’lek, Frontier, and Sirius. After the first
    mission, each mission has a 75% chance of appearing in a bar in Empire
    space, except the last mission, which has a 100% chance of appearing.
    Afterwards, long-distance shipping routes appear in the mission
    computer, requiring at least 3 jumps and ending in non-Empire space.
    
    The idea is to encourage pilots to explore the universe a bit,
    although, to make it easier, I picked stations at the border of a given
    territory. The long-distance routes are more lucrative in terms of
    payment (compared to regular ES missions) and add a little more danger
    because they go into non-Empire controlled space.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs for the Empire shipping division unique missions.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    More OSD fixes.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for empire long distance cargo missions.
    Master (#621)
    
    * long distance cargo missions
    
    ————Summary—————
    Added a mission chain that culminates in a new repeatable “long
    distance” shipping missions. These missions require going from empire
    space to other faction space, and require 3 to 6 jumps. In return, they
    pay a bit more per jump and give a little more rep per mission. As with
    the other empire shipping missions, the deadlines are easy to make.
    This is the first campaign I’ve scripted, and it was mostly
    cannibalized from the previous empire shipping line.
    
    ———Extended Details————
    The first mission has a 30% chance of appearing once the player
    complete the empire recruitment. The player flies bureaucrats to 5
    factions, and then takes Lieutenant Czesc (of the first empire shipping
    mission fame) back to Gamma Polaris. The factions are, in order:
    Soromid, Dvaered, Za’lek, Frontier, and Sirius. After the first
    mission, each mission has a 75% chance of appearing in a bar in Empire
    space, except the last mission, which has a 100% chance of appearing.
    Afterwards, long-distance shipping routes appear in the mission
    computer, requiring at least 3 jumps and ending in non-Empire space.
    
    The idea is to encourage pilots to explore the universe a bit,
    although, to make it easier, I picked stations at the border of a given
    territory. The long-distance routes are more lucrative in terms of
    payment (compared to regular ES missions) and add a little more danger
    because they go into non-Empire controlled space.
    
    * long-distance mission.xml file
    
    updated mission.xml file with the empire shipping long-distance
    campaign.
    long distance cargo missions
    
    ————Summary—————
    Added a mission chain that culminates in a new repeatable “long
    distance” shipping missions. These missions require going from empire
    space to other faction space, and require 3 to 6 jumps. In return, they
    pay a bit more per jump and give a little more rep per mission. As with
    the other empire shipping missions, the deadlines are easy to make.
    This is the first campaign I’ve scripted, and it was mostly
    cannibalized from the previous empire shipping line.
    
    ———Extended Details————
    The first mission has a 30% chance of appearing once the player
    complete the empire recruitment. The player flies bureaucrats to 5
    factions, and then takes Lieutenant Czesc (of the first empire shipping
    mission fame) back to Gamma Polaris. The factions are, in order:
    Soromid, Dvaered, Za’lek, Frontier, and Sirius. After the first
    mission, each mission has a 75% chance of appearing in a bar in Empire
    space, except the last mission, which has a 100% chance of appearing.
    Afterwards, long-distance shipping routes appear in the mission
    computer, requiring at least 3 jumps and ending in non-Empire space.
    
    The idea is to encourage pilots to explore the universe a bit,
    although, to make it easier, I picked stations at the border of a given
    territory. The long-distance routes are more lucrative in terms of
    payment (compared to regular ES missions) and add a little more danger
    because they go into non-Empire controlled space.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Force FLF mission in es02, fixed implementation in es00.
    Added logs for the Empire shipping division unique missions.
    Fixed wrong quotes in Empire Shipping missions.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    More OSD fixes.
    Fixed several more instances of not using numstring.
    renamed the trader gawain in the vip rescure mission
    Fixed es02.
    Got the new system in and working!
    
    Right now it's just putting generic outfits on everyone. Next step:
    adjust outfits for specific ships and factions.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for empire shipping mismsions and waste dump.
    Removed the text about putting in good word for the Dvaered in es02.
    
    This mission previously unlocked Dvaered patrol missions, but the
    patrol missions now only require a mercenary license, so this text
    is now potentially confusing.
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced a huge swath of tabs with spaces in  dat/
    * Empire Shipping mods Dvaered reputation, in line with the writing.
    Updated missions and scripts to use jump.pos() instead of system.jumpPos()
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * Only generate landable trajectories for empire shipping campaign.
    Move the ES missions to Halir for now, due to Polaris Prime's temporarily-restricted nature.
    fix typos in empire shipping missions
    
    Signed-off-by: Nicolas Kaiser <nikai@nikai.net>
    modPlyerSIngle -> modPlayerSingle
    * Use modPlayerSingle, not modPlayerRaw for most cases.
    * Moved from player-based faction commands to faction-based player commands.
    * Added a helper script to convert numbers into human readable strings.
    * Bump rep cap even if fails, because he's done the campaign. No reward nor faction bonus though.
    * It's incReputation not modReputation.
    * Use the common empire framework to bump up the reputation cap.
    * Missions now only affect the relevant factions. No secondary hits.
    * Minor fixes.
    * Need to make hostile.
    * Spice it up.
    * Moved around stuff so it's more interesting, but not by that much.
    * Empire advanced shipping 2 should claim system.
    Minor grammar fix for third Empire Shipping mission, plus permanent visibility for the VIP's ship.
    Adjusted mission properties to suit big sytems
    
    + Changed entry coordinates to jumppoint
    + Dvaered now jump with you in system via jumppoint
    + FLF will wait for you around the jumppoint
    + Added abort() for clean exit on abort (and failure message)
    + Added a hint to search for the ship in the system.
    Adjusted mission properties to suit big sytems
    
    + Changed entry coordinates to jumppoint
    + Dvaered now jump with you in system via jumppoint
    + FLF will wait for you around the jumppoint
    + Added abort() for clean exit on abort (and failure message)
    + Added a hint to search for the ship in the system.
    * add osd messages to missions
    
    * fix title for Empire VIP Rescue mission
    * Re-implemented cargo missions (standard only).
    * Replaced planet.get() usage with planet.cur().
    Highlight the Gawain in es02.lua to distinguish it in big systems.
    * Replace misn.timerStart and misn.timerStop with hook functions.
    * Replace misn.timerStart and misn.timerStop with hook functions.
    * Fixed a couple of file headers I messed up.
    * Replaced all instances of system.get() with system.cur()
    * Minor edits to Dark Shadow.
    * More claims or claim comments.
    * Update all the missions to use the new marker API.
    * Renamed misn.addCargo, misn.rmCargo and misn.jetCargo to misn.cargoAdd, misn.cargoRm and misn.cargoJet.
    * Changed the "def" hardcoded value to nil for pilot.add's AI parameter.
    * Updated missions using "def" so that they now use nil.
    * Small spelling correction in es02.lua.
    * English and a bit of polish for es02.
    * Added authorship for empire missions.
    s/.  /. /
    * Renaming pilot.warp() pilot.setPos().
    * Clear velocity manually.
    * Added player.unboard() to existing missions.
    * Added portraits.
    * Almost all missions should work with the new bar system.
    * Should upgrade all the missions to the new API changes.
    * Updated missions to new API change.
    * If you rescued VIP you can blow up his ship.
    * Made it a bit easier, became too hard.
    * Tweaked encounters some.
    * New mission.  Last of the new campaign.
    * Tweaked other missions/campaign to be based on completing this one.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Force FLF mission in es02, fixed implementation in es00.
    Added forcing FLF combat music on es00.
    
    It's very likely the player isn't hostile to the FLF at this point,
    so it would have played pirate music (in some cases) or the default
    music. This change causes the mission to force FLF music. It also
    makes the mission claim the system it's in, since music_combat_force
    needs to be popped when leaving the destination system and we wouldn't
    want two missions conflicting over the music_combat_force variable.
    It's also probably for the best anyway since it's spawning ships in
    the system.
    Added logs for the Empire shipping division unique missions.
    Fixed wrong quotes in Empire Shipping missions.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    More OSD fixes.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for empire shipping mismsions and waste dump.
    Readability and gameplay improvements for es00
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    * Can simplify expression now that the vec2 stuff actually works.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    Increased the distance of the FLF ships that attack you in es00.
    
    Well, actually, I made them actually *have* a distance. vec2.add
    with pairs of coordinates is broken; trying to use that method just
    does nothing. At any rate, I increased the *intended* distance.
    Those FLF ships being so close makes getting out impossible without
    a highly *armored* ship; not a fast ship, but a highly armored ship.
    This is completely nonsensical. The ships spawning a ways away makes
    escaping from them with a fast ship much more realistic.
    
    That bug with vec2.add still needs to be fixed, though. For now, I
    worked around it by creating a new vector and adding them together
    instead.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * Only generate landable trajectories for empire shipping campaign.
    Move the ES missions to Halir for now, due to Polaris Prime's temporarily-restricted nature.
    fix typos in empire shipping missions
    
    Signed-off-by: Nicolas Kaiser <nikai@nikai.net>
    modPlyerSIngle -> modPlayerSingle
    * Use modPlayerSingle, not modPlayerRaw for most cases.
    * Moved from player-based faction commands to faction-based player commands.
    * Added a helper script to convert numbers into human readable strings.
    * Missions now only affect the relevant factions. No secondary hits.
    Change the Empire Shipping mission's landing disable message.
    Change the Empire Shipping mission's landing disable message.
    * Fixed up advanced empire shipping mission allowing landing.
    * add osd messages to missions
    
    * fix title for Empire VIP Rescue mission
    * Re-implemented cargo missions (standard only).
    * Replaced planet.get() usage with planet.cur().
    * Fixed a couple of file headers I messed up.
    * Replaced all instances of system.get() with system.cur()
    * Minor edits to Dark Shadow.
    * More claims or claim comments.
    * Update all the missions to use the new marker API.
    * Renamed misn.addCargo, misn.rmCargo and misn.jetCargo to misn.cargoAdd, misn.cargoRm and misn.cargoJet.
    * Changed the "def" hardcoded value to nil for pilot.add's AI parameter.
    * Updated missions using "def" so that they now use nil.
    * English and a bit of polish for es00.
    * Added authorship for empire missions.
    * Move misn.takeoff() to player.takeoff() and updated usage.
    s/.  /. /
    Updated text for an Empire shipping quest. Fixed grammar.
    * Added portraits.
    * Almost all missions should work with the new bar system.
    * Should upgrade all the missions to the new API changes.
    * Updated missions to new API change.
    * New mission.
    * Tweaked some old missions.
    * New ai.
    * Mission should be fully working now.
    * New untested mission, probably needs debugging.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs for the Empire shipping division unique missions.
    Fixed wrong quotes in Empire Shipping missions.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    More OSD fixes.
    Fixed some missions not using numstring
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for empire shipping mismsions and waste dump.
    Replace uses of pilot.somemethod(p) with p:somemethod()
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    Incorrect homonym: discrete -> discreet.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * Only generate landable trajectories for empire shipping campaign.
    Move the ES missions to Halir for now, due to Polaris Prime's temporarily-restricted nature.
    modPlyerSIngle -> modPlayerSingle
    * Use modPlayerSingle, not modPlayerRaw for most cases.
    * Moved from player-based faction commands to faction-based player commands.
    * Added a helper script to convert numbers into human readable strings.
    * Missions now only affect the relevant factions. No secondary hits.
    * add osd messages to missions
    
    * fix title for Empire VIP Rescue mission
    * Re-implemented cargo missions (standard only).
    * Replaced planet.get() usage with planet.cur().
    * Replace misn.timerStart and misn.timerStop with hook functions.
    * Replace misn.timerStart and misn.timerStop with hook functions.
    * Fixed typo in mission.
    * Fixed a couple of file headers I messed up.
    * Replaced all instances of system.get() with system.cur()
    * Minor edits to Dark Shadow.
    * More claims or claim comments.
    All missions should now work with the new API calls.
    * Update all the missions to use the new marker API.
    * Renamed misn.addCargo, misn.rmCargo and misn.jetCargo to misn.cargoAdd, misn.cargoRm and misn.cargoJet.
    * Renamed function playerfreeCargo() => player.cargoFree().
    
    Signed-off-by: Edgar Simo <bobbens@gmail.com>
    * English and a bit of polish for es01.
    * Added authorship for empire missions.
    s/.  /. /
    * Added portraits.
    * Almost all missions should work with the new bar system.
    * Give heavy weapons license after second advanced empire shipping mission.
    * Do not give heavy combat vessel license yet.
    * Should upgrade all the missions to the new API changes.
    * Updated missions to new API change.
    * New mission.  Last of the new campaign.
    * Tweaked other missions/campaign to be based on completing this one.
    * New mission.
    * Tweaked some old missions.
    * New ai.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    corrected a few distances in wrong way
    OK, really fixed that this time
    
    That was confusing
    Fixed crash
    Added a Dissident Dead Or Alive Bounty mission for the Proteron.
    
    Also fixed the fact that Dissident presence was spawning Civilian
    ships and not Dissident ships.
    Added logs to the Coming Out campaign.
    Added logs to the Shadow campaign.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Added 3rd "Coming Out" mission, plus fixed some minor fixes to other stuff.
    Fixed method.
    Replaced use of the "static" tag with a "static" standing script.
    
    The reason is using the "static" tag now guarantees standing to always
    be represented as "???", as this text is now defined in Lua.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    * Added Soromid rehab mission.
    * Initial commit of rehabilitation missions.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Spacing
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs to the Coming Out campaign.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    And the modified Lua files (taking advantage of new images).
    Added next "Coming Out" mission.
    
    This mission involves the player assisting Chelsea in an effort to kill
    a pirate.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed Boarding Androids outfits to comply with typical naming conventions.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs to the Coming Out campaign.
    corrected a few distances in wrong way
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    And the modified Lua files (taking advantage of new images).
    Added next "Coming Out" mission.
    
    This mission involves the player assisting Chelsea in an effort to kill
    a pirate.
    Added 5th "Coming Out" mission.
    
    Delivering garbage.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Made Chelsea take advantage of the fire-while-fleeing thing.
    Added logs to the Coming Out campaign.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    And the modified Lua files (taking advantage of new images).
    Added 3rd "Coming Out" mission, plus fixed some minor fixes to other stuff.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs to the Coming Out campaign.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    And the modified Lua files (taking advantage of new images).
    Added 3rd "Coming Out" mission, plus fixed some minor fixes to other stuff.
    Added second "coming out" mission, "Coming of Age".
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Removed "stupid", "idiot", "moron" occurrences.
    
    These are also sanist terms, so I replaced them with better terms,
    like "fool" (the term with the same literal meaning in contemporary
    usage), or generalist insults like "asshole".
    Added logs to the Coming Out campaign.
    corrected a few distances in wrong way
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    And the modified Lua files (taking advantage of new images).
    Moved Coming Out mission to subdirectory.
    Increased interval again.
    Include system name in mission description
    Fixed a typo, decreased frequency of chatter.
    Added a var push for when the Coming Out mission is completed.
    
    Going to be used for the next mission (to delay giving it to the
    player).
    Removed a now-unnecessary debug print.
    
    I seem to have forgotten to remove this when I finished the Coming Out
    mission. It's no longer needed; this just removes the message
    being printed to the terminal.
    Added filler "reminder" texts to Coming Out, plus other improvements.
    Improved the Coming Out mission a bit.
    Added "Coming Out" mission.
    
    This is the first in a series of missions about the story of a
    transgender person coming out and becoming a pilot. It's in the
    Soromid faction because a later mission is going to involve getting
    medical treatment from the Soromid. This mission just serves to
    introduce the character (Chelsea) and set up later missions with a
    few hooks.
    
    I also fixed a couple of small issues that I happened to notice as
    I was working on the new mission: a typo in flf_dvk07 ("hay" instead
    of "hey"), and an autogenerated file (po/stamp-po) getting included
    by git add --all.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs to the Coming Out campaign.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    And the modified Lua files (taking advantage of new images).
    Added the fourth "Coming Out" mission.
    
    Surprise! Dad's a bad guy, attempted to kill his child, and killed
    his wife in the process! Or did he?...
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Added a rehab mission for the trader faction
    * Initial commit of rehabilitation missions.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    More OSD fixes.
    Fixed typo in Anxious Merchant mission
    One text thing I missed
    Fixed up the Anxious Merchant mission.
    
    Changes include:
    
    * Improved and simplified the text
    * Removed the penalty for aborting the mission (putting it in-line with all other missions)
    * Fixed wrong formatting which caused the mission to crash previously
    * Increased the reward of the mission
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    More gettext.
    Replace uses of pilot.somemethod(p) with p:somemethod()
    Fix variable name
    Add extra leeway to time limits for long-distance cargo missions
    Fix the Anxious Merchant cargo size range (Fixes #236)
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    Fixed up Anxious Merchant mission
    Many more fixes to the anxious merchant but also a few others (and probably more to come)
    And another broken if statement - preempted more fixes and added more enhancements - I better finish soon or this will end up being a campaign...
    Missed bracket and commas - dang it
    And that's the text done with a couple of other enhancements - including gender differences :)
    Name alignment
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Mission updates
    
    Changed the trader escort mission to a Traders Guild mission, plus
    added Traders Guild targets for Assassination Job missions.
    Added stuff to make sure all escorts in trader_escort travel at same speed.
    More or less complete Trader Escort mission overhaul.
    
    Started out with just fixing text, but then I found some problems...
    so here you go, the escort mission doesn't let you "cheat" by jumping
    after only one ship jumps anymore.
    added the possibility for the manual control AI to shoot while landing
    corrected problem at landing and jumping for the trader escort mission
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed a possible error in atk_heuristic_big_game_think
    Accidentally ruined a line
    Fixed arg in wrong place
    Fixed lack of jump event
    Some escort mission improvements...
    
    There was still a weird thing that caused other problems but I've
    got something worse to deal with now...
    Fixed use of nonexistent "abort" function in trade escort mission.
    More OSD fixes.
    Added 3rd "Coming Out" mission, plus fixed some minor fixes to other stuff.
    Removed unnecessary cruft.
    Further refined escort mission.
    Increased trader escort mission reward.
    
    The trader escort mission is probably the most tedious regular mission
    in the game, so I think it's best for it to be a very rewarding one.
    Not so rewarding that it's a must-do, but rewarding enough that there's
    a point to doing it instead of a bounty hunt.
    
    I've also decreased the difference between small and large convoys.
    It's still there, but not as drastic. Previously the largest was 20x
    the distance reward of the smallest; now it's only 10x.
    Removed player_getRating and all uses of it.
    
    Inspired by something @bobbens said in #832 that I agree with
    ("I don't think anybody would miss it if removed").  I didn't go
    all-out and remove the combat rating mechanic because I don't think
    its existence alone is a problem as long as it's just cosmetic (and
    it might even be a nice little nod to EV and a way to sort of get
    a feel for how much combat you've done this game), just actual use
    by Lua code, which was rare.
    
    Missions that previously modified their difficulty based on this no
    longer do so. In particular:
    
    * emp_hcvl now always gives you an "easy" ship.
    * trader_escort now always gives you the full range of options for convoy size.
    
    Also worth noting that dat/missions/common.lua has been removed both
    because no Lua code was actually using it, and because everything
    there seems to be centered around the combat rating mechanic.
    hitman3's Lua file has also been removed because it is no longer in
    use (due to being obsolete) and doesn't really have anything that
    needs to be saved. (Both of these decisions were a response to the
    use of player_getRating() in these files.)
    
    Of course, all events and missions that had <cond> attributes with
    getRating() have had those getRating() calls removed.
    gettext for some neutral missions.
    Renamed mission files that were in camelCase.
    
    Not terribly important, but it's inconsistent with everything else.
    * Attempt to clean up the whitespace mess in Lua a bit.
    Trader Escort reward tweak
    Trader Escort Mission
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs for the FLF and Dvaered campaigns.
    Fixed spacing in first DV mission.
    Fixed several instances of assuming that planet.faction always returns a faction.
    
    The function actually returns nil if the planet has no faction (i.e. Eirok),
    so code that relied on this broke whenever the player landed on such a
    planet. I've done a grep for these and I think I've fixed every one,
    preventing Lua errors in the News and NPC events most notably but also
    preventing possible (albeit unlikely) mission errors.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for dvaered missions.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    * System claims (or no-claim comments) for several missions.
    * Renamed misn.addCargo, misn.rmCargo and misn.jetCargo to misn.cargoAdd, misn.cargoRm and misn.cargoJet.
    * Use system.cur() and planet.cur().
    * Second FLF mission basically done
    * The usual tweakage
    * WIP commit
    * Finished the second mission in the Dvaered route
    * Added graphics for base and waypoint ships
    * Tweakage
    * Tweakage
    * Second Dvaered route mission WIP commit
    * First mission in the Dvaered route of the flfbase mini-campaign finished.
    * First mission in the FLF route is now complete.
    * WIP commit for FLF intro campaign
    * WIP commit for FLF intro mission
    * Some initial work towards the FLF intro campaign.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Removed "stupid", "idiot", "moron" occurrences.
    
    These are also sanist terms, so I replaced them with better terms,
    like "fool" (the term with the same literal meaning in contemporary
    usage), or generalist insults like "asshole".
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Typo
    Store portraits in Championship
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    One more fix
    Fixed Championship text
    escort lands in case the player aborts in dv championship
    fix in dvaered championship
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for dvaered missions.
    Make addRaw() return pilot, instead of single element table
    Replace pilot.memory() and pilot.memoryCheck() with one function, taking
    advantage of the single Lua state.
    * Attempt to clean up the whitespace mess in Lua a bit.
    Correct spelling
    Added a Dvaered championship mission
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Removed "stupid", "idiot", "moron" occurrences.
    
    These are also sanist terms, so I replaced them with better terms,
    like "fool" (the term with the same literal meaning in contemporary
    usage), or generalist insults like "asshole".
    All right -> alright
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Switched some dialog in dv_diversion to gender-neutral.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    Changed "STU", "STP", and "SCU" to "seconds", "periods", and "cycles".
    
    This is meant for better readability; it makes the different units
    more distinguished from each other.
    
    "STU" was replaced with "seconds" instead of "units" for two reasons:
    one, "units" is too generic (it's used for all kinds of measurements,
    not just time measurements), making it a confusing name. Two, the SCU
    is the same as a second in-universe anyway, and I don't see the
    general population abandoning that term.
    
    For the auto generation of "pretty" time text, I replaced e.g "12 STU"
    with "12s", and e.g. "8.32 STP" with "8.32p".
    
    Also fixed some language mistakes in dialogs I happened to notice,
    plus some very weird usage of the time units that probably resulted
    from a misunderstanding of how long they're supposed to be (there
    was a father concerned because his daughter disappeared several
    *seconds* ago, a food station that had a harvest every day, and a
    weekly mining trip to one planet that was talked about as if that
    wasn't frequent).
    
    Just a thought that just came to mind as I was writing this: perhaps
    it would be better to call decaperiods "daps"? Not truly necessary,
    but it would be an interesting idea because it's a name for a unit
    that kind of look like "days", while also serving as a shorthand
    for the full official name. Any thoughts?
    gettext for dvaered missions.
    * Attempt to clean up the whitespace mess in Lua a bit.
    Replace uses of pilot.somemethod(p) with p:somemethod()
    Overhaul DV Diversion and improve its handling of dead pilots
    
    Fixes #481.
    * Should fix diversion mission crashing.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    Dvaered missions playable again (though, some of them are *very* hard :o).
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    My first attempt at extensive edits to a Lua file, improving use of string substitution.
    Fix typos in Dvaered diversion mission.
    add cancel autonav when jump_fleet enters
    added flf mission flf_basedefense, flf version of dv_antiflf03.lua
    add notes, todo
    add camera tracking to watch the action
    add pilot exists checks
    fix pass mission text
    update dialog, untabify
    change some text descriptions
    add new dvaered mission dv_diversion
    add new dvaered mission dv_diversion
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Fixed attempts to translate empty strings.
    
    Empty strings are not valid translation identifiers in gettext and
    not needed. In both cases it was just placeholder strings until the
    real strings were place on top.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for dvaered missions.
    Remove pilot.player() function, as it is a duplicate of player.pilot()
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    FIXED: Assault on Unicorn still had one reference to the old mission system
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Various wording and typo fixes.
    Tweaked the Assault on Unicorn reward values a bit. Also give a reputation boost at the end.
    Mention final bounty value when rewarding the player.
    New computer mission by loki. Gives bounties for killing pirates in Unicorn.
    Added logs for the FLF and Dvaered campaigns.
    fix dv_modReputation()
    
    Signed-off-by: Nicolas Kaiser <nikai@nikai.net>
    * Added common dvaered framework, increment reputation by 5 when destroying sindbad.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs for the FLF and Dvaered campaigns.
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Typo fix
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Fixed several instances of assuming that planet.faction always returns a faction.
    
    The function actually returns nil if the planet has no faction (i.e. Eirok),
    so code that relied on this broke whenever the player landed on such a
    planet. I've done a grep for these and I think I've fixed every one,
    preventing Lua errors in the News and NPC events most notably but also
    preventing possible (albeit unlikely) mission errors.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for dvaered missions.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    Dvaered missions playable again (though, some of them are *very* hard :o).
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed variable name.
    * Fixes to dv_antiflf02.
    ** Give EMP Grenades to the Vigilances so they can actually disable the Vendettas.
    ** Do not make any assumptions about the stats of the Vigilances, check them instead.
    ** Reduced amount of Vendettas from 6 to 4.
    Corrected misnamed file and bad misn.setNPC invocation.
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    fix typos in dvaered antiflf missions
    
    Signed-off-by: Nicolas Kaiser <nikai@nikai.net>
    modPlyerSIngle -> modPlayerSingle
    * Use modPlayerSingle, not modPlayerRaw for most cases.
    Improvements for the dv_antiflf02
    Fixed typo. CamelCase habits die hard.
    * Stupid case sensitive name matching.
    * Gave the DV vigilances in dv_antiflf02 Mass Drivers.
    * Fix bad ai IDs.
    Add raw ships in the Dvaered/FLF missions instead of using predefined fleets.
    * Progress on combat tutorial.
    * Renamed "nojump" ais to "norun", for consistency.
    * Reworked Dvaered/FLF missions to work with big big systems and several new features.
    * dv_antiflf03 is still broken.
    * System claims (or no-claim comments) for several missions.
    * Added overlay related commands to several missions.
    * Renamed getHealth and getEnergy as health and energy respectively.
    * Added pilot conditionals (read-only).
    * Renamed getHealth and getEnergy as health and energy respectively.
    * Added pilot conditionals (read-only).
    * Update all the missions to use the new marker API.
    * Renamed misn.addCargo, misn.rmCargo and misn.jetCargo to misn.cargoAdd, misn.cargoRm and misn.cargoJet.
    * Replaced all instances of misn/evt.timerStart with hook.timer
    * Replaced all instances of misn/evt.timerStop with hook.rm
    * Updated more missions to use the new pilot.add API.
    * Players must now also have low shields for the FLF to appear in the second anti-FLF mission.
    * New portraits by grumbel.
    * Can only win the second Dvaered mission on Dvaered worlds.
    * Removed a lot of hacks in favor of the new manual ship control API.
    * Actually added the mission files I've been working on.
    * Removed invisible ship.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Star of Valor.
    forgotten a few setnodisable
    Made nodisable and nodeath compatible
    Added logs for the FLF and Dvaered campaigns.
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed land override.
    Fixed indirect gendering of the player
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    More updates to the anti-Sindbad mission.
    
    - Made it so that FLF ships don't see DV ships; this causes them
    to come much closer, so the battle doesn't stall.
    - Make Obstinate invincible after Sindbad is destroyed.
    - Zoom in on Sindbad as it blows up (taken from FLF Catastrophe event).
    - Fix allowing defensive behavior to still work after Sindbad is destroyed.
    Several improvements to the Sindbad base offensive mission.
    
    The way this mission was structured was quite dated. I made several
    changes to fix problems and make it work better overall.
    
    - Instead of timing, the phases are determined by how many FLF you've killed.
    - Uses Lancelot and Vendetta for FLF instaed of Vendetta and Ancestor.
    - No longer enters cinematic mode in the final phase.
    - No longer controls FLF ships; they just do what the AI wants.
    
    The only thing that need improvement now is that the FLF just don't
    chase the group effectively. Need to come up with a solution to that.
    (It's not as bad as it was previously though.)
    Added use of the flf_dead diff to the pro-DV Sindbad destruction mission
    Started on "FLF Catastrophe" event.
    Changed the Sindbad ship to use images straight from the planet folder.
    
    Also renamed the ship to "Sindbad" ("Base" made it sound too generic)
    and removed the redundant images.
    gettext for dvaered missions.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    Dvaered missions playable again (though, some of them are *very* hard :o).
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Fixed misspelled variable.
    * Force land permission on completion of FLF base mission.
    * Luadoc.
    Vanilla Imperator Launchers don't exist anymore.
    Corrected misnamed file and bad misn.setNPC invocation.
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    fix typos in dvaered antiflf missions
    
    Signed-off-by: Nicolas Kaiser <nikai@nikai.net>
    modPlyerSIngle -> modPlayerSingle
    * Use modPlayerSingle, not modPlayerRaw for most cases.
    * Added common dvaered framework, increment reputation by 5 when destroying sindbad.
    * Fixed bug reported by Thilo.
    * Force kill the base after 45 seconds from start of stage 4.
    * Many more spawns.
    * Escort AI is epically better.
    * Tried to make the obstinate bombing a bit harder.
    * No need to inform the player about the stages.
    * Mark FLF explicitly as hostile.
    Minor improvements to dv_antiflf03
    Add raw ships in the Dvaered/FLF missions instead of using predefined fleets.
    * Progress on combat tutorial.
    * Renamed "nojump" ais to "norun", for consistency.
    * Use non-compensating goto in a bunch of places.
    * Reworked Dvaered/FLF missions to work with big big systems and several new features.
    * dv_antiflf03 is still broken.
    * Replace misn.timerStart and misn.timerStop with hook functions.
    * Replace misn.timerStart and misn.timerStop with hook functions.
    * System claims (or no-claim comments) for several missions.
    * Added overlay related commands to several missions.
    * Update all the missions to use the new marker API.
    * Replaced all instances of misn/evt.timerStart with hook.timer
    * Replaced all instances of misn/evt.timerStop with hook.rm
    * Updated more missions to use the new pilot.add API.
    * Dvaered base mission now requires player to fly to Darkstone.
    * Prevent mission from restarting after it's been won.
    * Messed with timer lengths in antiflf03 mission.
    * Increased timers from 45s to 60s.
    * Hopefully addressed an issue where escorts could get stuck.
    * Renamed variables for easier reading.
    * Avoid accidental wave starts.
    * Should fix behaviour of escort ships in the Obstinate bombing mission.
    * Fixed some issues with not counting some FLF ships and manual control in the Singbad attack.
    * Dvaered escorts should now be more aggressive about killing the FLF.
    * Surviving escorts now engage in the ship attack as they should.
    * Fixed typo.
    * Cleaned up anti-flf mission by combining same code into functions.
    * Added security timer so the mission always goes on.
    * New portraits by grumbel.
    * Remaining escorts now attack the base 30 seconds after bombing run begins.
    * Fix error (I hope).
    * Finished the base attack mission.
    * Tweakage!
    * Removed a lot of hacks in favor of the new manual ship control API.
    * Actually added the mission files I've been working on.
    * Removed invisible ship.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    * Initial commit of rehabilitation missions.
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Increase pirate mission cap with Hitman missions.
    
    Also fixes the way it's done in empbounty_dead.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed case of original mission cap of nil
    Made ending fake ID include any changes to rep caps in the restoration of rep.
    
    Also set the Fake ID priority lower so it appears at the top of the list.
    Added "Fake ID" pirate "mission".
    
    This is the same concept as rehabilitation missions, except that the
    fake ID "mission" has no victory condition. It simply gives you a
    fake reputation with the major factions that you can use to conduct
    your business uninterrupted, but takes that away if you do too much
    to get noticed.
    
    Namely, you lose your fake ID if you ever wrong an affected faction
    in any way (as with rehab missions), if you gain reputation on an
    affected faction after its mission cap has been adjusted (i.e. doing
    major campaigns for the faction, since that gets you attention which
    means added scrutiny), and occasionally when you gain pirate
    reputation within one of the affected factions' systems.
    
    Of course, the effect is reversed when aborting the "mission", too.
    
    This can serve three purposes:
    
    1. To help pirate-aligned players travel and do pirate cargo missions more easily.
    2. To allow former pirates or FLF pilots to give up on a life of piracy/terrorism.
    3. As a part of some campaigns (like maybe the Thurion and/or Proteron campaigns).
    Increase pirate mission cap with Hitman missions.
    
    Also fixes the way it's done in empbounty_dead.
    Added logs for the hitman missions.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    And the modified Lua files (taking advantage of new images).
    Integrated the "hitman" campaign into the new pirate system.
    Use pirate portraits in pir_getLordRandomPortrait()
    removed some extra portaits until real ones exist.
    added random hitman missions in the same format as pirate bounty missions and all corrisponding files (the portraits need to be replaced). Also, hitman 3 has been started
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added a "creditstring" function to numstring.lua.
    
    This is designed to make proper use of ngettext for credits easier.
    It does the right thing for translation in combination with using
    the numstring function. I've already made use of it in a couple of
    places. I'm essentially recommending this for any time Lua code needs
    to display a certain number of credits.
    Changed wording of the Commodity Run description.
    
    This helps accommodate the fact that commodity runs can appear on
    stations (not just planets), and also helps by including a reminder
    in the mission description of what asset it's for.
    Revert "Removed the Commodity Run missions."
    
    This reverts commit 074bc01842202eea7f2a4290b552baac0ea5872b.
    Removed the Commodity Run missions.
    
    These missions don't work anymore because commodities are available
    everywhere (just at different prices). There is no way to salvage
    this; it will always be possible to take advantage of jacked-up
    prices by buying a commodity at the same planet, taking off, and
    landing (this is why they don't spawn anymore, the mission itself
    prevents this by not allowing the mission in places where the
    commodity is available).
    
    This should probably be replaced by some sort of mechanism to make
    commodities specially cheap or expensive, just as an event. But for
    now, the Commodity Run mission is an unsalvagable deadweight, so
    this removes it.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    gettext for commodity run missions.
    Added versions of the commodity run mission for the FLF and Pirates.
    
    They are functionally identical, but with different texts.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    gettext for remaining pirate missions.
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    Clan cargo missions rarer, plus internal minor modifications.
    Pirates Clan Shipping missions corrections.
    
      - Minor typo corrected.
      - The mission can no longer have for destination the origin planet…
    Pirate world to pirate world missions added.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Improved the "Hitman" missions.
    Increase pirate mission cap with Hitman missions.
    
    Also fixes the way it's done in empbounty_dead.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Added logs for the hitman missions.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Added reputation cap boosts when first completing assassination jobs.
    
    On the first assassination job, first dangerous assassination job,
    and first highly dangerous assassination job, your reputation cap
    for the pirates now increases.
    
    The hitman missions have also had their pay increased substantially.
    gettext for pirate hitman missions.
    Integrated the "hitman" campaign into the new pirate system.
    Remove pilot.player() function, as it is a duplicate of player.pilot()
    * Comments.
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    modPlyerSIngle -> modPlayerSingle
    * Use modPlayerSingle, not modPlayerRaw for most cases.
    * Moved from player-based faction commands to faction-based player commands.
    * Missions now only affect the relevant factions. No secondary hits.
    * Increased pirate mission payments.
    * more osd messages
    * Re-implemented cargo missions (standard only).
    * Replaced planet.get() usage with planet.cur().
    * Fixed a couple of file headers I messed up.
    * Replaced all instances of system.get() with system.cur()
    * Minor edits to Dark Shadow.
    * More claims or claim comments.
    updated to use more recent hooks.
    finished hitman3
    fixed multiple mission finished messages
    Improved dialogue in hitman2.lua
    fixed remaining bugs in missions (I hope)
    removed lines causing errors from prior manual counter
    added a check to see if the pilot still exists before doing anything with them.
    hitman missions now use native lua counters in table
    added a line to save tabels in boath hitman missions
    removed a message that wasn't supposed to be there
    added hitman followup mission with errors I can't find as well as adjusting the first one
    Finish the mission after 5 pilots have fled, not after 5 attacks
    * Only display misn_success message once.
    * Update mission information after completing the primary part.
    Cleaned up the new mission a bit.
    the first pirate mission
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Improved the "Hitman" missions.
    Increase pirate mission cap with Hitman missions.
    
    Also fixes the way it's done in empbounty_dead.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Added logs for the hitman missions.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Added reputation cap boosts when first completing assassination jobs.
    
    On the first assassination job, first dangerous assassination job,
    and first highly dangerous assassination job, your reputation cap
    for the pirates now increases.
    
    The hitman missions have also had their pay increased substantially.
    gettext for pirate hitman missions.
    Integrated the "hitman" campaign into the new pirate system.
    Remove pilot.player() function, as it is a duplicate of player.pilot()
    * Comments.
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    modPlyerSIngle -> modPlayerSingle
    * Use modPlayerSingle, not modPlayerRaw for most cases.
    * Moved from player-based faction commands to faction-based player commands.
    * Missions now only affect the relevant factions. No secondary hits.
    * Increased pirate mission payments.
    * more osd messages
    * Re-implemented cargo missions (standard only).
    * Replaced planet.get() usage with planet.cur().
    * Fixed a couple of file headers I messed up.
    * Replaced all instances of system.get() with system.cur()
    * Minor edits to Dark Shadow.
    * More claims or claim comments.
    More dialogue updates for the hitman missions.
    fixed multiple mission finished messages
    fixed remaining bugs in missions (I hope)
    removed lines causing errors from prior manual counter
    added a check to see if the pilot still exists before doing anything with them.
    hitman missions now use native lua counters in table
    added a line to save tabels in boath hitman missions
    added hitman followup mission with errors I can't find as well as adjusting the first one
    Finish the mission after 5 pilots have fled, not after 5 attacks
    * Only display misn_success message once.
    * Update mission information after completing the primary part.
    Cleaned up the new mission a bit.
    the first pirate mission
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Fixed up the text of longdistancecargo, plus improved it.
    
    This makes the long distance shipping mission actually go... long
    distance.
    Updated pirate cargo mission text.
    Removed unused cargo strings, fixed typos in sciwrong.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed several strings and lack of gettext usage.
    Fixed the "foodbiz" campaign.
    Added an exclusion of shipping to pirate worlds from pirate worlds.
    Made pirate transport missions always show up.
    
    This adds a couple options to cargo_common.lua enabling use of hidden
    jumps and enabling always generating regardless of commodity availability,
    then adds those to the pirate cargo mission.
    Fix pirate cargo missions requiring time travel
    gettext for remaining pirate missions.
    * Attempt to clean up the whitespace mess in Lua a bit.
    Replace uses of pilot.somemethod(p) with p:somemethod()
    Add extra leeway to time limits for long-distance cargo missions
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    moved jumpdist.lua includes to cargo_common.lua so as to save including it everywhere where cargo_common is used.
    Pirate cargo mission rewrote from the current Empire Shipping mission script.
    * Don't use abort() when not appropriate.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Comments.
    * Replaced destination selection for pirate cargo missions while I was at it.
    modPlyerSIngle -> modPlayerSingle
    * Use modPlayerSingle, not modPlayerRaw for most cases.
    * Moved from player-based faction commands to faction-based player commands.
    * Added a helper script to convert numbers into human readable strings.
    * Missions now only affect the relevant factions. No secondary hits.
    * Re-implemented cargo missions (standard only).
    * Replaced planet.get() usage with planet.cur().
    * More claims or claim comments.
    All missions should now work with the new API calls.
    mission adjustments
    pirate cargo missions for the mission computer
    * Update all the missions to use the new marker API.
    * Renamed misn.addCargo, misn.rmCargo and misn.jetCargo to misn.cargoAdd, misn.cargoRm and misn.cargoJet.
    * Renamed function playerfreeCargo() => player.cargoFree().
    
    Signed-off-by: Edgar Simo <bobbens@gmail.com>
    * Replaced all instances of misn/evt.timerStart with hook.timer
    * Replaced all instances of misn/evt.timerStop with hook.rm
    * Removed hook.time. Use hook.enter until furthur notice.
    * Make sure planets are landable for cargo missions.
    * Cargo delivery missions should always send you to a system that's accessible.
    * Replaced rnd.int with rnd.rnd in es_cargo.lua
    * Fixed typo in ES too many missions dialog.
    * Enormous diff that basically points out that bobbens' punctuation sucks.
    * Increase time on rush missions.
    * Some missions properly use marker types now.
    * Should upgrade all the missions to the new API changes.
    * Cargo missions should never give same-system missions.
    * Updated missions to new API change.
    * Spelling corrections by skwurp.
    * Put some order to the missions.
    * Aborted missions should also drop cargo.
    * Delay + jettison also introduced for ES missions.
    * More table usage for mission static stuff so it doesn't get saved.
    * Gave missions some headers with simple explanations..
    * Step two of the lua api conversion, needs heavy testing.
    * Step one of updating lua api to use metatables.
    * misn_lua.c: More debug magic.
    * dat/missions: All missions should be using setMarker now.
    missions increase/lower faction, fixed bug with factions
    fixed the annoying as hell mission disappearing when no carge space
    big update to add another mission
    ES cargo missions are always timed now
    added a couple more commodities
    fixed mission typo
    cargo missions now take into account freight distance
    es missions keep a counter now
    more tab removal, fixed up mission var stuff
    added new Empire shipping cargo mission, not fully implemented requirement though
    cargo missions now state system location
    unique missions are now actually unique :)
    fix typo bug
    pretend to be multilingual for easier future conversion
    removed debug print
    fixed bug
    randomized mission names a bit
    mission tracks cargo and makes sure you have it
    introduced the concept of mission cargo - not-tradeable
    improved lua api for missions by alot
    fixed bugs so that missions actually work now :)
    fixed the toolkit module in lua, fixed accept bug, segfaults :)
    fixed segfault and proper hook cleanup
    game now tries to load up the missions properly, except lua needs more bindings :)
    initial support for hooks
    first import of mission stuff
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed %s which doesn't belong in OSD title.
    Consider hidden jumps for pirate patrol mission.
    Added a pirate version of the patrol mission.
    
    It doesn't actually work right now, not because there's anything wrong
    with the mission, but because there just happens to be no system near
    any pirate stronghold with both sufficient enemy presence and a
    sufficient number of planets. But should that change in the future,
    this mission will become available.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Removed redness again.
    
    THAT's why we removed it, it doesn't work with saves.
    Increase pirate mission cap with Hitman missions.
    
    Also fixes the way it's done in empbounty_dead.
    Mission updates
    
    Changed the trader escort mission to a Traders Guild mission, plus
    added Traders Guild targets for Assassination Job missions.
    Extended assassination job mission to include Miner and Traders Guild.
    Improved translatability of assassination job mission, added red text
    corrected a few distances in wrong way
    Fixed erroneous sed replacement of include -> require.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Added "Fake ID" pirate "mission".
    
    This is the same concept as rehabilitation missions, except that the
    fake ID "mission" has no victory condition. It simply gives you a
    fake reputation with the major factions that you can use to conduct
    your business uninterrupted, but takes that away if you do too much
    to get noticed.
    
    Namely, you lose your fake ID if you ever wrong an affected faction
    in any way (as with rehab missions), if you gain reputation on an
    affected faction after its mission cap has been adjusted (i.e. doing
    major campaigns for the faction, since that gets you attention which
    means added scrutiny), and occasionally when you gain pirate
    reputation within one of the affected factions' systems.
    
    Of course, the effect is reversed when aborting the "mission", too.
    
    This can serve three purposes:
    
    1. To help pirate-aligned players travel and do pirate cargo missions more easily.
    2. To allow former pirates or FLF pilots to give up on a life of piracy/terrorism.
    3. As a part of some campaigns (like maybe the Thurion and/or Proteron campaigns).
    Fixed bounty missions to handle the case of the target landing.
    Fixed bounty missions to handle the case of the target landing.
    Fixed several instances of assuming that planet.faction always returns a faction.
    
    The function actually returns nil if the planet has no faction (i.e. Eirok),
    so code that relied on this broke whenever the player landed on such a
    planet. I've done a grep for these and I think I've fixed every one,
    preventing Lua errors in the News and NPC events most notably but also
    preventing possible (albeit unlikely) mission errors.
    Added reputation cap boosts when first completing assassination jobs.
    
    On the first assassination job, first dangerous assassination job,
    and first highly dangerous assassination job, your reputation cap
    for the pirates now increases.
    
    The hitman missions have also had their pay increased substantially.
    Allow the Pirate bounty mission to use jumps to find systems.
    
    This makes the mission available on more systems and expands how
    far they are able to go.
    Doubled range and frequency of assassination jobs.
    Whoops, that "land" hook shouldn't be there anymore!
    Unnecessary import (made obsolete by previous commit)
    Added several additional factions to the pirate "empire bounty" mission.
    
    The mission, seen by players as "Assassination Job", now applies to
    the following factions in addition to the Empire: Dvaered, Soromid,
    Sirius, Frontier, Za'lek, Trader, Civilian, Independent.
    
    Because ships available vary, not every faction is available at every
    difficulty level. For example, Civilians only generate very low-level
    bounties, while on the other hand Za'lek bounties are always high
    since it would make no sense for anyone to put a bounty on a drone
    (and manned Za'lek ships are all Corvette class and higher).
    
    This also removes the attempt to give names to pilots, since there is
    currently no code to do so with any faction other than the Empire.
    New "bounty" mission for pirates
    
    I've replaced the existing "empire pirate bounty" mission with a
    variation of the "Dead Or Alive" bounty mission. It is, however,
    "kill only" and renamed to "Assassination Job". It shows up in the
    mission computer and is available through the mission computer on
    Independent planets, pirate strongholds, and the FLF base.  Requires
    a mercenary license unless on a black market world (i.e. Pirate
    strongholds or the FLF base).
    
    I might want to expand this to include other major factions in the
    future. For now, though, it is limited to eliminating Empire ships.
    
    Hitman 3 has been disabled because it is now obsolete, and the
    missions that previously required a Pirate landing pass now only
    require positive reputation with the pirates.
    
    This commit also includes one more small change: Hyenas are now
    counted as pirate ships for the purpose of the pirate reputation
    loss event. The reasons for this are (1) because the pirates are
    often seen with these ships, and (2) to give the player access to
    something considered to be a pirate ship early on.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Fixed ship stealing description
    "ship" -> "theship"
    
    Prevents overwriting the "ship" module.
    Unnecessary local keyword usages
    Improved ship stealing mission accessibility.
    Added more ships for pirate ship stealing.
    
    This also changes "Za'lek Prototype Cruiser" to just "Za'lek Prototype"
    and adds Za'lek ships that were mission from tech.xml.
    Removed gendering of the pirate informer.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Fixed some dialog in the ship stealing mission.
    Fixed several instances of assuming that planet.faction always returns a faction.
    
    The function actually returns nil if the planet has no faction (i.e. Eirok),
    so code that relied on this broke whenever the player landed on such a
    planet. I've done a grep for these and I think I've fixed every one,
    preventing Lua errors in the News and NPC events most notably but also
    preventing possible (albeit unlikely) mission errors.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    Improved/fixed the ship stealing mission.
    
    This includes the following notable changes:
    
    1. The price is converted with numstring properly, so that it looks right.
    2. The mission actually deducts money from you when you accept it (previously it didn't, it just said that it would).
    3. When you reject the mission or don't have enough money, the informer sticks around and you can ask again.
    4. The mission no longer spawns a custom fleet. You just deal with whatever ships spawned there automatically, as in normal travel.
    gettext for remaining pirate missions.
    * Attempt to clean up the whitespace mess in Lua a bit.
    Set portrait for pir_ship_stealing
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    Pirate ship stealing update -- no more crash on guards not in a fleet.
    Pirate ship-stealing missions updated.
    WIP pirate mission in which the player has to steal a ship. Currently non-working, makes naev crash.
    typos and gettext
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Mistake
    
    I think this was something I was experimenting with and forgot to
    change back. Sorry!
    make the ambush in seekndestroy actually noticeable
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Seek and Destroy text improvements.
    
    Avoids genering the target so it's not explicitly always a dude.
    Seek And Destroy improvements
    
    Icnludes auto-closing the comm window when hailing for clues and
    making enemies non-hostile when they give you clues.
    Some fixes
    More dialog options in Seek And Destroy.
    Set pilot who is scared to non-hostile in Seek And Destroy mission.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Fixed some bugs in Seek And Destroy mission.
    Fixed cases of "a FLF" in Seek And Destroy mission.
    Use "enter" hook instead of "jumpin".
    Initialize "hailed" table on creation in "Seek And Destroy"
    
    This should prevent an bug someone encountered in this mission.
    Less extreme
    Made Seek And Destroy much more common.
    Fixed grammar of Seek n Destroy mission.
    seek and destroy mission
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    And the modified Lua files (taking advantage of new images).
    Improved the race mission.
    
    Changes include:
    
    * Luxury Yachts are now allowed.
    * race2 now spawns one Gawain and two Llamas instead of three Llamas.
    * Hard mode now only restricts you from using afterburners.
    * Hard mode opponents now spawn with random engines.
    * Fixed / cleaned up the text to make it better.
    bugfix in race mission
    small correction in race missions
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for race missions.
    Make addRaw() return pilot, instead of single element table
    * Attempt to clean up the whitespace mess in Lua a bit.
    Some fixes to the race missions.
    
    Quite a lot here, but of note:
    
    - Fixed the strings to be more consistent with everything else (removed
      double-spaces, added use of numstring, etc).
    
    - Made the reward variable.
    
    - Made the guy stay behind when you say "No".
    Don't play the power up sound when the ship has instant jump
    Fix its/it's and lets/let's errors in Lua
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    initial commit for set of missions where you race against other pilots within a system
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Updated the mission template to include the XML header.
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added swamp bombing accessory.
    Reworked aristodrink text.
    
    The previous text tried to do something that's interesting, but
    doesn't work very well for translation. As such, I've replaced this
    with a more simple system. In keeping with the "gender choice" theme,
    the mission generates three variations: one where the final bartender
    is male, one female, and one nonbinary.
    
    This edit also removes some text that was a bit sexist (referring to
    a stranger's dress as "sexy", which also casually makes an assumption
    that the player finds women attractive).
    Added logs for neutral one-off missions.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Improved Shadowrun OSD.
    
    Also removed unnecessary periods from a lot of OSD text (mostly old
    stuff).
    Fixed Aristodrink mission bug
    
    This fixes a bug where you could make the final message in this mission
    show up again by revisiting the same bar.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for drinking aristocrat mission.
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    Reworded text slightly for the Drinking Aristocrat mission.
    spelling correction in aristodrink mission: "ever time" to "every time"
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Various spelling and grammar fixes.
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * Rephrased a sentence in the Drinking Aristocrat mission.
    * Check neutral missions to make sure you can land.
    * Fixed aristodrink mission, %d should be %s in string.format.
    * Fixed aristodrink mission, %d should be %s in string.format.
    * No need to clean up hooks, misn.finish() should handle it automagically.
    aristodrink: fix typo
    
    Signed-off-by: Nicolas Kaiser <nikai@nikai.net>
    * Added a helper script to convert numbers into human readable strings.
    * New portraits by grumbel.
    Made every message a paragraph.
    Made minor edits of Drinking Aristocrat text.
    Added mission Drinking Aristocrat, and corrected formatting in mission Drunkard
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    gettext for dts missions.
    Replace uses of pilot.somemethod(p) with p:somemethod()
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Assorted fixes to the Defend the System mission.
    Typo and phrasing fixes by Sudarshan S
    Updated a slew of former system.hasPresence() call-sites.
    modPlyerSIngle -> modPlayerSingle
    * Use modPlayerSingle, not modPlayerRaw for most cases.
    * Moved from player-based faction commands to faction-based player commands.
    * Added a helper script to convert numbers into human readable strings.
    * Missions now only affect the relevant factions. No secondary hits.
    * Re-implemented cargo missions (standard only).
    * Replaced planet.get() usage with planet.cur().
    * Replace misn.timerStart and misn.timerStop with hook functions.
    * Replace misn.timerStart and misn.timerStop with hook functions.
    * Fixed a couple of file headers I messed up.
    * Replaced all instances of system.get() with system.cur()
    * Minor edits to Dark Shadow.
    * More claims or claim comments.
    *Initial commit (re-commit) of passenger and cargo mission randomization
    
    Signed-off-by: Cypher <cypher3c@gmail.com>
    *Initial commit (re-commit) of passenger and cargo mission randomization
    
    Signed-off-by: Cypher <cypher3c@gmail.com>
    * Update all the missions to use the new marker API.
    * Move misn.takeoff() to player.takeoff() and updated usage.
    * Enormous diff that basically points out that bobbens' punctuation sucks.
    * Almost all missions should work with the new bar system.
    * Lua mission file was missing some formatting.
    * Lua mission file was missing some formatting.
    Update to first Defense mission
    
    Added a function to run on mission abort.
    Added comm messages to appear on mission abort.
    Added hasPresence checks to make mission appear only in otherwise safe systems.
    * Tweaked the dts missions so that they start furthur away if you decline.
    New defence mission, and updates to dts.00 and msn templates
    
    There is a defence mission along the lines of the first one.
    
    Otherwise very small stuff:
    Added details to defence missions including a recall comm message.
    Split the mission templates for bar and computer missions into two.
    * Some minor tweaks and clean ups.
    New defend planet mission and mission template.
    
    Added a new mission available at any planet once player's combat rating is greater than 50.
    
    Also added a new fleet, a new faction, and a new AI to support this mission.
    
    Finally created a new mission template, similar to the old ones, but more verbose.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Typos and other text stuff.
    
    Fixes #1187. Also adjusted the way "levels" are handled so that
    other translation problems don't occur.
    adaptations and corrections in lua scripts and nlua doc
    Whitespace and some unused variables
    shiplog removed from pirate and cargo missions...
    Added a remove log functionality, so that unimportant logs can be automatically removed.  Also limited the journey log to the 6 previous journeys.
    Ship log implemented and examples in some missions
    Ship log implemented and examples in some missions
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Made "alive" bounties use a custom faction.
    
    This custom faction is enemies with civilians, traders, and Sirii,
    and allies with the Pirates, but not enemies with other police
    forces. Justification being that since the pirate is wanted alive,
    officials who can't disable the target (i.e. non-Sirius) wouldn't
    go after it.
    
    As a special exception, the Dvaered and the special faction are
    still enemies, since the Dvaered are notably absent-minded on this
    sort of thing and also don't offer alive bounties.
    Updated my info.
    Fixed bounty missions to handle the case of the target landing.
    Fixed bounty missions to handle the case of the target landing.
    gettext for pirate bounty missions.
    Updated to use \a instead of \e for printing with colours.
    Fixed cases where "she" could be mixed with "him" or "his".
    
    The whole pronoun randomization thing isn't all that important, so
    I just removed it (hardcoding "he") in these instances to correct
    the error.
    Updated my copyright notices.
    Fix pronouns and a typo
    Only hail the player once.
    Fixed a typo.
    
    Wrong name at one point, was causing one possible outcome of bounty
    hunts to fail.
    Made it possible to get paid something when boarding fails in alive bounty.
    
    Just kill the pirate at this point, and a bounty of 1/5 the original
    bounty is yours. This doesn't check whether *you* killed the pirate,
    because after all, you already went to the trouble to disable and board
    it; it's only fair that you should get this secondary bounty.
    Fix pronoun case
    Set the pronoun once instead of inside each message
    Fewer lines.
    Ahem...
    Fixed bad filter function.
    Made capture of a pirate not guaranteed.
    
    Based on the C code that checks whether stealing things succeeds.
    Basically, the more crew you have, the more likely it is you'll
    succeed.
    Fixed wrong syntax.
    
    Was thinking in a Pythonic mindset. Oops!
    Added more text options to pirate bounty missions.
    Changed the fix for alive bounties.
    
    Now causes all nearby ships to clear tasks when the target ship is
    disabled... most of the time.
    Use dmg argument, rather than manually checking.
    Fixed damage being in percentages rather than absolute.
    
    This caused either armor or shield, depending on which the pirate
    had more of, to be rendered less important than the other, which was
    not intended.
    Factor in damage when deciding who wins the bounty.
    Genericized the code and dialog offering partial bounties.
    Made failure on Dead or Alive bounties much less common.
    
    This includes two main changes:
    
    1. If someone else destroys the ship, you still get the bounty if
       you fired more shots on it than it did.
    
    2. If someone else destroys the ship *and* someone else fired more
       shots on it than you did, but that ship was an Empire ship, there
       is a 50% chance of the ship hailing you and offering you a smaller
       amount of credits than the bounty (proportional to the number of
       times you hit the ship).
    
    I've only tested this so far with a Kestrel, which now has no trouble
    at all getting a bounty in Empire space. I hope this change makes using
    smaller ships more viable, in particular.
    Improve the pirate bounty missions a bit
    * Disable the ship permanently.
    Fixed possibility of pirate bounty missions failing after they were won.
    
    It happened when you disabled the pirate ship as it was jumping.
    Could happen in other circumstances as well, possibly.
    Don't offer pirate bounties in the current system.
    
    I always get the same result when I get a pirate bounty in the current
    system: I can't find the pirate, and it gets killed by someone else.
    I could have solved this by making it spawn close to the planet, but
    not doing this was a deliberate measure to prevent the player from
    grinding in one system over and over again, so I've just removed the
    option for bounties in the current system.
    Added copyright notices to the new bounty missions.
    Changed the way pirates in the pirate bounty mission are positioned.
    Change the ship of a captured pirate to "dummy".
    
    Previously I was grabbing it with pilot.control, which woked, but
    this makes more sense.
    Moved the condition for the bounty missions to its proper place.
    Reduced the maximum distance to search for bounties.
    Added pay text choices.
    Don't have very small bounties in systems with lots of pirates.
    
    This makes the missions more consistent. It can be annoying if you
    get tiny or small bounties when you went to an area with lots of
    pirates specifically so you could get high bounties.
    Make the bounty mission levels based on the number of pirates.
    
    So, systems with few pirates will only ever have tiny bounties, and
    systems with a moderate number of pirates will never have more than
    moderate bounties.
    Fixed bounty missions not giving rewards.
    Make bounty missions appear less frequently.
    Make Alive bounties cost more than Dead or Alive bounties.
    Make jumps_permitted work on landing as well.
    Make same-system bounty pirates spawn in a random location.
    
    Same-system bounties, with the ships spawning right next to you, are
    too prone to excessive grinding. With that in mind, same-system
    pirates now spawn in a random location within the system, making you
    have to look for them and also making their death by other ships
    more likely.
    Fixes for the bounty mission.
    Another pirate bounty mission replacement.
    
    Actually, I replaced my previous pirate bounty mission replacement
    with two missions: the "Dead or Alive" bounty mission, and the "Alive"
    bounty mission. Both of these require a new "Mercenary License".
    
    Conflicts:
    
            dat/missions/neutral/pirbounty.lua
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs for neutral one-off missions.
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    More OSD fixes.
    Some small fixes to Space Family mission
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    Fixed a typo.
    fixed capitalization in spacefamily mission
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Comments.
    * Check neutral missions to make sure you can land.
    * Added some osd mission messages
    * Re-implemented cargo missions (standard only).
    * Replaced planet.get() usage with planet.cur().
    * More claims or claim comments.
    * Should fix an error in the spacefamily mission.
    * Update all the missions to use the new marker API.
    * Renamed misn.addCargo, misn.rmCargo and misn.jetCargo to misn.cargoAdd, misn.cargoRm and misn.cargoJet.
    * Replaced all instances of misn/evt.timerStart with hook.timer
    * Replaced all instances of misn/evt.timerStop with hook.rm
    * Updated to use new Lua API.
    * Updated Lua API to handle new services.
    updated grammar
    * Added player.unboard() to existing missions.
    * Always get only systems with landable planets.
    * Added common framework for getting system n systems away from another.
    * Added mission by BTAxis.
    Added logs for neutral one-off missions.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Added 3rd "Coming Out" mission, plus fixed some minor fixes to other stuff.
    Fixed method.
    Replaced use of the "static" tag with a "static" standing script.
    
    The reason is using the "static" tag now guarantees standing to always
    be represented as "???", as this text is now defined in Lua.
    Removed some ableist language pertaining to blindness, and some sexism.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Improved Shadowrun OSD.
    
    Also removed unnecessary periods from a lot of OSD text (mostly old
    stuff).
    Added numstring usage to crimelord mission
    Suppress crimelord warning (properly this time)
    Revert "Suppress a warning in the crimelord mission."
    
    This reverts commit 09fd1f53c8416e7add0d166025e29a1c30ec8766.
    Suppress a warning in the crimelord mission.
    And the modified Lua files (taking advantage of new images).
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    More gettext.
    * Attempt to clean up the whitespace mess in Lua a bit.
    Remove pilot.player() function, as it is a duplicate of player.pilot()
    new mission: The ruse. Not sure which context to put it in
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    Replaced FLF intro mission.
    
    The old FLF "pre02" mission is something I'm not fond of. The length
    of the mission is ridiculous, you realistically have to land on
    Dvaered planets to refuel, and it's ridiculously hard. I also don't
    much like the arbitrary restriction on ship choices.
    
    The new mission instead is taking out *one* patrol, ostensibly of
    three ships and by yourself, but Dvaered reinforcements arrive.
    Shortly after, an event happens:
    
    If you have done missions for the Dvaered before, the leader of the
    reinforcements hails you, asking you to defect to them. If you
    accept, your score with the Dvaered is made to be no less than 0,
    and you are told to go to a certain planet. A few seconds later, a
    large group of FLF pilots appears and attacks you. If you refuse,
    the same large group of FLF pilots appears and helps you.
    
    If you have not done missions for the Dvaered before, a large group
    of FLF pilots appears and helps you.
    
    This new mission actually favors small, fast ships over large ships;
    the reinforcements are so powerful that it is usually impossible to
    beat them on your own, regardless of the size of your ship. You
    have to depend on the help that comes from the FLF fighters.
    
    I am going to recycle the mission you are told this is as a generic
    mission for the FLF from the mission computer, accessible only after
    this mission is beaten.
    
    Conflicts:
    
            dat/events/neutral/npc.lua
            dat/missions/empire/emp_pirbounty.lua
    added missing period in crimelord mission
    grammar changes for crimelord mission
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Updated missions and scripts to use jump.pos() instead of system.jumpPos()
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * Updated comment.
    * Removed print that isn't needed.
    Add multiple outfits at once in the Crimelord mission.
    Used the new API and helper functions in the Crimelord mission, instead of predefined fleets.
    Improved the Crimelord mission for big systems, made the thugs a bit tougher.
    Improved the Crimelord dialogue, still needs code improvements.
    * fix Crimelord mission (use norun ai) and add osd message
    * Spelling corrections.
    * More claims or claim comments.
    * Update all the missions to use the new marker API.
    * Replaced all instances of misn/evt.timerStart with hook.timer
    * Replaced all instances of misn/evt.timerStop with hook.rm
    changed fleet names
    *added/finished mission crimelord
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added an example of a "Racing Trophy" accessory which you can get from the race mission.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    And the modified Lua files (taking advantage of new images).
    Improved the race mission.
    
    Changes include:
    
    * Luxury Yachts are now allowed.
    * race2 now spawns one Gawain and two Llamas instead of three Llamas.
    * Hard mode now only restricts you from using afterburners.
    * Hard mode opponents now spawn with random engines.
    * Fixed / cleaned up the text to make it better.
    bugfix in race mission
    small correction in race missions
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for race missions.
    Make addRaw() return pilot, instead of single element table
    * Attempt to clean up the whitespace mess in Lua a bit.
    Some fixes to the race missions.
    
    Quite a lot here, but of note:
    
    - Fixed the strings to be more consistent with everything else (removed
      double-spaces, added use of numstring, etc).
    
    - Made the reward variable.
    
    - Made the guy stay behind when you say "No".
    Don't play the power up sound when the ship has instant jump
    Fix its/it's and lets/let's errors in Lua
    Replace non-existent outfits used by missions
    Modified equip scripts for new hulls
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engine with its new equivalent
    BUGFIX: race2 mission didn't handle the new core systems properly.
    On hard mode, the race mission is failed if any outfits are installed.  This included core systems.  It now
    requires that only the manufacturer standard core outfits are installed.
    Additionally, the AI racers created by addRaw() had two sets of core systems: the base ones and the slightly
    better ones added for most craft.  That will need to be fixed as well, but for this mission, I just removed
    all systems and installed only the basic core systems.
    initial commit for set of missions where you race against other pilots within a system
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Fixed up the text of longdistancecargo, plus improved it.
    
    This makes the long distance shipping mission actually go... long
    distance.
    Updated pirate cargo mission text.
    Updated cargo_rush so it's more translatable.
    Whitespace and some unused variables
    shiplog removed from pirate and cargo missions...
    Added a remove log functionality, so that unimportant logs can be automatically removed.  Also limited the journey log to the 6 previous journeys.
    Ship log implemented and examples in some missions
    Ship log implemented and examples in some missions
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Improved Shadowrun OSD.
    
    Also removed unnecessary periods from a lot of OSD text (mostly old
    stuff).
    fixed rush cargo missions
    Fixed printf.
    Cargo rush should play well with gettext now.
    * Attempt to clean up the whitespace mess in Lua a bit.
    Moved piracy risk calculation to the cargo_common script
    Cargo Mission Overhaul
    
    Brief Summary:
    Cargo delivery missions now only deliver commodities offered at the
    origin planet to planets that do not sell that commodity. Jump and
    distance rewards depend on the base price of the commodity being
    delivered. Rewards are also higher for traversing pirated space.
    
    A new mission was created that asks players to deliver a commodity not
    sold on that planet. Pay is dependent on base price of the commodity
    and how much is delivered.
    Replace uses of pilot.somemethod(p) with p:somemethod()
    Add extra leeway to time limits for long-distance cargo missions
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    moved jumpdist.lua includes to cargo_common.lua so as to save including it everywhere where cargo_common is used.
    Many more fixes to the anxious merchant but also a few others (and probably more to come)
    Fix mission check no considering slowdown due to added cargo mass
    minor syntax change in "not enough space" cargo_rush dialog
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced a huge swath of tabs with spaces in  dat/
    fixed typo in cargo_rush.lua that occured when you miss the deadline
    * Added a helper script to convert numbers into human readable strings.
    Grant 8 seconds per jump for timed cargo missions.
    Whittle down the takeoff time bonus in rush cargo missions depending on tier.
    Added a warning when attempting timed cargo missions with overly-slow ships. Reduced the difficulty of rush missions a bit.
    Cargo mission title tweaks.
    Better if structure for the rush missions.
    * Fixed es cargo missions (patch by daniel.oconnor).
    * Improved the abort condition of the cargo missions.
    * Cargo missions weren't properly taking into account the jump distance for reward, reported by CloCkWeRX.
    * Lowered the finished mod due to the increase in payment.
    * Added minor random jitter to cargo mission payment (up to 10% following normal distribution).
    * Upped mission payments for cargo type missions a bit.
    * Comments.
    * Increased cargo reward until naev is more completed as a game.
    * Extracted common stuff from cargo.lua and cargo_rush.lua.
    * Spelling corrections.
    * Initial version of rush cargo missions.
    * Different pricing for cargo missions.
    * Cleanup.
    * Re-implemented cargo missions (standard only).
    * Replaced planet.get() usage with planet.cur().
    * Time can be saved/loaded from Lua.
    * Date hooks work and do not erase themselves.
    * Cargo missions should be fully working to an extent now (times are messed up).
    * Fixed the normal cargo mission, not sure if values make sense.
    Cargo mission passengers may give you bonus credits if you're quick. Added some more variety to the text generator.
    Added bulk cargo missions. Warn players when they attempt a time-sensitive cargo mission with an overly-slow ship.
    Fixed backwards reward pricing.
    Updated rush missions: Increased difficulty, mission pay is adjusted based on difficulty.
    Fixed the markers as used by rush missions.
    Fixed the completion message for standard cargo missions.
    * More claims or claim comments.
    *Made cargo missions have bi-part, randomized strings.
    
    Signed-off-by: Cypher <cypher3c@gmail.com>
    *Fixed misnamed variable in cargo.lua
    *Initial commit (re-commit) of passenger and cargo mission randomization
    
    Signed-off-by: Cypher <cypher3c@gmail.com>
    *Fixed misnamed variable in cargo.lua
    *Initial commit (re-commit) of passenger and cargo mission randomization
    
    Signed-off-by: Cypher <cypher3c@gmail.com>
    All missions should now work with the new API calls.
    * Update all the missions to use the new marker API.
    * Renamed misn.addCargo, misn.rmCargo and misn.jetCargo to misn.cargoAdd, misn.cargoRm and misn.cargoJet.
    * Renamed function playerfreeCargo() => player.cargoFree().
    
    Signed-off-by: Edgar Simo <bobbens@gmail.com>
    * Replaced all instances of misn/evt.timerStart with hook.timer
    * Replaced all instances of misn/evt.timerStop with hook.rm
    * Removed hook.time. Use hook.enter until furthur notice.
    * Make sure planets are landable for cargo missions.
    * Cargo delivery missions should always send you to a system that's accessible.
    * Enormous diff that basically points out that bobbens' punctuation sucks.
    * Increase time on rush missions.
    * Some missions properly use marker types now.
    * Should upgrade all the missions to the new API changes.
    * Cargo missions should never give same-system missions.
    * Updated missions to new API change.
    * Indent fix.
    * Spelling corrections by skwurp.
    * Put some order to the missions.
    * Aborted missions should also drop cargo.
    * Now jet cargo when cargo mission fails.
    * Fixed some messages in cargo missions.
    * Allow dvaereds to get cargo missions, but with 50% frequency.
    * More table usage for mission static stuff so it doesn't get saved.
    * Forgot to change the Trader faction.
    * Gave missions some headers with simple explanations..
    * Added faction_modPlayerRaw and the misn binding for it.
    * Step two of the lua api conversion, needs heavy testing.
    * Step one of updating lua api to use metatables.
    * Fixed typo bug.
    * Missions can now mark systems.
    fixed wording
    missions increase/lower faction, fixed bug with factions
    fixed pilgrim mission bug
    fixed the annoying as hell mission disappearing when no carge space
    misc bugfixes
    increased missions at computer and added another mission type
    big update to add another mission
    ES cargo missions are always timed now
    improved ntime_pretty and increased time to do rush delivieries
    added first mission that uses time limits
    added a couple more commodities
    cargo missions now take into account freight distance
    more tab removal, fixed up mission var stuff
    cargo missions now state system location
    unique missions are now actually unique :)
    fix typo bug
    pretend to be multilingual for easier future conversion
    removed debug print
    fixed bug
    randomized mission names a bit
    mission tracks cargo and makes sure you have it
    introduced the concept of mission cargo - not-tradeable
    improved lua api for missions by alot
    fixed bugs so that missions actually work now :)
    fixed the toolkit module in lua, fixed accept bug, segfaults :)
    fixed segfault and proper hook cleanup
    game now tries to load up the missions properly, except lua needs more bindings :)
    initial support for hooks
    first import of mission stuff
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Removed some more ableist language.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Typos and other text stuff.
    
    Fixes #1187. Also adjusted the way "levels" are handled so that
    other translation problems don't occur.
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Made "alive" bounties use a custom faction.
    
    This custom faction is enemies with civilians, traders, and Sirii,
    and allies with the Pirates, but not enemies with other police
    forces. Justification being that since the pirate is wanted alive,
    officials who can't disable the target (i.e. non-Sirius) wouldn't
    go after it.
    
    As a special exception, the Dvaered and the special faction are
    still enemies, since the Dvaered are notably absent-minded on this
    sort of thing and also don't offer alive bounties.
    Updated my info.
    gettext for pirate bounty missions.
    Fixed cases where "she" could be mixed with "him" or "his".
    
    The whole pronoun randomization thing isn't all that important, so
    I just removed it (hardcoding "he") in these instances to correct
    the error.
    Updated my copyright notices.
    Fix pronouns and a typo
    Minor dialogue changes to pirbounty_alive
    Fixed syntax error.
    Made it so you don't *always* get to collect a partial kill bounty.
    Made it possible to get paid something when boarding fails in alive bounty.
    
    Just kill the pirate at this point, and a bounty of 1/5 the original
    bounty is yours. This doesn't check whether *you* killed the pirate,
    because after all, you already went to the trouble to disable and board
    it; it's only fair that you should get this secondary bounty.
    Fix pronoun case
    Set the pronoun once instead of inside each message
    Fewer lines.
    Fixed wrong syntax.
    
    Was thinking in a Pythonic mindset. Oops!
    Added more text options to pirate bounty missions.
    Changed the fix for alive bounties.
    
    Now causes all nearby ships to clear tasks when the target ship is
    disabled... most of the time.
    Made the "alive" bounties more doable.
    
    Quite simply, I made the pirates in the "alive" bounty a different
    faction, which the pirates consider to be an ally (and so they will
    assist them), but which no one considers to be an enemy, and their
    only enemy is the player. In effect, no one gets in the way by blowing
    them up. Since non-lethal weapons are limited in power, and other
    pirates continue to be an obstacle, this doesn't seem to cause the
    mission to be overtly too easy.
    Improve the pirate bounty missions a bit
    Added copyright notices to the new bounty missions.
    Make the bounty mission levels based on the number of pirates.
    
    So, systems with few pirates will only ever have tiny bounties, and
    systems with a moderate number of pirates will never have more than
    moderate bounties.
    Fixed bounty missions not giving rewards.
    Make Alive bounties even higher.
    
    Capturing a pirate is much harder than killing them: you need to
    bring along non-lethal weapons, which leaves you more vulnerable,
    and you need to hope any local police don't kill the pirate anyway.
    Alive bounties have been raised further to compensate for this.
    Make Alive bounties cost more than Dead or Alive bounties.
    Another pirate bounty mission replacement.
    
    Actually, I replaced my previous pirate bounty mission replacement
    with two missions: the "Dead or Alive" bounty mission, and the "Alive"
    bounty mission. Both of these require a new "Mercenary License".
    
    Conflicts:
    
            dat/missions/neutral/pirbounty.lua
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Removed "stupid", "idiot", "moron" occurrences.
    
    These are also sanist terms, so I replaced them with better terms,
    like "fool" (the term with the same literal meaning in contemporary
    usage), or generalist insults like "asshole".
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for some neutral missions.
    Replace pilot.memory() and pilot.memoryCheck() with one function, taking
    advantage of the single Lua state.
    Replace uses of pilot.somemethod(p) with p:somemethod()
    Mark teenagers as "aggressive".
    
    Not sure if this is necessary, but it seems like it probably is.
    Set faction of the teenagers in Teenagers mission to "Dummy".
    
    So police forces don't start going after you for doing the mission.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    Made the in-game text gender neutral, because females can play too
    Reverted commit that doesn't belong in this branch.
    Some simple gender-neutralising changes.
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * Applied patch by arl1985 to improve the teenager mission.
    Unset visplayer/hilight on the Gawain in the teenager mission.
    Unset visplayer/hilight on the Gawain in the teenager mission.
    * Using new portraits.
    * Added generic male portrait for teenager mission.
    Use the new 'exploded' hook in the teenager mission.
    Improved the teenager mission, fixed some hook errors.
    Just repositioned some comment
    Changed flight behaviour of pilot with a timer
    
    Timer with counter prevents the famous "Satelite Dance" Could be refined, but works for now until 'goto' is fixed/imporved.
    * Fixed syntax error in teenager misssion.
    * Use non-compensating goto in a bunch of places.
    * Animal transport mission.
    * Tweaks to teenager mission.
    * Make fine positive in the dialog.
    * Auto-unboard.
    * Adjust reward, because you're going to need tracking missiles for this.
    * Correctness, fixery.
    * Initial (broken) version of teenager mission.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Typos and other text stuff.
    
    Fixes #1187. Also adjusted the way "levels" are handled so that
    other translation problems don't occur.
    Added logs for neutral one-off missions.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    More OSD fixes.
    Fixed several more instances of not using numstring.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    More gettext.
    Remove pilot.player() function, as it is a duplicate of player.pilot()
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    Reverted commit that doesn't belong in this branch.
    Some simple gender-neutralising changes.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * Drunkard hilight/invincibility fix by arl1985.
    * Check neutral missions to make sure you can land.
    drunkard mission: fix numstring() formatting
    
    commit 4fe2adb7 intended to add numstring() here,
    but actually did so a line above. This caused a
    format failure which was fixed in commit d76a040c.
    
    Signed-off-by: Nicolas Kaiser <nikai@nikai.net>
    fix format failure in drunkard mission
    
    The drunkard mission fails at my place with
    Warning: [misn_runFunc] Mission 'Drunkard' -> 'closehail': [string "dat/missions/neutral/drunkard.lua"]:167: bad argument #1 to 'pay' (number expected, got string)
    stack traceback:
            [C]: in function 'pay'
            [string "dat/missions/neutral/drunkard.lua"]:167: in function <[string "dat/missions/neutral/drunkard.lua"]:165>
    Warning: [hook_runMisn] Hook [timer] '57' -> 'closehail' failed
    
    Signed-off-by: Nicolas Kaiser <nikai@nikai.net>
    * Added a helper script to convert numbers into human readable strings.
    * New portraits by grumbel.
    Made minor edits to to Drunkard mission text, and made paragraphs.
    Drunkard Mission: Fixed slight mistake from debug of systems. Optimized slightly and made system/planet variables more consistant.
    Added mission Drinking Aristocrat, and corrected formatting in mission Drunkard
    Fixed mistake where include that was no longer needed was still present in Drunkard mission
    Added mission 'Drunkard'
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    corrected a few distances in wrong way
    Indicate nolux credits in Sightseeing if known nolux.
    
    Fixes #1027.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Modified the OSD title of Patrol and Sightseeing missions.
    
    This change removes insertion of details about the mission into the
    OSD titles of these missions, allowing multiple missions from one
    planet to be collapsed by the OSD engine into a single entry after
    the patrols / sightseeing tours are finished.
    gettext for some neutral missions.
    Allow any number of available attractions in sightseeing mission.
    
    Rather than going in the range of [2, 5] and capping it at #planets,
    the range is just [2, #planets]. This allows systems with huge numbers
    of planets to be the sites of long, expensive tours.
    Removed the faction check from the sightseeing mission.
    
    It makes no sense for tourists to insist on only visiting areas with
    their own faction's presence.
    Made the Sightseeing check for ship type more thorough.
    
    Previously, it only checked once. Now it checks every time you
    enter the system and gives special messages if you end up doing the
    opposite of what was expected.
    Moved the ship class check in the sightseeing mission.
    
    The check is now when you accept the mission, not when it is
    generated.
    Removed combat elements from the sightseeing mission.
    
    These elements were left over from the patrol mission where the
    whole point was to engage enemies of the paying faction. I don't
    think it makes sense for the sightseeing mission to do anything
    special with regard to this; hostiles (e.g. pirates) will attack
    you of their own volition, and that will of course mean you have
    to fight back so you don't die (or escape, which the patrol mission
    code doesn't necessarily allow).
    Fixed several bugs in the patrol and sightseeing missions.
    
    Most of these had no practical effect on the patrol mission, but
    showed their face in the sightseeing mission since that mission permits
    landing and leaving the system in the middle of it (the patrol mission
    fails you instantly if you do either of these things).
    * Attempt to clean up the whitespace mess in Lua a bit.
    Easter Egg for Sightseeing Mission
    
    Flying a luxury yacht (currently only the gaiwan) rewards the player 2
    - 6 times more credits, maxing out around 150,000 credits. Fits into
    the ship’s luxury theme and makes these missions more lucrative.
    
    Otherwise, captains can make about 25,000 credits at most from these
    missions.
    
    Players can learn about this easter egg through a mission tip from an
    npc in a bar.
    added a new sightseeing message
    Sightseeing mission: credits tweaked
    
    Changed rewarded credits from flat 25,000 to a number that depends on
    the number of jumps and attractions visited (with some randomness).
    Missions can be at most 2 jumps and 5 attractions, which give the
    maximum of 25,000 credits.
    Sightseeing Mission
    
    Repeatable mission. Ferry tourists to various locations and then return
    them to their original planet. Based on the patrol missions, but much
    less dangerous because the missions only go to systems with a high
    friendly presence.
    
    Give 25,000 credits and no reputation gain.
    Made the patrol mission a little aesthetically better.
    Do not give 0 credit patrol mission in system with no hostiles
    Fixed another...
    Fixed bad filter function.
    Added a generic replacement for the Dvaered Patrol mission.
    
    This patrol mission works for any faction, and is used by many
    factions (even the FLF! Seems like a reasonable mission for them).
    
    Other differences from the Dvaered patrol mission:
    
    * Can be localized (the Dvaered patrol mission has several areas
      where English text is hard-coded).
    
    * Does not require you to hover over the patrol points. As soon as
      you arrive at the point, if there are no hostiles nearby, you are
      directed toward the next point.
    
    * The way hostiles are dealt with is this: if any enemies of the
      paying faction come near you, they are marked as hostiles. As
      long as you have ships marked as hostiles in the system, the
      next point is not considered to be secure. You can either kill
      them, or drive them out; it doesn't matter. I'm not sure exactly
      how different this is from the Dvaered patrol mission, because I
      didn't look very closely at its code, but one thing I do know is
      the original Dvaered patrol mission only checked for hostiles near
      the points; this new mission checks for hostiles near *you*, at
      all times.
    
    * This mission gives you a lot more money than the Dvaered patrol
      mission, though not as much as bounty missions.
    
    * Uses system claims, rather than some weird hack that only works
      with other patrol missions. (Seriously, why do so many mission
      writers seem averse to system claims?)
    
    I didn't remove the Dvaered patrol mission yet, mainly because
    there's an expectation by some other missions for it to set some
    variables. I'll have to decide what to do about that.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Added logs for neutral one-off missions.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for oldwoman and patrol missions.
    implement mission cargo in Old Woman mission
    
    in consistency with other neutral missions, and with a guard in case
    of mission abort when no planets where found
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    moved jumpdist.lua includes to cargo_common.lua so as to save including it everywhere where cargo_common is used.
    Made the in-game text gender neutral, because females can play too
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * Check neutral missions to make sure you can land.
    * Using new portraits.
    * Added old woman mission.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Updated the mission template to include the XML header.
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs for neutral one-off missions.
    Fixed several strings and lack of gettext usage.
    Improved Shadowrun OSD.
    
    Also removed unnecessary periods from a lot of OSD text (mostly old
    stuff).
    gettext
    Replace uses of pilot.somemethod(p) with p:somemethod()
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    Typo and phrasing fixes by Sudarshan S
    * Comments.
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * Added reynir portrait.
    * %s should be %d.
    * fix "Hot dogs from space" mission, extend osd messages
    * Added some osd mission messages
    * Fixed a couple of file headers I messed up.
    * Replaced all instances of system.get() with system.cur()
    * Minor edits to Dark Shadow.
    * More claims or claim comments.
    All missions should now work with the new API calls.
    * Did some extra checks in reynir.lua and added the mission to mission.xml
    * Added new mission: Hot dogs from space
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    corrected a few distances in wrong way
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Modified the OSD title of Patrol and Sightseeing missions.
    
    This change removes insertion of details about the mission into the
    OSD titles of these missions, allowing multiple missions from one
    planet to be collapsed by the OSD engine into a single entry after
    the patrols / sightseeing tours are finished.
    Updated my info.
    Consider hidden jumps for pirate patrol mission.
    gettext for oldwoman and patrol missions.
    Updated to use \a instead of \e for printing with colours.
    Fixed several bugs in the patrol and sightseeing missions.
    
    Most of these had no practical effect on the patrol mission, but
    showed their face in the sightseeing mission since that mission permits
    landing and leaving the system in the middle of it (the patrol mission
    fails you instantly if you do either of these things).
    Updated my copyright notices.
    Made the patrol mission a little aesthetically better.
    Do not give 0 credit patrol mission in system with no hostiles
    Fixed another...
    Fixed bad filter function.
    Added a generic replacement for the Dvaered Patrol mission.
    
    This patrol mission works for any faction, and is used by many
    factions (even the FLF! Seems like a reasonable mission for them).
    
    Other differences from the Dvaered patrol mission:
    
    * Can be localized (the Dvaered patrol mission has several areas
      where English text is hard-coded).
    
    * Does not require you to hover over the patrol points. As soon as
      you arrive at the point, if there are no hostiles nearby, you are
      directed toward the next point.
    
    * The way hostiles are dealt with is this: if any enemies of the
      paying faction come near you, they are marked as hostiles. As
      long as you have ships marked as hostiles in the system, the
      next point is not considered to be secure. You can either kill
      them, or drive them out; it doesn't matter. I'm not sure exactly
      how different this is from the Dvaered patrol mission, because I
      didn't look very closely at its code, but one thing I do know is
      the original Dvaered patrol mission only checked for hostiles near
      the points; this new mission checks for hostiles near *you*, at
      all times.
    
    * This mission gives you a lot more money than the Dvaered patrol
      mission, though not as much as bounty missions.
    
    * Uses system claims, rather than some weird hack that only works
      with other patrol missions. (Seriously, why do so many mission
      writers seem averse to system claims?)
    
    I didn't remove the Dvaered patrol mission yet, mainly because
    there's an expectation by some other missions for it to set some
    variables. I'll have to decide what to do about that.
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Removed "stupid", "idiot", "moron" occurrences.
    
    These are also sanist terms, so I replaced them with better terms,
    like "fool" (the term with the same literal meaning in contemporary
    usage), or generalist insults like "asshole".
    corrected a few distances in wrong way
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Use presences to find the faction with the most presences
    
    Also makes the response stronger.
    Made it so that systems without a faction owner spawn mercenaries if you litter
    More OSD fixes.
    Only spawn pirates if in pirate systems.
    Added Waste Dump mission.
    
    This mission requires the "Garbage Person" mission to be completed.
    It shows up always at planets of every major faction. You are paid
    up-front, but there are consequences if you abort.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Removed "stupid", "idiot", "moron" occurrences.
    
    These are also sanist terms, so I replaced them with better terms,
    like "fool" (the term with the same literal meaning in contemporary
    usage), or generalist insults like "asshole".
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    Fixed up diy-nerds text
    Fixed several strings and lack of gettext usage.
    More OSD fixes.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    Fixed "STP" in diy-nerds
    Changed "STU", "STP", and "SCU" to "seconds", "periods", and "cycles".
    
    This is meant for better readability; it makes the different units
    more distinguished from each other.
    
    "STU" was replaced with "seconds" instead of "units" for two reasons:
    one, "units" is too generic (it's used for all kinds of measurements,
    not just time measurements), making it a confusing name. Two, the SCU
    is the same as a second in-universe anyway, and I don't see the
    general population abandoning that term.
    
    For the auto generation of "pretty" time text, I replaced e.g "12 STU"
    with "12s", and e.g. "8.32 STP" with "8.32p".
    
    Also fixed some language mistakes in dialogs I happened to notice,
    plus some very weird usage of the time units that probably resulted
    from a misunderstanding of how long they're supposed to be (there
    was a father concerned because his daughter disappeared several
    *seconds* ago, a food station that had a harvest every day, and a
    weekly mining trip to one planet that was talked about as if that
    wasn't frequent).
    
    Just a thought that just came to mind as I was writing this: perhaps
    it would be better to call decaperiods "daps"? Not truly necessary,
    but it would be an interesting idea because it's a name for a unit
    that kind of look like "days", while also serving as a shorthand
    for the full official name. Any thoughts?
    More gettext.
    Replace uses of pilot.somemethod(p) with p:somemethod()
    Replace obsolete outfits in Lua
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    Changed the DIY-nerds system to Basic Small Systems.
    
    This is more in line with what was being done in 0.5.3: it's not
    worth very much, but it's *something*. I don't think having a 40%
    chance of a mission literally giving you absolutely nothing is a
    good idea.
    Fixed bad grammar.
    Changed "You do it?" to "You'll do it?" in diy-nerds mission
    Word use and phrasing fixes to DIY Nerds mission. (Deliberately didn't alter Mia's dialogue much; it could just be her way of talking.)
    Replaced a huge swath of tabs with spaces in  dat/
    More minor data fixes.
    * The DIY nerds have a bit better chance at winning now.
    changed reward outfit to conform with slot updates
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * Check neutral missions to make sure you can land.
    diy-nerds: fix typos
    
    Signed-off-by: Nicolas Kaiser <nikai@nikai.net>
    * New portraits by grumbel.
    * DIY Nerds mission by thilo.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Updated pirate cargo mission text.
    Updated cargo_rush so it's more translatable.
    Fixed up the regular cargo mission to be more translatable.
    Whitespace and some unused variables
    shiplog removed from pirate and cargo missions...
    Added a remove log functionality, so that unimportant logs can be automatically removed.  Also limited the journey log to the 6 previous journeys.
    Ship log implemented and examples in some missions
    Ship log implemented and examples in some missions
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed several strings and lack of gettext usage.
    More OSD fixes.
    gettext for commodity run missions.
    More gettext.
    * Attempt to clean up the whitespace mess in Lua a bit.
    Moved piracy risk calculation to the cargo_common script
    Cargo Mission Overhaul
    
    Brief Summary:
    Cargo delivery missions now only deliver commodities offered at the
    origin planet to planets that do not sell that commodity. Jump and
    distance rewards depend on the base price of the commodity being
    delivered. Rewards are also higher for traversing pirated space.
    
    A new mission was created that asks players to deliver a commodity not
    sold on that planet. Pay is dependent on base price of the commodity
    and how much is delivered.
    Add Piracy Risk to cargo missions.
    
    Bulk cargo trading is back baby!
    
    Essentially, players can make much more credits by getting a small fast
    ship and doing cargo rush missions. There is little incentive to do
    regular cargo missions because the pay is so low since “difficulty” is
    low. Well, when you’re trying to haul a ton of cargo into pirate
    infested space, it’s not so easy. Given the small rewards, it’s usually
    not worth it do bulk cargo missions.
    
    So to fix this, I’ve upped the reward for delivering cargo to pirate
    infested space. To do this, I calculate the pirates presence along the
    systems to be travelled and take an average. Depending on the average,
    the risk is calculated as “none” (no pirates) “low” (avg presence less
    than 25) “medium” (avg presence between 25 - 75) or “high” (greater
    than 75). Players then receive a bonus for doing routes with more risk.
    
    What this does, in effect, is offer much more lucrative rewards for
    doing bulk cargo missions into pirate infested space. This gives
    players an incentive to use the large trader ships because the rewards
    are now pretty comparable with the cargo rush missions when cargo
    amount and piracy is high.
    
    Ofc, this doesn’t solve the fact that it’s easier to make credits quick
    using cargo rush missions in safe spaces rather than slower bulk cargo
    missions in dangerous territory. But, this still is an improvement for
    players who want more excitement while trading.
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    moved jumpdist.lua includes to cargo_common.lua so as to save including it everywhere where cargo_common is used.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced a huge swath of tabs with spaces in  dat/
    * Added a helper script to convert numbers into human readable strings.
    null != nil
    Cargo mission title tweaks.
    Removed that comment, since the accept strings have been changed.
    Fixed a comment, and added a new string for landing.
    * Fixed es cargo missions (patch by daniel.oconnor).
    * Improved the abort condition of the cargo missions.
    * Cargo missions weren't properly taking into account the jump distance for reward, reported by CloCkWeRX.
    * Lowered the finished mod due to the increase in payment.
    * Added minor random jitter to cargo mission payment (up to 10% following normal distribution).
    * Upped mission payments for cargo type missions a bit.
    * Comments.
    * Increased cargo reward until naev is more completed as a game.
    * Extracted common stuff from cargo.lua and cargo_rush.lua.
    * Spelling corrections.
    * Different pricing for cargo missions.
    * Cleanup.
    * Re-implemented cargo missions (standard only).
    * Replaced planet.get() usage with planet.cur().
    * Time can be saved/loaded from Lua.
    * Date hooks work and do not erase themselves.
    * Cargo missions should be fully working to an extent now (times are messed up).
    * Fixed the normal cargo mission, not sure if values make sense.
    Cargo mission passengers may give you bonus credits if you're quick. Added some more variety to the text generator.
    Added bulk cargo missions. Warn players when they attempt a time-sensitive cargo mission with an overly-slow ship.
    Fixed backwards reward pricing.
    Updated rush missions: Increased difficulty, mission pay is adjusted based on difficulty.
    Fixed the markers as used by rush missions.
    Fixed the completion message for standard cargo missions.
    * More claims or claim comments.
    *Made cargo missions have bi-part, randomized strings.
    
    Signed-off-by: Cypher <cypher3c@gmail.com>
    *Fixed misnamed variable in cargo.lua
    *Initial commit (re-commit) of passenger and cargo mission randomization
    
    Signed-off-by: Cypher <cypher3c@gmail.com>
    *Fixed misnamed variable in cargo.lua
    *Initial commit (re-commit) of passenger and cargo mission randomization
    
    Signed-off-by: Cypher <cypher3c@gmail.com>
    All missions should now work with the new API calls.
    * Update all the missions to use the new marker API.
    * Renamed misn.addCargo, misn.rmCargo and misn.jetCargo to misn.cargoAdd, misn.cargoRm and misn.cargoJet.
    * Renamed function playerfreeCargo() => player.cargoFree().
    
    Signed-off-by: Edgar Simo <bobbens@gmail.com>
    * Replaced all instances of misn/evt.timerStart with hook.timer
    * Replaced all instances of misn/evt.timerStop with hook.rm
    * Removed hook.time. Use hook.enter until furthur notice.
    * Make sure planets are landable for cargo missions.
    * Cargo delivery missions should always send you to a system that's accessible.
    * Enormous diff that basically points out that bobbens' punctuation sucks.
    * Increase time on rush missions.
    * Some missions properly use marker types now.
    * Should upgrade all the missions to the new API changes.
    * Cargo missions should never give same-system missions.
    * Updated missions to new API change.
    * Indent fix.
    * Spelling corrections by skwurp.
    * Put some order to the missions.
    * Aborted missions should also drop cargo.
    * Now jet cargo when cargo mission fails.
    * Fixed some messages in cargo missions.
    * Allow dvaereds to get cargo missions, but with 50% frequency.
    * More table usage for mission static stuff so it doesn't get saved.
    * Forgot to change the Trader faction.
    * Gave missions some headers with simple explanations..
    * Added faction_modPlayerRaw and the misn binding for it.
    * Step two of the lua api conversion, needs heavy testing.
    * Step one of updating lua api to use metatables.
    * Fixed typo bug.
    * Missions can now mark systems.
    fixed wording
    missions increase/lower faction, fixed bug with factions
    fixed pilgrim mission bug
    fixed the annoying as hell mission disappearing when no carge space
    misc bugfixes
    increased missions at computer and added another mission type
    big update to add another mission
    ES cargo missions are always timed now
    improved ntime_pretty and increased time to do rush delivieries
    added first mission that uses time limits
    added a couple more commodities
    cargo missions now take into account freight distance
    more tab removal, fixed up mission var stuff
    cargo missions now state system location
    unique missions are now actually unique :)
    fix typo bug
    pretend to be multilingual for easier future conversion
    removed debug print
    fixed bug
    randomized mission names a bit
    mission tracks cargo and makes sure you have it
    introduced the concept of mission cargo - not-tradeable
    improved lua api for missions by alot
    fixed bugs so that missions actually work now :)
    fixed the toolkit module in lua, fixed accept bug, segfaults :)
    fixed segfault and proper hook cleanup
    game now tries to load up the missions properly, except lua needs more bindings :)
    initial support for hooks
    first import of mission stuff
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added satellite mock-up accessory as reward for nebula satellite mission.
    Added logs for neutral one-off missions.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    And the modified Lua files (taking advantage of new images).
    Fixed several more instances of not using numstring.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for satellite mission.
    Replace uses of pilot.somemethod(p) with p:somemethod()
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    fixed news.lua headers, corrected date to rm article in nebu_satellite
    changed syntax for news.add(), removed old file
    removed date_to_remove
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    news.add() now accepts tables of args in a table
    added news.bind()
    Typo and phrasing fixes by Sudarshan S
    Avoid namespace collision with jump module.
    * Comments.
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * Check neutral missions to make sure you can land.
    nebu_satellite: fix typo
    
    Signed-off-by: Nicolas Kaiser <nikai@nikai.net>
    * Added a helper script to convert numbers into human readable strings.
    * add osd messages
    * Re-implemented cargo missions (standard only).
    * Replaced planet.get() usage with planet.cur().
    * Fixed a couple of file headers I messed up.
    * Replaced all instances of system.get() with system.cur()
    * Minor edits to Dark Shadow.
    * More claims or claim comments.
    All missions should now work with the new API calls.
    * Fixed nebula satellite mission.
    * Update all the missions to use the new marker API.
    * Renamed misn.addCargo, misn.rmCargo and misn.jetCargo to misn.cargoAdd, misn.cargoRm and misn.cargoJet.
    * Renamed function playerfreeCargo() => player.cargoFree().
    
    Signed-off-by: Edgar Simo <bobbens@gmail.com>
    * Should have a misn.finish() not a return.
    * Enormous diff that basically points out that bobbens' punctuation sucks.
    * Satellite mission was adding cargo in create() not accept().
    * Added portraits.
    * Almost all missions should work with the new bar system.
    * Nebulae is plural, changed it all to nebula.
    * Made savegame more robust when loading inexistant missions.
    * Should upgrade all the missions to the new API changes.
    * Updated missions to new API change.
    * Spelling corrections by skwurp.
    * Put some order to the missions.
    * New mission.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    gettext for dts missions.
    Replace uses of pilot.somemethod(p) with p:somemethod()
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Typo and phrasing fixes by Sudarshan S
    Updated a slew of former system.hasPresence() call-sites.
    modPlyerSIngle -> modPlayerSingle
    * Use modPlayerSingle, not modPlayerRaw for most cases.
    * Moved from player-based faction commands to faction-based player commands.
    * Added a helper script to convert numbers into human readable strings.
    * Missions now only affect the relevant factions. No secondary hits.
    * Re-implemented cargo missions (standard only).
    * Replaced planet.get() usage with planet.cur().
    * Replace misn.timerStart and misn.timerStop with hook functions.
    * Replace misn.timerStart and misn.timerStop with hook functions.
    * Fixed a couple of file headers I messed up.
    * Replaced all instances of system.get() with system.cur()
    * Minor edits to Dark Shadow.
    * More claims or claim comments.
    * Update all the missions to use the new marker API.
    * Move misn.takeoff() to player.takeoff() and updated usage.
    * Enormous diff that basically points out that bobbens' punctuation sucks.
    Updated second Defense mission
    
    Added function to run on abort.
    Added Comm text to appear on abort.
    Added system.hasPresence check to make sure mission only appears in otherwise safe systems.
    Made the Empire officer a Commodore instead of Captain.  Now intended to refer to Commodore Neer.
    * Tweaked the dts missions so that they start furthur away if you decline.
    New defence mission, and updates to dts.00 and msn templates
    
    There is a defence mission along the lines of the first one.
    
    Otherwise very small stuff:
    Added details to defence missions including a recall comm message.
    Split the mission templates for bar and computer missions into two.
    * Some minor tweaks and clean ups.
    New defend planet mission and mission template.
    
    Added a new mission available at any planet once player's combat rating is greater than 50.
    
    Also added a new fleet, a new faction, and a new AI to support this mission.
    
    Finally created a new mission template, similar to the old ones, but more verbose.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added a "creditstring" function to numstring.lua.
    
    This is designed to make proper use of ngettext for credits easier.
    It does the right thing for translation in combination with using
    the numstring function. I've already made use of it in a couple of
    places. I'm essentially recommending this for any time Lua code needs
    to display a certain number of credits.
    Changed wording of the Commodity Run description.
    
    This helps accommodate the fact that commodity runs can appear on
    stations (not just planets), and also helps by including a reminder
    in the mission description of what asset it's for.
    Updated the Commodity Run lists.
    Revert "Removed the Commodity Run missions."
    
    This reverts commit 074bc01842202eea7f2a4290b552baac0ea5872b.
    Removed the Commodity Run missions.
    
    These missions don't work anymore because commodities are available
    everywhere (just at different prices). There is no way to salvage
    this; it will always be possible to take advantage of jacked-up
    prices by buying a commodity at the same planet, taking off, and
    landing (this is why they don't spawn anymore, the mission itself
    prevents this by not allowing the mission in places where the
    commodity is available).
    
    This should probably be replaced by some sort of mechanism to make
    commodities specially cheap or expensive, just as an event. But for
    now, the Commodity Run mission is an unsalvagable deadweight, so
    this removes it.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed several strings and lack of gettext usage.
    Added support for Commodity Run with Thurions.
    Added a delay to the creation of commodity runs.
    
    I found that with commodity runs constantly appearing on certain
    planets, I felt compelled to keep doing commodity runs for the same
    planet over and over again. That's fine in and of itself, but the
    problem is that this is not a very fun way to play; players should
    be encouraged to explore, not just visit the same planet over and
    over again. To address this, I've added a 7 day delay
    between the acceptance, completion, or cancellation of a commodity
    run and when a new commodity run is allowed to be created. This is
    such an amount that it doesn't limit the number of commodity runs
    you can do realistically, but it keeps you waiting just long enough
    to discourage you from doing a run for the same planet over and over.
    
    Also added "po/Makefile.in.in~" to .gitignore, since when I committed
    this it added that file as well.
    Fixed a mistake in Commodity Run mission.
    
    The Commodity Run mission was printing straight numbers, which gave
    ugly and difficult to read results. Fixed; it now uses numstring in
    that instance.
    
    I also added "po/*.gmo" to .gitignore, because I noticed that a file
    called "po/ja.gmo" was about to be committed. Hopefully that's the
    right way to fix it; if not, please let me know.
    gettext for commodity run missions.
    Added versions of the commodity run mission for the FLF and Pirates.
    
    They are functionally identical, but with different texts.
    Commodity run: check entire system, not just the one planet.
    
    I changed it so that rather than refusing to continue only if the
    commodity is available on the current planet, it refuses to continue
    if the commodity is available anywhere in the system at all. This
    is to avoid situations where you can easily grind in a really boring
    way, by just flying back and forth between two planets that are
    right next to each other.
    Made a change to commodity run mission that should fix a certain bug.
    
    I'm not entirely sure, but I think the commodity stored in a variable
    caused it to be forgotten when I restarted Naev. So I changed it
    to just use the commodity's name to prevent this.
    Fixed a small typo.
    Renamed mission files that were in camelCase.
    
    Not terribly important, but it's inconsistent with everything else.
    Use numstring in commodity run mission.
    Reworked the Commodity Run mission to make it better.
    
    Notable changes are:
    
    * It is no longer considered a failure if you land on the planet
      without the commodity. Instead, nothing happens until you have
      some of the commodity in question.
    
    * Both the mission description and the OSD are substantially improved.
    
    * The way the pay is determined has been changed. Instead of being
      "the cost of the commodity times 2 plus extra if you have more",
      a price per unit is randomly generated when the mission is created.
      The price per unit can be as little as the price of the commodity or
      as much as 9 times the price of the commodity, but typically ends up
      being 2 times the price of the commodity (the variation is mostly
      determined by the result of a threesigma call). This rewards
      choosing these missions opportunistically when the return is
      especially high.
    
    * The chance of the mission appearing has beein increased from 60%
      to 90%, since the real chance is lowered by how the mission ensures
      that commodities available on the planet are not chosen.
    
    In the process, some bugs were also fixed.
    * Attempt to clean up the whitespace mess in Lua a bit.
    add newLine to end of file
    corrected notes about bonus
    Cargo Mission Overhaul
    
    Brief Summary:
    Cargo delivery missions now only deliver commodities offered at the
    origin planet to planets that do not sell that commodity. Jump and
    distance rewards depend on the base price of the commodity being
    delivered. Rewards are also higher for traversing pirated space.
    
    A new mission was created that asks players to deliver a commodity not
    sold on that planet. Pay is dependent on base price of the commodity
    and how much is delivered.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs for neutral one-off missions.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Added unique "rodent man" portrait.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    More gettext.
    use consistent NPC name in animal transport mission
    
    in consistency with Academy Hack mission 1
    fix NPC gender in animal transport mission
    
    Mission description and text refer to a male NPC:
     "(..) by the looks of him. He's got some kind of crate with him.", and
     "(..) the man greets you."
    However, the image displayed is of a Sirius female.
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    Made the in-game text gender neutral, because females can play too
    Reverted commit that doesn't belong in this branch.
    Some simple gender-neutralising changes.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * Check neutral missions to make sure you can land.
    * Using new portraits.
    * Animal transport mission.
    * Tweaks to teenager mission.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Typos and other text stuff.
    
    Fixes #1187. Also adjusted the way "levels" are handled so that
    other translation problems don't occur.
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    gettext for dts missions.
    Replace uses of pilot.somemethod(p) with p:somemethod()
    Use full paths for Lua includes
    
    This just serves to avoid unnecessary filesystem access.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Typo and phrasing fixes by Sudarshan S
    Updated a slew of former system.hasPresence() call-sites.
    modPlyerSIngle -> modPlayerSingle
    * Use modPlayerSingle, not modPlayerRaw for most cases.
    * Moved from player-based faction commands to faction-based player commands.
    * Added a helper script to convert numbers into human readable strings.
    * Missions now only affect the relevant factions. No secondary hits.
    * Re-implemented cargo missions (standard only).
    * Replaced planet.get() usage with planet.cur().
    * Someone removed the --[[ in the mission.
    * Replace misn.timerStart and misn.timerStop with hook functions.
    * Replace misn.timerStart and misn.timerStop with hook functions.
    * Fixed a couple of file headers I messed up.
    * Replaced all instances of system.get() with system.cur()
    * Minor edits to Dark Shadow.
    * More claims or claim comments.
    * Update all the missions to use the new marker API.
    * Move misn.takeoff() to player.takeoff() and updated usage.
    * Enormous diff that basically points out that bobbens' punctuation sucks.
    Add new defense mission.
    
    Adds mission to the xml file.
    Adds a third and probably final dts mission, which is a bit fancier than the previous ones.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs for foodbiz, kidnapped, and runaway
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    And the modified Lua files (taking advantage of new images).
    Fixed problems with "The Ruse"
    gettext for traffic missions.
    Make addRaw() return pilot, instead of single element table
    * Attempt to clean up the whitespace mess in Lua a bit.
    2nd mission of Kidnapped campaign
    now really the ruse, still needs to be added to  mission.xml
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Spacing
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Removed "stupid", "idiot", "moron" occurrences.
    
    These are also sanist terms, so I replaced them with better terms,
    like "fool" (the term with the same literal meaning in contemporary
    usage), or generalist insults like "asshole".
    Added logs for foodbiz, kidnapped, and runaway
    All right -> alright
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed up the use of portraits in traffic_00.
    
    Some of the dialog refers to a male pirate in the first one, so I
    made it ensure that at least one of them is male. Also changed
    "off-line" to "offline" while I was at it.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    More OSD fixes.
    Some more Kidnapped mission text fixes
    
    Just some things I missed last time.
    Fixed text in traffic_00
    Pirate Koala does not re-spawn
    Changed "STU", "STP", and "SCU" to "seconds", "periods", and "cycles".
    
    This is meant for better readability; it makes the different units
    more distinguished from each other.
    
    "STU" was replaced with "seconds" instead of "units" for two reasons:
    one, "units" is too generic (it's used for all kinds of measurements,
    not just time measurements), making it a confusing name. Two, the SCU
    is the same as a second in-universe anyway, and I don't see the
    general population abandoning that term.
    
    For the auto generation of "pretty" time text, I replaced e.g "12 STU"
    with "12s", and e.g. "8.32 STP" with "8.32p".
    
    Also fixed some language mistakes in dialogs I happened to notice,
    plus some very weird usage of the time units that probably resulted
    from a misunderstanding of how long they're supposed to be (there
    was a father concerned because his daughter disappeared several
    *seconds* ago, a food station that had a harvest every day, and a
    weekly mining trip to one planet that was talked about as if that
    wasn't frequent).
    
    Just a thought that just came to mind as I was writing this: perhaps
    it would be better to call decaperiods "daps"? Not truly necessary,
    but it would be an interesting idea because it's a name for a unit
    that kind of look like "days", while also serving as a shorthand
    for the full official name. Any thoughts?
    gettext for traffic missions.
    Replace pilot.memory() and pilot.memoryCheck() with one function, taking
    advantage of the single Lua state.
    Changed the "jumpin" hook in traffic_00 to an "enter" hook.
    
    This is so if you land on a planet, you don't have to leave and
    re-enter the system. That was silly.
    Made the Progeny "aggressive".
    
    Workaround to prevent police forces from defending the kidnappers.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    added missing comma to mission text
    Replaced a huge swath of tabs with spaces in  dat/
    Various spelling and grammar fixes.
    Fixed up the Kidnapped mission to not fail if the Koala is destroyed post-boarding, and to not damage standing with the Traders if the ship is blown up.
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * First installment of the kidnap campaign by Superkoop.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Typos and other text stuff.
    
    Fixes #1187. Also adjusted the way "levels" are handled so that
    other translation problems don't occur.
    Added logs for foodbiz, kidnapped, and runaway
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    And the modified Lua files (taking advantage of new images).
    Fixed the "foodbiz" campaign.
    gettext for foodbiz.
    Indents
    
    corrected some indents and added a few comments.
    Add food biz missions
    
    Added two new easy, unique, basic missions. Neutral missions geared
    towards early game play.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added love letter reward.
    Added logs for foodbiz, kidnapped, and runaway
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed several strings and lack of gettext usage.
    And the modified Lua files (taking advantage of new images).
    Fixed the "foodbiz" campaign.
    gettext for foodbiz.
    Indents
    
    corrected some indents and added a few comments.
    Add food biz missions
    
    Added two new easy, unique, basic missions. Neutral missions geared
    towards early game play.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Fixed a typo
    Added logs for foodbiz, kidnapped, and runaway
    More OSD fixes.
    And the modified Lua files (taking advantage of new images).
    Fix mission "The Runaway"
    
    During the mission player gets to decide how to finish the mission:
    they can release or capture Cynthia.
    Player's choice is not saved and doesn't affect the outcome of the
    mission if the game is reloaded before the mission is finished.
    
    The fix is to check the text of the OSD item in the final part of the
    mission:
    
    * Implement misn.osdGetActiveItem
    * Check active OSD item to determine mission state
    Changed "STU", "STP", and "SCU" to "seconds", "periods", and "cycles".
    
    This is meant for better readability; it makes the different units
    more distinguished from each other.
    
    "STU" was replaced with "seconds" instead of "units" for two reasons:
    one, "units" is too generic (it's used for all kinds of measurements,
    not just time measurements), making it a confusing name. Two, the SCU
    is the same as a second in-universe anyway, and I don't see the
    general population abandoning that term.
    
    For the auto generation of "pretty" time text, I replaced e.g "12 STU"
    with "12s", and e.g. "8.32 STP" with "8.32p".
    
    Also fixed some language mistakes in dialogs I happened to notice,
    plus some very weird usage of the time units that probably resulted
    from a misunderstanding of how long they're supposed to be (there
    was a father concerned because his daughter disappeared several
    *seconds* ago, a food station that had a harvest every day, and a
    weekly mining trip to one planet that was talked about as if that
    wasn't frequent).
    
    Just a thought that just came to mind as I was writing this: perhaps
    it would be better to call decaperiods "daps"? Not truly necessary,
    but it would be an interesting idea because it's a name for a unit
    that kind of look like "days", while also serving as a shorthand
    for the full official name. Any thoughts?
    gettext for runaway missions.
    fixed the second runaway mission
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    Moved runaway to neutral as it doesn't seem to be a faction mission and fixed the but causing the entire mission to happen as soon as you land on the first planet - Lua appears to be interpreted and changing variables that the next elseif depends on will potentially change the result of that elseif too - in this case the targetworld was changed to match the elseif after landing on the first world, and so it cascaded to it's conclusion! :)
    fix elseifs in runaway mission
    
    I came across this parse warning:
    
    Warning: [mission_parse] Mission Lua 'The Search for Cynthia' of mission 'dat/missions/runaway/runaway_search.lua' syntax error: [string "The Search for Cynthia"]:165: 'end' expected (to close 'if' at line 103) near '<eof>'
    * If chain should be else if to avoid clearing all conditions in a row.
    A quick fix to avoid rechecking the reassigned target_world variable on the first check, thus autoclearing all conditions in a row. :/
    - BSoD
    modified:   dat/missions/runaway/runaway_search.lua
     On branch master
     Changes to be committed:
       (use "git reset HEAD <file>..." to unstage)
    
            modified:   dat/events/neutral/derelict.lua
            modified:   dat/events/neutral/news.lua
            modified:   dat/mission.xml
            modified:   dat/missions/empire/waste_dump.lua
            modified:   dat/missions/runaway/runaway_cynthia.lua
            modified:   dat/missions/runaway/runaway_search.lua
    Replaced a huge swath of tabs with spaces in  dat/
    Fixed whitespace to conform to standard
    Fixed having no cargo in The Search for Cynthia
    Whitespace, general clean-up of the Runaway missions.
    Added comments to the mission.
    Completed "The Search for Cynthia"
    Added "The Search for Cynthia"
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs for foodbiz, kidnapped, and runaway
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    And the modified Lua files (taking advantage of new images).
    Fixed several more instances of not using numstring.
    Fixed some missions not using numstring
    gettext for runaway missions.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    Fixed double-accept in The Runaway.
    Moved runaway to neutral as it doesn't seem to be a faction mission and fixed the but causing the entire mission to happen as soon as you land on the first planet - Lua appears to be interpreted and changing variables that the next elseif depends on will potentially change the result of that elseif too - in this case the targetworld was changed to match the elseif after landing on the first world, and so it cascaded to it's conclusion! :)
    * Use the same system variable as the rest of the mission for setting the marker.
    This could be a fix or not. I'm totally not sure. I just found it odd why the 'Runaway' mission would have a requirement of being able to claim the Goddard system, as i do not see any possible interference atm and thus an uncalled for claim request, but i could totally misinterpret what system.claim() does, so it's your call.
    - BSoD
     On branch master
     Changes to be committed:
       (use "git reset HEAD <file>..." to unstage)
    
            modified:   dat/events/neutral/derelict.lua
            modified:   dat/events/neutral/news.lua
            modified:   dat/mission.xml
            modified:   dat/missions/empire/waste_dump.lua
            modified:   dat/missions/runaway/runaway_cynthia.lua
            modified:   dat/missions/runaway/runaway_search.lua
    Whitespace, general clean-up of the Runaway missions.
    Changed the location of runaway.lua
    Restored the Baron mission to it's original form.
    Added comments
    Cleaned up the dialogue
    Finished the runaway mission
    Renamed ruse.lua to runaway.lua and adjusted the Baron
    Added logs for the FLF and Dvaered campaigns.
    Repurposed flf_pirates, added dvk05 (repurposed empa06).
    
    Originally I was going to have a pirate fallout, but I decided to
    instead just have some pirates attacking FLF ships for no real
    reason (they're pirates, after all). The new filler mission,
    "Alliance of Inconvenience", now unlocks the slightly altered
    "Pirate Disturbance" mission, which is common, but not as common as
    the others. It has a particular disadvantage compared to the others
    in that it cannot give you reputation for the Pirate faction (makes
    sense), but it does pay you and raise FLF reputation.
    Added an "Empire Patrol" mission for when the FLF and Empire are enemies.
    Fixed the method for choosing a system for the new mission.
    Added the next FLF mission: "A Common Enemy"
    
    This is the next mission in the FLF-Empire campaign. Due to some
    pirate activity, the leaders of the FLF manage to steer most of the
    FLF toward focusing on piracy in the Frontier, and in the process,
    distract them from the fact that missions against the Dvaered are
    no longer being offered. However, some foreshadowing indicates that
    not everyone is convinced.
    
    This mission does the following:
    
    1. Makes the Pirates officially enemies of the FLF.
    
    2. Unlocks more missions where you take out pirates in Frontier space.
       These missions give a reputation boost with the Dvaereds if you're
       near Dvaered systems, so completing them is what is needed to win
       them over.
    
    3. Prevents any anti-Dvaered missions from being offered by the mission
       computer any more.
    
    Next up will be the FLF-Dvaered ceasefire.
    Added the next FLF Empire alliance campaign mission.
    
    This is where the campaign goes sour. Tense feelings from a minority
    of FLF pilots causes some of them to go rogue and attempt to initiate
    a coup. The player is then tasked with stopping this coup. Of course,
    this is just the beginning.
    
    This mission also unlocks missions similar to the Dvaered patrol
    missions, but targeting rogue FLF pilots instead. Unlike the Dvaered
    patrol missions, these missions do not give you a reputation boost,
    only money, and completion is met with coldness.
    Updated my copyright notices.
    Small correction.
    Added a common FLF function for changing the rep cap.
    Added "diversion" mission.
    
    This new mission for the FLF has the player fighting against lots
    of Dvaered ships, not to win, but to distract the Dvaered forces
    from a primary operation going on somewhere else.
    Fixed method.
    Replaced use of the "static" tag with a "static" standing script.
    
    The reason is using the "static" tag now guarantees standing to always
    be represented as "???", as this text is now defined in Lua.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Typo
    Added logs for the FLF and Dvaered campaigns.
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    All right -> alright
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed several instances of assuming that planet.faction always returns a faction.
    
    The function actually returns nil if the planet has no faction (i.e. Eirok),
    so code that relied on this broke whenever the player landed on such a
    planet. I've done a grep for these and I think I've fixed every one,
    preventing Lua errors in the News and NPC events most notably but also
    preventing possible (albeit unlikely) mission errors.
    Removed gendered language in flf_pre01
    Fixed more player gender references, plus some minor fixes.
    
    I systematically searched through with grep -rP "\b[Hh]e\b",
    grep -rP "\b[Hh]im\b", grep -rP "\b[Mm]r\b", and grep -rP "\b[Ss]ir\b".
    The first two returned a very large number of results (most referring
    to NPCs), so it's possible I missed some, but I did look through the
    list pretty thoroughly and think I weeded out all the references to
    the player's gender. In total I found two of them in actual game
    dialog (I also fixed it in some mission script comments and fixed
    indentation in one mission).
    
    Did this because of the mention by @BTAxis in #842 of "Mr." still being
    left in flf_pre01. That was one of the fixes.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    gettext for flf missions.
    * Do not pop the location of the FLF base from the variable stack, ever.
    Made the paragraph separation style consistent.
    
    I didn't get any answer about it, so I've chosen to separate
    paragraphs by indentation of 4 spaces, but not indent the first
    paragraph.
    
    Some missions have been neglected:
    - The waste dump mission (empire/waste_dump.lua), because I think
      this mission should be discarded entirely later. It's a bad idea
      because it depends on a weird hack.
    - Any missions that don't exist in my fork, namely the Empire Pirate
      Bounty mission.
    - The FLF pre02 mission, because I have rewritten that mission in my
      fork.
    - The FLF base defense mission, because it's a broken mess that I
      think should be removed entirely and replaced with something else,
      or at least substantially rewritten. If it's not completely
      removed, the paragraph separation can be fixed when all the other
      problems with it are fixed.
    
    Any other neglected missions were neglected by mistake. I don't think
    I missed any, though.
    
    Conflicts:
    
            dat/missions/neutral/crimelord.lua
            dat/missions/neutral/spacefamily.lua
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Consistent capitalisation of Station in names, and a few other minor fixes.
    * FLF pilots now fly toward the player before heading to the first waypoint.
    * Time before out-of-range check kicks in is now 10 seconds.
    Updated missions and scripts to use jump.pos() instead of system.jumpPos()
    * Safety measures to prevent stuckery on the first FLF mission.
    modPlyerSIngle -> modPlayerSingle
    * Use modPlayerSingle, not modPlayerRaw for most cases.
    Add raw ships in the Dvaered/FLF missions instead of using predefined fleets.
    * Progress on combat tutorial.
    * Renamed "nojump" ais to "norun", for consistency.
    * Reworked Dvaered/FLF missions to work with big big systems and several new features.
    * dv_antiflf03 is still broken.
    * System claims (or no-claim comments) for several missions.
    * Update all the missions to use the new marker API.
    * Renamed misn.addCargo, misn.rmCargo and misn.jetCargo to misn.cargoAdd, misn.cargoRm and misn.cargoJet.
    * Replaced all instances of misn/evt.timerStart with hook.timer
    * Replaced all instances of misn/evt.timerStop with hook.rm
    * Updated more missions to use the new pilot.add API.
    * Fix bug where base wouldn't appear (I hope).
    * Random fixes.
    * Escort pilots should now take up positions around the base.
    * Simplified the mission to prevent inconsistencies.
    * OOR conditionals are now based on the nearest escort, not a fixed one.
    * THIS should fix the error.
    * My fix was bad, reverted.
    * Fixed bug in first FLF mission.
    * Finished the base attack mission.
    * Tweakage!
    * Removed a lot of hacks in favor of the new manual ship control API.
    * Actually added the mission files I've been working on.
    * Removed invisible ship.
    * Added another torpedo weapon (same gfx as Casear IV).
    * Work on base attack mission.
    * Tweakage, tweakage, oh how I love you tweakage.
    * Guard against fringe cases.
    * Use system.cur() and planet.cur().
    * Second FLF mission basically done
    * The usual tweakage
    * WIP commit
    * Finished the second mission in the Dvaered route
    * Added graphics for base and waypoint ships
    * Tweakage
    * Tweakage
    * Second Dvaered route mission WIP commit
    * First mission in the Dvaered route of the flfbase mini-campaign finished.
    * First mission in the FLF route is now complete.
    * WIP commit for FLF intro campaign
    * WIP commit for FLF intro mission
    * WIP on the FLF mission.
    * Use different angles for the waypoints
    * Some initial work towards the FLF intro campaign.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Rename Octogon of Valor to Pentagram of Valor so we can use same graphics as Star of Valor \o/
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Octogon of Valor!
    Changed the flf_pre02 Dvaered "ceiling" to -20 (instead of -1).
    
    Makes it more difficult / expensive for a player to teeter on the
    line between pro-Dvaered and pro-FLF. It's still possible until after
    dvk01, but more discouraged.
    Added logs for the FLF and Dvaered campaigns.
    Another typo
    Typo
    "common man" -> "common pilot"
    Changed rep gains for the FLF campaign.
    
    Made rep boosts smaller so the player has to do more of the minor
    missions (more in-line with how the main factions operate).
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed several instances of assuming that planet.faction always returns a faction.
    
    The function actually returns nil if the planet has no faction (i.e. Eirok),
    so code that relied on this broke whenever the player landed on such a
    planet. I've done a grep for these and I think I've fixed every one,
    preventing Lua errors in the News and NPC events most notably but also
    preventing possible (albeit unlikely) mission errors.
    Added Diversion from Haleb mission.
    gettext for flf missions.
    * Do not pop the location of the FLF base from the variable stack, ever.
    Added a common FLF function for changing the rep cap.
    Added the new FLF missions to mission.xml, made some tweaks.
    Added first mission in the anti-Dvaered campaign.
    
    In principle, this one is very much like flf_pre02: it pretty much
    just opens up the possibility to do new missions. Story-wise, this
    is where the FLF sets up bombs or some kind of other trap in
    Raelid Outpost to assist in its destruction or takeover later.
    Added "diversion" mission.
    
    This new mission for the FLF has the player fighting against lots
    of Dvaered ships, not to win, but to distract the Dvaered forces
    from a primary operation going on somewhere else.
    Reduced pre02's cap increase.
    Changed the FLF's caps.
    
    This starts the FLF off with a very low mission cap (to reflect
    the FLF's distrust of outsiders indicated by flf_pre01 and flf_pre02),
    and then increases it upon completion of pre02.
    Added more uses of faction.setPlayerStanding.
    Removed dv_patrol, and flf_pre02's dependence on it.
    
    Conflicts:
            dat/missions/dvaered/dv_patrol.lua
    More fixes
    Various minor improvements to patrol missions.
    Fixed a typo.
    Fixed outdated information in flf_pre02 description.
    Fixed flf_pre02 not naming the system.
    Update several missions for variable fuel consumption
    Removed collection of copyright notices from flf_pre02.
    Marked FLF pre02 as GPLv3.
    
    I just realized that all of the Lua scripts link to the Naev API,
    which is under the GPLv3, so all of them must at least be under that
    license. I've marked flf_pre02 as such (inserting copyright notices
    based on the Git repo's commit history).
    Changed the system you go to when betraying the FLF in pre02.
    
    The station you were previously sent to is not one you're allowed
    to access without really good standing with the Dvaereds, which is
    absurd for this circumstance (where you have to have killed at least
    two Dvaered ships). It's been replaced with one that any non-enemy
    can land on, Raelid Outpost.
    Changed paragraph separation in pre02 to indentation.
    Fixed a mistake with flf pre02 and patrol missions.
    Fixed a mistake.
    Set whether or not your fleet arrives late at the beginning.
    
    Also, your fleet also spawns from the same system as you if they're
    on time. Nonsensical, but it works better than them spawning from a
    random place.
    Added FLF patrol elimination mission.
    
    This mission is unlocked by pre02, and it's basically the same thing;
    the difference is patrol sizes can vary.
    Replaced FLF intro mission.
    
    The old FLF "pre02" mission is something I'm not fond of. The length
    of the mission is ridiculous, you realistically have to land on
    Dvaered planets to refuel, and it's ridiculously hard. I also don't
    much like the arbitrary restriction on ship choices.
    
    The new mission instead is taking out *one* patrol, ostensibly of
    three ships and by yourself, but Dvaered reinforcements arrive.
    Shortly after, an event happens:
    
    If you have done missions for the Dvaered before, the leader of the
    reinforcements hails you, asking you to defect to them. If you
    accept, your score with the Dvaered is made to be no less than 0,
    and you are told to go to a certain planet. A few seconds later, a
    large group of FLF pilots appears and attacks you. If you refuse,
    the same large group of FLF pilots appears and helps you.
    
    If you have not done missions for the Dvaered before, a large group
    of FLF pilots appears and helps you.
    
    This new mission actually favors small, fast ships over large ships;
    the reinforcements are so powerful that it is usually impossible to
    beat them on your own, regardless of the size of your ship. You
    have to depend on the help that comes from the FLF fighters.
    
    I am going to recycle the mission you are told this is as a generic
    mission for the FLF from the mission computer, accessible only after
    this mission is beaten.
    
    Conflicts:
    
            dat/events/neutral/npc.lua
            dat/missions/empire/emp_pirbounty.lua
    * Fixed invalid outfit.
    Made the in-game text gender neutral, because females can play too
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    One minor punctuation fix.
    Consistent capitalisation of Station in names, and a few other minor fixes.
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    fix typos in flf mission pre02
    
    And add bombers to the mission description.
    
    Signed-off-by: Nicolas Kaiser <nikai@nikai.net>
    modPlyerSIngle -> modPlayerSingle
    * Use modPlayerSingle, not modPlayerRaw for most cases.
    Have the FLF wingmen refuel the player if necessary.
    Reworked the second FLF prelude mission, improved functionality, made somewhat easier.
    Add raw ships in the Dvaered/FLF missions instead of using predefined fleets.
    * Progress on combat tutorial.
    * Renamed "nojump" ais to "norun", for consistency.
    * Reworked Dvaered/FLF missions to work with big big systems and several new features.
    * dv_antiflf03 is still broken.
    * System claims (or no-claim comments) for several missions.
    * Renamed getHealth and getEnergy as health and energy respectively.
    * Added pilot conditionals (read-only).
    * Renamed getHealth and getEnergy as health and energy respectively.
    * Added pilot conditionals (read-only).
    * Update all the missions to use the new marker API.
    * Replaced all instances of misn/evt.timerStart with hook.timer
    * Replaced all instances of misn/evt.timerStop with hook.rm
    Fixed the remaining male pronouns for Cpl. Benito.
    * Cpl. Benito is a female, updated pronouns.
    * Missed closing ).
    * Updated more missions to use the new pilot.add API.
    * Move common code into function.
    * Removed TODOs (they're done), added sanity check.
    * Hopefully fixed a bug in the second FLF mission where betraying the FLF would break the mission.
    * New portraits by grumbel.
    * Renamed Independent Vendetta Quartet to Vendetta Quartet, because it's not meant to be an Independent generic fleet.
    * Fixed typo which prevented betrayal of flf rats.
    * Shorten reward text to fit in the tiny GUI space.
    * Better reward for flf2.
    * Fixed multiple betrayal broadcast in flf2.
    * Fixed unformatter broadcast string bug in flf2.
    * Fixed two typos in flf mission 2.
    * Fixed null value warning.
    
    If you aren't doing the dvaered mission, this value hasn't been pushed yet, so it will return null, and then complain about comparing null to a number.
    * Added a "reward" description for flf 2.
    * Use the hailing API.
    * Wingmen SHOULD not get disabled anymore.
    * Removed a lot of hacks in favor of the new manual ship control API.
    * Actually added the mission files I've been working on.
    * Removed invisible ship.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added a "creditstring" function to numstring.lua.
    
    This is designed to make proper use of ngettext for credits easier.
    It does the right thing for translation in combination with using
    the numstring function. I've already made use of it in a couple of
    places. I'm essentially recommending this for any time Lua code needs
    to display a certain number of credits.
    Changed wording of the Commodity Run description.
    
    This helps accommodate the fact that commodity runs can appear on
    stations (not just planets), and also helps by including a reminder
    in the mission description of what asset it's for.
    Updated the Commodity Run lists.
    Revert "Removed the Commodity Run missions."
    
    This reverts commit 074bc01842202eea7f2a4290b552baac0ea5872b.
    Removed the Commodity Run missions.
    
    These missions don't work anymore because commodities are available
    everywhere (just at different prices). There is no way to salvage
    this; it will always be possible to take advantage of jacked-up
    prices by buying a commodity at the same planet, taking off, and
    landing (this is why they don't spawn anymore, the mission itself
    prevents this by not allowing the mission in places where the
    commodity is available).
    
    This should probably be replaced by some sort of mechanism to make
    commodities specially cheap or expensive, just as an event. But for
    now, the Commodity Run mission is an unsalvagable deadweight, so
    this removes it.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed several strings and lack of gettext usage.
    gettext for commodity run missions.
    Added versions of the commodity run mission for the FLF and Pirates.
    
    They are functionally identical, but with different texts.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Fixed ngettext in flf_empatrol.
    Typos and other text stuff.
    
    Fixes #1187. Also adjusted the way "levels" are handled so that
    other translation problems don't occur.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Updated my info.
    Renamed "Dvaered Patrol" OSD to "FLF Patrol".
    
    Keeps the names consistent without calling the Empire ones "Dvaered
    Patrols".
    Added an "Empire Patrol" mission for when the FLF and Empire are enemies.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added a "creditstring" function to numstring.lua.
    
    This is designed to make proper use of ngettext for credits easier.
    It does the right thing for translation in combination with using
    the numstring function. I've already made use of it in a couple of
    places. I'm essentially recommending this for any time Lua code needs
    to display a certain number of credits.
    Whoops
    
    Forgot to save.
    Fixed ngettext in flf_empatrol.
    Typos and other text stuff.
    
    Fixes #1187. Also adjusted the way "levels" are handled so that
    other translation problems don't occur.
    adaptations and corrections in lua scripts and nlua doc
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Updated my info.
    Renamed "Dvaered Patrol" OSD to "FLF Patrol".
    
    Keeps the names consistent without calling the Empire ones "Dvaered
    Patrols".
    Fixed several instances of assuming that planet.faction always returns a faction.
    
    The function actually returns nil if the planet has no faction (i.e. Eirok),
    so code that relied on this broke whenever the player landed on such a
    planet. I've done a grep for these and I think I've fixed every one,
    preventing Lua errors in the News and NPC events most notably but also
    preventing possible (albeit unlikely) mission errors.
    Added an "Empire Patrol" mission for when the FLF and Empire are enemies.
    gettext for flf missions.
    Fixed some things with the FLF missions.
    
    Some difficulty adjustments for the Pirates mission, and
    a fix for when the player takes off from a planet into the system.
    Updated my copyright notices.
    Added first mission in the anti-Dvaered campaign.
    
    In principle, this one is very much like flf_pre02: it pretty much
    just opens up the possibility to do new missions. Story-wise, this
    is where the FLF sets up bombs or some kind of other trap in
    Raelid Outpost to assist in its destruction or takeover later.
    Added "diversion" mission.
    
    This new mission for the FLF has the player fighting against lots
    of Dvaered ships, not to win, but to distract the Dvaered forces
    from a primary operation going on somewhere else.
    Made the FLF patrol elimination find eligible systems automatically.
    Removed the FLF "base defense" mission.
    
    This just isn't a good mission for the player to be on the recieving
    end of. It's extremely grim. I would like to create a campaign for
    the FLF that causes the FLF to advance, not merely to maintain the
    status quo.
    Various minor improvements to patrol missions.
    Changed FLF patrol mission license to Apache License.
    Added a copyright notice to the mission script I wrote.
    Change the FLF wingmen's AI rather than making them blindly run.
    Fixed a mistake with flf pre02 and patrol missions.
    Set whether or not your fleet arrives late at the beginning.
    
    Also, your fleet also spawns from the same system as you if they're
    on time. Nonsensical, but it works better than them spawning from a
    random place.
    Fixed a mistake in FLF patrol mission
    Some tweaks to the FLF patrol mission.
    Fixed a bug in the FLF patrol mission.
    Added FLF patrol elimination mission.
    
    This mission is unlocked by pre02, and it's basically the same thing;
    the difference is patrol sizes can vary.
    Replaced FLF intro mission.
    
    The old FLF "pre02" mission is something I'm not fond of. The length
    of the mission is ridiculous, you realistically have to land on
    Dvaered planets to refuel, and it's ridiculously hard. I also don't
    much like the arbitrary restriction on ship choices.
    
    The new mission instead is taking out *one* patrol, ostensibly of
    three ships and by yourself, but Dvaered reinforcements arrive.
    Shortly after, an event happens:
    
    If you have done missions for the Dvaered before, the leader of the
    reinforcements hails you, asking you to defect to them. If you
    accept, your score with the Dvaered is made to be no less than 0,
    and you are told to go to a certain planet. A few seconds later, a
    large group of FLF pilots appears and attacks you. If you refuse,
    the same large group of FLF pilots appears and helps you.
    
    If you have not done missions for the Dvaered before, a large group
    of FLF pilots appears and helps you.
    
    This new mission actually favors small, fast ships over large ships;
    the reinforcements are so powerful that it is usually impossible to
    beat them on your own, regardless of the size of your ship. You
    have to depend on the help that comes from the FLF fighters.
    
    I am going to recycle the mission you are told this is as a generic
    mission for the FLF from the mission computer, accessible only after
    this mission is beaten.
    
    Conflicts:
    
            dat/events/neutral/npc.lua
            dat/missions/empire/emp_pirbounty.lua
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Grammar
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added a "creditstring" function to numstring.lua.
    
    This is designed to make proper use of ngettext for credits easier.
    It does the right thing for translation in combination with using
    the numstring function. I've already made use of it in a couple of
    places. I'm essentially recommending this for any time Lua code needs
    to display a certain number of credits.
    bugfix in flf_dvk05
    Fixed broken ngettext calls (missing "gettext.")
    Fixed ngettext in flf_empatrol.
    Typos and other text stuff.
    
    Fixes #1187. Also adjusted the way "levels" are handled so that
    other translation problems don't occur.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed several instances of assuming that planet.faction always returns a faction.
    
    The function actually returns nil if the planet has no faction (i.e. Eirok),
    so code that relied on this broke whenever the player landed on such a
    planet. I've done a grep for these and I think I've fixed every one,
    preventing Lua errors in the News and NPC events most notably but also
    preventing possible (albeit unlikely) mission errors.
    Added "The FLF Split" mission and FLF Rogue mission.
    Repurposed flf_pirates, added dvk05 (repurposed empa06).
    
    Originally I was going to have a pirate fallout, but I decided to
    instead just have some pirates attacking FLF ships for no real
    reason (they're pirates, after all). The new filler mission,
    "Alliance of Inconvenience", now unlocks the slightly altered
    "Pirate Disturbance" mission, which is common, but not as common as
    the others. It has a particular disadvantage compared to the others
    in that it cannot give you reputation for the Pirate faction (makes
    sense), but it does pay you and raise FLF reputation.
    Finished stage 1 of flf_dvk02.
    
    The player discovers a small group of pirate ships, but they just
    won't budge. So the player has to show them who's boss. When they
    do, they are given a map, and a quest...
    gettext for flf missions.
    Some stuff I forgot to commit before
    Fixed wrong boss for "dangerous" pirate missions.
    
    This was supposed to be a *Phalanx*, but I mistakenly assigned it
    as an Ancestor! Fixed.
    Fixed some things with the FLF missions.
    
    Some difficulty adjustments for the Pirates mission, and
    a fix for when the player takes off from a planet into the system.
    Added the next FLF mission: "A Common Enemy"
    
    This is the next mission in the FLF-Empire campaign. Due to some
    pirate activity, the leaders of the FLF manage to steer most of the
    FLF toward focusing on piracy in the Frontier, and in the process,
    distract them from the fact that missions against the Dvaered are
    no longer being offered. However, some foreshadowing indicates that
    not everyone is convinced.
    
    This mission does the following:
    
    1. Makes the Pirates officially enemies of the FLF.
    
    2. Unlocks more missions where you take out pirates in Frontier space.
       These missions give a reputation boost with the Dvaereds if you're
       near Dvaered systems, so completing them is what is needed to win
       them over.
    
    3. Prevents any anti-Dvaered missions from being offered by the mission
       computer any more.
    
    Next up will be the FLF-Dvaered ceasefire.
    Updated my copyright notices.
    Added first mission in the anti-Dvaered campaign.
    
    In principle, this one is very much like flf_pre02: it pretty much
    just opens up the possibility to do new missions. Story-wise, this
    is where the FLF sets up bombs or some kind of other trap in
    Raelid Outpost to assist in its destruction or takeover later.
    Added "diversion" mission.
    
    This new mission for the FLF has the player fighting against lots
    of Dvaered ships, not to win, but to distract the Dvaered forces
    from a primary operation going on somewhere else.
    Made the FLF patrol elimination find eligible systems automatically.
    Removed the FLF "base defense" mission.
    
    This just isn't a good mission for the player to be on the recieving
    end of. It's extremely grim. I would like to create a campaign for
    the FLF that causes the FLF to advance, not merely to maintain the
    status quo.
    Various minor improvements to patrol missions.
    Changed FLF patrol mission license to Apache License.
    Added a copyright notice to the mission script I wrote.
    Change the FLF wingmen's AI rather than making them blindly run.
    Fixed a mistake with flf pre02 and patrol missions.
    Set whether or not your fleet arrives late at the beginning.
    
    Also, your fleet also spawns from the same system as you if they're
    on time. Nonsensical, but it works better than them spawning from a
    random place.
    Fixed a mistake in FLF patrol mission
    Some tweaks to the FLF patrol mission.
    Fixed a bug in the FLF patrol mission.
    Added FLF patrol elimination mission.
    
    This mission is unlocked by pre02, and it's basically the same thing;
    the difference is patrol sizes can vary.
    Replaced FLF intro mission.
    
    The old FLF "pre02" mission is something I'm not fond of. The length
    of the mission is ridiculous, you realistically have to land on
    Dvaered planets to refuel, and it's ridiculously hard. I also don't
    much like the arbitrary restriction on ship choices.
    
    The new mission instead is taking out *one* patrol, ostensibly of
    three ships and by yourself, but Dvaered reinforcements arrive.
    Shortly after, an event happens:
    
    If you have done missions for the Dvaered before, the leader of the
    reinforcements hails you, asking you to defect to them. If you
    accept, your score with the Dvaered is made to be no less than 0,
    and you are told to go to a certain planet. A few seconds later, a
    large group of FLF pilots appears and attacks you. If you refuse,
    the same large group of FLF pilots appears and helps you.
    
    If you have not done missions for the Dvaered before, a large group
    of FLF pilots appears and helps you.
    
    This new mission actually favors small, fast ships over large ships;
    the reinforcements are so powerful that it is usually impossible to
    beat them on your own, regardless of the size of your ship. You
    have to depend on the help that comes from the FLF fighters.
    
    I am going to recycle the mission you are told this is as a generic
    mission for the FLF from the mission computer, accessible only after
    this mission is beaten.
    
    Conflicts:
    
            dat/events/neutral/npc.lua
            dat/missions/empire/emp_pirbounty.lua
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    adaptations and corrections in lua scripts and nlua doc
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Updated my info.
    Fixed several instances of assuming that planet.faction always returns a faction.
    
    The function actually returns nil if the planet has no faction (i.e. Eirok),
    so code that relied on this broke whenever the player landed on such a
    planet. I've done a grep for these and I think I've fixed every one,
    preventing Lua errors in the News and NPC events most notably but also
    preventing possible (albeit unlikely) mission errors.
    Made the FLF diversion mission more bearable.
    
    Two things:
    
    1. Added messages that show when you're making progress.
    2. Increased the chance of inciting Dvaered ships to spawn (so it happens faster).
    gettext for flf missions.
    Updated my copyright notices.
    More work on flf_empa01.
    Some final fixes and tweaks to the diversion and dvk01 missions.
    
    Finally! It works. There seem to be no remaining problems.
    More tweaks and fixes to the diversion mission.
    
    I think I've finally got it working the way I wanted it to.
    Made some fixes and adjustments to the diversion mission.
    Fixed all the remaining problems with the diversion mission, I think.
    Fixed a bunch of problems...
    
    But not all of them.
    Added first mission in the anti-Dvaered campaign.
    
    In principle, this one is very much like flf_pre02: it pretty much
    just opens up the possibility to do new missions. Story-wise, this
    is where the FLF sets up bombs or some kind of other trap in
    Raelid Outpost to assist in its destruction or takeover later.
    Added "diversion" mission.
    
    This new mission for the FLF has the player fighting against lots
    of Dvaered ships, not to win, but to distract the Dvaered forces
    from a primary operation going on somewhere else.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    adaptations and corrections in lua scripts and nlua doc
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed several instances of assuming that planet.faction always returns a faction.
    
    The function actually returns nil if the planet has no faction (i.e. Eirok),
    so code that relied on this broke whenever the player landed on such a
    planet. I've done a grep for these and I think I've fixed every one,
    preventing Lua errors in the News and NPC events most notably but also
    preventing possible (albeit unlikely) mission errors.
    Silenced rogue FLF ships.
    Added "The FLF Split" mission and FLF Rogue mission.
    gettext for flf missions.
    Fixed some things with the FLF missions.
    
    Some difficulty adjustments for the Pirates mission, and
    a fix for when the player takes off from a planet into the system.
    Added the next empa mission.
    
    This is just a simple meeting. It brings the Empire up-to-date on
    the rogue FLF situation, and thus causes rogue FLF missions to
    bump your reputation with the Empire.
    Added the next FLF Empire alliance campaign mission.
    
    This is where the campaign goes sour. Tense feelings from a minority
    of FLF pilots causes some of them to go rogue and attempt to initiate
    a coup. The player is then tasked with stopping this coup. Of course,
    this is just the beginning.
    
    This mission also unlocks missions similar to the Dvaered patrol
    missions, but targeting rogue FLF pilots instead. Unlike the Dvaered
    patrol missions, these missions do not give you a reputation boost,
    only money, and completion is met with coldness.
    Updated my copyright notices.
    Added first mission in the anti-Dvaered campaign.
    
    In principle, this one is very much like flf_pre02: it pretty much
    just opens up the possibility to do new missions. Story-wise, this
    is where the FLF sets up bombs or some kind of other trap in
    Raelid Outpost to assist in its destruction or takeover later.
    Added "diversion" mission.
    
    This new mission for the FLF has the player fighting against lots
    of Dvaered ships, not to win, but to distract the Dvaered forces
    from a primary operation going on somewhere else.
    Made the FLF patrol elimination find eligible systems automatically.
    Removed the FLF "base defense" mission.
    
    This just isn't a good mission for the player to be on the recieving
    end of. It's extremely grim. I would like to create a campaign for
    the FLF that causes the FLF to advance, not merely to maintain the
    status quo.
    Various minor improvements to patrol missions.
    Changed FLF patrol mission license to Apache License.
    Added a copyright notice to the mission script I wrote.
    Change the FLF wingmen's AI rather than making them blindly run.
    Fixed a mistake with flf pre02 and patrol missions.
    Set whether or not your fleet arrives late at the beginning.
    
    Also, your fleet also spawns from the same system as you if they're
    on time. Nonsensical, but it works better than them spawning from a
    random place.
    Fixed a mistake in FLF patrol mission
    Some tweaks to the FLF patrol mission.
    Fixed a bug in the FLF patrol mission.
    Added FLF patrol elimination mission.
    
    This mission is unlocked by pre02, and it's basically the same thing;
    the difference is patrol sizes can vary.
    Replaced FLF intro mission.
    
    The old FLF "pre02" mission is something I'm not fond of. The length
    of the mission is ridiculous, you realistically have to land on
    Dvaered planets to refuel, and it's ridiculously hard. I also don't
    much like the arbitrary restriction on ship choices.
    
    The new mission instead is taking out *one* patrol, ostensibly of
    three ships and by yourself, but Dvaered reinforcements arrive.
    Shortly after, an event happens:
    
    If you have done missions for the Dvaered before, the leader of the
    reinforcements hails you, asking you to defect to them. If you
    accept, your score with the Dvaered is made to be no less than 0,
    and you are told to go to a certain planet. A few seconds later, a
    large group of FLF pilots appears and attacks you. If you refuse,
    the same large group of FLF pilots appears and helps you.
    
    If you have not done missions for the Dvaered before, a large group
    of FLF pilots appears and helps you.
    
    This new mission actually favors small, fast ships over large ships;
    the reinforcements are so powerful that it is usually impossible to
    beat them on your own, regardless of the size of your ship. You
    have to depend on the help that comes from the FLF fighters.
    
    I am going to recycle the mission you are told this is as a generic
    mission for the FLF from the mission computer, accessible only after
    this mission is beaten.
    
    Conflicts:
    
            dat/events/neutral/npc.lua
            dat/missions/empire/emp_pirbounty.lua
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Typos and other text stuff.
    
    Fixes #1187. Also adjusted the way "levels" are handled so that
    other translation problems don't occur.
    Added logs for the FLF and Dvaered campaigns.
    Changed rep gains for the FLF campaign.
    
    Made rep boosts smaller so the player has to do more of the minor
    missions (more in-line with how the main factions operate).
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed several instances of assuming that planet.faction always returns a faction.
    
    The function actually returns nil if the planet has no faction (i.e. Eirok),
    so code that relied on this broke whenever the player landed on such a
    planet. I've done a grep for these and I think I've fixed every one,
    preventing Lua errors in the News and NPC events most notably but also
    preventing possible (albeit unlikely) mission errors.
    Added "Coming Out" mission.
    
    This is the first in a series of missions about the story of a
    transgender person coming out and becoming a pilot. It's in the
    Soromid faction because a later mission is going to involve getting
    medical treatment from the Soromid. This mission just serves to
    introduce the character (Chelsea) and set up later missions with a
    few hooks.
    
    I also fixed a couple of small issues that I happened to notice as
    I was working on the new mission: a typo in flf_dvk07 ("hay" instead
    of "hey"), and an autogenerated file (po/stamp-po) getting included
    by git add --all.
    Added appearance of FLF computer missions in Frontier space.
    
    Plus fixed a small mistake: wrong portrait in dvk07.
    Added "The FLF Split" mission and FLF Rogue mission.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Removed "stupid", "idiot", "moron" occurrences.
    
    These are also sanist terms, so I replaced them with better terms,
    like "fool" (the term with the same literal meaning in contemporary
    usage), or generalist insults like "asshole".
    Made nodisable and nodeath compatible
    Added logs for the FLF and Dvaered campaigns.
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    Changed rep gains for the FLF campaign.
    
    Made rep boosts smaller so the player has to do more of the minor
    missions (more in-line with how the main factions operate).
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Updated my info.
    Fixed several instances of assuming that planet.faction always returns a faction.
    
    The function actually returns nil if the planet has no faction (i.e. Eirok),
    so code that relied on this broke whenever the player landed on such a
    planet. I've done a grep for these and I think I've fixed every one,
    preventing Lua errors in the News and NPC events most notably but also
    preventing possible (albeit unlikely) mission errors.
    Modified dvk03 to just set the Empire's standing to -100.
    
    To avoid changing other factions' standing, as that causes unintended
    consequences. In particular, making the Thurion and Proteron factions
    hate you, which they aren't supposed to do at this point.
    Added Diversion from Haleb mission.
    Finished the "Assault on Raelid" mission.
    
    Finally, it's finished! When you beat it, Raelid Outpost is wiped
    from the map, which angers the Empire and turns them into an enemy.
    The general feel at the end is victorious, yet worrisome.
    A little more on dvk03, changed all dvk markers to "plot" level.
    More on dvk03.
    A little more on flf_dvk03.
    Started of flf_dvk03.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs for the FLF and Dvaered campaigns.
    Changed rep gains for the FLF campaign.
    
    Made rep boosts smaller so the player has to do more of the minor
    missions (more in-line with how the main factions operate).
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Updated my info.
    Fixed several instances of assuming that planet.faction always returns a faction.
    
    The function actually returns nil if the planet has no faction (i.e. Eirok),
    so code that relied on this broke whenever the player landed on such a
    planet. I've done a grep for these and I think I've fixed every one,
    preventing Lua errors in the News and NPC events most notably but also
    preventing possible (albeit unlikely) mission errors.
    Added Diversion from Haleb mission.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Made nodisable and nodeath compatible
    Added logs for the FLF and Dvaered campaigns.
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    Changed rep gains for the FLF campaign.
    
    Made rep boosts smaller so the player has to do more of the minor
    missions (more in-line with how the main factions operate).
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Updated my info.
    Fixed several instances of assuming that planet.faction always returns a faction.
    
    The function actually returns nil if the planet has no faction (i.e. Eirok),
    so code that relied on this broke whenever the player landed on such a
    planet. I've done a grep for these and I think I've fixed every one,
    preventing Lua errors in the News and NPC events most notably but also
    preventing possible (albeit unlikely) mission errors.
    Added Assault on Haleb mission.
    
    Destroy Raglan Outpost! This of course reduces Dvaered presence in
    Frontier space and is seen as a massive victory for the FLF.
    Modified dvk03 to just set the Empire's standing to -100.
    
    To avoid changing other factions' standing, as that causes unintended
    consequences. In particular, making the Thurion and Proteron factions
    hate you, which they aren't supposed to do at this point.
    Added Diversion from Haleb mission.
    Finished the "Assault on Raelid" mission.
    
    Finally, it's finished! When you beat it, Raelid Outpost is wiped
    from the map, which angers the Empire and turns them into an enemy.
    The general feel at the end is victorious, yet worrisome.
    A little more on dvk03, changed all dvk markers to "plot" level.
    More on dvk03.
    A little more on flf_dvk03.
    Started of flf_dvk03.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Removed "stupid", "idiot", "moron" occurrences.
    
    These are also sanist terms, so I replaced them with better terms,
    like "fool" (the term with the same literal meaning in contemporary
    usage), or generalist insults like "asshole".
    Added logs for the FLF and Dvaered campaigns.
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    Changed rep gains for the FLF campaign.
    
    Made rep boosts smaller so the player has to do more of the minor
    missions (more in-line with how the main factions operate).
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed several strings and lack of gettext usage.
    Updated my info.
    Don't make the Kestrel visible in first system
    Fixed up flf_dvk02 some more.
    
    Made the Pirate Kestrel always visible.
    Reduced ore needed by flf_dvk02.
    
    300 tons is a lot of cargo, only carryable by an armored transport
    or freighter. Reduced the needed cargo to 40 tons, which can be
    carried by an unmodified Pacifier (obtainable from Sindbad).
    Added Diversion from Haleb mission.
    Finished the "Assault on Raelid" mission.
    
    Finally, it's finished! When you beat it, Raelid Outpost is wiped
    from the map, which angers the Empire and turns them into an enemy.
    The general feel at the end is victorious, yet worrisome.
    A little more on dvk03, changed all dvk markers to "plot" level.
    Use modPlayerSingle (instead of modPlayer) for pirate rep boost in dvk02.
    
    This prevents making the rest of the universe (even including the
    Frontier) dislike you.
    Added FLF Pirate Alliance mission (flf_dvk02).
    Added marker for phase 2 of dvk02.
    Finished stage 1 of flf_dvk02.
    
    The player discovers a small group of pirate ships, but they just
    won't budge. So the player has to show them who's boss. When they
    do, they are given a map, and a quest...
    Started on flf_dvk02.
    
    This is the "pirate alliance" mission. The FLF is starting to get
    its suppliers cut off and needs a new source. Luckily, it is believed
    (correctly) that a pirate stronghold is nearby, so Benito sends you
    to the approximate location the FLF thinks the pirates are located
    to investigate and attempt to secure trade relations. The end result
    will be to make the FLF and Pirate factions into allies... that is,
    until a fallout between them occurs some time after, forcing the FLF
    to deal with piracy in their own territory.
    
    But for this mission, we're just establishing the alliance. What could
    possibly go wrong?
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs for the FLF and Dvaered campaigns.
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    Changed rep gains for the FLF campaign.
    
    Made rep boosts smaller so the player has to do more of the minor
    missions (more in-line with how the main factions operate).
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Updated my info.
    Fixed several instances of assuming that planet.faction always returns a faction.
    
    The function actually returns nil if the planet has no faction (i.e. Eirok),
    so code that relied on this broke whenever the player landed on such a
    planet. I've done a grep for these and I think I've fixed every one,
    preventing Lua errors in the News and NPC events most notably but also
    preventing possible (albeit unlikely) mission errors.
    Added Diversion from Haleb mission.
    A little more on dvk03, changed all dvk markers to "plot" level.
    Changed the dvk01 portrait to Benito, and modified dialog to match.
    More gettext.
    Updated my copyright notices.
    Added a common FLF function for changing the rep cap.
    More progress on the FLF campaign.
    Fixed flf_dvk01 not having a title or description.
    Some final fixes and tweaks to the diversion and dvk01 missions.
    
    Finally! It works. There seem to be no remaining problems.
    More tweaks and fixes to the diversion mission.
    
    I think I've finally got it working the way I wanted it to.
    Made some fixes and adjustments to the diversion mission.
    Fixed a bunch of problems...
    
    But not all of them.
    Added the new FLF missions to mission.xml, made some tweaks.
    Added first mission in the anti-Dvaered campaign.
    
    In principle, this one is very much like flf_pre02: it pretty much
    just opens up the possibility to do new missions. Story-wise, this
    is where the FLF sets up bombs or some kind of other trap in
    Raelid Outpost to assist in its destruction or takeover later.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    bugfix in flf_dvk05
    Changed rep gains for the FLF campaign.
    
    Made rep boosts smaller so the player has to do more of the minor
    missions (more in-line with how the main factions operate).
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Repurposed flf_pirates, added dvk05 (repurposed empa06).
    
    Originally I was going to have a pirate fallout, but I decided to
    instead just have some pirates attacking FLF ships for no real
    reason (they're pirates, after all). The new filler mission,
    "Alliance of Inconvenience", now unlocks the slightly altered
    "Pirate Disturbance" mission, which is common, but not as common as
    the others. It has a particular disadvantage compared to the others
    in that it cannot give you reputation for the Pirate faction (makes
    sense), but it does pay you and raise FLF reputation.
    Added logs for Shark campaign
    Added logs to the Shadow campaign.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Added 3rd "Coming Out" mission, plus fixed some minor fixes to other stuff.
    Fixed method.
    Replaced use of the "static" tag with a "static" standing script.
    
    The reason is using the "static" tag now guarantees standing to always
    be represented as "???", as this text is now defined in Lua.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs for Shark campaign
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    And the modified Lua files (taking advantage of new images).
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    Massively fixed up sh05.
    gettext + dos2unix for shark campaign.
    Update sh05_flf.lua
    * Attempt to clean up the whitespace mess in Lua a bit.
    Cleaned up mission exits and made a number of upgrades and proofreading edits to shark mission 8 (sh07)
    Fixed some issues/bugs in the missions (mainly Shark campaign) e.g. using nonexisting planet Sindbad
    * Reverted 4e2a22f8.
    * Fixed Lua syntax.
    * Misc fixes to Shark campaign.
    * Moved the Shark missions into the empire directory.
    corrections
    Added the shark campaign
    typos and gettext
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs for Shark campaign
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    And the modified Lua files (taking advantage of new images).
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    Fixed up sh02 - sh04.
    Fixed some Shark campaign English errors.
    gettext + dos2unix for shark campaign.
    Make addRaw() return pilot, instead of single element table
    * Attempt to clean up the whitespace mess in Lua a bit.
    Cleaned up mission exits and made a number of upgrades and proofreading edits to shark mission 8 (sh07)
    Fixed some issues/bugs in the missions (mainly Shark campaign) e.g. using nonexisting planet Sindbad
    * Reverted 4e2a22f8.
    * Fixed Lua syntax.
    * Misc fixes to Shark campaign.
    * Moved the Shark missions into the empire directory.
    corrections
    Added the shark campaign
    typos and gettext
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Sandwich holder as a reward for the shark campaign.
    Added logs for Shark campaign
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    And the modified Lua files (taking advantage of new images).
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    Fixed the remaining Shark missions.
    gettext + dos2unix for shark campaign.
    Make addRaw() return pilot, instead of single element table
    * Attempt to clean up the whitespace mess in Lua a bit.
    English doesn't leave space before exclamation marks.
    fixed the idle hook and added a small line of dialog
    oopsy, didn't remove the idle hook
    really small change!
    Cleaned up mission exits and made a number of upgrades and proofreading edits to shark mission 8 (sh07)
    new mission: The ruse. Not sure which context to put it in
    * Reverted 4e2a22f8.
    * Fixed Lua syntax.
    * Misc fixes to Shark campaign.
    * Moved the Shark missions into the empire directory.
    corrections
    Added the shark campaign
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs for Shark campaign
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed reference of known-name Arnold Smith as "the man"
    Fixed pirate drifting endlessly
    Fixed old portrait in sh00
    And the modified Lua files (taking advantage of new images).
    Finished fixing the first two Shark missions.
    Fixed up the writing in the first Shark mission.
    gettext + dos2unix for shark campaign.
    * Attempt to clean up the whitespace mess in Lua a bit.
    Cleaned up mission exits and made a number of upgrades and proofreading edits to shark mission 8 (sh07)
    Fixed some issues/bugs in the missions (mainly Shark campaign) e.g. using nonexisting planet Sindbad
    * Reverted 4e2a22f8.
    * Misc fixes to Shark campaign.
    * Moved the Shark missions into the empire directory.
    corrections
    Added the shark campaign
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs for Shark campaign
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed aggressive pacifier and some other small things.
    Some fixes to sh06.
    
    It actually still doesn't work properly; for some reason the ship is
    hostile if you're enemies with the FLF despite code designed to
    suppress that.
    And the modified Lua files (taking advantage of new images).
    added a message to wait in shark 06
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    Fixed a bug in sh06.
    Fixed the remaining Shark missions.
    gettext + dos2unix for shark campaign.
    * Attempt to clean up the whitespace mess in Lua a bit.
    Cleaned up mission exits and made a number of upgrades and proofreading edits to shark mission 8 (sh07)
    Fixed some issues/bugs in the missions (mainly Shark campaign) e.g. using nonexisting planet Sindbad
    * Reverted 4e2a22f8.
    * Misc fixes to Shark campaign.
    * Moved the Shark missions into the empire directory.
    corrections
    Added the shark campaign
    typos and gettext
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    proposal on how to display extra info with mission_map.py
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Removed the loop in sh02_tapping.
    
    More in-line with the rest of the game and more robust.
    Added a delay to ambush in sh02_tapping.
    
    Also added a failsafe condition to make sure there's no infinite loop.
    Added logs for Shark campaign
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Added a portrait for the Nexus agent.
    And the modified Lua files (taking advantage of new images).
    adapted sh02 to missile rebalance
    Fix checking for bar when choosing a planet
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    Fixed up sh02 - sh04.
    Updated shark/sh02
    gettext + dos2unix for shark campaign.
    Make addRaw() return pilot, instead of single element table
    * Attempt to clean up the whitespace mess in Lua a bit.
    Cleaned up mission exits and made a number of upgrades and proofreading edits to shark mission 8 (sh07)
    Replace uses of pilot.somemethod(p) with p:somemethod()
    Fixed some issues/bugs in the missions (mainly Shark campaign) e.g. using nonexisting planet Sindbad
    * Reverted 4e2a22f8.
    * Misc fixes to Shark campaign.
    * Moved the Shark missions into the empire directory.
    corrections
    Added the shark campaign
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    disaabled -> disabled
    All done with our hooks after the player is disabled
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Added logs for Shark campaign
    removed mention to shark in the second mission of nexus campaign
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    And the modified Lua files (taking advantage of new images).
    fix in sh01 mission
    Fixed sh02.
    Fixed the mission description of sh01.
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    Finished fixing the first two Shark missions.
    Fixed the "Sharkman is back" mission
    gettext + dos2unix for shark campaign.
    Make addRaw() return pilot, instead of single element table
    * Attempt to clean up the whitespace mess in Lua a bit.
    Cleaned up mission exits and made a number of upgrades and proofreading edits to shark mission 8 (sh07)
    Replace uses of pilot.somemethod(p) with p:somemethod()
    * Reverted 4e2a22f8.
    * Fixed Lua syntax.
    * Misc fixes to Shark campaign.
    * Moved the Shark missions into the empire directory.
    corrections
    Added the shark campaign
    typos and gettext
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Decentralized the missions. No more dat/mission.xml! Everything is done as headers for each independent mission.
    Replaced "hacked drones" concept in sh04 with "gone haywire".
    
    The Za'lek are supposed to have very good encryption so their drones
    getting hacked seems out-of-character for them, especially as such a
    minor occurrence. Drones going haywire, however... well, that just
    seems like it would be standard fare for them.
    Added logs for Shark campaign
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    And the modified Lua files (taking advantage of new images).
    Upped the rewards on most unique missions, plus other minor improvements.
    
    Whew, that's a lot!
    
    So the gist of this is that most unique missions have had their
    rewards substantially increased. The general rule of thumb I followed
    was to make the rewards 10 times what they previously were, but of
    course there were exceptions to this. Most notably, most of the
    Collective campaign previously had no rewards at all, so very large
    rewards (progressing slowly from 500k to 5m) have been added to it.
    Some, on the other hand, were only increased slightly.
    
    The main goal of this is to balance out the mission rewards, which
    has been a serious problem with Naev. It used to be that standard
    missions gave you more money than unique missions, and this change
    should hopefully reverse that and encourage players to try more
    missions.
    
    While I was doing that, I also fixed the presention of rewards and
    numbers for several missions, and corrected some small dialog problems
    I found (mostly typos).
    One more typo fixed.
    Fixed up sh02 - sh04.
    Fixed some Shark campaign English errors.
    Check to make sure the drones exist before "hacking" them.
    Changed "STU", "STP", and "SCU" to "seconds", "periods", and "cycles".
    
    This is meant for better readability; it makes the different units
    more distinguished from each other.
    
    "STU" was replaced with "seconds" instead of "units" for two reasons:
    one, "units" is too generic (it's used for all kinds of measurements,
    not just time measurements), making it a confusing name. Two, the SCU
    is the same as a second in-universe anyway, and I don't see the
    general population abandoning that term.
    
    For the auto generation of "pretty" time text, I replaced e.g "12 STU"
    with "12s", and e.g. "8.32 STP" with "8.32p".
    
    Also fixed some language mistakes in dialogs I happened to notice,
    plus some very weird usage of the time units that probably resulted
    from a misunderstanding of how long they're supposed to be (there
    was a father concerned because his daughter disappeared several
    *seconds* ago, a food station that had a harvest every day, and a
    weekly mining trip to one planet that was talked about as if that
    wasn't frequent).
    
    Just a thought that just came to mind as I was writing this: perhaps
    it would be better to call decaperiods "daps"? Not truly necessary,
    but it would be an interesting idea because it's a name for a unit
    that kind of look like "days", while also serving as a shorthand
    for the full official name. Any thoughts?
    gettext + dos2unix for shark campaign.
    * Attempt to clean up the whitespace mess in Lua a bit.
    Cleaned up mission exits and made a number of upgrades and proofreading edits to shark mission 8 (sh07)
    * Reverted 4e2a22f8.
    * Fixed Lua syntax.
    * Misc fixes to Shark campaign.
    * Moved the Shark missions into the empire directory.
    corrections
    Added the shark campaign
    Got rid of dat/event.xml :D
    Implemented a travel log event.
    
    This also fixes some more problems, including one that prevented
    the shiplog system from being used outside of missions and one that
    prevented compilation from being successful.
    Mad Maroni -> Machiavellian Misi
    Renamed Valkyrie Ride to Valkyrie Beam.
    Renamed tk.merchant to tk.merchantOutfit in anticipation of more merchants someday.
    outfit ideas
    Moved outfit merchant API from outfit.merchant(...) to tk.merchant(...).
    Some outfit ideas that are non-trivial to implement.
    Spacing.
    Forgot to lower the travelling merchant chance again.
    Added some new weapons to the travelling merchant.
    Added initial implementation of the travelling merchant.
    Got rid of dat/event.xml :D
    Fixed spacing for naev_needs_YOU
    Fixed up the Naev Needs You script.
    More gettext.
    Fixing the dumb edit on naev_needs_YOU.
    
    The link now points to the shorter url for the website.
    Tiny changes to this event for polish.
    * Shortened URL in NNY event.
    * Restore background music only if not nil.
    * More NAEV -> Naev.
    updated values in event.xml and naev_needs_you.lua for play instead of testing
    Changed "Naev needs You" into an event, revised the event slightly
    * No need for the needs you mission.
    * Update all the missions to use the new marker API.
    * Enormous diff that basically points out that bobbens' punctuation sucks.
    * Limit mission based on credits.
    Added new mission to help recruit new contributors
    
    Added Lua file for mission that pops up when the player lands.
    Used the music API for the first time.
    Also added the mission to the XML file.
    And that's all.
    
    The point is to remind people that they can help out.
    Also to make helping out seem fun.
    Got rid of dat/event.xml :D
    Reset stats on level-up
    Added BioPlasma Organ, fixed upgrade script errors
    Added bioship upgrade event.
    upgrade on mission map
    Got rid of dat/event.xml :D
    Added an event to make Proteron known when you find them.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Added 3rd "Coming Out" mission, plus fixed some minor fixes to other stuff.
    Fixed method.
    Replaced use of the "static" tag with a "static" standing script.
    
    The reason is using the "static" tag now guarantees standing to always
    be represented as "???", as this text is now defined in Lua.
    Removed some ableist language pertaining to blindness, and some sexism.
    Renamed tutorial-common.lua -> tutorial_common.lua
    Renamed tutorial.lua -> tutorial_land.lua
    Got rid of dat/event.xml :D
    Improved start-of-game tutorial, replacing the menu tutorial
    
    I decided to do this because the classic tutorial is quite long, and
    yet the intro text I had previously added is inadequate. This new
    tutorial is designed to be a nice middle-ground.
    
    As before, the tutorial is optional, offered to you at the start of
    the game. Unlike before, you go through an entire mission
    demonstrating all the important game mechanics, rather than just
    having a bunch of information thrown at you.
    
    This makes the tutorials (which I haven't recommended to anyone in
    years) obsolete, so the "Tutorial" button and old tutorial mission
    have been removed.
    Automatically give access to all GUIs at the start.
    
    This is a bit of an ugly way to make all GUIs available, but it
    seems to be the only way at the moment. A proper fix in the C code
    can come some other time.
    More gettext.
    Updated to use \a instead of \e for printing with colours.
    * Removed debug stuff.
    Added popup with Text + Image
    Implemented a test usage in Start Event
    To test, just start a new character
    Add a timer to the start event so it's less jarring
    Updated start script to fit with the new way of using the mouse.
    Simplified the start text.
    Added some text to the intro.
    End the start event all the time.
    
    I made a mistake and got rid of the ending of the start event in
    one part of an if statement. This has been fixed.
    Added intro text to the start script.
    
    My sister was overwhelmed by all of the tutorials and the complexity
    of the game, so I've added a short introduction to the start of the
    game, to give you a quick introduction, enough to get you going
    without being too heavy.
    * Tweaks to ship names.
    Give the player's ship a random name on game start.
    Make Hakoi -> Eneguoz jump known on game start.
    * Give player starting equipment.
    Got rid of dat/event.xml :D
    New "bounty" mission for pirates
    
    I've replaced the existing "empire pirate bounty" mission with a
    variation of the "Dead Or Alive" bounty mission. It is, however,
    "kill only" and renamed to "Assassination Job". It shows up in the
    mission computer and is available through the mission computer on
    Independent planets, pirate strongholds, and the FLF base.  Requires
    a mercenary license unless on a black market world (i.e. Pirate
    strongholds or the FLF base).
    
    I might want to expand this to include other major factions in the
    future. For now, though, it is limited to eliminating Empire ships.
    
    Hitman 3 has been disabled because it is now obsolete, and the
    missions that previously required a Pirate landing pass now only
    require positive reputation with the pirates.
    
    This commit also includes one more small change: Hyenas are now
    counted as pirate ships for the purpose of the pirate reputation
    loss event. The reasons for this are (1) because the pirates are
    often seen with these ships, and (2) to give the player access to
    something considered to be a pirate ship early on.
    Tested and improved the numbers.
    Made it possible to ally with the Pirates by killing.
    * Attempt to clean up the whitespace mess in Lua a bit.
    Pirate fame event added. (lowering faction standing of pirate players randomly)
    Add a warning when the player first enters a volatile nebula.
    Renamed tutorial-common.lua -> tutorial_common.lua
    Renamed tutorial.lua -> tutorial_land.lua
    Added a news event suggested on Discord.
    Got rid of dat/event.xml :D
    Changed to a generic "tutorial" event.
    Added a quick tutorial event for when you first buy a large ship.
    
    This tutorial event briefly explains how time dilation works when
    you buy your first large ship. It's only a single message window,
    so it shouldn't be a major bother to those who already know. I've
    also integrated it in as a concerned salesperson trying to provide
    good customer service to explain the sudden message away.
    
    The message also explains that larger ships should generally use
    turrets, since that's related to the Time Dilation issue.
    
    This may help with #1078; the Time Dilation was not explained
    particularly well and this ensures that an explanation is always
    given when it becomes an important point.
    Renamed tutorial-common.lua -> tutorial_common.lua
    Renamed tutorial.lua -> tutorial_land.lua
    gettext for tutorial.
    Updated to use \a instead of \e for printing with colours.
    Made the tutorial's common functions somewhat less draconian with regard to key disabling.
    * Comments.
    * Added console to always-enabled keys.
    * Always enable some keys like speed, menu and screenshot.
    Signed-off-by: Edgar Simo <bobbens@gmail.com>
    * Migration of tutorial to events, part 2.
    * Tweaks and fixes.
    * Make use of key disabling.
    upgrade on mission map
    Got rid of dat/event.xml :D
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Made the Preacher event finish properly so it STOPS FLOODING ME WITH THIS GARBAGE
    
    This should FINALLY make the preacher event happen only once.
    Fixed formatting of Sirius Preach event.
    Corrected a bug in the Sirius preach event
    More gettext.
    Make addRaw() return pilot, instead of single element table
    Fixing jumpout bug.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced a huge swath of tabs with spaces in  dat/
    Fixed a rare case where new enemies enter while the Reverence is jumping.
    s/Reverance/Reverence/g
    Add missing evt.finish() call
    
    Signed-off-by: Sudarshan S
    Fix small bug in preacher mission
    
    Signed-off-by: Sudarshan S <ssoxygen@users.sourceforge.net>
    Fix small issue in the mission
    
    Signed-off-by: Sudarshan S
    Make preacher event less frequent
    
    Signed-off-by: Sudarshan S
    * Don't depend on variable that may not be defined.
    * Line ending issue detected and dealt with.
    Deal with the complications created when the player is an enemy of House Sirius
    
    Signed-off-by: Sudarshan S
    * Minor edits to message text.
    New event in Sirius space- attempt to convert the player
    
    Signed-off-by: Sudarshan S
    upgrade on mission map
    Got rid of dat/event.xml :D
    dos2unix
    * Initial commit of achack04.
    * WIP commit for achack04.
    upgrade on mission map
    Got rid of dat/event.xml :D
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    More gettext.
    Make addRaw() return pilot, instead of single element table
    Replace pilot.memory() and pilot.memoryCheck() with one function, taking
    advantage of the single Lua state.
    Fixed a flawed check in the warlords battle event.
    
    The check assumed that if a table called "cand" had no valid entries
    in it, "cand == {}" would be true. Evidently, it wasn't. Changed
    the check to "#cand <= 0", which is what is actually important.
    test if the systems are adjacent in warlords battle event
    * Small writing fixes to warlord battle event.
    add a dvaered warlords battle event
    upgrade on mission map
    Got rid of dat/event.xml :D
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Use commClose() in various comm events.
    * Remove evt.misnStart (superseded by naev.missionStart).
    * WIP commit for Dark Shadow
    * Added a new system and planet for the purpose of Dark Shadow (uninhabited)
    "delusions" -> "figments of imagination
    Use the new N_ alias in news.lua.
    Translate keys
    Added a news event suggested on Discord.
    Got rid of dat/event.xml :D
    Fixed broken code
    Re-added headers and used tag to get article title.
    Fixed a story which had too many %s
    Removed "Cr./Tonne" from price lines (simplification)
    
    Doing this instead of ngettext here because it makes sure the line
    is short and simple.
    Added ngettext support to News event.
    Added more econ articles.
    Increased expiration time of news articles.
    Missing period
    Double oops
    
    There we go
    Whoops
    
    Broken time control stuff.
    Moved many "Generic" stories to faction sections.
    
    These are stories that reference either specific places or specific
    factions, so they shouldn't show up in the news feed of, say, the
    Proteron for example, or the FLF or Pirates.
    Retooled News Event
    
    This retooled news event completely changes the way the news script
    works so that it's much more robust and nice.
    
    Firstly, the event no longer tries to remove and then add a whole
    bunch of articles. Instead, it uses the news system in a more normal
    fashion, simply adding articles that expire after a while.
    
    Secondly, to avoid posting the same article twice, it now uses tags
    rather than article titles. This prevents duplicates when in other
    languages (#1077).
    
    Thirdly, economy news articles (for distant-ish planets) have been added.
    These are news articles, but they also give you pricing info for a
    random time in the past at a distant-ish planet. Suggested in #1082.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed possibility for duplicate econ articles.
    Replaced the econ NPCs with econ news articles.
    
    These articles last only 1 second (disappear after you take off),
    and they list the econ prices of all planets in the current system
    and adjacent systems. A much better system than the whole "ask NPCs
    for info" thing I think (and a better use for the news feed, too).
    Made time units galactic, plus some other small fixes.
    Fixed several instances of assuming that planet.faction always returns a faction.
    
    The function actually returns nil if the planet has no faction (i.e. Eirok),
    so code that relied on this broke whenever the player landed on such a
    planet. I've done a grep for these and I think I've fixed every one,
    preventing Lua errors in the News and NPC events most notably but also
    preventing possible (albeit unlikely) mission errors.
    Changed "STU", "STP", and "SCU" to "seconds", "periods", and "cycles".
    
    This is meant for better readability; it makes the different units
    more distinguished from each other.
    
    "STU" was replaced with "seconds" instead of "units" for two reasons:
    one, "units" is too generic (it's used for all kinds of measurements,
    not just time measurements), making it a confusing name. Two, the SCU
    is the same as a second in-universe anyway, and I don't see the
    general population abandoning that term.
    
    For the auto generation of "pretty" time text, I replaced e.g "12 STU"
    with "12s", and e.g. "8.32 STP" with "8.32p".
    
    Also fixed some language mistakes in dialogs I happened to notice,
    plus some very weird usage of the time units that probably resulted
    from a misunderstanding of how long they're supposed to be (there
    was a father concerned because his daughter disappeared several
    *seconds* ago, a food station that had a harvest every day, and a
    weekly mining trip to one planet that was talked about as if that
    wasn't frequent).
    
    Just a thought that just came to mind as I was writing this: perhaps
    it would be better to call decaperiods "daps"? Not truly necessary,
    but it would be an interesting idea because it's a name for a unit
    that kind of look like "days", while also serving as a shorthand
    for the full official name. Any thoughts?
    gettext for neutral events.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Tried to spice up soromid news a wee bit.
    A temporary hack giving the Soromid the Independant faction's news headers as a standin as there was none before. :/ NEEDS TO BE FIXED BY A LOREMASTER =p
    - BSoD
     On branch master
     Changes to be committed:
       (use "git reset HEAD <file>..." to unstage)
    
            modified:   dat/events/neutral/derelict.lua
            modified:   dat/events/neutral/news.lua
            modified:   dat/mission.xml
            modified:   dat/missions/empire/waste_dump.lua
            modified:   dat/missions/runaway/runaway_cynthia.lua
            modified:   dat/missions/runaway/runaway_search.lua
    Numerous fixes to spelling and content of news articles.
    * Use warn not print.
    fixed news.lua headers, corrected date to rm article in nebu_satellite
    * Warn when faction doesn't have news.
    * Mention the warning comes from the news.
    * Fixed errors when faction is not in faction table (just use independent then).
    changed syntax for news.add(), removed old file
    removed date_to_remove
    fixed bug for faction w/no news
    Added date_to_add & date_to_rm args to news.add()
    removed bugs and added generic news event
    upgrade on mission map
    Got rid of dat/event.xml :D
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    gettext for neutral events.
    s/pinnacle/Pinnacle/
    * Make use of updated goto API.
    * Set Prince appearance probability to 10%.
    * Updated Shadow Vigil and Prince to use new mission marker systemy.
    * Misc updates and fixes to related events.
    * Cleanups, tweaks. WIP commit.
    * WIP commit for Prince mission.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Got rid of dat/event.xml :D
    Added logs for neutral one-off missions.
    gettext for neutral events.
    Update pilot.dir() call sites
    * Implement TODO.
    Typo fixes for animal trouble event.
    * Use non-compensating goto in a bunch of places.
    * Animal transport mission.
    * Tweaks to teenager mission.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Got rid of dat/event.xml :D
    Added logs to the Shadow campaign.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    OK, 200.
    
    I want to make sure this is something that happens, but isn't, like,
    too frequent.
    
    200 periods is rougly 100 jumps worth of time, and then the random
    chance gives an average of 9 additional jumps worth of time. I think
    that's about the middle ground I'm looking for.
    Added some randomness
    Actually...
    
    100. Final answer.
    Changed that to 200.
    Added a reminder for shadow_comm every 500 periods.
    gettext for neutral events.
    Fixed indentation, and slightly improved the way the Shadow event goes.
    
    The improvement is to add some text telling the player that a note
    should be made about the Pas system. This is to make up for the fact
    that this event leaves no trace at all on your map, which is not
    something players tend to expect in Naev.
    * Do not use misn module in events.
    May have created a temporary fix for the shadow missions by marking Pas - will have to test further to check it works alright though
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Only remove hailhook if it exists.
    * Fixed variable name.
    * Use commClose() in various comm events.
    * Small sophistication to the shadowcomm event.
    * Fixed bad syntax in shadow comm event.
    Shadow Vigil mission fixes.
    * Save the shadow_comm event.
    * Made Seiryuu visible.
    Use setActiveBoard instead of disable/re-enable hack.
    * Remove evt.misnStart (superseded by naev.missionStart).
    * Filled in most of the strings for Prince mission.
    * Updated baron and shadow events with new pilot.add behavior.
    * WIP commit for Prince mission.
    * Hailing the shadowcomm Vendetta again shouldn't spawn the message again.
    * More work on the Shadow Vigil mission. Also a lot of peripheral edits.
    * WIPpery.
    * More work on Shadow Vigil.
    * WIP edits for Shadow Vigil mission.
    * Cleanups, remove non-space whitespaces.
    * WIP edits for Shadow Vigil mission.
    * WIP commit for new mission.
    * WIP commit for new mission.
    upgrade on mission map
    Got rid of dat/event.xml :D
    * Kidnap event uses commClose().
    * First installment of the kidnap campaign by Superkoop.
    upgrade on mission map
    Got rid of dat/event.xml :D
    Maded the "shipwreck" event fully translatable.
    gettext for neutral events.
    Replaced a huge swath of tabs with spaces in  dat/
    * Remove evt.misnStart (superseded by naev.missionStart).
    Modified because of big systems
    
    + Make ship visible for player no matter how far the distance in the system is.
    Modified because of big systems
    
    + Make ship visible for player no matter how far the distance in the system is.
    * Replaced all instances of misn/evt.timerStart with hook.timer
    * Replaced all instances of misn/evt.timerStop with hook.rm
    * Removed remaining usage of hook.time from events.
    * Updated more missions to use the new pilot.add API.
    * Minor formatting tweaks and increased august spam delay.
    * Make sure broadcasting pilot in shipwreck is still alive.
    * Event actually can become unique now.
    * Added mission by BTAxis.
    upgrade on mission map
    Got rid of dat/event.xml :D
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    Gave the player the option to "angrily refuse" the baron mission.
    
    This replaces my last commit which reduced the chance of it happening
    over time. This instead allows the player to explicitly indicate that
    they definitely don't want to do the mission ever. If you "angrily
    refuse", the pilot decides that you're useless and the event never
    happens again.
    Made the chance of getting hailed for the Baron mission decrease over time.
    
    With this chance, the chance of getting hailed for the Baron mission
    starts at 4% the first three times, then after that decreases by half
    each time it happens, so it goes to 2%, then 1%, then 0.5%, and so on.
    To ensure that the player can always get the mission somehow, the
    Toaxis system is a special case where the chance is always 4% no
    matter what.
    Made baron_comm claim the system. Was hitting errors.
    * Use commClose() in various comm events.
    * Remove evt.misnStart (superseded by naev.missionStart).
    * Filled in most of the strings for Prince mission.
    * Updated baron and shadow events with new pilot.add behavior.
    * WIP commit for Prince mission.
    * Replaced all instances of misn/evt.timerStart with hook.timer
    * Replaced all instances of misn/evt.timerStop with hook.rm
    * Added timer hook to eventually replace the mission/event timers.
    * Use hailing API.
    * WIP commit for the first Mad Baron mission
    upgrade on mission map
    Got rid of dat/event.xml :D
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    gettext for neutral events.
    Fix the Derelict event, again.
     On branch master
     Changes to be committed:
       (use "git reset HEAD <file>..." to unstage)
    
            modified:   dat/events/neutral/derelict.lua
            modified:   dat/events/neutral/news.lua
            modified:   dat/mission.xml
            modified:   dat/missions/empire/waste_dump.lua
            modified:   dat/missions/runaway/runaway_cynthia.lua
            modified:   dat/missions/runaway/runaway_search.lua
    Some more typos.
    Various spelling and grammar fixes.
    Updated the derelict event to work with static maps.
    ...nor does the Star Map.
    * This should fix the bad Derelict event that left the player stuck on manual control.
    * Rephrased message.
    * Cleaned up derelict script a bit.
    modPlyerSIngle -> modPlayerSingle
    * Use modPlayerSingle, not modPlayerRaw for most cases.
    * Moved from player-based faction commands to faction-based player commands.
    * Fixed typo in derelict event, derelicts are now called serelicts.
    Minor fixes for derelict event, now less likely to kill players via explosion.
    * Remove evt.misnStart (superseded by naev.missionStart).
    * endevent doesn't exist, it's destroyevent in this event.
    * Removed remaining usage of hook.time from events.
    * Updated more missions to use the new pilot.add API.
    * Unboard before displaying text, looks better.
    * Fixed derelict issues.
    * . should be :.
    * Lua syntax error.
    * Lua syntax error.
    * Lua syntax error.
    * Derelict event is more common, spawns messages now.
    * Fancy new event system seems to work now.
    * Events load and clean up.
    * Added very simple first event.
    upgrade on mission map
    Got rid of dat/event.xml :D
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    gettext for neutral events.
    * Flintley event should work again.
    Various spelling and grammar fixes.
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * Use Flintley's portrait in the Flintley NPC event.
    * First completable version of Prince mission.
    * Misc fixes.
    * Updated Shadow Vigil and Prince to use new mission marker systemy.
    * Misc updates and fixes to related events.
    * WIP commit for Prince mission.
    typos
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Removed some more ableist language.
    Renamed tutorial-common.lua -> tutorial_common.lua
    Renamed tutorial.lua -> tutorial_land.lua
    Got rid of dat/event.xml :D
    Removed "stupid", "idiot", "moron" occurrences.
    
    These are also sanist terms, so I replaced them with better terms,
    like "fool" (the term with the same literal meaning in contemporary
    usage), or generalist insults like "asshole".
    Added an NPC message noting the meaning of SI prefixes.
    Touched up NPC strings
    Edited a pirate line to match the game.
    Fixed typos.
    last week -> recently
    Added a remove log functionality, so that unimportant logs can be automatically removed.  Also limited the journey log to the 6 previous journeys.
    log jump message
    removed gmres and added other zlk lines
    Fixed wrong variable write for jump hint chance.
    Removed whitespace, changed economy map colour scheme
    Removed npc economy events
    Added some NPC lines, tweaked some.
    zalek scientific chatter
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    Tweaked the wording of a Pirate NPC message.
    
    Fixes #1096.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Reverted to static mission hints but with jump messages gradually lower
    armour -> armor
    Better method of reducing tips.
    OK, less tips at the start.
    Tweaked the NPC chances a bit more.
    Fixed broken markup
    Added some more NPC hints and increased the chance of getting them.
    
    I was originally going to add an extended tutorial but wasn't able
    to figure out a way to do that in a way that it wouldn't just be a
    giant, confusing exposition. So instead I added some more NPC hints
    explaining the things I want explained with a bit of extra emphasis
    during the tutorial that talking to NPCs is a good idea.
    Fixed a typo.
    Cause jump hints to go away after a while.
    
    Jump hints are very useful at the beginning but a nuisance once
    you have enough spare cash to buy maps. This causes them to be
    gradually replaced with lore messages along with other tip
    messages.
    Added map economy info to npc, and tidied up map.c
    Removed now unused strings from npc event.
    Replaced the econ NPCs with econ news articles.
    
    These articles last only 1 second (disappear after you take off),
    and they list the econ prices of all planets in the current system
    and adjacent systems. A much better system than the whole "ask NPCs
    for info" thing I think (and a better use for the news feed, too).
    Removed auto-quotes.
    Substantially improved the tutorial mission.
    Improved the wording of those price hint messages.
    
    For what it's worth I actually don't care for these. I think it'll
    just add tedium by incentivizing blindly clicking on all the NPCs
    you see (which we already have a bit with the jump hints, but since
    it's only early on in the game when those make a notable difference,
    and their role is easily replaced by just buying the local map, it's
    not that big of a deal). But for now I've fixed it up so that it
    displays nicer and fixed up the chances of things happening so that
    the economy hints get inserted as the tip chance goes down (same
    chance as before after the tip chance goes down to minimum, but
    without the reduced chance of tips at the start).
    Modified tip_chance to agree with new message selection probabilities
    Added npc person to give economy information, which then gets added to the player's knowledge.
    Portraits galore!
    
    OK, I might have gotten a bit carried away with this one. I started
    out by adding portraits, but then I thought, hey, this portrait
    selection thing is scattered, so I went ahead and centralized that
    into the portrait.lua script. :) The NPC event now uses this, as do
    all missions that previously either had their own definitions for
    random portraits or specified a particular generic portrait.
    Removed uses of a sanist slur in NPC dialog.
    And the modified Lua files (taking advantage of new images).
    Working on adding a person in the bar to give economy information
    Moved the hint about sightseeing to the tips secion.
    Fixed mistake
    increased tip chance reduction from 0.2 to 0.3.
    Made it so that tip messages are much more common than lore messages at first
    
    They start at a 55% chance, then gradually decrease to 10%. When they
    are likely, they replace lore messages in prevalence.
    One more dialogue fix
    Wording fix
    Fixed strings that were poorly formed for translation.
    Removed obsolete NPC line
    Added acknowledgement of asteroid explosions.
    Fixed several instances of assuming that planet.faction always returns a faction.
    
    The function actually returns nil if the planet has no faction (i.e. Eirok),
    so code that relied on this broke whenever the player landed on such a
    planet. I've done a grep for these and I think I've fixed every one,
    preventing Lua errors in the News and NPC events most notably but also
    preventing possible (albeit unlikely) mission errors.
    Adjusted the NPC line about buying missiles.
    
    You can't buy missiles anymore, so I changed that dialog bit to reference
    commodities (where the Ctrl and Shift mods are still useful) instead.
    Added several pirate lore texts.
    Removed ship location altogether.
    
    This was discussed on #719: ship swapping really doesn't add anything
    to the game, so this simply removes that feature. Ships no longer have
    a location, they just travel around the galaxy with you like outfits
    do.
    
    I believe this probably also fixes #719, though it's hard to tell
    for sure. The reason I think it might have fixed it is because that
    bug seemed to be most easily triggered by following a transport
    immediately with a swap. I suspect that somewhere the copying of the
    "loc" string of ships was going wrongly, so if that is indeed the
    case, the fact that that variable has been entirely removed should
    fix it. This is just speculation, though, and it's impossible to
    tell for sure.
    
    The NPC tip about having to transport ships has also been removed,
    since it is no longer true.
    Added a couple NPC hints about the time variation.
    Added support for factions not using generic NPC messages.
    
    This is so that the Thurion, Proteron, FLF, and Pirate factions
    don't say things that make no sense for them. It also avoids the
    strange presence of non-FLF civilians in Sindbad and non-pirate
    civilians in Pirate strongholds.
    
    Mission aftercare messages and lore text are affected. Hint texts
    are left as-is (there's no potential continuity problem with those).
    Added support for special factions that get no generic NPCs.
    Fixed a typo.
    Added FLF lore for NPCs.
    gettext for neutral events.
    Updated to use \a instead of \e for printing with colours.
    * Attempt to clean up the whitespace mess in Lua a bit.
    * Fixed minor writing error.
    Easter Egg for Sightseeing Mission
    
    Flying a luxury yacht (currently only the gaiwan) rewards the player 2
    - 6 times more credits, maxing out around 150,000 credits. Fits into
    the ship’s luxury theme and makes these missions more lucrative.
    
    Otherwise, captains can make about 25,000 credits at most from these
    missions.
    
    Players can learn about this easter egg through a mission tip from an
    npc in a bar.
    Spelling
    Add pirate portraits by grumbel
    Fix its/it's and lets/let's errors in Lua
    Quick tutorial and event update due to autobrake.
    Added a hint about autonav speed reset.
    
    Conflicts:
    
            dat/events/neutral/npc.lua
    Various small tweaks.
    
    Conflicts:
    
            src/player_autonav.c
    major zalek update
    Many more fixes to the anxious merchant but also a few others (and probably more to come)
    Missed bracket and commas - dang it
    Added various descriptions and the new female portrait
    Fix: system that NPC tels you about remains unknown
    Assorted fixes to NPC messages.
    * Do not index a table using an index var you used in some loop way off elsewhere, you boob.
    * Bar NPCs will only tell the player about a jump point if no other NPCs are already telling him.
    * Edited NPC comments regarding heat.
    Consistency fixes for the First Growth colony ships.
    Consistent capitalisation of Station in names, and a few other minor fixes.
    * When an NPC reveals a jump, also reveal the system name.
    * Retab.
    adding some generic and faction line for the spaceport bar talks
    * Only populate msg_combined if it doesn't exist.
    * msg_combined shouldn't be local.
    * Potentially safer handling of NPC messages.
    * Few more Soromid lore messages for NPCs.
    * Fixed syntax.
    * A few more lines for NPCs to say.
    * Fixed various issues.
    * Bar NPCs will now also comment on missions or events the player has completed.
    Used new API and fixed an issue in the bar NPC event.
    Bar NPCs shouldn't reveal hidden jumps, and certainly not exit-only ones (as their dialogue makes zero sense in the latter context).
    * Improved script infrastructure to allow other fancy NPC effects in the future without additional hacks.
    * Bar NPCs should only update the player's map when he talks to them.
    * Implemented random NPCs giving the player jump point information.
    * Reorganized portrait structure
    * Fixed mission.xml
    * New portraits and some renamed ones.
    * Comments, additional lines.
    * WIP commit of new npc event.
    * Purpose of rewrite is to make bar NPCs more interesting and useful.
    * Moved from player-based faction commands to faction-based player commands.
    Fix grammar error in merchant text.
    * Reworked Dvaered/FLF missions to work with big big systems and several new features.
    * dv_antiflf03 is still broken.
    * No longer error out when no npc speaker stuff is written for a faction.
    * Make sure planet has faction.
    added around 100 new things for the people to say
    fixed error
    added comments to the mission
    added support for random NPCs
    * Forgot to add spaceport random npc script last commit.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    upgrade on mission map
    Got rid of dat/event.xml :D
    Added a log entry about the Thurion to the FLF Catastrophe event.
    Added logs for the FLF and Dvaered campaigns.
    Re-added check for FLF Commodity Run to FLF Catastrophe event.
    Typo
    Improved the FLF Catastrophe event, added support for better music control
    Fixed listing of a no longer existant FLF mission.
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    Some typos
    Added use of the intro music for the Thurion intro.
    
    Drama! Also, you *are* being introduced to the Inner Nebula, so justified!
    
    Also fixed a bug that would have caused the event to crash if you
    bailed on the Thurion discovery.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Updated my info.
    Fixed some mistakes in dialog
    Fixed a typo in FLF Catastrophe event.
    Made Thurion invisible by default, reveal them with FLF Catastrophe event.
    
    This change causes most Thurion assets to not exist on the map at first,
    and it causes the Thurion core systems (the only ones not hidden by
    default) to be behind a hidden jump. This ensures that the Thurion
    cannot be discovered until a mission or event has designated them as
    revealed, similar to Sindbad.
    
    This commit also includes adding such a reveal to the FLF Catastrophe
    event, which includes a bunch of new dialog explaining to the player
    who the Thurion are and pointing out that a Thurion ship is needed to
    safely traverse the nebula.
    Remove the flf_pirate_ally diff when the FLF dies.
    
    So that when you inevitably become enemies with the pirates, this
    doesn't also turn you into an enemy of the FLF.
    Several improvements to the FLF Catastrophe event.
    
    Most of this is just improving the feel of the event, but a change
    has also been made to prevent a segfault that was happening (caused
    by starting the event on landing and also having a landing hook that
    gets triggered right away; I don't know why), and also the flf_dead
    diff has been modified to also remove "unpresence" assets from Sigur
    (so that Empire and Soromid ships can exist there).
    Finished the FLF Catastrophe event (several problems fixed).
    Finished the FLF Catastrophe event.
    
    Just needs testing.
    Added a check to FLF Catastrophe event
    Started on "FLF Catastrophe" event.
    Got rid of dat/event.xml :D
    Removed outdated translation code from FLF "derelict" event.
    More gettext.
    * FLF/DV event now claims the system it occurs in.
    Minor improvements for the FLF/Dvaered derelict event.
    * Remove evt.misnStart (superseded by naev.missionStart).
    * Reworked Dvaered/FLF missions to work with big big systems and several new features.
    * dv_antiflf03 is still broken.
    * Added overlay related commands to several missions.
    * Replaced all instances of misn/evt.timerStart with hook.timer
    * Replaced all instances of misn/evt.timerStop with hook.rm
    * Updated more missions to use the new pilot.add API.
    * pilot.alive() -> pilot.exists()
    * WIP commit
    * Tweakage
    * Second Dvaered route mission WIP commit
    * First mission in the Dvaered route of the flfbase mini-campaign finished.
    * First mission in the FLF route is now complete.
    * WIP commit for FLF intro campaign
    * WIP commit for FLF intro mission
    * Some initial work towards the FLF intro campaign.
    upgrade on mission map
    Got rid of dat/event.xml :D
    More gettext.
    changed arguments to fit new news.add() syntax
    news.add() now accepts tables of args in a table
    added news.bind()
    added news articles
    * Moved DV/FLF battle event to avoid conflict with Shadow Vigil.
    * Replaced all instances of misn/evt.timerStart with hook.timer
    * Replaced all instances of misn/evt.timerStop with hook.rm
    fixed the battle event
    * Have cinematic event clean up after itself.
    Added first cinematic event
    Replaced player.pilot():pos with player.pos.
    
    Precvents warnings if escorts gain you reputation after you die.
    gettext for standings.
    Fixed failure to account for positive distress.
    Fixed failure to account for positive distress.
    Made bribed ships show up as such, not "Neutral".
    
    Showing up as "Neutral" is a relic of a previous engine limitation
    which no longer exists. It makes no sense to keep this ambiguity.
    Moved checks for alliance or hostility to player into Lua code.
    
    This makes it much more flexible, and also allows translations.
    Currently, the actual behavior is unchanged.
    Changed _fcap_mod_sec into six more specific variables.
    
    Now, there is a different modifier variable for each possible
    situation: distress of an enemy, distress of a friend, death of an
    enemy, death of a friend, a mission completed by an enemy, and a
    mission completed by a friend. For now, I've set all values to 0.3,
    the value that _fcap_mod_sec was, with the exception of the variable
    for distress of an enemy, which has been set to 0 because there was
    previously code which specifically prevented enemy distress from
    causing standing gain.
    
    This change makes it possible to do much more fine-tuning to the way
    standing gains and losses "leak out" to other factions.
    Made standing text something defined in Lua.
    
    So now, different factions can have different terms for different amounts
    of standing, and these text representations can now be localized.
    Migrated standing Lua to dat/factions/standing/
    * Minor optimization.
    * Slightly more modest "sight" range for kill secondary hits.
    Also perform secondary standing increases if a ship of that faction is within 7500 px.
    Duplicate delta tables first, to avoid clobbering them.
    * Move faction_hit into the factional script files to facilitate faction specific code.
    * Currently just wraps the common code, no behavioral change.
    * Removed useless distress caps.
    * Initial commit of rehabilitation missions.
    * Use ipairs to iterate.
    * All factions now have limits on how much their reputation can change per hit.
    * Killing an enemy of a faction only changes that faction's reputation if it owns a real asset in the system.
    * Pirates and the FLF don't care if you attack or kill their ships, but they also don't care if you kill their enemies.
    * Scripted reputation hits don't have diminishing returns.
    * Use variable to modulate from secondary faction hits.
    * Gave most factions a faction Lua profile.
    * Factions can now use Lua to mess with actual faction hits.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Added 3rd "Coming Out" mission, plus fixed some minor fixes to other stuff.
    Fixed method.
    Replaced use of the "static" tag with a "static" standing script.
    
    The reason is using the "static" tag now guarantees standing to always
    be represented as "???", as this text is now defined in Lua.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Migrated standing Lua to dat/factions/standing/
    * Populated another Soromid system.
    * Soromid reputation used empire cap var, fixed.
    * Added Soromid as a faction (spawns Sirius ships for now).
    * Rearranged Soromid space.
    * Added the first Soromid asset.
    Fixed arguments. Sleep-induced accident, perhaps?
    * Move faction_hit into the factional script files to facilitate faction specific code.
    * Currently just wraps the common code, no behavioral change.
    * Removed useless distress caps.
    Lowered maximum standing delta from kills for Empire, raised for Dvaered.
    * All factions now have limits on how much their reputation can change per hit.
    * Killing an enemy of a faction only changes that faction's reputation if it owns a real asset in the system.
    * Pirates and the FLF don't care if you attack or kill their ships, but they also don't care if you kill their enemies.
    * Scripted reputation hits don't have diminishing returns.
    * Gave most factions a faction Lua profile.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Migrated standing Lua to dat/factions/standing/
    Fixed arguments. Sleep-induced accident, perhaps?
    * Move faction_hit into the factional script files to facilitate faction specific code.
    * Currently just wraps the common code, no behavioral change.
    * Removed useless distress caps.
    * Added bribe related stuff to landing script.
    * Minor tweaks to kill and mission caps.
    Lowered maximum standing delta from kills for Empire, raised for Dvaered.
    * All factions now have limits on how much their reputation can change per hit.
    * Killing an enemy of a faction only changes that faction's reputation if it owns a real asset in the system.
    * Pirates and the FLF don't care if you attack or kill their ships, but they also don't care if you kill their enemies.
    * Scripted reputation hits don't have diminishing returns.
    * Gave most factions a faction Lua profile.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed another faction error message
    added in the heretic campaign prologue
    Migrated standing Lua to dat/factions/standing/
    * Minor optimization.
    * Slightly more modest "sight" range for kill secondary hits.
    Also perform secondary standing increases if a ship of that faction is within 7500 px.
    Duplicate delta tables first, to avoid clobbering them.
    * Move faction_hit into the factional script files to facilitate faction specific code.
    * Currently just wraps the common code, no behavioral change.
    * Removed useless distress caps.
    * Initial commit of rehabilitation missions.
    * Use ipairs to iterate.
    * All factions now have limits on how much their reputation can change per hit.
    * Killing an enemy of a faction only changes that faction's reputation if it owns a real asset in the system.
    * Pirates and the FLF don't care if you attack or kill their ships, but they also don't care if you kill their enemies.
    * Scripted reputation hits don't have diminishing returns.
    * Use variable to modulate from secondary faction hits.
    * Gave most factions a faction Lua profile.
    * Factions can now use Lua to mess with actual faction hits.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Count the player as "friendly" with the FLF at rep 30.
    
    Prevents the weirdness of the FLF appearing as neutral for most of
    the campaign.
    Changed the FLF's caps.
    
    This starts the FLF off with a very low mission cap (to reflect
    the FLF's distrust of outsiders indicated by flf_pre01 and flf_pre02),
    and then increases it upon completion of pre02.
    Migrated standing Lua to dat/factions/standing/
    As FLF now starts neutral, they should have non-zero standing deltas.
    Fixed arguments. Sleep-induced accident, perhaps?
    * Move faction_hit into the factional script files to facilitate faction specific code.
    * Currently just wraps the common code, no behavioral change.
    * Removed useless distress caps.
    * All factions now have limits on how much their reputation can change per hit.
    * Killing an enemy of a faction only changes that faction's reputation if it owns a real asset in the system.
    * Pirates and the FLF don't care if you attack or kill their ships, but they also don't care if you kill their enemies.
    * Scripted reputation hits don't have diminishing returns.
    * Gave most factions a faction Lua profile.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Migrated standing Lua to dat/factions/standing/
    Fixed arguments. Sleep-induced accident, perhaps?
    * Move faction_hit into the factional script files to facilitate faction specific code.
    * Currently just wraps the common code, no behavioral change.
    * Removed useless distress caps.
    * All factions now have limits on how much their reputation can change per hit.
    * Killing an enemy of a faction only changes that faction's reputation if it owns a real asset in the system.
    * Pirates and the FLF don't care if you attack or kill their ships, but they also don't care if you kill their enemies.
    * Scripted reputation hits don't have diminishing returns.
    * Gave most factions a faction Lua profile.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Made the Empire's limitation on secondary faction hits apply to missions.
    
    The secondary faction hit limitation is a way to prevent FLF-aligning
    players from becoming flat-out enemies with the Empire from attacking
    the Dvaereds. This change makes that limitation apply to missions,
    rather than just aggression against Dvaered ships.
    *Really* fixed the method this time.
    Fixed the method.
    Syntax fixed, removed an unnecessary check.
    Fixed wrong syntax.
    
    Was thinking in Python. Whoops!
    Made the Empire reduce standing on secondary hits, but only to a point.
    Made the Empire not care about its allies being attacked.
    
    The effect of this is that if the player attacks House Goddard or House
    Dvaered, the Empire will not become hostile to the player. Only attacks
    on the Empire's own ships will provoke this response.
    
    This change is primarily meant to make it possible to align with the FLF, but
    maintain good relations with the Empire.
    Migrated standing Lua to dat/factions/standing/
    Fixed arguments. Sleep-induced accident, perhaps?
    * Move faction_hit into the factional script files to facilitate faction specific code.
    * Currently just wraps the common code, no behavioral change.
    * Removed useless distress caps.
    Lowered maximum standing delta from kills for Empire, raised for Dvaered.
    * All factions now have limits on how much their reputation can change per hit.
    * Killing an enemy of a faction only changes that faction's reputation if it owns a real asset in the system.
    * Pirates and the FLF don't care if you attack or kill their ships, but they also don't care if you kill their enemies.
    * Scripted reputation hits don't have diminishing returns.
    * Gave most factions a faction Lua profile.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Migrated standing Lua to dat/factions/standing/
    Fixed arguments. Sleep-induced accident, perhaps?
    * Move faction_hit into the factional script files to facilitate faction specific code.
    * Currently just wraps the common code, no behavioral change.
    * Removed useless distress caps.
    * All factions now have limits on how much their reputation can change per hit.
    * Killing an enemy of a faction only changes that faction's reputation if it owns a real asset in the system.
    * Pirates and the FLF don't care if you attack or kill their ships, but they also don't care if you kill their enemies.
    * Scripted reputation hits don't have diminishing returns.
    * Gave most factions a faction Lua profile.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Migrated standing Lua to dat/factions/standing/
    Fixed arguments. Sleep-induced accident, perhaps?
    * Move faction_hit into the factional script files to facilitate faction specific code.
    * Currently just wraps the common code, no behavioral change.
    * Removed useless distress caps.
    * Added bribe related stuff to landing script.
    * Minor tweaks to kill and mission caps.
    * All factions now have limits on how much their reputation can change per hit.
    * Killing an enemy of a faction only changes that faction's reputation if it owns a real asset in the system.
    * Pirates and the FLF don't care if you attack or kill their ships, but they also don't care if you kill their enemies.
    * Scripted reputation hits don't have diminishing returns.
    * Gave most factions a faction Lua profile.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    * Fixed another Lua path that was incorrect for thurion.
    * Fixed thurion scripts.
    added lua file for thurion
    Fixed arguments. Sleep-induced accident, perhaps?
    * Move faction_hit into the factional script files to facilitate faction specific code.
    * Currently just wraps the common code, no behavioral change.
    * Removed useless distress caps.
    Lowered maximum standing delta from kills for Empire, raised for Dvaered.
    * All factions now have limits on how much their reputation can change per hit.
    * Killing an enemy of a faction only changes that faction's reputation if it owns a real asset in the system.
    * Pirates and the FLF don't care if you attack or kill their ships, but they also don't care if you kill their enemies.
    * Scripted reputation hits don't have diminishing returns.
    * Gave most factions a faction Lua profile.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Made standing text something defined in Lua.
    
    So now, different factions can have different terms for different amounts
    of standing, and these text representations can now be localized.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Tweaked the pirate titles some more.
    Renamed pirate standings to something better.
    
    I made a point to note in the standings whether or not you can access
    clan worlds.
    Changed pirate terminology a bit (more gender-neutrality stuff)
    
    I changed "Welcome, brother" to "Welcome, mate" when landing, and
    changed the "Brother" status to "Partner".
    Gave the pirates individualized standing text.
    
    I didn't fill in every possible slot because I wasn't sure what to
    put there... in any case, this is much nicer than the default and
    uses numbers that reflect what's important for pirate-aligned players.
    Added FLF Pirate Alliance mission (flf_dvk02).
    Tested and improved the numbers.
    Made it possible to ally with the Pirates by killing.
    Migrated standing Lua to dat/factions/standing/
    Fixed arguments. Sleep-induced accident, perhaps?
    * Move faction_hit into the factional script files to facilitate faction specific code.
    * Currently just wraps the common code, no behavioral change.
    * Removed useless distress caps.
    * All factions now have limits on how much their reputation can change per hit.
    * Killing an enemy of a faction only changes that faction's reputation if it owns a real asset in the system.
    * Pirates and the FLF don't care if you attack or kill their ships, but they also don't care if you kill their enemies.
    * Scripted reputation hits don't have diminishing returns.
    * Gave most factions a faction Lua profile.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Gave Frontier and Goddard factions their own standing Lua scripts.
    Made standing text something defined in Lua.
    
    So now, different factions can have different terms for different amounts
    of standing, and these text representations can now be localized.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Migrated standing Lua to dat/factions/standing/
    Fixed arguments. Sleep-induced accident, perhaps?
    * Move faction_hit into the factional script files to facilitate faction specific code.
    * Currently just wraps the common code, no behavioral change.
    * Removed useless distress caps.
    * Added bribe related stuff to landing script.
    * Minor tweaks to kill and mission caps.
    * All factions now have limits on how much their reputation can change per hit.
    * Killing an enemy of a faction only changes that faction's reputation if it owns a real asset in the system.
    * Pirates and the FLF don't care if you attack or kill their ships, but they also don't care if you kill their enemies.
    * Scripted reputation hits don't have diminishing returns.
    * Gave most factions a faction Lua profile.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Gave Frontier and Goddard factions their own standing Lua scripts.
    Made standing text something defined in Lua.
    
    So now, different factions can have different terms for different amounts
    of standing, and these text representations can now be localized.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    common civilian distress file and advertiser adaptative presence
    added advertisers
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    changed the way spawn position is chosen
    Modified the include paths in the spawn Lua.
    Migrated spawning Lua to dat/factions/spawn/
    * More spawning tweaks.
    * Syntax error fix.
    * Spawn scripts for most factions (Sirius and Za'lek using Empire for now).
    * Added and removed fleets as necessary.
    Cleared warning when in systems with no spawnable pilots.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    changed the way pirates and FLF spawn
    changed the way spawn position is chosen
    Occasionally spawn large empire fleets
    More gettext.
    Change way of setting leader
    Spawn empire ships in formation
    Use function syntax sugar in spawn/common.lua
    * Removed unique event and put unique spawning directly in spawn scripts.
    add bountyhunters patrols in Dvaered space
    Migrated spawning Lua to dat/factions/spawn/
    * Fix syntax.
    * Removed debug prints.
    * New calcNextSpawn function implementation.
    * Using decrease function in spawn scripts.
    * Scheduler shouldn't be as volatile when nearing max.
    * Added common ai spawn framework.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    changed the way spawn position is chosen
    Use formations with other factions
    add bounty hunters to more factions
    Modified the include paths in the spawn Lua.
    Migrated spawning Lua to dat/factions/spawn/
    * Use Deiz' version of the soromid spawn script.
    * Added Soromid as a faction (spawns Sirius ships for now).
    * Rearranged Soromid space.
    * Added the first Soromid asset.
    Spawn script improvements - Increased  presence weight uniformity for various classes of shipss, diversified Dvaered spawning.
    Modified Sirius spawn script for new ship and repurposing of Divinity.
    Forgot to get rid of Peacemaker from the Sirius spawn list.
    Got rid of Empire placeholders, Sirius ships now spawn where appropriate.
    * More spawning tweaks.
    * Adjusted the spawn scripts to reduce the amount of ships in systems.
    * New weighting should scale ship size to presence better.
    * Spawn scripts for most factions (Sirius and Za'lek using Empire for now).
    * Added and removed fleets as necessary.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    changed the way spawn position is chosen
    Use formations with other factions
    add bounty hunters to more factions
    * Lowered chance of mercenaries.
    add bountyhunters patrols in Dvaered space
    Modified the include paths in the spawn Lua.
    Migrated spawning Lua to dat/factions/spawn/
    Spawn script improvements - Increased  presence weight uniformity for various classes of shipss, diversified Dvaered spawning.
    * Tweaks to FLF and Dvaered spawning.
    * More spawning tweaks.
    * Adjusted the spawn scripts to reduce the amount of ships in systems.
    * New weighting should scale ship size to presence better.
    * Spawn scripts for most factions (Sirius and Za'lek using Empire for now).
    * Added and removed fleets as necessary.
    Removed remaining sanist language (mostly from source code comments).
    
    Bit of an explanation: I understand that "sanity checks" is a common
    term in programming parlance, but this common usage stems from sanism
    that has been entrenched into our culture and even into the English
    language. By describing bad situations as "insane", you end up
    subtly implying that those with mental illness cause problems, even
    if you did not intend that connotation. This change removes all those
    references and replaces them with terms that both are not sanist and
    which are more precise (usually "validity" or "safety").
    
    This also meant that the "in-sanity" tool's name was changed to
    "in-valid" (keeping a joke but one that doesn't have sanist origins).
    Some function names were also updated.
    
    This also includes updated POT files since I wanted to make sure I
    got everything. The only sanist references left now are those in
    Autoconf itself (which of course we can't really do anything about),
    and possibly words like "stupid", "idiot", "moron", which are also
    sanist, but which I haven't specifically looked for yet.
    More gettext.
    fixing some errors!
    Migrated spawning Lua to dat/factions/spawn/
    * Fix syntax.
    * Removed debug prints.
    * New calcNextSpawn function implementation.
    * Using decrease function in spawn scripts.
    * Scheduler shouldn't be as volatile when nearing max.
    * Added common ai spawn framework.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    changed the way pirates and FLF spawn
    changed the way spawn position is chosen
    Modified the include paths in the spawn Lua.
    Migrated spawning Lua to dat/factions/spawn/
    Spawn script improvements - Increased  presence weight uniformity for various classes of shipss, diversified Dvaered spawning.
    FLF Pacifier should spawn rarely.
    * Tweaks to FLF and Dvaered spawning.
    * Spawn scripts for most factions (Sirius and Za'lek using Empire for now).
    * Added and removed fleets as necessary.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    changed the way spawn position is chosen
    Modified the include paths in the spawn Lua.
    Migrated spawning Lua to dat/factions/spawn/
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * More spawning tweaks.
    * Adjusted the spawn scripts to reduce the amount of ships in systems.
    * New weighting should scale ship size to presence better.
    * Civilians and traders now call the universe their home.
    * Zied is now Independent.
    * Added a new landable planet in Ingot (for the Baron missions).
    * Baron's ship now circles the planet in the baron_baron mission.
    * Minor tweak to trader spawn script.
    * Spawn scripts for most factions (Sirius and Za'lek using Empire for now).
    * Added and removed fleets as necessary.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    changed the way spawn position is chosen
    Modified the include paths in the spawn Lua.
    Migrated spawning Lua to dat/factions/spawn/
    * Independent faction now properly spawns ships.
    * Tweaked presences in the tutorial area.
    * Adjusted the spawn scripts to reduce the amount of ships in systems.
    * New weighting should scale ship size to presence better.
    * Spawn scripts for most factions (Sirius and Za'lek using Empire for now).
    * Added and removed fleets as necessary.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Got the new system in and working!
    
    Right now it's just putting generic outfits on everyone. Next step:
    adjust outfits for specific ships and factions.
    Correct 'formation' variable name in spawn/empire.lua
    changed the way spawn position is chosen
    Occasionally spawn large empire fleets
    Change way of setting leader
    Spawn empire ships in formation
    add bounty hunters to more factions
    * Upped unique percent to what it was before (although somewhat uncomparable).
    * Removed unique event and put unique spawning directly in spawn scripts.
    Modified the include paths in the spawn Lua.
    Migrated spawning Lua to dat/factions/spawn/
    Spawn script improvements - Increased  presence weight uniformity for various classes of shipss, diversified Dvaered spawning.
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * More spawning tweaks.
    * Adjusted the spawn scripts to reduce the amount of ships in systems.
    * New weighting should scale ship size to presence better.
    * Added common ai spawn framework.
    * More sane spawning script, still some issues with some stuff.
    * Changed how the pilots are returned internally from spawn script.
    * Set per pilot faction presence.
    * It seems like the faction spawning scripts can work now.
    * Added base empire Lua spawn script.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Split up traders into "independent" and "Traders Guild" traders.
    
    There's not much of a difference other than the "Traders Guild" traders
    are a part of the Traders Guild (faction with a reputation), while
    the "independent" traders are a part of a static faction.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    changed the way spawn position is chosen
    Modified the include paths in the spawn Lua.
    Migrated spawning Lua to dat/factions/spawn/
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * More spawning tweaks.
    * Adjusted the spawn scripts to reduce the amount of ships in systems.
    * New weighting should scale ship size to presence better.
    * Civilians and traders now call the universe their home.
    * Zied is now Independent.
    * Added a new landable planet in Ingot (for the Baron missions).
    * Baron's ship now circles the planet in the baron_baron mission.
    * Minor tweak to trader spawn script.
    * Spawn scripts for most factions (Sirius and Za'lek using Empire for now).
    * Added and removed fleets as necessary.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Added support for factions not using generic NPC messages.
    
    This is so that the Thurion, Proteron, FLF, and Pirate factions
    don't say things that make no sense for them. It also avoids the
    strange presence of non-FLF civilians in Sindbad and non-pirate
    civilians in Pirate strongholds.
    
    Mission aftercare messages and lore text are affected. Hint texts
    are left as-is (there's no potential continuity problem with those).
    changed the way spawn position is chosen
    Use formations with other factions
    Modified the include paths in the spawn Lua.
    Migrated spawning Lua to dat/factions/spawn/
    Spawn script improvements - Increased  presence weight uniformity for various classes of shipss, diversified Dvaered spawning.
    * More spawning tweaks.
    * Adjusted the spawn scripts to reduce the amount of ships in systems.
    * New weighting should scale ship size to presence better.
    * Spawn scripts for most factions (Sirius and Za'lek using Empire for now).
    * Added and removed fleets as necessary.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Adjusted equipping and spawning of miners.
    
    AI is massively broken. I'll fix that next.
    added the miners faction
    changed the way spawn position is chosen
    Modified the include paths in the spawn Lua.
    Migrated spawning Lua to dat/factions/spawn/
    * More spawning tweaks.
    * Syntax error fix.
    * Spawn scripts for most factions (Sirius and Za'lek using Empire for now).
    * Added and removed fleets as necessary.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    changed the way spawn position is chosen
    Use formations with other factions
    add bounty hunters to more factions
    Modified the include paths in the spawn Lua.
    Migrated spawning Lua to dat/factions/spawn/
    Spawn script improvements - Increased  presence weight uniformity for various classes of shipss, diversified Dvaered spawning.
    Modified Sirius spawn script for new ship and repurposing of Divinity.
    Forgot to get rid of Peacemaker from the Sirius spawn list.
    Got rid of Empire placeholders, Sirius ships now spawn where appropriate.
    * More spawning tweaks.
    * Adjusted the spawn scripts to reduce the amount of ships in systems.
    * New weighting should scale ship size to presence better.
    * Spawn scripts for most factions (Sirius and Za'lek using Empire for now).
    * Added and removed fleets as necessary.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Rename Thurion pilots to "Unknown" if the Thurion faction is unknown.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Add Thurion destroyer and carrier.
    Added mission services to hs and ns planets, bar service to hs planets.
    
    Also enabled most neutral missions for the Thurions. (Excluded bounty
    hunting since it seems the Thurions would be above that.)
    changed the way spawn position is chosen
    Added a new Thurion freighter and Thurion weapons.
    Add new Thurion ship
    Added two new Thurion ships (light fighter and bomber) and some new Thurion modifier outfits.
    Use formations with other factions
    major zalek update
    * Updated paths in thurion scripts.
    * Fixed thurion scripts.
    thurion now spawns. It is using empire ships as placeholders for now.
    Spawn script improvements - Increased  presence weight uniformity for various classes of shipss, diversified Dvaered spawning.
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * More spawning tweaks.
    * Adjusted the spawn scripts to reduce the amount of ships in systems.
    * New weighting should scale ship size to presence better.
    * Added common ai spawn framework.
    * More sane spawning script, still some issues with some stuff.
    * Changed how the pilots are returned internally from spawn script.
    * Set per pilot faction presence.
    * It seems like the faction spawning scripts can work now.
    * Added base empire Lua spawn script.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    corrected bug in collective spawn
    changed the way spawn position is chosen
    Use formations with other factions
    Drop Collective Heavy Drone presence to 30
    general update, hopefully not broken
    Modified the include paths in the spawn Lua.
    Migrated spawning Lua to dat/factions/spawn/
    * Adjusted the spawn scripts to reduce the amount of ships in systems.
    * New weighting should scale ship size to presence better.
    * Spawn scripts for most factions (Sirius and Za'lek using Empire for now).
    * Added and removed fleets as necessary.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Added a Dissident Dead Or Alive Bounty mission for the Proteron.
    
    Also fixed the fact that Dissident presence was spawning Civilian
    ships and not Dissident ships.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    changed the way spawn position is chosen
    Modified the include paths in the spawn Lua.
    Migrated spawning Lua to dat/factions/spawn/
    * More spawning tweaks.
    * Syntax error fix.
    * Spawn scripts for most factions (Sirius and Za'lek using Empire for now).
    * Added and removed fleets as necessary.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Got the new system in and working!
    
    Right now it's just putting generic outfits on everyone. Next step:
    adjust outfits for specific ships and factions.
    changed the way pirates and FLF spawn
    changed the way spawn position is chosen
    Use formations with other factions
    * Upped unique percent to what it was before (although somewhat uncomparable).
    * Removed unique event and put unique spawning directly in spawn scripts.
    Modified the include paths in the spawn Lua.
    Migrated spawning Lua to dat/factions/spawn/
    Added the Pirate Phalanx to the pirate spawn script.
    Spawn script improvements - Increased  presence weight uniformity for various classes of shipss, diversified Dvaered spawning.
    Added some more variety to the pirate spawning.
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * More spawning tweaks.
    * Adjusted the spawn scripts to reduce the amount of ships in systems.
    * New weighting should scale ship size to presence better.
    * Spawn scripts for most factions (Sirius and Za'lek using Empire for now).
    * Added and removed fleets as necessary.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    changed the way spawn position is chosen
    Use formations with other factions
    Modified the include paths in the spawn Lua.
    Migrated spawning Lua to dat/factions/spawn/
    Spawn script improvements - Increased  presence weight uniformity for various classes of shipss, diversified Dvaered spawning.
    * Spawn scripts for most factions (Sirius and Za'lek using Empire for now).
    * Added and removed fleets as necessary.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    changed the way spawn position is chosen
    Use formations with other factions
    add bounty hunters to more factions
    Bring the Za'lek spawn script in line with other factions
    general update, hopefully not broken
    major zalek update
    zalek ships and further map fixes
    dragging the zalek branch kicking and screaming into modern naev
    Modified the include paths in the spawn Lua.
    Migrated spawning Lua to dat/factions/spawn/
    Spawn script improvements - Increased  presence weight uniformity for various classes of shipss, diversified Dvaered spawning.
    * More spawning tweaks.
    * Adjusted the spawn scripts to reduce the amount of ships in systems.
    * New weighting should scale ship size to presence better.
    * Spawn scripts for most factions (Sirius and Za'lek using Empire for now).
    * Added and removed fleets as necessary.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    add bounty hunters to more factions
    * Bountyhunter -> Bounty Hunter.
    add bountyhunters patrols in Dvaered space
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    changed the way spawn position is chosen
    add bounty hunters to more factions
    add variety to the frontier patrols
    Modified the include paths in the spawn Lua.
    Migrated spawning Lua to dat/factions/spawn/
    * Spawn scripts for most factions (Sirius and Za'lek using Empire for now).
    * Added and removed fleets as necessary.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed Soromid Brigand equip code.
    Plasma Blaster option (forgot to commit this)
    Added weapon defs for Soromid Brigand.
    Got the new system in and working!
    
    Right now it's just putting generic outfits on everyone. Next step:
    adjust outfits for specific ships and factions.
    * Make it clear soromid changes are temporary.
    add the soromid equip file
    Add Heavy Ripper Turrets to the Empire equipper
    Remove Heavy Ripper Cannon from Empire small weapons list
    
    Prevents Sharks from being stuck with no cannons. The script should
    eventually be modified so that Lancelots can make use of their one
    medium weapon slot.
    Increase core outfit equipping granularity
    
    As most core outfits are balanced into two tiers per slot size, the equip
    scripts need to be aware of that, and avoid putting e.g. destroyer armour
    onto a corvette, or a needlessly-slow heavy fighter engine onto a small
    ship like a Llama.
    Minor improvements to the equip scripts
    Modified equip scripts for new hulls
    Renamed a variety of core hulls throughout XML and Lua
    
    'Schafer & Kane' has been replaced with 'S&K' in most places
    Several Unicorp and S&K platings have new names
    Preliminary reworking of the equip scripts
    Strip all outfits (including cores) when equipping ships
    Completed engine renaming (in both XML and Lua)
    equip fix for master
    * Always equip cores first.
    * Added core outfits to equip scripts. Spawns obscures warnings at the moment.
    ** Generic ships get lowish-end equipment.
    ** Faction ships get slightly worse than the top of the line.
    ** Pirates get slightly worse than faction ships.
    Migrated equipping Lua to dat/factions/equip/
    * APUs no longer feature in equip scripts.
    * New Headhunter stats, added an alternative Headhunter launcher.
    * Seeker missile is now the Fury class interceptor missile.
    * Added an alternative launcher for the Fury missile.
    * Fixed equipper scripts.
    * Note: using an <arc> node to signify lockon arc. Currently not implemented.
    Allow Dvaered and Empire cruisers to sometimes get some medium turrets (for fending off fighters).
    Reworked equipping to allow arbtirary numbers of weapon groups instead of two.
    * Improved and using the new Laser weapon tree. Unbalanced atm.
    * Correctness++.
    Improved Empire generation.
    * More code clean up.
    * Added ship Lua API.
    * Fixed scripts for changes.
    * Created helper script for easy inclusion in the unique code.
    * Added empire outfitting stuff.
    * Hyenas should no longer have seekers.
    * Aded pirate eqipment algorithm.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Replaced ship defs with type defs, fixed a typo.
    Fixed up some equips.
    Got the new system in and working!
    
    Right now it's just putting generic outfits on everyone. Next step:
    adjust outfits for specific ships and factions.
    Add secondaries last so the turrets' slots aren't taken
    Increase core outfit equipping granularity
    
    As most core outfits are balanced into two tiers per slot size, the equip
    scripts need to be aware of that, and avoid putting e.g. destroyer armour
    onto a corvette, or a needlessly-slow heavy fighter engine onto a small
    ship like a Llama.
    Give Dvaered Vendettas and Ancestors 300-ton engines
    Minor improvements to the equip scripts
    Renamed a variety of core hulls throughout XML and Lua
    
    'Schafer & Kane' has been replaced with 'S&K' in most places
    Several Unicorp and S&K platings have new names
    Preliminary reworking of the equip scripts
    Strip all outfits (including cores) when equipping ships
    Completed engine renaming (in both XML and Lua)
    equip fix for master
    * Always equip cores first.
    * Added core outfits to equip scripts. Spawns obscures warnings at the moment.
    ** Generic ships get lowish-end equipment.
    ** Faction ships get slightly worse than the top of the line.
    ** Pirates get slightly worse than faction ships.
    Migrated equipping Lua to dat/factions/equip/
    * APUs no longer feature in equip scripts.
    * Mace rockets are now fast-fire dogfight missiles.
    * Seeker missile is now the Fury class interceptor missile.
    * Added an alternative launcher for the Fury missile.
    * Fixed equipper scripts.
    * Note: using an <arc> node to signify lockon arc. Currently not implemented.
    Allow Dvaered and Empire cruisers to sometimes get some medium turrets (for fending off fighters).
    Reworked equipping to allow arbtirary numbers of weapon groups instead of two.
    * icmb is now a helper function.
    * Dvaered now properly should use dvaered weaponry.
    * Implemented most of the kinetic tree.
    * Improved and using the new Laser weapon tree. Unbalanced atm.
    Fixed sprite, added Vigilance to fleets & presences.
    * More code clean up.
    * Added ship Lua API.
    * Fixed scripts for changes.
    * Created helper script for easy inclusion in the unique code.
    * Dvaered get proper equipment again.
    * Added empire outfitting stuff.
    * Hyenas should no longer have seekers.
    * Aded pirate eqipment algorithm.
    Renamed Boarding Androids outfits to comply with typical naming conventions.
    Fixed erroneous sed replacement of include -> require.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Fixed broken warning code
    Added core system definitions for Soromid ship types.
    Fixed adding of cargo
    Fixed adding of cargo
    Added giving ships random cargo.
    Removed fighter bays from AI ship equips.
    
    I knew AI ships couldn't use bays properly, but it turns out that
    they use them in a wrong way that breaks the game. This commit removes
    those outfits; this is a temporary measure until the situation with
    AI ships having fighter bays.
    Fixed up that method (no more long freeze)
    Utilize probability field for some generic outfits.
    Added support for specifying probabilities (currently unused), fixed num and varied.
    Fixed the backup hull being wrongly an engine.
    Za'lek outfits + fixes
    Specific equips for Sirius and Thurion.
    
    Also move Empire Lancelot def to generic.lua (for the sake of the emp lancelot
    fighter bay).
    Weakened the Mule a bit.
    
    The combat advantage the Rhino had over the Mule was too strong I think.
    I've weakened the Mule a bit to correct this.
    Fixed up some equips.
    Got the new system in and working!
    
    Right now it's just putting generic outfits on everyone. Next step:
    adjust outfits for specific ships and factions.
    Structurals table
    More work on the equipper thingy
    Started work on replacing the way outfits are equipped.
    
    No actual code yet; I've just put together the main table that's
    going to be used for it.
    Prevent the merchant equipper from trying to equip too many outfits
    Increase core outfit equipping granularity
    
    As most core outfits are balanced into two tiers per slot size, the equip
    scripts need to be aware of that, and avoid putting e.g. destroyer armour
    onto a corvette, or a needlessly-slow heavy fighter engine onto a small
    ship like a Llama.
    Minor improvements to the equip scripts
    Modified equip scripts for new hulls
    Renamed a variety of core hulls throughout XML and Lua
    
    'Schafer & Kane' has been replaced with 'S&K' in most places
    Several Unicorp and S&K platings have new names
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Preliminary reworking of the equip scripts
    Completed engine renaming (in both XML and Lua)
    general update, hopefully not broken
    changed order of equip_cores to equip system core first, to prevent negative cpu bug
    * Fixed core slot equipping issue.
    * Removed redundant warning.
    * Use warn, not print.
    * Remove old cores prior to installing new ones.
    * Do not force cores.
    * Install core slots first, then other outfits.
    * Bypass checks when installing core outfits.
    * Fixed some errors.
    * Added core outfits to equip scripts. Spawns obscures warnings at the moment.
    ** Generic ships get lowish-end equipment.
    ** Faction ships get slightly worse than the top of the line.
    ** Pirates get slightly worse than faction ships.
    Handle Trader vessels somewhat specially. Merchant ships should be half-decently armed most of the time.
    Migrated equipping Lua to dat/factions/equip/
    * APUs no longer feature in equip scripts.
    * Seeker missile is now the Fury class interceptor missile.
    * Added an alternative launcher for the Fury missile.
    * Fixed equipper scripts.
    * Note: using an <arc> node to signify lockon arc. Currently not implemented.
    Reworked equipping to allow arbtirary numbers of weapon groups instead of two.
    * Equipment for scouts should be fixed.
    Fixed up generic generation, presences.
    * More code clean up.
    * Added ship Lua API.
    * Fixed scripts for changes.
    * Created helper script for easy inclusion in the unique code.
    * Fixed bug with bombers.
    * Split equip.lua script.
    * Made more bits common.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Added more ships for pirate ship stealing.
    
    This also changes "Za'lek Prototype Cruiser" to just "Za'lek Prototype"
    and adds Za'lek ships that were mission from tech.xml.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Removed fighter bays from AI ship equips.
    
    I knew AI ships couldn't use bays properly, but it turns out that
    they use them in a wrong way that breaks the game. This commit removes
    those outfits; this is a temporary measure until the situation with
    AI ships having fighter bays.
    Replaced ship defs with type defs, fixed a typo.
    Za'lek outfits + fixes
    Specific equips for Sirius and Thurion.
    
    Also move Empire Lancelot def to generic.lua (for the sake of the emp lancelot
    fighter bay).
    Got the new system in and working!
    
    Right now it's just putting generic outfits on everyone. Next step:
    adjust outfits for specific ships and factions.
    Add Heavy Ripper Turrets to the Empire equipper
    Remove Heavy Ripper Cannon from Empire small weapons list
    
    Prevents Sharks from being stuck with no cannons. The script should
    eventually be modified so that Lancelots can make use of their one
    medium weapon slot.
    Increase core outfit equipping granularity
    
    As most core outfits are balanced into two tiers per slot size, the equip
    scripts need to be aware of that, and avoid putting e.g. destroyer armour
    onto a corvette, or a needlessly-slow heavy fighter engine onto a small
    ship like a Llama.
    Minor improvements to the equip scripts
    Modified equip scripts for new hulls
    Renamed a variety of core hulls throughout XML and Lua
    
    'Schafer & Kane' has been replaced with 'S&K' in most places
    Several Unicorp and S&K platings have new names
    Preliminary reworking of the equip scripts
    Strip all outfits (including cores) when equipping ships
    Completed engine renaming (in both XML and Lua)
    equip fix for master
    * Always equip cores first.
    * Added core outfits to equip scripts. Spawns obscures warnings at the moment.
    ** Generic ships get lowish-end equipment.
    ** Faction ships get slightly worse than the top of the line.
    ** Pirates get slightly worse than faction ships.
    Migrated equipping Lua to dat/factions/equip/
    * APUs no longer feature in equip scripts.
    * New Headhunter stats, added an alternative Headhunter launcher.
    * Seeker missile is now the Fury class interceptor missile.
    * Added an alternative launcher for the Fury missile.
    * Fixed equipper scripts.
    * Note: using an <arc> node to signify lockon arc. Currently not implemented.
    Allow Dvaered and Empire cruisers to sometimes get some medium turrets (for fending off fighters).
    Reworked equipping to allow arbtirary numbers of weapon groups instead of two.
    * Improved and using the new Laser weapon tree. Unbalanced atm.
    * Correctness++.
    Improved Empire generation.
    * More code clean up.
    * Added ship Lua API.
    * Fixed scripts for changes.
    * Created helper script for easy inclusion in the unique code.
    * Added empire outfitting stuff.
    * Hyenas should no longer have seekers.
    * Aded pirate eqipment algorithm.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Added entries for the Archimedes in Proteron definition.
    Fixed up equip script, improved Proteron kahan balancing.
    
    This replaces the heavier weapons and extra med utility slot with
    lighter size and an extra lge structural. Works better that way I
    think. The lighter mass (lightest mass of any cruiser) enables it
    to be faster than other cruisers while carrying more of a payload.
    Given this, it's had its time dilation value decreased as well,
    to 175% (compared to the 150% time dilation of corvettes), not
    unlike the Kestrel in that sense.
    Fixed up the Proteron Derivative's description, started on Proteron equips.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Adjusted equipping and spawning of miners.
    
    AI is massively broken. I'll fix that next.
    Removed now unnecessary "asterokiller" weapons.
    Got the new system in and working!
    
    Right now it's just putting generic outfits on everyone. Next step:
    adjust outfits for specific ships and factions.
    added the miners faction
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Removed fighter bays from AI ship equips.
    
    I knew AI ships couldn't use bays properly, but it turns out that
    they use them in a wrong way that breaks the game. This commit removes
    those outfits; this is a temporary measure until the situation with
    AI ships having fighter bays.
    Replaced ship defs with type defs, fixed a typo.
    Za'lek outfits + fixes
    Specific equips for Sirius and Thurion.
    
    Also move Empire Lancelot def to generic.lua (for the sake of the emp lancelot
    fighter bay).
    Got the new system in and working!
    
    Right now it's just putting generic outfits on everyone. Next step:
    adjust outfits for specific ships and factions.
    Add Heavy Razor Turrets to the Sirius equipper
    Increase core outfit equipping granularity
    
    As most core outfits are balanced into two tiers per slot size, the equip
    scripts need to be aware of that, and avoid putting e.g. destroyer armour
    onto a corvette, or a needlessly-slow heavy fighter engine onto a small
    ship like a Llama.
    Minor improvements to the equip scripts
    Modified equip scripts for new hulls
    Renamed a variety of core hulls throughout XML and Lua
    
    'Schafer & Kane' has been replaced with 'S&K' in most places
    Several Unicorp and S&K platings have new names
    Preliminary reworking of the equip scripts
    Strip all outfits (including cores) when equipping ships
    Completed engine renaming (in both XML and Lua)
    equip fix for master
    * Always equip cores first.
    * Added core outfits to equip scripts. Spawns obscures warnings at the moment.
    ** Generic ships get lowish-end equipment.
    ** Faction ships get slightly worse than the top of the line.
    ** Pirates get slightly worse than faction ships.
    Migrated equipping Lua to dat/factions/equip/
    * APUs no longer feature in equip scripts.
    * New Headhunter stats, added an alternative Headhunter launcher.
    * Seeker missile is now the Fury class interceptor missile.
    * Added an alternative launcher for the Fury missile.
    * Fixed equipper scripts.
    * Note: using an <arc> node to signify lockon arc. Currently not implemented.
    Reworked equipping to allow arbtirary numbers of weapon groups instead of two.
    * Sirius get their own equip lua.
    * Improved and using the new Laser weapon tree. Unbalanced atm.
    * Correctness++.
    Improved Empire generation.
    * More code clean up.
    * Added ship Lua API.
    * Fixed scripts for changes.
    * Created helper script for easy inclusion in the unique code.
    * Added empire outfitting stuff.
    * Hyenas should no longer have seekers.
    * Aded pirate eqipment algorithm.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed Boarding Androids outfits to comply with typical naming conventions.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Add Thurion destroyer and carrier.
    Replaced ship defs with type defs, fixed a typo.
    Za'lek outfits + fixes
    Specific equips for Sirius and Thurion.
    
    Also move Empire Lancelot def to generic.lua (for the sake of the emp lancelot
    fighter bay).
    Got the new system in and working!
    
    Right now it's just putting generic outfits on everyone. Next step:
    adjust outfits for specific ships and factions.
    Added a new Thurion freighter and Thurion weapons.
    Added two new Thurion ships (light fighter and bomber) and some new Thurion modifier outfits.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Added Lancelot definitions to pirate equips.
    Replaced ship defs with type defs, fixed a typo.
    Fixed up some equips.
    Got the new system in and working!
    
    Right now it's just putting generic outfits on everyone. Next step:
    adjust outfits for specific ships and factions.
    Use Krain Remige engines in the pirate equipper
    Broaden the range of small pirates' core outfit tier.
    
    The engines are most important here, as it gives new players a non-zero
    chance of being able to outrun pirate fighters.
    Increase core outfit equipping granularity
    
    As most core outfits are balanced into two tiers per slot size, the equip
    scripts need to be aware of that, and avoid putting e.g. destroyer armour
    onto a corvette, or a needlessly-slow heavy fighter engine onto a small
    ship like a Llama.
    Minor improvements to the equip scripts
    Modified equip scripts for new hulls
    Renamed a variety of core hulls throughout XML and Lua
    
    'Schafer & Kane' has been replaced with 'S&K' in most places
    Several Unicorp and S&K platings have new names
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Preliminary reworking of the equip scripts
    Strip all outfits (including cores) when equipping ships
    Completed engine renaming (in both XML and Lua)
    * Always equip cores first.
    * Added core outfits to equip scripts. Spawns obscures warnings at the moment.
    ** Generic ships get lowish-end equipment.
    ** Faction ships get slightly worse than the top of the line.
    ** Pirates get slightly worse than faction ships.
    Migrated equipping Lua to dat/factions/equip/
    * APUs no longer feature in equip scripts.
    * Give pirates more dumbfire missiles and fewer seekers.
    * Removed silliness in equip/pirate.lua detected by green dog.
    * Banshee rockets are now hard target killers.
    * Seeker missile is now the Fury class interceptor missile.
    * Added an alternative launcher for the Fury missile.
    * Fixed equipper scripts.
    * Note: using an <arc> node to signify lockon arc. Currently not implemented.
    Reworked equipping to allow arbtirary numbers of weapon groups instead of two.
    Fixed typo in ai/equip/pirate.lua.  'Heavy laser' => 'Heavy Laser'.
    * Added heavy laser to high end pirate turrets.
    * fix equipping big Pirate ships (like Kestrel)
    * Pirates get better stuff, not as good as factional.
    * Pirates get crazy mix of low end weapons.
    * Renamed equip plasma blaster to plasma blaster mk1.
    * Improved and using the new Laser weapon tree. Unbalanced atm.
    Replaced all comm graphics with renders from a new angle. Added Shark and Rhino. Made modifications to spawning and equipping scripts.
    * More code clean up.
    * Added ship Lua API.
    * Fixed scripts for changes.
    * Created helper script for easy inclusion in the unique code.
    * Now truly hyenas should have no launchers.
    * Hyenas should no longer have seekers.
    * Aded pirate eqipment algorithm.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed Boarding Androids outfits to comply with typical naming conventions.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Za'lek weapons tweak
    
    Added two new missile launchers for medium and heavy Za'lek ships. Balanced close to Thurion launchers as the two factions are close tech-wise. Also modified the equip file so Za'lek ships should use the launchers.
    Whoops, forgot to save the Za'lek file change!
    Replaced ship defs with type defs, fixed a typo.
    Za'lek outfits + fixes
    Got the new system in and working!
    
    Right now it's just putting generic outfits on everyone. Next step:
    adjust outfits for specific ships and factions.
    Assorted Changes
    
    Makes Za'lek drones more drone-like (They'll never be piloted by the
    player under legit circumstances). Further trying to balance Electron
    Cannons so a mob of Col. HDs can't annihilate heavy ships quite as
    easily (will probably have to switch their damage to shieldbreaker to
    coinside with their desc.).
    changed #nhigh to nhigh since it is already a number
    Increase core outfit equipping granularity
    
    As most core outfits are balanced into two tiers per slot size, the equip
    scripts need to be aware of that, and avoid putting e.g. destroyer armour
    onto a corvette, or a needlessly-slow heavy fighter engine onto a small
    ship like a Llama.
    Minor improvements to the equip scripts
    Modified equip scripts for new hulls
    Renamed a variety of core hulls throughout XML and Lua
    
    'Schafer & Kane' has been replaced with 'S&K' in most places
    Several Unicorp and S&K platings have new names
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Preliminary reworking of the equip scripts
    Strip all outfits (including cores) when equipping ships
    Completed engine renaming (in both XML and Lua)
    major zalek update
    madding more crap complicated by merge conflicts, i am a tool
    Removed unused Zalek assets, made dat changes for zalek personaility, and assets
    dragging the zalek branch kicking and screaming into modern naev
    equip fix for master
    * Always equip cores first.
    * Added core outfits to equip scripts. Spawns obscures warnings at the moment.
    ** Generic ships get lowish-end equipment.
    ** Faction ships get slightly worse than the top of the line.
    ** Pirates get slightly worse than faction ships.
    Migrated equipping Lua to dat/factions/equip/
    * APUs no longer feature in equip scripts.
    * New Headhunter stats, added an alternative Headhunter launcher.
    * Seeker missile is now the Fury class interceptor missile.
    * Added an alternative launcher for the Fury missile.
    * Fixed equipper scripts.
    * Note: using an <arc> node to signify lockon arc. Currently not implemented.
    Allow Dvaered and Empire cruisers to sometimes get some medium turrets (for fending off fighters).
    Reworked equipping to allow arbtirary numbers of weapon groups instead of two.
    * Improved and using the new Laser weapon tree. Unbalanced atm.
    * Correctness++.
    Improved Empire generation.
    * More code clean up.
    * Added ship Lua API.
    * Fixed scripts for changes.
    * Created helper script for easy inclusion in the unique code.
    * Added empire outfitting stuff.
    * Hyenas should no longer have seekers.
    * Aded pirate eqipment algorithm.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * AI configuration is now stored on a per-pilot basis instead of globally.
    * Made noidle ai aggressive.
    * New Mission:  Operation Black Trinity.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    common civilian distress file and advertiser adaptative presence
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Lua gettext.
    Add the careful_face function
    Replace ai.getPlayer() with player.pilot()
    
    I also removed code in ai.c defining a 'player' constant. It was unused
    and interfered with access to the player module
    Rename ai.getPilot() to ai.pilot()
    Replace ai.setcargo() and ai.exists() with use of pilot module
    Replace more ai methods with the standard ones
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Don't put a function into pilot memory before defining it.
    * Civilian ai should now handle bribe and refuel properly.
    * Improved personalities. Pilots will now loiter around the system for a set number of waypoints before leaving.
    * Flee ai has trader personality now.
    * Split AI idle() function into "personalities" that determine basic behavioral patterns.
    ** Patrol personality will fly around or jump or land.
    ** Trader personality will always jump or land.
    ** Civilian personality will fly around and then land if possible (even if it's the planet it took off from), and jump only if left with no other choice.
    * Civilian fleets now have a civilian AI that has the civilian personality.
    * Trader AI has trader personality.
    common civilian distress file and advertiser adaptative presence
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Revamped ec06, pending further tweaks.
    * Re-added the AI scripts.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Lua gettext.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Improved personalities. Pilots will now loiter around the system for a set number of waypoints before leaving.
    * Flee ai has trader personality now.
    * Split AI idle() function into "personalities" that determine basic behavioral patterns.
    ** Patrol personality will fly around or jump or land.
    ** Trader personality will always jump or land.
    ** Civilian personality will fly around and then land if possible (even if it's the planet it took off from), and jump only if left with no other choice.
    * Civilian fleets now have a civilian AI that has the civilian personality.
    * Trader AI has trader personality.
    Added first cinematic event
    *added/finished mission crimelord
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    gettext for AI.
    * Attempt to clean up the whitespace mess in Lua a bit.
    Replace ai.getPlayer() with player.pilot()
    
    I also removed code in ai.c defining a 'player' constant. It was unused
    and interfered with access to the player module
    Rename ai.getPilot() to ai.pilot()
    Replace ai.comm() and ai.broadcast() with pilot module
    Replace ai.setcargo() and ai.exists() with use of pilot module
    Replace more ai methods with the standard ones
    general update, hopefully not broken
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Add Soromid ship AI.
    * Improved personalities. Pilots will now loiter around the system for a set number of waypoints before leaving.
    * Flee ai has trader personality now.
    * Split AI idle() function into "personalities" that determine basic behavioral patterns.
    ** Patrol personality will fly around or jump or land.
    ** Trader personality will always jump or land.
    ** Civilian personality will fly around and then land if possible (even if it's the planet it took off from), and jump only if left with no other choice.
    * Civilian fleets now have a civilian AI that has the civilian personality.
    * Trader AI has trader personality.
    * You can now create pilots taking off.
    * AI now handles taking off.
    * Trader ai uses generic as base.
    * Generic ai template now has distress function.
    * Generic ai template has minimum aggro distance.
    * Updated all AIs to use create_post() which handles some creation stuff.
    Added Proteron system, fixed Peacemaker target, added Peacemaker to presences.
    * More taunts and such by Deiz.
    * AI configuration is now stored on a per-pilot basis instead of globally.
    * Removed AI warnings when player dies and a pilot is created.
    * Should fix some AI warnings.
    * AI does refuel deals based on your standing with their faction.
    * Empire now sometimes refuels.
    * AI can decide not to refuel.
    * Implemented distress.
    * Tweaked credit gains from boarding ships.
    * Gave AI customizeable bribe messages.
    * Reworked attack system a bit.  More versatile now.
    * Some ai changes.
    * Added FLF fleets and FLF ai.
    * Major AI rehaul, split into generic stuff.
    * Added bomber attack routines.
    * Fixed bug with AI forgetting about you if another enemy attacks.
    * Unified attack thinking.
    * Pilots now change targets.
    * Made AI more robust in general.
    * Pushed the land function into basic.lua.
    * Empire ai now properly jumps.
    * Fixed outstanding taunt() bugs in the ai.
    * Added more fleets (unused atm).
    * New AI: Dvaered.
    * Compare enemy against nil.
    * Moved hyperspace() to include/basic.lua.
    * Pirates now run away when hurt.
    * More planet functions for ai: ai.getrndplanet() and ai.getlandplanet().
    * Now all ai include "ai/include/basic.lua" to share attack and runaway functions.
    cleaned up the ai lua a bit, but needs a lot more work
    yes, you can lose faction now, fixed ai to set you as hostile
    more tab removal, fixed up mission var stuff
    branch:      naev
    fixed non-random credits
    branch:      naev
    more verbose ai logging and assorted ai fixes (more moneys)
    branch:      naev
    ai upgrades
    branch:      naev
    fixed empire units needing to face you with turrets
    branch:      naev
    added new station, added actual empire ships and fights with the collective
    branch:      naev
    added militia faction, changed mr.test to militia, added ai_create
    branch:      naev
    [svn] sanitized lua ai api
    branch:      naev
    [svn] AI can now use secondary weapons
    branch:      naev
    [svn] switched to commonwealth spelling (armor -> armour)
    implemented seeker missiles and ammo
    implemented secondary weapons
    branch:      naev
    [svn] more ai functions
    some ai tweaks
    more ai protection
    branch:      naev
    [svn] multiple enemies now supported
    bug fixes
    you can get other ship's health now from AI
    branch:      naev
    [svn] enemies are now properly parsed
    added possibility of pirate
    buffer overflow in ai fixed
    branch:      naev
    [svn] added timer support for the AI
    fixed major buffer overflow in AI
    branch:      naev
    [svn] control_rate no applies properly
    targetted pilot will appear over others
    branch:      naev
    [svn] bug fixes
    support for different AI Profiles
    branch:      naev
    [svn] more ai API
    ai now responds on being attacked
    branch:      naev
    [svn] bug fixes
    fleet improvements
    per pixel collision
    branch:      naev
    [svn] faction system almost fully implemented
    fleets almost fully implemented (just need randomized start positions)
    major bugfix in weapon.c
    branch:      naev
    [svn] added rng function to ai API
    branch:      naev
    [svn] much more error checking in the xml
    fleets are built in - just need to do something with them
    minor tweaks and fixes
    branch:      naev
    [svn] added message system
    fixed spinning laser bug
    branch:      naev
    [svn] some new pack features (list files)
    radial collision detection
    proper adding of the shooting system all about
    branch:      naev
    [svn] more ai api
    minor code changes
    more AI concepts
    branch:      naev
    [svn] minor tweaks
    data file can be defined at runtime
    branch:      naev
    [svn] improved ai API
    fixed minor memory leaks
    cleaned up a bit
    branch:      naev
    [svn] forgot ai dir
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Replace ai.setcargo() and ai.exists() with use of pilot module
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Improved personalities. Pilots will now loiter around the system for a set number of waypoints before leaving.
    * Flee ai has trader personality now.
    * Split AI idle() function into "personalities" that determine basic behavioral patterns.
    ** Patrol personality will fly around or jump or land.
    ** Trader personality will always jump or land.
    ** Civilian personality will fly around and then land if possible (even if it's the planet it took off from), and jump only if left with no other choice.
    * Civilian fleets now have a civilian AI that has the civilian personality.
    * Trader AI has trader personality.
    * Preparing for the new hyperspace ai stuff.
    * ai.pushtask() no longer has a pos argument.
    * Added subtasks with similar api to normal tasks.
     * Subtasks are tied to their task and allow mini state machines.
    * Flee AI will always try to jump ASAP.
    * Fixed flee AI.
    * More flee fixes.
    * Simplified flee AI.
    New defend planet mission and mission template.
    
    Added a new mission available at any planet once player's combat rating is greater than 50.
    
    Also added a new fleet, a new faction, and a new AI to support this mission.
    
    Finally created a new mission template, similar to the old ones, but more verbose.
    * Fixed AI warning.
    * Fixed some minor ai warnings.
    * Minor AI fix.
    * Pilots should abort boarding if they get shot.
    * Fixes rare AI warning.
    * Code clean up.
    * Traders should run when they get lockon.
    * When running should only shoot when in range.
    * getweapdist() now uses boolean instead of number.
    * Implemented boarding for AI pilots.
    * Pilots should now help each other more.
    * Implemented distress.
    * Only chose target if it's closer.
    * Attempts to fix the occasional AI warnings.
    * Fixed typo.
    * Minor ai tweaks.
    * Added small enter delay to ships when entering a system with no planets.
    * AI shouldn't run if enemy has more health then him.
    * Tweaked the decision tree a bit.
    * Removed the horrible, horrible TYPE_PTR from ai.
    * Reworked attack system a bit.  More versatile now.
    * Gave AI some memory.
    * Fixed many AI issues.
    * "runaway" takes priority over attacking.
    * Created an idle task to run when idle for easy to change idle behaviour.
    * Major AI rehaul, split into generic stuff.
    * Added bomber attack routines.
    * Fixed bug with AI forgetting about you if another enemy attacks.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    gettext for AI.
    Replace ai.getPlayer() with player.pilot()
    
    I also removed code in ai.c defining a 'player' constant. It was unused
    and interfered with access to the player module
    Rename ai.getPilot() to ai.pilot()
    Replace ai.comm() and ai.broadcast() with pilot module
    Replace ai.setcargo() and ai.exists() with use of pilot module
    Replace more ai methods with the standard ones
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Improved personalities. Pilots will now loiter around the system for a set number of waypoints before leaving.
    * Flee ai has trader personality now.
    * Split AI idle() function into "personalities" that determine basic behavioral patterns.
    ** Patrol personality will fly around or jump or land.
    ** Trader personality will always jump or land.
    ** Civilian personality will fly around and then land if possible (even if it's the planet it took off from), and jump only if left with no other choice.
    * Civilian fleets now have a civilian AI that has the civilian personality.
    * Trader AI has trader personality.
    * You can now create pilots taking off.
    * AI now handles taking off.
    * Trader ai uses generic as base.
    * Generic ai template now has distress function.
    * Generic ai template has minimum aggro distance.
    * Updated all AIs to use create_post() which handles some creation stuff.
    Gave Dvaered AI 50% chance to taunt, increased the amount of credits it's given.
    * More taunts and such by Deiz.
    * AI configuration is now stored on a per-pilot basis instead of globally.
    * Removed AI warnings when player dies and a pilot is created.
    * Should fix some AI warnings.
    * AI does refuel deals based on your standing with their faction.
    * Tweaked credit gains from boarding ships.
    * Gave AI customizeable bribe messages.
    * Reworked attack system a bit.  More versatile now.
    * Major AI rehaul, split into generic stuff.
    * Added bomber attack routines.
    * Fixed bug with AI forgetting about you if another enemy attacks.
    * Pushed the land function into basic.lua.
    * Fixed outstanding taunt() bugs in the ai.
    * Added more fleets (unused atm).
    * New AI: Dvaered.
    * Compare enemy against nil.
    * Moved hyperspace() to include/basic.lua.
    * Pirates now run away when hurt.
    * More planet functions for ai: ai.getrndplanet() and ai.getlandplanet().
    * Now all ai include "ai/include/basic.lua" to share attack and runaway functions.
    cleaned up the ai lua a bit, but needs a lot more work
    yes, you can lose faction now, fixed ai to set you as hostile
    more tab removal, fixed up mission var stuff
    branch:      naev
    fixed non-random credits
    branch:      naev
    more verbose ai logging and assorted ai fixes (more moneys)
    branch:      naev
    ai upgrades
    branch:      naev
    fixed empire units needing to face you with turrets
    branch:      naev
    added new station, added actual empire ships and fights with the collective
    branch:      naev
    added militia faction, changed mr.test to militia, added ai_create
    branch:      naev
    [svn] sanitized lua ai api
    branch:      naev
    [svn] AI can now use secondary weapons
    branch:      naev
    [svn] switched to commonwealth spelling (armor -> armour)
    implemented seeker missiles and ammo
    implemented secondary weapons
    branch:      naev
    [svn] more ai functions
    some ai tweaks
    more ai protection
    branch:      naev
    [svn] multiple enemies now supported
    bug fixes
    you can get other ship's health now from AI
    branch:      naev
    [svn] enemies are now properly parsed
    added possibility of pirate
    buffer overflow in ai fixed
    branch:      naev
    [svn] added timer support for the AI
    fixed major buffer overflow in AI
    branch:      naev
    [svn] control_rate no applies properly
    targetted pilot will appear over others
    branch:      naev
    [svn] bug fixes
    support for different AI Profiles
    branch:      naev
    [svn] more ai API
    ai now responds on being attacked
    branch:      naev
    [svn] bug fixes
    fleet improvements
    per pixel collision
    branch:      naev
    [svn] faction system almost fully implemented
    fleets almost fully implemented (just need randomized start positions)
    major bugfix in weapon.c
    branch:      naev
    [svn] added rng function to ai API
    branch:      naev
    [svn] much more error checking in the xml
    fleets are built in - just need to do something with them
    minor tweaks and fixes
    branch:      naev
    [svn] added message system
    fixed spinning laser bug
    branch:      naev
    [svn] some new pack features (list files)
    radial collision detection
    proper adding of the shooting system all about
    branch:      naev
    [svn] more ai api
    minor code changes
    more AI concepts
    branch:      naev
    [svn] minor tweaks
    data file can be defined at runtime
    branch:      naev
    [svn] improved ai API
    fixed minor memory leaks
    cleaned up a bit
    branch:      naev
    [svn] forgot ai dir
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Added FLF Pirate Alliance mission (flf_dvk02).
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Initial commit of the first two missions in the Academy Hack campaign.
    * Improved proximity script to allow AI ships to act as the focus.
    * Implemented selective pilot clear script for per-faction ship clearing.
    * No-run AI for Sirius.
    * Moved bulky lua code from mission.xml into rehab_common.lua.
    * Initial commit of ec04 revamp. Currently crashes the game.
    * Re-added the AI scripts.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Remove mem.command
    Replace ai.getPlayer() with player.pilot()
    
    I also removed code in ai.c defining a 'player' constant. It was unused
    and interfered with access to the player module
    Replaced FLF intro mission.
    
    The old FLF "pre02" mission is something I'm not fond of. The length
    of the mission is ridiculous, you realistically have to land on
    Dvaered planets to refuel, and it's ridiculously hard. I also don't
    much like the arbitrary restriction on ship choices.
    
    The new mission instead is taking out *one* patrol, ostensibly of
    three ships and by yourself, but Dvaered reinforcements arrive.
    Shortly after, an event happens:
    
    If you have done missions for the Dvaered before, the leader of the
    reinforcements hails you, asking you to defect to them. If you
    accept, your score with the Dvaered is made to be no less than 0,
    and you are told to go to a certain planet. A few seconds later, a
    large group of FLF pilots appears and attacks you. If you refuse,
    the same large group of FLF pilots appears and helps you.
    
    If you have not done missions for the Dvaered before, a large group
    of FLF pilots appears and helps you.
    
    This new mission actually favors small, fast ships over large ships;
    the reinforcements are so powerful that it is usually impossible to
    beat them on your own, regardless of the size of your ship. You
    have to depend on the help that comes from the FLF fighters.
    
    I am going to recycle the mission you are told this is as a generic
    mission for the FLF from the mission computer, accessible only after
    this mission is beaten.
    
    Conflicts:
    
            dat/events/neutral/npc.lua
            dat/missions/empire/emp_pirbounty.lua
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Improved personalities. Pilots will now loiter around the system for a set number of waypoints before leaving.
    * Flee ai has trader personality now.
    * Split AI idle() function into "personalities" that determine basic behavioral patterns.
    ** Patrol personality will fly around or jump or land.
    ** Trader personality will always jump or land.
    ** Civilian personality will fly around and then land if possible (even if it's the planet it took off from), and jump only if left with no other choice.
    * Civilian fleets now have a civilian AI that has the civilian personality.
    * Trader AI has trader personality.
    * AI configuration is now stored on a per-pilot basis instead of globally.
    * Fixed some escort ai issues.
    * Escorts can now return to ship.
    * First template for real escorts.
    * Added a new simple ai for mission pilots that need to escort the player.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    gettext for AI.
    Replace ai.getPlayer() with player.pilot()
    
    I also removed code in ai.c defining a 'player' constant. It was unused
    and interfered with access to the player module
    Rename ai.getPilot() to ai.pilot()
    Replace ai.comm() and ai.broadcast() with pilot module
    Replace ai.setcargo() and ai.exists() with use of pilot module
    Replace more ai methods with the standard ones
    little correction
    added a police AI for the frontier
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Improved personalities. Pilots will now loiter around the system for a set number of waypoints before leaving.
    * Flee ai has trader personality now.
    * Split AI idle() function into "personalities" that determine basic behavioral patterns.
    ** Patrol personality will fly around or jump or land.
    ** Trader personality will always jump or land.
    ** Civilian personality will fly around and then land if possible (even if it's the planet it took off from), and jump only if left with no other choice.
    * Civilian fleets now have a civilian AI that has the civilian personality.
    * Trader AI has trader personality.
    * You can now create pilots taking off.
    * AI now handles taking off.
    * Trader ai uses generic as base.
    * Generic ai template now has distress function.
    * Generic ai template has minimum aggro distance.
    * Updated all AIs to use create_post() which handles some creation stuff.
    Gave Dvaered AI 50% chance to taunt, increased the amount of credits it's given.
    * More taunts and such by Deiz.
    * AI configuration is now stored on a per-pilot basis instead of globally.
    * Removed AI warnings when player dies and a pilot is created.
    * Should fix some AI warnings.
    * AI does refuel deals based on your standing with their faction.
    * Tweaked credit gains from boarding ships.
    * Gave AI customizeable bribe messages.
    * Reworked attack system a bit.  More versatile now.
    * Major AI rehaul, split into generic stuff.
    * Added bomber attack routines.
    * Fixed bug with AI forgetting about you if another enemy attacks.
    * Pushed the land function into basic.lua.
    * Fixed outstanding taunt() bugs in the ai.
    * Added more fleets (unused atm).
    * New AI: Dvaered.
    * Compare enemy against nil.
    * Moved hyperspace() to include/basic.lua.
    * Pirates now run away when hurt.
    * More planet functions for ai: ai.getrndplanet() and ai.getlandplanet().
    * Now all ai include "ai/include/basic.lua" to share attack and runaway functions.
    cleaned up the ai lua a bit, but needs a lot more work
    yes, you can lose faction now, fixed ai to set you as hostile
    more tab removal, fixed up mission var stuff
    branch:      naev
    fixed non-random credits
    branch:      naev
    more verbose ai logging and assorted ai fixes (more moneys)
    branch:      naev
    ai upgrades
    branch:      naev
    fixed empire units needing to face you with turrets
    branch:      naev
    added new station, added actual empire ships and fights with the collective
    branch:      naev
    added militia faction, changed mr.test to militia, added ai_create
    branch:      naev
    [svn] sanitized lua ai api
    branch:      naev
    [svn] AI can now use secondary weapons
    branch:      naev
    [svn] switched to commonwealth spelling (armor -> armour)
    implemented seeker missiles and ammo
    implemented secondary weapons
    branch:      naev
    [svn] more ai functions
    some ai tweaks
    more ai protection
    branch:      naev
    [svn] multiple enemies now supported
    bug fixes
    you can get other ship's health now from AI
    branch:      naev
    [svn] enemies are now properly parsed
    added possibility of pirate
    buffer overflow in ai fixed
    branch:      naev
    [svn] added timer support for the AI
    fixed major buffer overflow in AI
    branch:      naev
    [svn] control_rate no applies properly
    targetted pilot will appear over others
    branch:      naev
    [svn] bug fixes
    support for different AI Profiles
    branch:      naev
    [svn] more ai API
    ai now responds on being attacked
    branch:      naev
    [svn] bug fixes
    fleet improvements
    per pixel collision
    branch:      naev
    [svn] faction system almost fully implemented
    fleets almost fully implemented (just need randomized start positions)
    major bugfix in weapon.c
    branch:      naev
    [svn] added rng function to ai API
    branch:      naev
    [svn] much more error checking in the xml
    fleets are built in - just need to do something with them
    minor tweaks and fixes
    branch:      naev
    [svn] added message system
    fixed spinning laser bug
    branch:      naev
    [svn] some new pack features (list files)
    radial collision detection
    proper adding of the shooting system all about
    branch:      naev
    [svn] more ai api
    minor code changes
    more AI concepts
    branch:      naev
    [svn] minor tweaks
    data file can be defined at runtime
    branch:      naev
    [svn] improved ai API
    fixed minor memory leaks
    cleaned up a bit
    branch:      naev
    [svn] forgot ai dir
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    gettext for AI.
    Rename ai.getPilot() to ai.pilot()
    Replace ai.comm() and ai.broadcast() with pilot module
    Replace more ai methods with the standard ones
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Improved personalities. Pilots will now loiter around the system for a set number of waypoints before leaving.
    * Flee ai has trader personality now.
    * Split AI idle() function into "personalities" that determine basic behavioral patterns.
    ** Patrol personality will fly around or jump or land.
    ** Trader personality will always jump or land.
    ** Civilian personality will fly around and then land if possible (even if it's the planet it took off from), and jump only if left with no other choice.
    * Civilian fleets now have a civilian AI that has the civilian personality.
    * Trader AI has trader personality.
    * You can now create pilots taking off.
    * AI now handles taking off.
    * Trader ai uses generic as base.
    * Generic ai template now has distress function.
    * Generic ai template has minimum aggro distance.
    * Updated all AIs to use create_post() which handles some creation stuff.
    * More taunts and such by Deiz.
    * AI configuration is now stored on a per-pilot basis instead of globally.
    * Tweaked credit gains from boarding ships.
    * New mission.
    * Tweaked some old missions.
    * New ai.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    gettext for AI.
    Replace ai.getPlayer() with player.pilot()
    
    I also removed code in ai.c defining a 'player' constant. It was unused
    and interfered with access to the player module
    Replace ai.setcargo() and ai.exists() with use of pilot module
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Improved personalities. Pilots will now loiter around the system for a set number of waypoints before leaving.
    * Flee ai has trader personality now.
    * Split AI idle() function into "personalities" that determine basic behavioral patterns.
    ** Patrol personality will fly around or jump or land.
    ** Trader personality will always jump or land.
    ** Civilian personality will fly around and then land if possible (even if it's the planet it took off from), and jump only if left with no other choice.
    * Civilian fleets now have a civilian AI that has the civilian personality.
    * Trader AI has trader personality.
    * Refuel the ship in middle of the final collective mission.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Initial commit of ec04 revamp. Currently crashes the game.
    * Re-added the AI scripts.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    gettext for AI.
    Add the careful_face function
    Replace ai.getPlayer() with player.pilot()
    
    I also removed code in ai.c defining a 'player' constant. It was unused
    and interfered with access to the player module
    Rename ai.getPilot() to ai.pilot()
    Replace ai.comm() and ai.broadcast() with pilot module
    Replace ai.setcargo() and ai.exists() with use of pilot module
    Replace more ai methods with the standard ones
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * FLF also should get more money now, bug spotted by Mike.pink.
    * Improved personalities. Pilots will now loiter around the system for a set number of waypoints before leaving.
    * Flee ai has trader personality now.
    * Split AI idle() function into "personalities" that determine basic behavioral patterns.
    ** Patrol personality will fly around or jump or land.
    ** Trader personality will always jump or land.
    ** Civilian personality will fly around and then land if possible (even if it's the planet it took off from), and jump only if left with no other choice.
    * Civilian fleets now have a civilian AI that has the civilian personality.
    * Trader AI has trader personality.
    * You can now create pilots taking off.
    * AI now handles taking off.
    * Trader ai uses generic as base.
    * Generic ai template now has distress function.
    * Generic ai template has minimum aggro distance.
    * Updated all AIs to use create_post() which handles some creation stuff.
    * More taunts and such by Deiz.
    * AI configuration is now stored on a per-pilot basis instead of globally.
    * Removed AI warnings when player dies and a pilot is created.
    * FLF now does bribes and refueling.
    fixes typo
    * Tweaked credit gains from boarding ships.
    * Reworked attack system a bit.  More versatile now.
    * Some ai changes.
    * Added FLF fleets and FLF ai.
    * Major AI rehaul, split into generic stuff.
    * Added bomber attack routines.
    * Fixed bug with AI forgetting about you if another enemy attacks.
    * Unified attack thinking.
    * Pilots now change targets.
    * Made AI more robust in general.
    * Fixed outstanding taunt() bugs in the ai.
    * Added more fleets (unused atm).
    * New AI: Dvaered.
    * Increased pirate credits.
    * Moved hyperspace() to include/basic.lua.
    * Pirates now run away when hurt.
    * Now all ai include "ai/include/basic.lua" to share attack and runaway functions.
    cleaned up the ai lua a bit, but needs a lot more work
    more tab removal, fixed up mission var stuff
    branch:      naev
    more verbose ai logging and assorted ai fixes (more moneys)
    branch:      naev
    added militia faction, changed mr.test to militia, added ai_create
    branch:      naev
    [svn] sanitized lua ai api
    branch:      naev
    [svn] AI can now use secondary weapons
    branch:      naev
    [svn] switched to commonwealth spelling (armor -> armour)
    implemented seeker missiles and ammo
    implemented secondary weapons
    branch:      naev
    [svn] more ai functions
    some ai tweaks
    more ai protection
    branch:      naev
    [svn] multiple enemies now supported
    bug fixes
    you can get other ship's health now from AI
    branch:      naev
    [svn] enemies are now properly parsed
    added possibility of pirate
    buffer overflow in ai fixed
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    common civilian distress file and advertiser adaptative presence
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    gettext for AI.
    Add the careful_face function
    Replace ai.getPlayer() with player.pilot()
    
    I also removed code in ai.c defining a 'player' constant. It was unused
    and interfered with access to the player module
    Rename ai.getPilot() to ai.pilot()
    Replace ai.setcargo() and ai.exists() with use of pilot module
    Replace more ai methods with the standard ones
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Don't put a function into pilot memory before defining it.
    * Split AI idle() function into "personalities" that determine basic behavioral patterns.
    ** Patrol personality will fly around or jump or land.
    ** Trader personality will always jump or land.
    ** Civilian personality will fly around and then land if possible (even if it's the planet it took off from), and jump only if left with no other choice.
    * Civilian fleets now have a civilian AI that has the civilian personality.
    * Trader AI has trader personality.
    * You can now create pilots taking off.
    * AI now handles taking off.
    * Trader ai uses generic as base.
    * Generic ai template now has distress function.
    * Generic ai template has minimum aggro distance.
    * Updated all AIs to use create_post() which handles some creation stuff.
    * Enormous diff that basically points out that bobbens' punctuation sucks.
    * More taunts and such by Deiz.
    * Removed AI warnings when player dies and a pilot is created.
    * Should fix some AI warnings.
    * AI does refuel deals based on your standing with their faction.
    * Pilots can refuel you now if you ask for it.
    * Interference now affects targetting and communication.
    * Added concept of distress signals.
       * Ships under attack generate distress signals.
       * If someone gets the signal, and player is attacking player loses faction.
       * Limited by interference.
    * Fixed rare and elusive segfault bug in ai.
    * Tweaked credit gains from boarding ships.
    * Increased money to be made off pillaging ships.
    * Some new SOS messages for traders.
    * Gave AI customizeable bribe messages.
    * Major AI rehaul, split into generic stuff.
    * Added bomber attack routines.
    * Fixed bug with AI forgetting about you if another enemy attacks.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    common civilian distress file and advertiser adaptative presence
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    gettext for AI.
    Replace ai.getPlayer() with player.pilot()
    
    I also removed code in ai.c defining a 'player' constant. It was unused
    and interfered with access to the player module
    Rename ai.getPilot() to ai.pilot()
    Replace ai.setcargo() and ai.exists() with use of pilot module
    Replace more ai methods with the standard ones
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Independent faction uses civilian AI for now.
    * Civilian ai should now handle bribe and refuel properly.
    * Improved personalities. Pilots will now loiter around the system for a set number of waypoints before leaving.
    * Flee ai has trader personality now.
    * Split AI idle() function into "personalities" that determine basic behavioral patterns.
    ** Patrol personality will fly around or jump or land.
    ** Trader personality will always jump or land.
    ** Civilian personality will fly around and then land if possible (even if it's the planet it took off from), and jump only if left with no other choice.
    * Civilian fleets now have a civilian AI that has the civilian personality.
    * Trader AI has trader personality.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    More personalized Proteron messages.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    gettext for AI.
    Replace ai.getPlayer() with player.pilot()
    
    I also removed code in ai.c defining a 'player' constant. It was unused
    and interfered with access to the player module
    Rename ai.getPilot() to ai.pilot()
    Replace ai.comm() and ai.broadcast() with pilot module
    Replace ai.setcargo() and ai.exists() with use of pilot module
    Replace more ai methods with the standard ones
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Improved personalities. Pilots will now loiter around the system for a set number of waypoints before leaving.
    * Flee ai has trader personality now.
    * Split AI idle() function into "personalities" that determine basic behavioral patterns.
    ** Patrol personality will fly around or jump or land.
    ** Trader personality will always jump or land.
    ** Civilian personality will fly around and then land if possible (even if it's the planet it took off from), and jump only if left with no other choice.
    * Civilian fleets now have a civilian AI that has the civilian personality.
    * Trader AI has trader personality.
    * You can now create pilots taking off.
    * AI now handles taking off.
    * Trader ai uses generic as base.
    * Generic ai template now has distress function.
    * Generic ai template has minimum aggro distance.
    * Updated all AIs to use create_post() which handles some creation stuff.
    Added Proteron system, fixed Peacemaker target, added Peacemaker to presences.
    * More taunts and such by Deiz.
    * AI configuration is now stored on a per-pilot basis instead of globally.
    * Removed AI warnings when player dies and a pilot is created.
    * Should fix some AI warnings.
    * AI does refuel deals based on your standing with their faction.
    * Empire now sometimes refuels.
    * AI can decide not to refuel.
    * Implemented distress.
    * Tweaked credit gains from boarding ships.
    * Gave AI customizeable bribe messages.
    * Reworked attack system a bit.  More versatile now.
    * Some ai changes.
    * Added FLF fleets and FLF ai.
    * Major AI rehaul, split into generic stuff.
    * Added bomber attack routines.
    * Fixed bug with AI forgetting about you if another enemy attacks.
    * Unified attack thinking.
    * Pilots now change targets.
    * Made AI more robust in general.
    * Pushed the land function into basic.lua.
    * Empire ai now properly jumps.
    * Fixed outstanding taunt() bugs in the ai.
    * Added more fleets (unused atm).
    * New AI: Dvaered.
    * Compare enemy against nil.
    * Moved hyperspace() to include/basic.lua.
    * Pirates now run away when hurt.
    * More planet functions for ai: ai.getrndplanet() and ai.getlandplanet().
    * Now all ai include "ai/include/basic.lua" to share attack and runaway functions.
    cleaned up the ai lua a bit, but needs a lot more work
    yes, you can lose faction now, fixed ai to set you as hostile
    more tab removal, fixed up mission var stuff
    branch:      naev
    fixed non-random credits
    branch:      naev
    more verbose ai logging and assorted ai fixes (more moneys)
    branch:      naev
    ai upgrades
    branch:      naev
    fixed empire units needing to face you with turrets
    branch:      naev
    added new station, added actual empire ships and fights with the collective
    branch:      naev
    added militia faction, changed mr.test to militia, added ai_create
    branch:      naev
    [svn] sanitized lua ai api
    branch:      naev
    [svn] AI can now use secondary weapons
    branch:      naev
    [svn] switched to commonwealth spelling (armor -> armour)
    implemented seeker missiles and ammo
    implemented secondary weapons
    branch:      naev
    [svn] more ai functions
    some ai tweaks
    more ai protection
    branch:      naev
    [svn] multiple enemies now supported
    bug fixes
    you can get other ship's health now from AI
    branch:      naev
    [svn] enemies are now properly parsed
    added possibility of pirate
    buffer overflow in ai fixed
    branch:      naev
    [svn] added timer support for the AI
    fixed major buffer overflow in AI
    branch:      naev
    [svn] control_rate no applies properly
    targetted pilot will appear over others
    branch:      naev
    [svn] bug fixes
    support for different AI Profiles
    branch:      naev
    [svn] more ai API
    ai now responds on being attacked
    branch:      naev
    [svn] bug fixes
    fleet improvements
    per pixel collision
    branch:      naev
    [svn] faction system almost fully implemented
    fleets almost fully implemented (just need randomized start positions)
    major bugfix in weapon.c
    branch:      naev
    [svn] added rng function to ai API
    branch:      naev
    [svn] much more error checking in the xml
    fleets are built in - just need to do something with them
    minor tweaks and fixes
    branch:      naev
    [svn] added message system
    fixed spinning laser bug
    branch:      naev
    [svn] some new pack features (list files)
    radial collision detection
    proper adding of the shooting system all about
    branch:      naev
    [svn] more ai api
    minor code changes
    more AI concepts
    branch:      naev
    [svn] minor tweaks
    data file can be defined at runtime
    branch:      naev
    [svn] improved ai API
    fixed minor memory leaks
    cleaned up a bit
    branch:      naev
    [svn] forgot ai dir
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    More personalized Proteron messages.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    gettext for AI.
    Replace ai.getPlayer() with player.pilot()
    
    I also removed code in ai.c defining a 'player' constant. It was unused
    and interfered with access to the player module
    Rename ai.getPilot() to ai.pilot()
    Replace ai.comm() and ai.broadcast() with pilot module
    Replace ai.setcargo() and ai.exists() with use of pilot module
    Replace more ai methods with the standard ones
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Improved personalities. Pilots will now loiter around the system for a set number of waypoints before leaving.
    * Flee ai has trader personality now.
    * Split AI idle() function into "personalities" that determine basic behavioral patterns.
    ** Patrol personality will fly around or jump or land.
    ** Trader personality will always jump or land.
    ** Civilian personality will fly around and then land if possible (even if it's the planet it took off from), and jump only if left with no other choice.
    * Civilian fleets now have a civilian AI that has the civilian personality.
    * Trader AI has trader personality.
    * You can now create pilots taking off.
    * AI now handles taking off.
    * Trader ai uses generic as base.
    * Generic ai template now has distress function.
    * Generic ai template has minimum aggro distance.
    * Updated all AIs to use create_post() which handles some creation stuff.
    Added Proteron system, fixed Peacemaker target, added Peacemaker to presences.
    * More taunts and such by Deiz.
    * AI configuration is now stored on a per-pilot basis instead of globally.
    * Removed AI warnings when player dies and a pilot is created.
    * Should fix some AI warnings.
    * AI does refuel deals based on your standing with their faction.
    * Empire now sometimes refuels.
    * AI can decide not to refuel.
    * Implemented distress.
    * Tweaked credit gains from boarding ships.
    * Gave AI customizeable bribe messages.
    * Reworked attack system a bit.  More versatile now.
    * Some ai changes.
    * Added FLF fleets and FLF ai.
    * Major AI rehaul, split into generic stuff.
    * Added bomber attack routines.
    * Fixed bug with AI forgetting about you if another enemy attacks.
    * Unified attack thinking.
    * Pilots now change targets.
    * Made AI more robust in general.
    * Pushed the land function into basic.lua.
    * Empire ai now properly jumps.
    * Fixed outstanding taunt() bugs in the ai.
    * Added more fleets (unused atm).
    * New AI: Dvaered.
    * Compare enemy against nil.
    * Moved hyperspace() to include/basic.lua.
    * Pirates now run away when hurt.
    * More planet functions for ai: ai.getrndplanet() and ai.getlandplanet().
    * Now all ai include "ai/include/basic.lua" to share attack and runaway functions.
    cleaned up the ai lua a bit, but needs a lot more work
    yes, you can lose faction now, fixed ai to set you as hostile
    more tab removal, fixed up mission var stuff
    branch:      naev
    fixed non-random credits
    branch:      naev
    more verbose ai logging and assorted ai fixes (more moneys)
    branch:      naev
    ai upgrades
    branch:      naev
    fixed empire units needing to face you with turrets
    branch:      naev
    added new station, added actual empire ships and fights with the collective
    branch:      naev
    added militia faction, changed mr.test to militia, added ai_create
    branch:      naev
    [svn] sanitized lua ai api
    branch:      naev
    [svn] AI can now use secondary weapons
    branch:      naev
    [svn] switched to commonwealth spelling (armor -> armour)
    implemented seeker missiles and ammo
    implemented secondary weapons
    branch:      naev
    [svn] more ai functions
    some ai tweaks
    more ai protection
    branch:      naev
    [svn] multiple enemies now supported
    bug fixes
    you can get other ship's health now from AI
    branch:      naev
    [svn] enemies are now properly parsed
    added possibility of pirate
    buffer overflow in ai fixed
    branch:      naev
    [svn] added timer support for the AI
    fixed major buffer overflow in AI
    branch:      naev
    [svn] control_rate no applies properly
    targetted pilot will appear over others
    branch:      naev
    [svn] bug fixes
    support for different AI Profiles
    branch:      naev
    [svn] more ai API
    ai now responds on being attacked
    branch:      naev
    [svn] bug fixes
    fleet improvements
    per pixel collision
    branch:      naev
    [svn] faction system almost fully implemented
    fleets almost fully implemented (just need randomized start positions)
    major bugfix in weapon.c
    branch:      naev
    [svn] added rng function to ai API
    branch:      naev
    [svn] much more error checking in the xml
    fleets are built in - just need to do something with them
    minor tweaks and fixes
    branch:      naev
    [svn] added message system
    fixed spinning laser bug
    branch:      naev
    [svn] some new pack features (list files)
    radial collision detection
    proper adding of the shooting system all about
    branch:      naev
    [svn] more ai api
    minor code changes
    more AI concepts
    branch:      naev
    [svn] minor tweaks
    data file can be defined at runtime
    branch:      naev
    [svn] improved ai API
    fixed minor memory leaks
    cleaned up a bit
    branch:      naev
    [svn] forgot ai dir
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Lua gettext.
    Replace ai.setcargo() and ai.exists() with use of pilot module
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * ai.pushtask() no longer has a pos argument.
    * Added subtasks with similar api to normal tasks.
     * Subtasks are tied to their task and allow mini state machines.
    * Base AI now handles attacked.
    * Added more simple base AI.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    common civilian distress file and advertiser adaptative presence
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    added the miners faction
    gettext for AI.
    Replace ai.getPlayer() with player.pilot()
    
    I also removed code in ai.c defining a 'player' constant. It was unused
    and interfered with access to the player module
    Rename ai.getPilot() to ai.pilot()
    Replace ai.setcargo() and ai.exists() with use of pilot module
    Replace more ai methods with the standard ones
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Independent faction uses civilian AI for now.
    * Civilian ai should now handle bribe and refuel properly.
    * Improved personalities. Pilots will now loiter around the system for a set number of waypoints before leaving.
    * Flee ai has trader personality now.
    * Split AI idle() function into "personalities" that determine basic behavioral patterns.
    ** Patrol personality will fly around or jump or land.
    ** Trader personality will always jump or land.
    ** Civilian personality will fly around and then land if possible (even if it's the planet it took off from), and jump only if left with no other choice.
    * Civilian fleets now have a civilian AI that has the civilian personality.
    * Trader AI has trader personality.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Updated some API to use the new API - still rough around the edges.
    * New mission by BTAxis.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    gettext for AI.
    Replace ai.getPlayer() with player.pilot()
    
    I also removed code in ai.c defining a 'player' constant. It was unused
    and interfered with access to the player module
    Rename ai.getPilot() to ai.pilot()
    Replace ai.comm() and ai.broadcast() with pilot module
    Replace ai.setcargo() and ai.exists() with use of pilot module
    Replace more ai methods with the standard ones
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Typo fix for Sirius AI's chatter.
    * Gave sirius their own watered down AI. Needs more love.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    gettext for AI.
    Replace ai.getPlayer() with player.pilot()
    
    I also removed code in ai.c defining a 'player' constant. It was unused
    and interfered with access to the player module
    Rename ai.getPilot() to ai.pilot()
    Replace ai.setcargo() and ai.exists() with use of pilot module
    Replace more ai methods with the standard ones
    * Updated paths in thurion scripts.
    * Fixed thurion scripts.
    thurion now spawns. It is using empire ships as placeholders for now.
    * Independent faction uses civilian AI for now.
    * Civilian ai should now handle bribe and refuel properly.
    * Improved personalities. Pilots will now loiter around the system for a set number of waypoints before leaving.
    * Flee ai has trader personality now.
    * Split AI idle() function into "personalities" that determine basic behavioral patterns.
    ** Patrol personality will fly around or jump or land.
    ** Trader personality will always jump or land.
    ** Civilian personality will fly around and then land if possible (even if it's the planet it took off from), and jump only if left with no other choice.
    * Civilian fleets now have a civilian AI that has the civilian personality.
    * Trader AI has trader personality.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    gettext for AI.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Improved personalities. Pilots will now loiter around the system for a set number of waypoints before leaving.
    * Flee ai has trader personality now.
    * Split AI idle() function into "personalities" that determine basic behavioral patterns.
    ** Patrol personality will fly around or jump or land.
    ** Trader personality will always jump or land.
    ** Civilian personality will fly around and then land if possible (even if it's the planet it took off from), and jump only if left with no other choice.
    * Civilian fleets now have a civilian AI that has the civilian personality.
    * Trader AI has trader personality.
    * You can now create pilots taking off.
    * AI now handles taking off.
    * Trader ai uses generic as base.
    * Generic ai template now has distress function.
    * Generic ai template has minimum aggro distance.
    * Updated all AIs to use create_post() which handles some creation stuff.
    * AI configuration is now stored on a per-pilot basis instead of globally.
    * Cleaned up communication some.
    * Gave AI customizeable bribe messages.
    * Major AI rehaul, split into generic stuff.
    * Added bomber attack routines.
    * Fixed bug with AI forgetting about you if another enemy attacks.
    * Unified attack thinking.
    * Pilots now change targets.
    * Made AI more robust in general.
    * Improved collective ai.
    * Compare enemy against nil.
    * Now all ai include "ai/include/basic.lua" to share attack and runaway functions.
    more tab removal, fixed up mission var stuff
    branch:      naev
    more verbose ai logging and assorted ai fixes (more moneys)
    branch:      naev
    ai upgrades
    branch:      naev
    fleet balancing, minor ai fix, removed obsolete ai
    branch:      naev
    fixed wierd new warnings and added more thingies (especially factions)
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Added a Dissident Dead Or Alive Bounty mission for the Proteron.
    
    Also fixed the fact that Dissident presence was spawning Civilian
    ships and not Dissident ships.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    gettext for AI.
    Replace ai.getPlayer() with player.pilot()
    
    I also removed code in ai.c defining a 'player' constant. It was unused
    and interfered with access to the player module
    Rename ai.getPilot() to ai.pilot()
    Replace ai.setcargo() and ai.exists() with use of pilot module
    Replace more ai methods with the standard ones
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Independent faction uses civilian AI for now.
    * Civilian ai should now handle bribe and refuel properly.
    * Improved personalities. Pilots will now loiter around the system for a set number of waypoints before leaving.
    * Flee ai has trader personality now.
    * Split AI idle() function into "personalities" that determine basic behavioral patterns.
    ** Patrol personality will fly around or jump or land.
    ** Trader personality will always jump or land.
    ** Civilian personality will fly around and then land if possible (even if it's the planet it took off from), and jump only if left with no other choice.
    * Civilian fleets now have a civilian AI that has the civilian personality.
    * Trader AI has trader personality.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * dummy Lua ai should now work with manual control.
    * Updated some API to use the new API - still rough around the edges.
    * New Lua bindings.
    * Added tutorial.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Removed "stupid", "idiot", "moron" occurrences.
    
    These are also sanist terms, so I replaced them with better terms,
    like "fool" (the term with the same literal meaning in contemporary
    usage), or generalist insults like "asshole".
    Added some Pirate lines.
    
    BitTorrent puns!
    Various text improvements throughout missions and stuff.
    
    Started off with getting rid of references to "minutes" and "hours",
    but I decided to also go through and remove a bit of gendering, plus
    remove some sanist language (I basically just did grep searches
    for problematic terms and replaced them with alternatives, most
    notably "insane" and "crazy"; luckily there wasn't that much and
    a lot of what was there was my fault).
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    gettext for AI.
    Add the careful_face function
    Replace ai.getPlayer() with player.pilot()
    
    I also removed code in ai.c defining a 'player' constant. It was unused
    and interfered with access to the player module
    Rename ai.getPilot() to ai.pilot()
    Replace ai.comm() and ai.broadcast() with pilot module
    Replace ai.setcargo() and ai.exists() with use of pilot module
    Replace more ai methods with the standard ones
    Rework some of the pirate dialogue
    Change some of the pirate bribe dialogue
    * Whitespace.
    Update pirate.lua
    
    Fixed some formatting, fixed some typos, moved a 'pay or die' line from taunts to bribes, edited a taunt to flow better.
    Update pirate.lua
    
    Fixed formatting typos and moved ""So this is the part where you pay up or get shot up. Your choice."," from taunts to request bribe dialogue
    Added to pirate chatter
    
    ~70 additions to pirate chatter. Includes additions to bribes, bribe acceptance, and taunts.
    Specify 100 instead of "jump's worth" in the pirate refuel message
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Pirates got less money than they should have. Fix by Mike.pink.
    * Kill less.
    * Kill less.
    * Improved personalities. Pilots will now loiter around the system for a set number of waypoints before leaving.
    * Flee ai has trader personality now.
    * Split AI idle() function into "personalities" that determine basic behavioral patterns.
    ** Patrol personality will fly around or jump or land.
    ** Trader personality will always jump or land.
    ** Civilian personality will fly around and then land if possible (even if it's the planet it took off from), and jump only if left with no other choice.
    * Civilian fleets now have a civilian AI that has the civilian personality.
    * Trader AI has trader personality.
    * You can now create pilots taking off.
    * AI now handles taking off.
    * Trader ai uses generic as base.
    * Generic ai template now has distress function.
    * Generic ai template has minimum aggro distance.
    * Updated all AIs to use create_post() which handles some creation stuff.
    Re-rendered, added proper target. Fixed minor dialogue issue.
    * More taunts and such by Deiz.
    * Increased pirate booty.
    * AI configuration is now stored on a per-pilot basis instead of globally.
    * Removed AI warnings when player dies and a pilot is created.
    * Should fix some AI warnings.
    * AI does refuel deals based on your standing with their faction.
    * Pilots can refuel you now if you ask for it.
    * Implemented boarding for AI pilots.
    * Increased money to be made off pillaging ships.
    * Gave AI customizeable bribe messages.
    * Added math lib to basic nlua.
    * Added ai.shipmass()
    * ai.shipclass now can take a pilot id as parameter.
    * Bribe amount is stored in mem.bribe in pilot's ai.
    * Reworked attack system a bit.  More versatile now.
    * Major AI rehaul, split into generic stuff.
    * Added bomber attack routines.
    * Fixed bug with AI forgetting about you if another enemy attacks.
    * Unified attack thinking.
    * Pilots now change targets.
    * Made AI more robust in general.
    * Fixed outstanding taunt() bugs in the ai.
    * Added more fleets (unused atm).
    * New AI: Dvaered.
    * Increased pirate credits.
    * Moved hyperspace() to include/basic.lua.
    * Pirates now run away when hurt.
    * Now all ai include "ai/include/basic.lua" to share attack and runaway functions.
    cleaned up the ai lua a bit, but needs a lot more work
    more tab removal, fixed up mission var stuff
    branch:      naev
    more verbose ai logging and assorted ai fixes (more moneys)
    branch:      naev
    added militia faction, changed mr.test to militia, added ai_create
    branch:      naev
    [svn] sanitized lua ai api
    branch:      naev
    [svn] AI can now use secondary weapons
    branch:      naev
    [svn] switched to commonwealth spelling (armor -> armour)
    implemented seeker missiles and ammo
    implemented secondary weapons
    branch:      naev
    [svn] more ai functions
    some ai tweaks
    more ai protection
    branch:      naev
    [svn] multiple enemies now supported
    bug fixes
    you can get other ship's health now from AI
    branch:      naev
    [svn] enemies are now properly parsed
    added possibility of pirate
    buffer overflow in ai fixed
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    gettext for AI.
    Replace ai.getPlayer() with player.pilot()
    
    I also removed code in ai.c defining a 'player' constant. It was unused
    and interfered with access to the player module
    Rename ai.getPilot() to ai.pilot()
    Replace ai.comm() and ai.broadcast() with pilot module
    Replace ai.setcargo() and ai.exists() with use of pilot module
    Replace more ai methods with the standard ones
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Improved personalities. Pilots will now loiter around the system for a set number of waypoints before leaving.
    * Flee ai has trader personality now.
    * Split AI idle() function into "personalities" that determine basic behavioral patterns.
    ** Patrol personality will fly around or jump or land.
    ** Trader personality will always jump or land.
    ** Civilian personality will fly around and then land if possible (even if it's the planet it took off from), and jump only if left with no other choice.
    * Civilian fleets now have a civilian AI that has the civilian personality.
    * Trader AI has trader personality.
    * You can now create pilots taking off.
    * AI now handles taking off.
    * Trader ai uses generic as base.
    * Generic ai template now has distress function.
    * Generic ai template has minimum aggro distance.
    * Updated all AIs to use create_post() which handles some creation stuff.
    * More taunts and such by Deiz.
    * AI configuration is now stored on a per-pilot basis instead of globally.
    * Removed AI warnings when player dies and a pilot is created.
    * Should fix some AI warnings.
    * Gave goddard faction bribe/refuel stuff.
    * Tweaked credit gains from boarding ships.
    * Reworked attack system a bit.  More versatile now.
    * Major AI rehaul, split into generic stuff.
    * Added bomber attack routines.
    * Fixed bug with AI forgetting about you if another enemy attacks.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Removed "stupid", "idiot", "moron" occurrences.
    
    These are also sanist terms, so I replaced them with better terms,
    like "fool" (the term with the same literal meaning in contemporary
    usage), or generalist insults like "asshole".
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    gettext for AI.
    * Attempt to clean up the whitespace mess in Lua a bit.
    Replace ai.getPlayer() with player.pilot()
    
    I also removed code in ai.c defining a 'player' constant. It was unused
    and interfered with access to the player module
    Rename ai.getPilot() to ai.pilot()
    Replace ai.comm() and ai.broadcast() with pilot module
    Replace ai.setcargo() and ai.exists() with use of pilot module
    Replace more ai methods with the standard ones
    major zalek update
    Removed unused Zalek assets, made dat changes for zalek personaility, and assets
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Re-added the AI scripts.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Replace ai.setcargo() and ai.exists() with use of pilot module
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Tweaked stationary AI to be more aggressive, and now it actually shoots.
    * Changed stuff so manual control will hopefully work with stationary AI.
    * Stationary ai should work now.
    * Hacked up quick stationary ai.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    common civilian distress file and advertiser adaptative presence
    typo
    added advertisers
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Re-added the AI scripts.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Silenced rogue FLF ships.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Initial commit of the first two missions in the Academy Hack campaign.
    * Improved proximity script to allow AI ships to act as the focus.
    * Implemented selective pilot clear script for per-faction ship clearing.
    * No-run AI for Sirius.
    * Moved bulky lua code from mission.xml into rehab_common.lua.
    * Initial commit of ec04 revamp. Currently crashes the game.
    * Re-added the AI scripts.
    Fix planet ai code
    Make planet related ai functions return planet object instead of id
    Replace ai.sysradius() with system.cur():radius()
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added parameter to only landy at friendly planets for the ai.
    * Improved personalities. Pilots will now loiter around the system for a set number of waypoints before leaving.
    * Flee ai has trader personality now.
    * AI personality update, cleanup.
    * AI can now get system radius also.
    * Split AI idle() function into "personalities" that determine basic behavioral patterns.
    ** Patrol personality will fly around or jump or land.
    ** Trader personality will always jump or land.
    ** Civilian personality will fly around and then land if possible (even if it's the planet it took off from), and jump only if left with no other choice.
    * Civilian fleets now have a civilian AI that has the civilian personality.
    * Trader AI has trader personality.
    cleaning the code
    got the traders to do convoys
    Fix planet ai code
    Make planet related ai functions return planet object instead of id
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added parameter to only landy at friendly planets for the ai.
    * Split AI idle() function into "personalities" that determine basic behavioral patterns.
    ** Patrol personality will fly around or jump or land.
    ** Trader personality will always jump or land.
    ** Civilian personality will fly around and then land if possible (even if it's the planet it took off from), and jump only if left with no other choice.
    * Civilian fleets now have a civilian AI that has the civilian personality.
    * Trader AI has trader personality.
    Fix planet ai code
    Make planet related ai functions return planet object instead of id
    Replace ai.sysradius() with system.cur():radius()
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Patrol personality landso nly on friendlies by default.
    * Added parameter to only landy at friendly planets for the ai.
    * Improved personalities. Pilots will now loiter around the system for a set number of waypoints before leaving.
    * Flee ai has trader personality now.
    * AI personality update, cleanup.
    * AI can now get system radius also.
    * Split AI idle() function into "personalities" that determine basic behavioral patterns.
    ** Patrol personality will fly around or jump or land.
    ** Trader personality will always jump or land.
    ** Civilian personality will fly around and then land if possible (even if it's the planet it took off from), and jump only if left with no other choice.
    * Civilian fleets now have a civilian AI that has the civilian personality.
    * Trader AI has trader personality.
    added the miners faction
    added advertisers
    Fix planet ai code
    Make planet related ai functions return planet object instead of id
    Replace ai.sysradius() with system.cur():radius()
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added parameter to only landy at friendly planets for the ai.
    * Improved personalities. Pilots will now loiter around the system for a set number of waypoints before leaving.
    * Flee ai has trader personality now.
    * AI personality update, cleanup.
    * AI can now get system radius also.
    * Split AI idle() function into "personalities" that determine basic behavioral patterns.
    ** Patrol personality will fly around or jump or land.
    ** Trader personality will always jump or land.
    ** Civilian personality will fly around and then land if possible (even if it's the planet it took off from), and jump only if left with no other choice.
    * Civilian fleets now have a civilian AI that has the civilian personality.
    * Trader AI has trader personality.
    Replace more ai methods with the standard ones
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganize ai a bit.
    * Fixed the ai compaction patch.
    * Reduced code duplication.
    Add memory control use and active energy management for capital ships
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Splittting of files complete
    
    Add in active energy management for capital ships
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    zigzag AI
    changed target changing conditions in atk_think
    Replace ai.setcargo() and ai.exists() with use of pilot module
    Replace more ai methods with the standard ones
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Excised the AI's relative velocity stuff at all but very short range.
    New tweaked fighter AI for drone usage, by NeD.
    * AI should work like before.
    * Reorganize ai a bit.
    * Cleaned up code and proper indentation.
    * Updated to newer Naev features.
    * Cosmetics.
    Made the capital ship attack function a bit smarter. Only recharge if not actively taking damage.
    Add memory control use and active energy management for capital ships
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Splittting of files complete
    
    Add in active energy management for capital ships
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Splitting files
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Make corvettes stop announcing
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Rm comm chatter and carry down anti-jousting code
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Behavior tweaks
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Finished bugswatting
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Fix some errors in the lua code thanks to the weapon set changes
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Space superiority ship attack pattern
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add capital ship attack pattern
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add evasive flyby attack pattern
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add aggressive flyby attack behavior
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add capital ship attack behavior and cleanups
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add in corvette attack behavior
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add bomber behavior
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add declumping behavior into approach
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Fighter attack profile
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add maneuvering and size-based targetting (thinking) tasks
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    * Changed how weapon range works.
    * Weapon sets are somewhat working for NPC now.
    * Updated some API to use the new API - still rough around the edges.
    * ai.pushtask() no longer has a pos argument.
    * Added subtasks with similar api to normal tasks.
     * Subtasks are tied to their task and allow mini state machines.
    * Tried to make AI a bit smarter choosing targets.
    * Moved the attacked bit while already fighting to the attack AI.
    * The dist > 400 check shouldn't be needed.
    * AI configuration is now stored on a per-pilot basis instead of globally.
    * Pilots should abort boarding if they get shot.
    * Pilots can refuel you now if you ask for it.
    * Code clean up.
    * Traders should run when they get lockon.
    * When running should only shoot when in range.
    * getweapdist() now uses boolean instead of number.
    * Implemented boarding for AI pilots.
    * New firemodes, allows ships to shoot only turrets, forward mounts or both with primary weapons.
    * Move ai to use firemodes.
    * Improve bomber code.
    * Attempts to fix the occasional AI warnings.
    * Fixed ai's "dead spot".
    * Fixed occasional warning in ai.
    * AI improvements.  Should do much better again.
    * Implemented bribing.
    * Added ai.isbribed().
    * Fixed major outstanding bugs in flag usage.
    * Fixed major outstanding bugs in weapon_hit stuff.
    * Fixed ai.velrel().
    * Improved AI secondary weapon handling.
    * AI now takes into account relative velocities.
    * Removed the horrible, horrible TYPE_PTR from ai.
    * AI aims ealier, should be more accurate now.
    * Reworked attack system a bit.  More versatile now.
    * Major AI rehaul, split into generic stuff.
    * Added bomber attack routines.
    * Fixed bug with AI forgetting about you if another enemy attacks.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Rename ai.getPilot() to ai.pilot()
    Replace more ai methods with the standard ones
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Made the AI marginally heat-aware.
    Badly-overheating AIs will cool down during combat as necessary.
    AIs with turrets and cannons will switch between one type or both depending on heat.
    New tweaked fighter AI for drone usage, by NeD.
    Left in print statements.
    Fixed the AI. All combat-centric ship classes now get the functions they used to.
    File containing capital ship attack function wasn't included.
    * AI should work like before.
    * Reorganize ai a bit.
    * Cleaned up code and proper indentation.
    * Updated to newer Naev features.
    * Cosmetics.
    Bugswatted. It turns out that getdamage and getdelay are not safe with
    a potential null reference. A check for a null fixed this.
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Heuristic targeting for size and HP. Damage still has an error.
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Splittting of files complete
    
    Add in active energy management for capital ships
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Rm comm chatter and carry down anti-jousting code
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add class by class unique bahvior
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    * Moved the attacked bit while already fighting to the attack AI.
    * AI configuration is now stored on a per-pilot basis instead of globally.
    * Escorts and fighter bays start to work well.
    * Disabled bomber AI, doesn't seem ready yet.
    * Reworked attack system a bit.  More versatile now.
    * Major AI rehaul, split into generic stuff.
    * Added bomber attack routines.
    * Fixed bug with AI forgetting about you if another enemy attacks.
    zigzag AI
    added lua function to create gatherable object and hook for gathering
    make the pilots in fleet face forwards as possible
    added the possibility for the manual control AI to shoot while landing
    Fixed up the AI. I *think* this is good.
    Less precision
    Weapset 1, and shoot secondary weapons too
    added a return
    added the miners faction
    fleeing ships use planets if they are closer
    In AI API, separate  setting hyper target from selecting near/random
    
    This allows a leader to instruct followers to use a specific jump point.
    Make circle formation use absolute position
    Land with leader
    Make followers jump when leader jumps
    Do not overload follow() with fleet behavior; call it follow_fleet
    Some tweaks to formation code
    Use ai.follow_accurate() for formations
    Integrate fleet_form.lua code into AI API
    Remove unefficient features
    Add the careful_face function
    Use weapset instead of activate
    Made the AI handle the afterburner
    Wider use of compiled functions
    draft of pd controller
    Fix planet ai code
    Make planet related ai functions return planet object instead of id
    Replace some ai functions with pilot.flags()
    Rename ai.getPilot() to ai.pilot()
    Replace ai.comm() and ai.broadcast() with pilot module
    Replace ai.setcargo() and ai.exists() with use of pilot module
    Fix refuel
    Prevent error when ai.landplanet() fails
    Make refueling more resistant to interruptions
    
    The AI will now refuel before finding new targets to attack. This does
    have one side effect: The refuel task is pushed from C and preempts all
    other tasks, so a ship that's currently fighting will stop firing until
    it takes more damage.
    
    To fix this, the refuel conditions need to be determined dynamically.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Follow breaks when target to follow is not available.
    * Follow breaks when target to follow is not available.
    * Added a variant of pilot.face() that ends when the target is faced.
    Improved the AI's distress handling. Military ships will now defend civilians, among other things.
    * Shoot while hyperspacing is not optional and off by default.
    * Manual control hyperspace will shoot at nearby targets.
    * Fixed ai running away when no jump point is available.
    * Fixed ai script.
    * Do not try to hyperspace with no hyperspace target.
    * Pop task when pilot lands (in case of player manual control).
    * Runaway is jumping by default (under manual control), added nojump variant.
    * Weapon sets are somewhat working for NPC now.
    * Added face binding to pilot control stuff.
    * Should fix popping with __goto_precise.
    * By default pilot.goto() is now precise.
    * By default pilot.goto() is now precise.
    * Added ability to disable velocity compensation in pilot.goto().
    * Added ability to disable velocity compensation in pilot.goto().
    * More progress on Shadow Vigil mission.
    * Goto command no longer brakes.
    * Minor optimization.
    * Pilot should use the smart goto and ace the target.
    * Goto without braking should compensate velocity somewhat.
    * Bad conditional in last commit.
    * Fixed warnings when running away with turrets.
    * Added land to manual control.
    * You can force a pilot to jump to a certain system now.
    * NPC pilots now land.
    * Added pilot landing hook.
    * Should fix warning in AI and minor issue with hyperspace when jumping.
    * More AI verbosity and debugging information.
    * Fleeing enemies now choose the closest jump.
    * Fleeing NPC will now jump properly.
    * AI now jumps properly.
    * Preparing for the new hyperspace ai stuff.
    * Updated some API to use the new API - still rough around the edges.
    * ai.pushtask() no longer has a pos argument.
    * Added subtasks with similar api to normal tasks.
     * Subtasks are tied to their task and allow mini state machines.
    * More tweaking function names.
    * Added follow function.
    * You can now specify if you want the pilot to brake or not with goto().
    * Added manual control for AI.
    * Fixed some long standing bugs in AI.
    * Decreased code footprint in nlua_pilot.c
    * Misc fixes.
    * Make sure pilot can board while stopping.
    * Typo.
    * Should fix an AI warning.
    * Should fix some boarding issues introduced recently.
    * Pilots can refuel you now if you ask for it.
    * Code clean up.
    * Traders should run when they get lockon.
    * When running should only shoot when in range.
    * getweapdist() now uses boolean instead of number.
    * AI now fires all turrets while running.
    * Interference now affects targetting and communication.
    * Added concept of distress signals.
       * Ships under attack generate distress signals.
       * If someone gets the signal, and player is attacking player loses faction.
       * Limited by interference.
    * Fixed rare and elusive segfault bug in ai.
    * New firemodes, allows ships to shoot only turrets, forward mounts or both with primary weapons.
    * Move ai to use firemodes.
    * Improve bomber code.
    * Only have ai land once.
    * Removed the horrible, horrible TYPE_PTR from ai.
    * Made function more proper.
    * Gave AI some memory.
    * Fixed many AI issues.
    * Increased landing threshold.
    * Major AI rehaul, split into generic stuff.
    * Added bomber attack routines.
    * Fixed bug with AI forgetting about you if another enemy attacks.
    * Unified attack thinking.
    * Pilots now change targets.
    * Made AI more robust in general.
    * Added attack_closestenemy to basic.lua.
    * Pushed the land function into basic.lua.
    * Dvaereds get mace rockets.
    * AI now uses more weapon types and more wisely.
    * Improves enemy ai: they hit a lot now.
    * Improves turret ai: should also hit a lot now.
    * Improved the global attack() ai.
    * Updated TODO.
    * Pilots try to aim somewhat with missiles now.
    * Moved hyperspace() to include/basic.lua.
    * Pirates now run away when hurt.
    * Check for weaponrange when running away with turrets.
    * AI now calculates optimal distance when shooting.
    * Now all ai include "ai/include/basic.lua" to share attack and runaway functions.
    Fixed a possible error in atk_heuristic_big_game_think
    Fixed a bug in atk_target.lua.
    
    It was trying to use a variable before it was assigned. Fixed by
    changing the position of that assignment.
    Fixed a bug in atk_target.lua.
    
    It was trying to use a variable before it was assigned. Fixed by
    changing the position of that assignment.
    changed target changing conditions in atk_think
    Replace ai.setcargo() and ai.exists() with use of pilot module
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Minor cosmetics.
    * Reorganize ai a bit.
    * Cosmetics.
    * Cosmetics.
    Heuristic targeting for size and HP. Damage still has an error.
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Splittting of files complete
    
    Add in active energy management for capital ships
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Splitting files
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Make corvettes stop announcing
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Rm comm chatter and carry down anti-jousting code
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Behavior tweaks
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Finished bugswatting
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Fix some errors in the lua code thanks to the weapon set changes
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Space superiority ship attack pattern
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add capital ship attack pattern
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add evasive flyby attack pattern
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add aggressive flyby attack behavior
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add capital ship attack behavior and cleanups
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add in corvette attack behavior
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add bomber behavior
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add declumping behavior into approach
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Fighter attack profile
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add maneuvering and size-based targetting (thinking) tasks
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    * Changed how weapon range works.
    * Weapon sets are somewhat working for NPC now.
    * Updated some API to use the new API - still rough around the edges.
    * ai.pushtask() no longer has a pos argument.
    * Added subtasks with similar api to normal tasks.
     * Subtasks are tied to their task and allow mini state machines.
    * Tried to make AI a bit smarter choosing targets.
    * Moved the attacked bit while already fighting to the attack AI.
    * The dist > 400 check shouldn't be needed.
    * AI configuration is now stored on a per-pilot basis instead of globally.
    * Pilots should abort boarding if they get shot.
    * Pilots can refuel you now if you ask for it.
    * Code clean up.
    * Traders should run when they get lockon.
    * When running should only shoot when in range.
    * getweapdist() now uses boolean instead of number.
    * Implemented boarding for AI pilots.
    * New firemodes, allows ships to shoot only turrets, forward mounts or both with primary weapons.
    * Move ai to use firemodes.
    * Improve bomber code.
    * Attempts to fix the occasional AI warnings.
    * Fixed ai's "dead spot".
    * Fixed occasional warning in ai.
    * AI improvements.  Should do much better again.
    * Implemented bribing.
    * Added ai.isbribed().
    * Fixed major outstanding bugs in flag usage.
    * Fixed major outstanding bugs in weapon_hit stuff.
    * Fixed ai.velrel().
    * Improved AI secondary weapon handling.
    * AI now takes into account relative velocities.
    * Removed the horrible, horrible TYPE_PTR from ai.
    * AI aims ealier, should be more accurate now.
    * Reworked attack system a bit.  More versatile now.
    * Major AI rehaul, split into generic stuff.
    * Added bomber attack routines.
    * Fixed bug with AI forgetting about you if another enemy attacks.
    zigzag AI
    remove the ugly mass hack in bomber ai
    correction in reldps and use of it in missile ai
    Add the careful_face function
    Made the AI wider use missiles
    Replace ai.setcargo() and ai.exists() with use of pilot module
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Made the AI marginally heat-aware.
    Badly-overheating AIs will cool down during combat as necessary.
    AIs with turrets and cannons will switch between one type or both depending on heat.
    Have hot AI ships cool down if they're idle or doing unimportant things.
    Fixed the AI. All combat-centric ship classes now get the functions they used to.
    * AI should work like before.
    * Reorganize ai a bit.
    Replace some ai functions with pilot.flags()
    Fix some checks in ai attack code
    Rename ai.getPilot() to ai.pilot()
    Replace ai.comm() and ai.broadcast() with pilot module
    Replace ai.setcargo() and ai.exists() with use of pilot module
    Replace more ai methods with the standard ones
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganize ai a bit.
    * More clean up.
    * Optimized and cleaned up spiral approach.
    * Cleaned up code and proper indentation.
    * Updated to newer Naev features.
    Made the capital ship attack function a bit smarter. Only recharge if not actively taking damage.
    Heuristic targeting for size and HP. Damage still has an error.
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Splitting files
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Make corvettes stop announcing
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Rm comm chatter and carry down anti-jousting code
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Behavior tweaks
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Finished bugswatting
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Fix some errors in the lua code thanks to the weapon set changes
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Space superiority ship attack pattern
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add capital ship attack pattern
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add evasive flyby attack pattern
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add aggressive flyby attack behavior
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add capital ship attack behavior and cleanups
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add in corvette attack behavior
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add bomber behavior
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add declumping behavior into approach
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Fighter attack profile
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add maneuvering and size-based targetting (thinking) tasks
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    * Changed how weapon range works.
    * Weapon sets are somewhat working for NPC now.
    * Updated some API to use the new API - still rough around the edges.
    * ai.pushtask() no longer has a pos argument.
    * Added subtasks with similar api to normal tasks.
     * Subtasks are tied to their task and allow mini state machines.
    * Tried to make AI a bit smarter choosing targets.
    * Moved the attacked bit while already fighting to the attack AI.
    * The dist > 400 check shouldn't be needed.
    * AI configuration is now stored on a per-pilot basis instead of globally.
    * Pilots should abort boarding if they get shot.
    * Pilots can refuel you now if you ask for it.
    * Code clean up.
    * Traders should run when they get lockon.
    * When running should only shoot when in range.
    * getweapdist() now uses boolean instead of number.
    * Implemented boarding for AI pilots.
    * New firemodes, allows ships to shoot only turrets, forward mounts or both with primary weapons.
    * Move ai to use firemodes.
    * Improve bomber code.
    * Attempts to fix the occasional AI warnings.
    * Fixed ai's "dead spot".
    * Fixed occasional warning in ai.
    * AI improvements.  Should do much better again.
    * Implemented bribing.
    * Added ai.isbribed().
    * Fixed major outstanding bugs in flag usage.
    * Fixed major outstanding bugs in weapon_hit stuff.
    * Fixed ai.velrel().
    * Improved AI secondary weapon handling.
    * AI now takes into account relative velocities.
    * Removed the horrible, horrible TYPE_PTR from ai.
    * AI aims ealier, should be more accurate now.
    * Reworked attack system a bit.  More versatile now.
    * Major AI rehaul, split into generic stuff.
    * Added bomber attack routines.
    * Fixed bug with AI forgetting about you if another enemy attacks.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed the AI. All combat-centric ship classes now get the functions they used to.
    * AI should work like before.
    * Reorganize ai a bit.
    made capital ships save cannon ammo
    Replace ai.pshield() and ai.parmour() with pilot:health()
    Replace ai.pcurenergy() with pilot.energy()
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Excised the AI's relative velocity stuff at all but very short range.
    Made the AI marginally heat-aware.
    Badly-overheating AIs will cool down during combat as necessary.
    AIs with turrets and cannons will switch between one type or both depending on heat.
    Have hot AI ships cool down if they're idle or doing unimportant things.
    Fixed the AI. All combat-centric ship classes now get the functions they used to.
    Begin reorganizing and fixing the AI.
    * Reorganize ai a bit.
    zigzag AI
    changed target changing conditions in atk_think
    Replace ai.setcargo() and ai.exists() with use of pilot module
    Replace more ai methods with the standard ones
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Excised the AI's relative velocity stuff at all but very short range.
    * AI should work like before.
    * Reorganize ai a bit.
    * Cleaned up code and proper indentation.
    * Updated to newer Naev features.
    * Cosmetics.
    Made the capital ship attack function a bit smarter. Only recharge if not actively taking damage.
    Add memory control use and active energy management for capital ships
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Splittting of files complete
    
    Add in active energy management for capital ships
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Splitting files
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Make corvettes stop announcing
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Rm comm chatter and carry down anti-jousting code
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Behavior tweaks
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Finished bugswatting
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Fix some errors in the lua code thanks to the weapon set changes
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Space superiority ship attack pattern
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add capital ship attack pattern
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add evasive flyby attack pattern
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add aggressive flyby attack behavior
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add capital ship attack behavior and cleanups
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add in corvette attack behavior
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add bomber behavior
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add declumping behavior into approach
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Fighter attack profile
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    Add maneuvering and size-based targetting (thinking) tasks
    
    Signed-off-by: HatlessAtlas <pirierran@hotmail.com>
    * Changed how weapon range works.
    * Weapon sets are somewhat working for NPC now.
    * Updated some API to use the new API - still rough around the edges.
    * ai.pushtask() no longer has a pos argument.
    * Added subtasks with similar api to normal tasks.
     * Subtasks are tied to their task and allow mini state machines.
    * Tried to make AI a bit smarter choosing targets.
    * Moved the attacked bit while already fighting to the attack AI.
    * The dist > 400 check shouldn't be needed.
    * AI configuration is now stored on a per-pilot basis instead of globally.
    * Pilots should abort boarding if they get shot.
    * Pilots can refuel you now if you ask for it.
    * Code clean up.
    * Traders should run when they get lockon.
    * When running should only shoot when in range.
    * getweapdist() now uses boolean instead of number.
    * Implemented boarding for AI pilots.
    * New firemodes, allows ships to shoot only turrets, forward mounts or both with primary weapons.
    * Move ai to use firemodes.
    * Improve bomber code.
    * Attempts to fix the occasional AI warnings.
    * Fixed ai's "dead spot".
    * Fixed occasional warning in ai.
    * AI improvements.  Should do much better again.
    * Implemented bribing.
    * Added ai.isbribed().
    * Fixed major outstanding bugs in flag usage.
    * Fixed major outstanding bugs in weapon_hit stuff.
    * Fixed ai.velrel().
    * Improved AI secondary weapon handling.
    * AI now takes into account relative velocities.
    * Removed the horrible, horrible TYPE_PTR from ai.
    * AI aims ealier, should be more accurate now.
    * Reworked attack system a bit.  More versatile now.
    * Major AI rehaul, split into generic stuff.
    * Added bomber attack routines.
    * Fixed bug with AI forgetting about you if another enemy attacks.
    Replace more ai methods with the standard ones
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed the AI. All combat-centric ship classes now get the functions they used to.
    Renamed "dumb"/"dumbfire" rockets to "unguided".
    
    The term "dumbfire" (which doesn't seem to be in common use outside
    of a select few video games) comes from the term "dumb", which is
    ableist on two counts: firstly, it's sanist because the meaning
    "dumbfire" is derived from is "stupid" or "of low intelligence".
    Secondly, the term "dumb" actually originates from ableism against
    mute people, albeit in the German language rather than English.
    
    The term is imprecise, anyway, so I've changed it to the more precise
    and non-ableist term, "unguided".
    * Attempt to clean up the whitespace mess in Lua a bit.
    Replace ai.setcargo() and ai.exists() with use of pilot module
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Updated some API to use the new API - still rough around the edges.
    * Code clean up.
    * Traders should run when they get lockon.
    * When running should only shoot when in range.
    * getweapdist() now uses boolean instead of number.
    * New firemodes, allows ships to shoot only turrets, forward mounts or both with primary weapons.
    * Move ai to use firemodes.
    * Improve bomber code.
    * Improved AI secondary weapon handling.
    * Removed the horrible, horrible TYPE_PTR from ai.
    * Reworked attack system a bit.  More versatile now.
    * Major AI rehaul, split into generic stuff.
    * Added bomber attack routines.
    * Fixed bug with AI forgetting about you if another enemy attacks.
    removed debug prints
    zigzag AI
    Replace some ai functions with pilot.flags()
    Fix some checks in ai attack code
    Replace ai.setcargo() and ai.exists() with use of pilot module
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Reorganize ai a bit.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Use nil to indicate no task, instead of "none"
    Fix planet ai code
    Make planet related ai functions return planet object instead of id
    Replace ai.setcargo() and ai.exists() with use of pilot module
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Preparing for the new hyperspace ai stuff.
    * ai.pushtask() no longer has a pos argument.
    * Added subtasks with similar api to normal tasks.
     * Subtasks are tied to their task and allow mini state machines.
    * AI configuration is now stored on a per-pilot basis instead of globally.
    * Pilots can refuel you now if you ask for it.
    * Code clean up.
    * Traders should run when they get lockon.
    * When running should only shoot when in range.
    * getweapdist() now uses boolean instead of number.
    * Only run sos() when have been attacked once at least.
    * Interference now affects targetting and communication.
    * Added concept of distress signals.
       * Ships under attack generate distress signals.
       * If someone gets the signal, and player is attacking player loses faction.
       * Limited by interference.
    * Fixed rare and elusive segfault bug in ai.
    * Should fix a warning that pops up occasionally due to bad ai condition.
    * Added small enter delay to ships when entering a system with no planets.
    * Removed the horrible, horrible TYPE_PTR from ai.
    * Gave AI some memory.
    * Fixed many AI issues.
    * Major AI rehaul, split into generic stuff.
    * Added bomber attack routines.
    * Fixed bug with AI forgetting about you if another enemy attacks.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    More gettext.
    In AI API, separate  setting hyper target from selecting near/random
    
    This allows a leader to instruct followers to use a specific jump point.
    Use pilot.taskClear() to implement e_clear
    Use nil to indicate no task, instead of "none"
    Call ai.stop() in hold task
    Make e_attack checks that target exists
    Clear formation if mem.formation == nil
    Move message handling out of control() to dedicated function
    Do not call ai.taskname() until after handling messages
    Use messaging API to command escorts
    Remove mem.command
    Use pilot.leader() instead of create() argument for escort leader
    Try to start merging leader concept into escort system
    
    Remove p->leader, and set p->parent and p->escorts
    Make circle formation use absolute position
    Set leader to nil if it no longer exists
    Do not run if pilot has leader
    Land with leader
    Make followers jump when leader jumps
    Do not overload follow() with fleet behavior; call it follow_fleet
    Add control_manual to command fleet when under manual control
    Store what formation to use in mem of leader
    Call :followers() in formation code
    
    This way only one argument is needed
    Move formation code to dat/scripts and make it work outside AI
    Refactor formation.lua to a table of functions
    Some tweaks to formation code
    Integrate fleet_form.lua code into AI API
    Replace pilot.memory() and pilot.memoryCheck() with one function, taking
    advantage of the single Lua state.
    Fix merge conflict
    fixed a warning msg
    Fixed an error in trader's idle behaviour
    Remove unefficient features
    Add the careful_face function
    tried to explain better the effect of the parameters
    An other small fix in ai
    moved a call after checking the pilot exists
    draft of pd controller
    Replace ai.pshield() and ai.parmour() with pilot:health()
    Replace some ai functions with pilot.flags()
    Rename ai.getPilot() to ai.pilot()
    Replace ai.setcargo() and ai.exists() with use of pilot module
    Make ai code deal with pilot objects instead of ids
    Prevent escorts from jumping away
    Ignore attacks from dead pilots
    
    This stops ships from doing a rapid series of taunts when taking fire
    from a dying player.
    Prevent AI from losing track of cooldown state
    Make refueling more resistant to interruptions
    
    The AI will now refuel before finding new targets to attack. This does
    have one side effect: The refuel task is pushed from C and preempts all
    other tasks, so a ship that's currently fighting will stop firing until
    it takes more damage.
    
    To fix this, the refuel conditions need to be determined dynamically.
    Correct AIs' initial distress being one tick late
    Made comments gender neutral, for accuracy
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Made the AI marginally heat-aware.
    Badly-overheating AIs will cool down during combat as necessary.
    AIs with turrets and cannons will switch between one type or both depending on heat.
    Improve the AI's cooldown logic a bit.
    Have hot AI ships cool down if they're idle or doing unimportant things.
    Revert "Avoid a bizarre bug where the AI's pilot somehow can't be retrieved."
    
    Wholly improper fix was causing new and exciting bugs.
    This reverts commit 666dbc4e8add8bce13a92b6852ac393b8222696c.
    Avoid a bizarre bug where the AI's pilot somehow can't be retrieved.
    Fix a logic flaw or two in the distress-handling function. Optimize it a bit as well.
    Improved the AI's distress handling. Military ships will now defend civilians, among other things.
    * Added parameter to only landy at friendly planets for the ai.
    * Split AI idle() function into "personalities" that determine basic behavioral patterns.
    ** Patrol personality will fly around or jump or land.
    ** Trader personality will always jump or land.
    ** Civilian personality will fly around and then land if possible (even if it's the planet it took off from), and jump only if left with no other choice.
    * Civilian fleets now have a civilian AI that has the civilian personality.
    * Trader AI has trader personality.
    * You can now create pilots taking off.
    * AI now handles taking off.
    * Trader ai uses generic as base.
    * Generic ai template now has distress function.
    * Generic ai template has minimum aggro distance.
    * Updated all AIs to use create_post() which handles some creation stuff.
    * Preparing for the new hyperspace ai stuff.
    * Updated some API to use the new API - still rough around the edges.
    * ai.pushtask() no longer has a pos argument.
    * Added subtasks with similar api to normal tasks.
     * Subtasks are tied to their task and allow mini state machines.
    * Fix minor mistake.
    * Some player_message colouring.
    * Added manual control for AI.
    * Fixed some long standing bugs in AI.
    * Decreased code footprint in nlua_pilot.c
    * Misc fixes.
    * Added new parameter, mem.defensive.
    * Player escorts should no longer distress.
    * Fixed more issues with distress.
    * Clean up.
    * Better version of last patch.
    * Reset mem.attacked when finished fighting.
    * Moved the attacked bit while already fighting to the attack AI.
    * AI configuration is now stored on a per-pilot basis instead of globally.
    * Fixed AI warning.
    * Fixed some minor ai warnings.
    * Minor AI fix.
    * Pilots should abort boarding if they get shot.
    * Fixes rare AI warning.
    * Code clean up.
    * Traders should run when they get lockon.
    * When running should only shoot when in range.
    * getweapdist() now uses boolean instead of number.
    * Implemented boarding for AI pilots.
    * Pilots should now help each other more.
    * Implemented distress.
    * Only chose target if it's closer.
    * Attempts to fix the occasional AI warnings.
    * Fixed typo.
    * Minor ai tweaks.
    * Added small enter delay to ships when entering a system with no planets.
    * AI shouldn't run if enemy has more health then him.
    * Tweaked the decision tree a bit.
    * Removed the horrible, horrible TYPE_PTR from ai.
    * Reworked attack system a bit.  More versatile now.
    * Gave AI some memory.
    * Fixed many AI issues.
    * "runaway" takes priority over attacking.
    * Created an idle task to run when idle for easy to change idle behaviour.
    * Major AI rehaul, split into generic stuff.
    * Added bomber attack routines.
    * Fixed bug with AI forgetting about you if another enemy attacks.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Use nil to indicate no task, instead of "none"
    * Attempt to clean up the whitespace mess in Lua a bit.
    Fix planet ai code
    Make planet related ai functions return planet object instead of id
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * ai.pushtask() no longer has a pos argument.
    * Added subtasks with similar api to normal tasks.
     * Subtasks are tied to their task and allow mini state machines.
    * Improved scout behaviour somewhat.
    * Minor ai tweaks.
    * Removed the horrible, horrible TYPE_PTR from ai.
    * Scout ai should now work again.
    * Major AI rehaul, split into generic stuff.
    * Added bomber attack routines.
    * Fixed bug with AI forgetting about you if another enemy attacks.
    * More planet functions for ai: ai.getrndplanet() and ai.getlandplanet().
    * ai.c: ai.dist() now accepts pilot ids as parameters.
    * misn_lua.c: pilot.add() can override fleet ai with second parameter.
    * ai/scout.lua: Added a new hard to kill ai that only tries to survives.
    * dat/missions/emp_scout00.lua: Scout uses new scout ai.
    Basically remove 'dat/' from everything as that is the name of the ndata folder and we want to be independent of that.
    Renamed 'include' to 'require' to be more consistent with standard Lua.
    Remove mem.command
    Use pilot.leader() instead of create() argument for escort leader
    Try to start merging leader concept into escort system
    
    Remove p->leader, and set p->parent and p->escorts
    Do not overload follow() with fleet behavior; call it follow_fleet
    Prevent escorts from jumping away
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * ai.pushtask() no longer has a pos argument.
    * Added subtasks with similar api to normal tasks.
     * Subtasks are tied to their task and allow mini state machines.
    * More tweaking function names.
    * Added follow function.
    * Clean up.
    * AI configuration is now stored on a per-pilot basis instead of globally.
    * Implemented boarding for AI pilots.
    * Escorts should properly hang if they have no target to escort.
    * Minor ai tweaks.
    * Should fix the escort ai from blowing up.
    * Put some minimum docking requirements.
    * Fixed some escort ai issues.
    * Escorts can now return to ship.
    * Escorts and fighter bays start to work well.
    * First template for real escorts.
    Removed some less than ideal tracks for Proteron.
    Improved the FLF Catastrophe event, added support for better music control
    Another track from Matthew Pablo (for Proteron)
    
    c.f. https://opengameart.org/content/imminent-threat
    Added some unique Pirate battle music.
    
    At first I thought this would be tough to use but turns out Naev
    has a credits screen I didn't know about. xD So yeah, here's some
    unique pirate music!
    
    c.f. https://opengameart.org/content/blackmoor-tides-epic-pirate-battle-theme
    Another track for the Thurion!
    
    c.f. https://opengameart.org/content/dark-city
    More music!
    
    At first I thought this would be great for the Thurion, but then
    I found that it's probably a better fit for the Proteron.
    
    c.f. https://opengameart.org/content/heart-of-machine
    Added some pirate ambient music. Arr!
    
    Also fixed some mistakes in the change I made to factional ambient
    music.
    Improved the way ambient music is selected.
    
    Specifically this makes the ambient music get chosen in the same
    way combat music does: based on presences rather than who "owns" the
    system (meaning you can hear factional ambient music in empty but
    factionally dominated systems), and with support for explicitly
    marking which factions get neutral music too (rather than the
    Collective being a specialized exception).
    Some ambient factional music for the Thurion.
    
    Comes from: https://opengameart.org/content/motherload
    
    Was just looking through music on OGA and thought this one sounded
    like a good fit for Thurion space. I just re-exported the wav in
    Audacity to Ogg Vorbis and made it so that the Thurion would use
    it.
    Made those var names shorter
    Added an API for allowing missions / events to force certain music.
    
    It works by having a var to force a certain faction, one for ambient
    and one for combat. Dangerous and missions *must* have a thing in
    the abort() function popping the variables (you don't want it to
    bug out and leave you stuck with factional music forever), but it
    works!
    
    Potentially useful for something to the effect of defending against
    invaders.
    Made it unlikely (but not impossible) for double-playing a music track
    
    It's a pretty simple change: now, if it selects the same ambient or
    combat music as the last music played, it reselects music up to 3
    times (as long as that same track is chosen). This makes it extremely
    unlikely, but not impossible, for the same track to play twice (for
    example, if 3 music choices are available, this reduces the chances
    of playing a track twice from 33% to 1%).
    
    I chose this method both because there's nothing wrong per se with
    playing a duplicate on occasion, and in case only one music choice is
    defined for some reason.
    Fixed the music so it plays combat music correctly.
    
    There were a few parts to this. In a nutshell:
    
    1. Fixed the way enemies are counted so that disabled pilots are properly
       accounted for (previously a disabled and then destroyed enemy would
       decrease the enemy counter twice, for instance).
    
    2. Removed the unnecessary requirement for the enemy becoming hostile
       to be the first enemy before setting combat music. (Lua already takes
       care of this, so the check in C was redundant.)
    
    3. Fixed choose_combat Lua function so that if it finds that it's already
       playing, it still marks itself as the last music played (important because
       otherwise "ambient" is always set to "last" when jumping in, and music for
       missions ends up getting set before "idle" plays but after "ambient";
       if previous system had been playing combat music it would catch this and
       then not record itself as the "last" type, leading to ambient being "last"
       even though combat really was).
    
    TL;DR: combat music now plays correctly, 100% of the time. No strange cases
    of ambient music when you're fighting a gigantic horde of pirates.
    Added factional combat music variation.
    
    This defines a variation of combat music by faction. Faction is
    determined by checking the faction with the highest presence in the
    current system that you are enemies with.
    * Attempt to clean up the whitespace mess in Lua a bit.
    general update, hopefully not broken
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Fixed the music script when dealing with systems that have no faction.
    Reworked music.lua to actually function as intended and use new API.
    Scaffolding for the future!
    * Fixed music.
    Lowered probability of factional tracks by 10%.
    Replaced music.lua hackiness with somewhat-lesser hackiness.
    Added two Dvaered songs by Askyel.
    Removed whitespace from music filenames; renamed to suit purpose.
    Added five new songs by Askyel, minor checkgain.sh fix.
    * Cleaned up music script a bit.
    * Use sirius song for sirius.
    * Forgot to change bit to new API.
    * New song by saturn6.
    * Another song by Saturn6.
    * New songs by Saturn6.
    * Class O is aquatic - bitchin'.
    * Lowered song change back to ambient delay to 10.
    * Do not change combat music if it is already playing.
    * Combat music plays for at least 15 seconds.
    * Another song by Zeropage modified by qubodup.
    * Added new song by Zeropage modified by qubodup.
    * Made music.lua sexier.
    * Cleaned up music.lua a bit.
    * Implemented replaygain.
    * Fixed music again.
    * Updated music.lua to the API change.
    * Nebulae is plural, changed it all to nebula.
    * Made savegame more robust when loading inexistant missions.
    * New song by Nikola Whallon.
    * New song by Nikola Whallon.
    * Yet another song by Nikola Whallon.
    * Support for new song.
    * Fixed the naming of the metatables.
    * Fixed music.lua.
    * New song by Nikola Whallon.
    * Properly added credits.
    * New song for nebulae battles.
    * Using combat music now.
    * More music improvements.
    * New song.
    * Better music handling.
    * Lesson of the day: DO NOT CALL MIX_* FUNCTIONS FROM THE CALLBACKS.
    * Added tracks by Nikola Whallon.
    * Step two of the lua api conversion, needs heavy testing.
    * Step one of updating lua api to use metatables.
    * Have land differenciate between planet classes.
    * Added planet_getClass().
    * Music now plays constantly.
    Improved music handling
    music is now controlled by lua \o/
    Converted SOUND_LICENSE to yaml so it can be processed with python et al.
    Capitalization of soundtrack name.
    Improved soundtrack to include all songs with no duplicates.
    Completed soundtrack.
    Build soundtrack using script from yaml.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New versions of three of Saturn6's tracks.
    * Added replaygain information (vorbisgain).
    * New song for nebulae battles.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added replaygain information (vorbisgain).
    * Yet another song by Nikola Whallon.
    general update, hopefully not broken
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced combat3.ogg (Eridani's Rock) with new version.
    Removed whitespace from music filenames; renamed to suit purpose.
    Added five new songs by Askyel, minor checkgain.sh fix.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added replaygain information (vorbisgain).
    * Last patch also added more space bindings to lua.
    * Adding a lot more music thanks to the marvelous vegastrike.
    general update, hopefully not broken
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added replaygain information (vorbisgain).
    * More music improvements.
    * New song.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added replaygain information (vorbisgain).
    * New song by Nikola Whallon.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added replaygain information (vorbisgain).
    * Added intro song for intro screen.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added replaygain information (vorbisgain).
    * New song by Nikola Whallon.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added replaygain information (vorbisgain).
    branch:      naev
    [svn] Added basic music support to game
    OpenAL and VorbisFile are new deps
    Added a bit of silence at the end of Blackmoor Tides.
    
    It works better in Naev that way.
    Added some unique Pirate battle music.
    
    At first I thought this would be tough to use but turns out Naev
    has a credits screen I didn't know about. xD So yeah, here's some
    unique pirate music!
    
    c.f. https://opengameart.org/content/blackmoor-tides-epic-pirate-battle-theme
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Removed whitespace from music filenames; renamed to suit purpose.
    Added five new songs by Askyel, minor checkgain.sh fix.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added replaygain information (vorbisgain).
    * Last patch also added more space bindings to lua.
    * Adding a lot more music thanks to the marvelous vegastrike.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New songs by Saturn6.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added replaygain information (vorbisgain).
    * New song by Nikola Whallon.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added replaygain information (vorbisgain).
    * Added tracks by Nikola Whallon.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Another song by Saturn6.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added replaygain information (vorbisgain).
    * Last patch also added more space bindings to lua.
    * Adding a lot more music thanks to the marvelous vegastrike.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added new song by Zeropage modified by qubodup.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New versions of three of Saturn6's tracks.
    * Added replaygain information (vorbisgain).
    * Uploading the sirius1 song so I don't lose it.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added two Dvaered songs by Askyel.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New songs by Saturn6.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added replaygain information (vorbisgain).
    * Added tracks by Nikola Whallon.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added replaygain information (vorbisgain).
    * Last patch also added more space bindings to lua.
    * Adding a lot more music thanks to the marvelous vegastrike.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New song by saturn6.
    Another track for the Thurion!
    
    c.f. https://opengameart.org/content/dark-city
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added replaygain information (vorbisgain).
    * Last patch also added more space bindings to lua.
    * Adding a lot more music thanks to the marvelous vegastrike.
    Added some pirate ambient music. Arr!
    
    Also fixed some mistakes in the change I made to factional ambient
    music.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added replaygain information (vorbisgain).
    * Last patch also added more space bindings to lua.
    * Adding a lot more music thanks to the marvelous vegastrike.
    Added some pirate ambient music. Arr!
    
    Also fixed some mistakes in the change I made to factional ambient
    music.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added replaygain information (vorbisgain).
    * Last patch also added more space bindings to lua.
    * Adding a lot more music thanks to the marvelous vegastrike.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added replaygain information (vorbisgain).
    * Last patch also added more space bindings to lua.
    * Adding a lot more music thanks to the marvelous vegastrike.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    New versions of three of Saturn6's tracks.
    * Added another song by saturn6.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Another song by Zeropage modified by qubodup.
    general update, hopefully not broken
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added replaygain information (vorbisgain).
    music is now controlled by lua \o/
    branch:      naev
    [svn] Added basic music support to game
    OpenAL and VorbisFile are new deps
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added replaygain information (vorbisgain).
    * New song by Nikola Whallon.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added five new songs by Askyel, minor checkgain.sh fix.
    * New songs by Saturn6.
    * Added script to make sure every song has gain.
    general update, hopefully not broken
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added replaygain information (vorbisgain).
    * Last patch also added more space bindings to lua.
    * Adding a lot more music thanks to the marvelous vegastrike.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Removed whitespace from music filenames; renamed to suit purpose.
    Added five new songs by Askyel, minor checkgain.sh fix.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added replaygain information (vorbisgain).
    * Added tracks by Nikola Whallon.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added replaygain information (vorbisgain).
    * Last patch also added more space bindings to lua.
    * Adding a lot more music thanks to the marvelous vegastrike.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Forgot file with last change.
    More music!
    
    At first I thought this would be great for the Thurion, but then
    I found that it's probably a better fit for the Proteron.
    
    c.f. https://opengameart.org/content/heart-of-machine
    Another track from Matthew Pablo (for Proteron)
    
    c.f. https://opengameart.org/content/imminent-threat
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added replaygain information (vorbisgain).
    branch:      naev
    [svn] Added basic music support to game
    OpenAL and VorbisFile are new deps
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Removed whitespace from music filenames; renamed to suit purpose.
    Added five new songs by Askyel, minor checkgain.sh fix.
    More music!
    
    At first I thought this would be great for the Thurion, but then
    I found that it's probably a better fit for the Proteron.
    
    c.f. https://opengameart.org/content/heart-of-machine
    Some ambient factional music for the Thurion.
    
    Comes from: https://opengameart.org/content/motherload
    
    Was just looking through music on OGA and thought this one sounded
    like a good fit for Thurion space. I just re-exported the wav in
    Audacity to Ogg Vorbis and made it so that the Thurion would use
    it.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added replaygain information (vorbisgain).
    branch:      naev
    [svn] Added basic music support to game
    OpenAL and VorbisFile are new deps
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added replaygain information (vorbisgain).
    * Added tracks by Nikola Whallon.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added replaygain information (vorbisgain).
    * Added tracks by Nikola Whallon.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Added two Dvaered songs by Askyel.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Removed whitespace from music filenames; renamed to suit purpose.
    Added five new songs by Askyel, minor checkgain.sh fix.
    Needed-audio sound clips
    
    Additional changes:
    1. Attachment (outfit installation) cleaned up and updated with an
    air-wrench.
    2. Detachment (outfit uninstallation) cleaned up and updated with an
    air-wrench.
    3. Jamming system activation sound. (computer_jam.ogg)
    4. Outfit Activation.
    5. Outfit Deactivation.
    Needed-audio sound clips
    
    Four needed-audio sound clips:
    1. computer_lock.ogg
    (Target Lock Established)
    2. 1-second-attachment.ogg
    (Outfit Installation)
    3. 1-second-detachment.ogg
    (Outfit Uninstallation)
    4. mouse_click.ogg
    (Quiet mouse-click sound)
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * More doxygen.
    * Added pilot death explosions.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * GUI sound update.
    * Wee bit more doxygen.
    * Audible noise when player enters jump-safe zone.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Removed outdated sounds.
    * New fancy sounds.
    * Ship/Outfit updates and clean up.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Removed outdated sounds.
    * New fancy sounds.
    * Ship/Outfit updates and clean up.
    Needed-audio sound clips
    
    Four needed-audio sound clips:
    1. computer_lock.ogg
    (Target Lock Established)
    2. 1-second-attachment.ogg
    (Outfit Installation)
    3. 1-second-detachment.ogg
    (Outfit Uninstallation)
    4. mouse_click.ogg
    (Quiet mouse-click sound)
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Updated sound to have higher volume.
    * Added hyperspace sounds.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Removed outdated sounds.
    * New fancy sounds.
    * Ship/Outfit updates and clean up.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Sounds updated by Deiz.
    * New outfits by Deiz.
    * Balancing by Deiz.
    * End sprites by Deiz.
    * New sounds.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Sounds updated by Deiz.
    * New sound for the EMP grenade.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added sounds to beam weapons.  Sound system needs overhaul for it to be better.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added a sound for afterburner disengage.
    * Small number tweak.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    branch:      naev
    [svn] added more sounds
    sound engine should be working ,but isn't tuned enough yet
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Removed outdated sounds.
    * New fancy sounds.
    * Ship/Outfit updates and clean up.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    Replaced compression sound with a better version.
    * Added compression sound.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Lowered the volume on some samples.
    new sounds
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Removed outdated sounds.
    * New fancy sounds.
    * Ship/Outfit updates and clean up.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Updated sound to have higher volume.
    * Added hyperspace sounds.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * More doxygen.
    * Added pilot death explosions.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Sounds updated by Deiz.
    branch:      naev
    [svn] added more sounds
    sound engine should be working ,but isn't tuned enough yet
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    sound cleans up better, fixed segfaults
    branch:      naev
    [svn] added more sounds
    sound engine should be working ,but isn't tuned enough yet
    branch:      naev
    [svn] Added basic music support to game
    OpenAL and VorbisFile are new deps
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * GUI sound update.
    * Wee bit more doxygen.
    * Audible noise when player enters jump-safe zone.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Updated sound to have higher volume.
    * Added hyperspace sounds.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Added sounds to beam weapons.  Sound system needs overhaul for it to be better.
    Needed-audio sound clips
    
    Additional changes:
    1. Attachment (outfit installation) cleaned up and updated with an
    air-wrench.
    2. Detachment (outfit uninstallation) cleaned up and updated with an
    air-wrench.
    3. Jamming system activation sound. (computer_jam.ogg)
    4. Outfit Activation.
    5. Outfit Deactivation.
    Needed-audio sound clips
    
    Four needed-audio sound clips:
    1. computer_lock.ogg
    (Target Lock Established)
    2. 1-second-attachment.ogg
    (Outfit Installation)
    3. 1-second-detachment.ogg
    (Outfit Uninstallation)
    4. mouse_click.ogg
    (Quiet mouse-click sound)
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Removed outdated sounds.
    * New fancy sounds.
    * Ship/Outfit updates and clean up.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * More doxygen.
    * Targetting sounds implemented.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * More doxygen.
    * Added pilot death explosions.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Updated sound to have higher volume.
    * Added hyperspace sounds.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Hail sound works.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Improved ripper sound.
    * Removed outdated sounds.
    * New fancy sounds.
    * Ship/Outfit updates and clean up.
    Needed-audio sound clips
    
    Additional changes:
    1. Attachment (outfit installation) cleaned up and updated with an
    air-wrench.
    2. Detachment (outfit uninstallation) cleaned up and updated with an
    air-wrench.
    3. Jamming system activation sound. (computer_jam.ogg)
    4. Outfit Activation.
    5. Outfit Deactivation.
    Needed-audio sound clips
    
    Four needed-audio sound clips:
    1. computer_lock.ogg
    (Target Lock Established)
    2. 1-second-attachment.ogg
    (Outfit Installation)
    3. 1-second-detachment.ogg
    (Outfit Uninstallation)
    4. mouse_click.ogg
    (Quiet mouse-click sound)
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Updated sound to have higher volume.
    * Added hyperspace sounds.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    some sound cleanup and fixing potential bugs
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Removed outdated sounds.
    * New fancy sounds.
    * Ship/Outfit updates and clean up.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Removed outdated sounds.
    * New fancy sounds.
    * Ship/Outfit updates and clean up.
    Needed-audio sound clips
    
    Additional changes:
    1. Attachment (outfit installation) cleaned up and updated with an
    air-wrench.
    2. Detachment (outfit uninstallation) cleaned up and updated with an
    air-wrench.
    3. Jamming system activation sound. (computer_jam.ogg)
    4. Outfit Activation.
    5. Outfit Deactivation.
    Needed-audio sound clips
    
    Four needed-audio sound clips:
    1. computer_lock.ogg
    (Target Lock Established)
    2. 1-second-attachment.ogg
    (Outfit Installation)
    3. 1-second-detachment.ogg
    (Outfit Uninstallation)
    4. mouse_click.ogg
    (Quiet mouse-click sound)
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Removed outdated sounds.
    * New fancy sounds.
    * Ship/Outfit updates and clean up.
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * Lowered the volume on some samples.
    new sounds
    Needed-audio sound clips
    
    Four needed-audio sound clips:
    1. computer_lock.ogg
    (Target Lock Established)
    2. 1-second-attachment.ogg
    (Outfit Installation)
    3. 1-second-detachment.ogg
    (Outfit Uninstallation)
    4. mouse_click.ogg
    (Quiet mouse-click sound)
    Needed-audio sound clips
    
    Additional changes:
    1. Attachment (outfit installation) cleaned up and updated with an
    air-wrench.
    2. Detachment (outfit uninstallation) cleaned up and updated with an
    air-wrench.
    3. Jamming system activation sound. (computer_jam.ogg)
    4. Outfit Activation.
    5. Outfit Deactivation.
    Needed-audio sound clips
    
    Four needed-audio sound clips:
    1. computer_lock.ogg
    (Target Lock Established)
    2. 1-second-attachment.ogg
    (Outfit Installation)
    3. 1-second-detachment.ogg
    (Outfit Uninstallation)
    4. mouse_click.ogg
    (Quiet mouse-click sound)
    * Moved all game data into dat/, on the basis that the game data should be collected EITHER in a single dir OR in a single file.
    * Further sanified data loading by using #defined path prefixes everywhere.
    * Implemented a crude path lookup for lua script includes, so the whole path isn't needed in the include call.
    ** TODO? Make this fancier?
    ** ALSO? Should it be renamed to "include" or some such?
    * New outfit with sound added: Ion Cannon.
    Use OpenGL 3.1 and GLSL 1.40
    
    This should expand compatibility somewhat, hopefully fixing the issue in
    Windows in https://github.com/naev/naev/issues/1157 and the macOS issue
    in https://github.com/naev/naev/issues/1258.
    glsl: use texture() instead of texture2d()
    Use shader for gl_blitTextureInterpolate()
    Use OpenGL 3.1 and GLSL 1.40
    
    This should expand compatibility somewhat, hopefully fixing the issue in
    Windows in https://github.com/naev/naev/issues/1157 and the macOS issue
    in https://github.com/naev/naev/issues/1258.
    glsl: use texture() instead of texture2d()
    Pass color in a uniform
    Use a shader for texture blitting
    Use OpenGL 3.1 and GLSL 1.40
    
    This should expand compatibility somewhat, hopefully fixing the issue in
    Windows in https://github.com/naev/naev/issues/1157 and the macOS issue
    in https://github.com/naev/naev/issues/1258.
    Use circle for gl_drawCircleLoop()
    Use shader in gl_renderRect()
    Shader-based background_renderStars()
    
    For some reason, I can't get the boundry repeating to work
    Use simple shader when rendering stars
    
    It should be possible to move more of the logic to the shader
    Use OpenGL 3.1 and GLSL 1.40
    
    This should expand compatibility somewhat, hopefully fixing the issue in
    Windows in https://github.com/naev/naev/issues/1157 and the macOS issue
    in https://github.com/naev/naev/issues/1258.
    glsl: avoid implicit integer/float conversion
    
    This failed when I tried building with GL ES. It's arguably neater this
    way anyway.
    Use shader to draw smooth circles
    Anti-alias filled circles
    glsl: "varying" is apparently deprecated
    Use shader to draw filled circles
    Use generic vertex attribute when rendering rectangles
    Use shader in gl_renderRect()
    Use matrices instead of modifying VBOs in gl_blitTexture()
    Migrate away from old OpenGL matrices in stars.vert
    Pass projection matrix to texture.vert using uniform
    
    The previous code relies on deprecated OpenGL matrix functionality.
    Pass color in a uniform
    Use a shader for texture blitting
    Use OpenGL 3.1 and GLSL 1.40
    
    This should expand compatibility somewhat, hopefully fixing the issue in
    Windows in https://github.com/naev/naev/issues/1157 and the macOS issue
    in https://github.com/naev/naev/issues/1258.
    More generic vertex attributes
    Rewrite nebula rendering to use a shader
    Use shader in gl_renderRect()
    Use matrices instead of modifying VBOs in gl_blitTexture()
    Migrate away from old OpenGL matrices in stars.vert
    Pass projection matrix to texture.vert using uniform
    
    The previous code relies on deprecated OpenGL matrix functionality.
    Pass color in a uniform
    Use a shader for texture blitting
    Use OpenGL 3.1 and GLSL 1.40
    
    This should expand compatibility somewhat, hopefully fixing the issue in
    Windows in https://github.com/naev/naev/issues/1157 and the macOS issue
    in https://github.com/naev/naev/issues/1258.
    Begin porting toolkit to use a fragment shader for rounded corners
    
    The borders aren't currently rendered
    glsl: avoid implicit integer/float conversion
    
    This failed when I tried building with GL ES. It's arguably neater this
    way anyway.
    Use shader to draw smooth circles
    Anti-alias filled circles
    glsl: "varying" is apparently deprecated
    Use shader to draw filled circles
    Use generic vertex attribute when rendering rectangles
    Use shader in gl_renderRect()
    Use matrices instead of modifying VBOs in gl_blitTexture()
    Migrate away from old OpenGL matrices in stars.vert
    Pass projection matrix to texture.vert using uniform
    
    The previous code relies on deprecated OpenGL matrix functionality.
    Pass color in a uniform
    Use a shader for texture blitting
    Use OpenGL 3.1 and GLSL 1.40
    
    This should expand compatibility somewhat, hopefully fixing the issue in
    Windows in https://github.com/naev/naev/issues/1157 and the macOS issue
    in https://github.com/naev/naev/issues/1258.
    Use GL_RED as internalformat for font textures
    
    It seems using GL_ALPHA here isn't allowed any more, in favor of GL_RED.
    glsl: use texture() instead of texture2d()
    Use a shader when rendering fonts
    Pass color in a uniform
    Use a shader for texture blitting
    Use OpenGL 3.1 and GLSL 1.40
    
    This should expand compatibility somewhat, hopefully fixing the issue in
    Windows in https://github.com/naev/naev/issues/1157 and the macOS issue
    in https://github.com/naev/naev/issues/1258.
    Use a shader when rendering fonts
    Use generic vertex attribute when rendering rectangles
    Use shader in gl_renderRect()
    Use matrices instead of modifying VBOs in gl_blitTexture()
    Migrate away from old OpenGL matrices in stars.vert
    Pass projection matrix to texture.vert using uniform
    
    The previous code relies on deprecated OpenGL matrix functionality.
    Pass color in a uniform
    Use a shader for texture blitting
    Use OpenGL 3.1 and GLSL 1.40
    
    This should expand compatibility somewhat, hopefully fixing the issue in
    Windows in https://github.com/naev/naev/issues/1157 and the macOS issue
    in https://github.com/naev/naev/issues/1258.
    toolkit: tidy glsl code, and render inner and outer border
    Begin porting toolkit to use a fragment shader for rounded corners
    
    The borders aren't currently rendered
    Use OpenGL 3.1 and GLSL 1.40
    
    This should expand compatibility somewhat, hopefully fixing the issue in
    Windows in https://github.com/naev/naev/issues/1157 and the macOS issue
    in https://github.com/naev/naev/issues/1258.
    glsl: avoid implicit integer/float conversion
    
    This failed when I tried building with GL ES. It's arguably neater this
    way anyway.
    Shader based beam rendering
    Use OpenGL 3.1 and GLSL 1.40
    
    This should expand compatibility somewhat, hopefully fixing the issue in
    Windows in https://github.com/naev/naev/issues/1157 and the macOS issue
    in https://github.com/naev/naev/issues/1258.
    Use circle for gl_drawCircleLoop()
    Use generic vertex attribute when rendering rectangles
    Use shader in gl_renderRect()
    Use matrices instead of modifying VBOs in gl_blitTexture()
    Migrate away from old OpenGL matrices in stars.vert
    Pass projection matrix to texture.vert using uniform
    
    The previous code relies on deprecated OpenGL matrix functionality.
    Pass color in a uniform
    Use a shader for texture blitting
    Use OpenGL 3.1 and GLSL 1.40
    
    This should expand compatibility somewhat, hopefully fixing the issue in
    Windows in https://github.com/naev/naev/issues/1157 and the macOS issue
    in https://github.com/naev/naev/issues/1258.
    Create a "smooth" shader, to replace some of the remaining code
    Use circle for gl_drawCircleLoop()
    Use generic vertex attribute when rendering rectangles
    Use shader in gl_renderRect()
    Use matrices instead of modifying VBOs in gl_blitTexture()
    Migrate away from old OpenGL matrices in stars.vert
    Pass projection matrix to texture.vert using uniform
    
    The previous code relies on deprecated OpenGL matrix functionality.
    Pass color in a uniform
    Use a shader for texture blitting
    Use OpenGL 3.1 and GLSL 1.40
    
    This should expand compatibility somewhat, hopefully fixing the issue in
    Windows in https://github.com/naev/naev/issues/1157 and the macOS issue
    in https://github.com/naev/naev/issues/1258.
    glsl: avoid implicit integer/float conversion
    
    This failed when I tried building with GL ES. It's arguably neater this
    way anyway.
    Some improvements to the star rendering code
    Pass a single brightness value to stars shader, not vec4 color
    Use generic vertex attributes when rendering stars
    Migrate away from old OpenGL matrices in stars.vert
    Somewhat neater vectorization in stars.vert
    More vectorized code
    Get boundry repeating to work
    Shader-based background_renderStars()
    
    For some reason, I can't get the boundry repeating to work
    Use simple shader when rendering stars
    
    It should be possible to move more of the logic to the shader
    Use OpenGL 3.1 and GLSL 1.40
    
    This should expand compatibility somewhat, hopefully fixing the issue in
    Windows in https://github.com/naev/naev/issues/1157 and the macOS issue
    in https://github.com/naev/naev/issues/1258.
    Create a "smooth" shader, to replace some of the remaining code
    Pass a single brightness value to stars shader, not vec4 color
    Use generic vertex attributes when rendering stars
    Shader-based background_renderStars()
    
    For some reason, I can't get the boundry repeating to work
    Use simple shader when rendering stars
    
    It should be possible to move more of the logic to the shader
    Use OpenGL 3.1 and GLSL 1.40
    
    This should expand compatibility somewhat, hopefully fixing the issue in
    Windows in https://github.com/naev/naev/issues/1157 and the macOS issue
    in https://github.com/naev/naev/issues/1258.
    Shader based beam rendering
    Start moving to glVertexAttribPointer()
    
    This is required in modern OpenGL
    Use matrices instead of modifying VBOs in gl_blitTexture()
    Migrate away from old OpenGL matrices in stars.vert
    Pass projection matrix to texture.vert using uniform
    
    The previous code relies on deprecated OpenGL matrix functionality.
    Pass color in a uniform
    Use a shader for texture blitting
    Use OpenGL 3.1 and GLSL 1.40
    
    This should expand compatibility somewhat, hopefully fixing the issue in
    Windows in https://github.com/naev/naev/issues/1157 and the macOS issue
    in https://github.com/naev/naev/issues/1258.
    glsl: avoid implicit integer/float conversion
    
    This failed when I tried building with GL ES. It's arguably neater this
    way anyway.
    Anti-alias filled circles
    glsl: "varying" is apparently deprecated
    Use shader to draw filled circles
    Use OpenGL 3.1 and GLSL 1.40
    
    This should expand compatibility somewhat, hopefully fixing the issue in
    Windows in https://github.com/naev/naev/issues/1157 and the macOS issue
    in https://github.com/naev/naev/issues/1258.
    glsl: avoid implicit integer/float conversion
    
    This failed when I tried building with GL ES. It's arguably neater this
    way anyway.
    Saner circle.frag
    Use shader to draw smooth circles
    Anti-alias filled circles
    glsl: "varying" is apparently deprecated
    Use shader to draw filled circles
    Use OpenGL 3.1 and GLSL 1.40
    
    This should expand compatibility somewhat, hopefully fixing the issue in
    Windows in https://github.com/naev/naev/issues/1157 and the macOS issue
    in https://github.com/naev/naev/issues/1258.
    Use the GLSL distance() function
    Rewrite nebula rendering to use a shader
    Use OpenGL 3.1 and GLSL 1.40
    
    This should expand compatibility somewhat, hopefully fixing the issue in
    Windows in https://github.com/naev/naev/issues/1157 and the macOS issue
    in https://github.com/naev/naev/issues/1258.
    Start moving to glVertexAttribPointer()
    
    This is required in modern OpenGL
    Use matrices instead of modifying VBOs in gl_blitTexture()
    Migrate away from old OpenGL matrices in stars.vert
    Pass projection matrix to texture.vert using uniform
    
    The previous code relies on deprecated OpenGL matrix functionality.
    Pass color in a uniform
    Use a shader for texture blitting
    Use OpenGL 3.1 and GLSL 1.40
    
    This should expand compatibility somewhat, hopefully fixing the issue in
    Windows in https://github.com/naev/naev/issues/1157 and the macOS issue
    in https://github.com/naev/naev/issues/1258.
    glsl: avoid implicit integer/float conversion
    
    This failed when I tried building with GL ES. It's arguably neater this
    way anyway.
    Some improvements to the star rendering code
    Pass a single brightness value to stars shader, not vec4 color
    Use generic vertex attributes when rendering stars
    Shader-based background_renderStars()
    
    For some reason, I can't get the boundry repeating to work
    Use simple shader when rendering stars
    
    It should be possible to move more of the logic to the shader
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Fixed Thurion ship descriptions.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Add new Thurion ship
    Added two new Thurion ships (light fighter and bomber) and some new Thurion modifier outfits.
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Capitalize Shaman base type.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Fixed Thurion ship descriptions.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Added a new Thurion freighter and Thurion weapons.
    Add new Thurion ship
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Removed comment lines that are now meaningless.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove caps.
    * Load ships from laid out data.
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove caps.
    * Load ships from laid out data.
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    major zalek update
    * Set exclusive and required flags on core slots.
    * Remove caps.
    * Load ships from laid out data.
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Removed comment lines that are now meaningless.
    * Remove caps.
    * Load ships from laid out data.
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Za'lek outfits + fixes
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Remove intrinsic energy, shield, etc. from Za'lek drones
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Fixed location of fuel consumption block in Soromid Vox, Za'lek Hephaestus, and Za'lek Prototype cruiser from Stats block to characteristics block. Added fuel consumption blocks for Heavy Drone and Za'lek Drones with value of 1.
    general update, hopefully not broken
    major zalek update
    * Set exclusive and required flags on core slots.
    * Schroedinger gets jump detection boost.
    * Remove caps.
    * Load ships from laid out data.
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Za'lek outfits + fixes
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Remove intrinsic energy, shield, etc. from Za'lek drones
    Initial attempt at ship stat rebalancing
    Rebalanced newer Soromid and Za'lek ships
    Replace obsolete outfits in ship XML
    Fixed location of fuel consumption block in Soromid Vox, Za'lek Hephaestus, and Za'lek Prototype cruiser from Stats block to characteristics block. Added fuel consumption blocks for Heavy Drone and Za'lek Drones with value of 1.
    general update, hopefully not broken
    major zalek update
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Reduced time dilation of the Kestrel to 2.25.
    
    Just a bit of refinement to the value. 2.25 feels more natural I
    think since the Kestrel is generally built to be faster than other
    Cruisers.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Give the kestrel a lighter stock core system
    Replace the kestrel's speed boost with a one-off engine
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove caps.
    * Load ships from laid out data.
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    * Set exclusive and required flags on core slots.
    * Remove caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Reduced time dilation of the Kestrel to 2.25.
    
    Just a bit of refinement to the value. 2.25 feels more natural I
    think since the Kestrel is generally built to be faster than other
    Cruisers.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Replace the kestrel's speed boost with a one-off engine
    Initial attempt at ship stat rebalancing
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Fixed Thurion ship descriptions.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Added a new Thurion freighter and Thurion weapons.
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    Apparently, the Medium Civilian Vessel License doesn't exist.
    * Remove caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Fixed Thurion ship descriptions.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Added two new Thurion ships (light fighter and bomber) and some new Thurion modifier outfits.
    Add license requirements to the DV Vendetta and Thurion Ingenuity
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Removed fuel from the Thurion Ingenuity
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    Give Ingenuity its own sprite.
    
    Submitted by: Jason Zheng
    major zalek update
    * Fixed absorbed for thurion ship.
    Updates and fixes related to the merge of the old thurion, zalek, heretics and whatever other branch was merged.
    
      - Includes correction of previous merging errors.
      - Includes updates related to new standards (split XML, case, stuff like
        that O_o)
      - Generic AI used if required by the new factions/ships.
      - News messages available without warning for the new factions.
      - Map updates were made, though more *should* be done for more
        consistency with the content of the wiki.
      - The Thurion ship that had no sprite now has a copy of the Proteron
        Derivative’s sprites. This is meant to be a temporary solution,
        of course, but is at least working in the meantime.
      - Thurion’s spawn is crap, but its own ships can’t stand the nebula
        where they should spawn, so it’s pretty pointless at this time
        (maybe the nebula damage modifiers are not working?).
    * Naming convention.
    * Re-added Ingenuity.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Improved the descriptions of Empire and Dvaered versions of standard ships.
    
    They previously all just said things like, "An Empire Lancelot." which
    is completely obvious and provides no information to the player.
    This fixes that; descriptions now explain how each of these ships
    differs from the standard version, just as with the pirate ships.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Za'lek outfits + fixes
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Assorted Changes
    
    Makes Za'lek drones more drone-like (They'll never be piloted by the
    player under legit circumstances). Further trying to balance Electron
    Cannons so a mob of Col. HDs can't annihilate heavy ships quite as
    easily (will probably have to switch their damage to shieldbreaker to
    coinside with their desc.).
    Remove intrinsic energy, shield, etc. from Za'lek drones
    Initial attempt at ship stat rebalancing
    Rebalanced newer Soromid and Za'lek ships
    Replace obsolete outfits in ship XML
    Fixed location of fuel consumption block in Soromid Vox, Za'lek Hephaestus, and Za'lek Prototype cruiser from Stats block to characteristics block. Added fuel consumption blocks for Heavy Drone and Za'lek Drones with value of 1.
    general update, hopefully not broken
    major zalek update
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Start of bio fins
    
    Just need the in-between stages now.
    Updated all Soromid ships for custom slot types
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Made time units galactic, plus some other small fixes.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    The poor Llama doesn't need two 20% CPU penalties.
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    * Set exclusive and required flags on core slots.
    * Llama now gets a CPU penalty as well.
    * cpu_mod now also multiplies ship cpu, not just the capacity.
    * Added CPU multiplier ship stat, does nothing for now.
    * Remove caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    general update, hopefully not broken
    zalek ships and further map fixes
    * Remove spaces and caps.
    * Load ships from laid out data.
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Added Assault on Haleb mission.
    
    Destroy Raglan Outpost! This of course reduces Dvaered presence in
    Frontier space and is seen as a massive victory for the FLF.
    Finished the "Assault on Raelid" mission.
    
    Finally, it's finished! When you beat it, Raelid Outpost is wiped
    from the map, which angers the Empire and turns them into an enemy.
    The general feel at the end is victorious, yet worrisome.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Add Thurion destroyer and carrier.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Improved the descriptions of Empire and Dvaered versions of standard ships.
    
    They previously all just said things like, "An Empire Lancelot." which
    is completely obvious and provides no information to the player.
    This fixes that; descriptions now explain how each of these ships
    differs from the standard version, just as with the pirate ships.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Removed comment lines that are now meaningless.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Fixed up the Proteron Derivative's description, started on Proteron equips.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Fixed Derivative description.
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Start of bio fins
    
    Just need the in-between stages now.
    Updated all Soromid ships for custom slot types
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Various Collective Heavy Drone modifications.
    
    In particular, I've modified the Electron Burst Cannon again, making
    it shorter-ranged and a constant velocity rather than accelerating,
    and I've also changed it to a shieldbreaker and cut down its damage.
    Heavy Drones also now have a -50% ammo and -50% missile range penalty.
    On the flipside, I made it so that heavy drones get equipped with
    Heavy Neutron Disruptors, which were removed from them for some reason.
    Changed default GUI to "brushed".
    Revert "Further Heavy Drone Tweakery"
    
    This reverts commit f279292bb2cbad7c676999156c5140b4c4a30ae3.
    Further Heavy Drone Tweakery
    
    maek heaby drone stronk :DDDDD
    Rebalance the Collective Heavy Drone as a heavy fighter
    Correct Heavy Drone's fuel consumption
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Fixed location of fuel consumption block in Soromid Vox, Za'lek Hephaestus, and Za'lek Prototype cruiser from Stats block to characteristics block. Added fuel consumption blocks for Heavy Drone and Za'lek Drones with value of 1.
    general update, hopefully not broken
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Finished the "Assault on Raelid" mission.
    
    Finally, it's finished! When you beat it, Raelid Outpost is wiped
    from the map, which angers the Empire and turns them into an enemy.
    The general feel at the end is victorious, yet worrisome.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Improved the descriptions of Empire and Dvaered versions of standard ships.
    
    They previously all just said things like, "An Empire Lancelot." which
    is completely obvious and provides no information to the player.
    This fixes that; descriptions now explain how each of these ships
    differs from the standard version, just as with the pirate ships.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove caps.
    * Load ships from laid out data.
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Improved the descriptions of Empire and Dvaered versions of standard ships.
    
    They previously all just said things like, "An Empire Lancelot." which
    is completely obvious and provides no information to the player.
    This fixes that; descriptions now explain how each of these ships
    differs from the standard version, just as with the pirate ships.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Add Thurion destroyer and carrier.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Tweaked Peacemaker and Watson masses
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Improved the descriptions of Empire and Dvaered versions of standard ships.
    
    They previously all just said things like, "An Empire Lancelot." which
    is completely obvious and provides no information to the player.
    This fixes that; descriptions now explain how each of these ships
    differs from the standard version, just as with the pirate ships.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Tweaked the balance of small ships slightly.
    
    I slightly nerfed the Hyena in an attempt to make the Shark a valid
    small ship choice, and I slightly nerfed the Pirate Shark as well.
    Both now have a speed mod of 5 (instead of 10), and the Hyena now
    has an increased armor penalty and reduced thrust mod.
    
    The Hyena and Shark are still mostly identical, but the choice is
    less clear now: you have the Hyena, which is faster but weaker and
    with less utility / structure slots, or the Shark, which is slower
    but stronger and with more slots.
    Substantially buffed the Hyena's agility.
    
    The turn mod has been increased from 10% to 15%, and the thrust mod
    has been increased from 10% to 100% (i.e. double thrust). This makes
    dodging bullets, the intended advantage of the Hyena, much easier,
    which in turn makes the ship more competitive. Also has a nice
    side-effect of making pirates a bit more of a threat.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Improved the descriptions of Empire and Dvaered versions of standard ships.
    
    They previously all just said things like, "An Empire Lancelot." which
    is completely obvious and provides no information to the player.
    This fixes that; descriptions now explain how each of these ships
    differs from the standard version, just as with the pirate ships.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    major zalek update
    BUGFIX: Dvaered Goddard had a price of 700,000 instead of 7,000,000
    * Set exclusive and required flags on core slots.
    * Removed comment lines that are now meaningless.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Tweaked Peacemaker and Watson masses
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Capitalize Shaman base type.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Fixed typo.
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Correct fabricator of Za'lek Daemon
    Initial attempt at ship stat rebalancing
    Rebalanced newer Soromid and Za'lek ships
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    major zalek update
    * Renamed ver1->demon and ver2->imp as they should have been originally.
    zalek ships and further map fixes
    * Remove spaces and caps.
    * Load ships from laid out data.
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Started on "FLF Catastrophe" event.
    Fixed a mistake in sindbad ship.
    Changed the Sindbad ship to use images straight from the planet folder.
    
    Also renamed the ship to "Sindbad" ("Base" made it sound too generic)
    and removed the redundant images.
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Added a ship tag to avoid false-positives in in-sanity and clean up NSH's output.
    * Remove caps.
    * Load ships from laid out data.
    Regenerated all ships with balancer.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Added a ship tag to avoid false-positives in in-sanity and clean up NSH's output.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Improved the descriptions of Empire and Dvaered versions of standard ships.
    
    They previously all just said things like, "An Empire Lancelot." which
    is completely obvious and provides no information to the player.
    This fixes that; descriptions now explain how each of these ships
    differs from the standard version, just as with the pirate ships.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Removed comment lines that are now meaningless.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    * Set exclusive and required flags on core slots.
    * Remove caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Start of bio fins
    
    Just need the in-between stages now.
    Updated all Soromid ships for custom slot types
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Tweaked the balance of small ships slightly.
    
    I slightly nerfed the Hyena in an attempt to make the Shark a valid
    small ship choice, and I slightly nerfed the Pirate Shark as well.
    Both now have a speed mod of 5 (instead of 10), and the Hyena now
    has an increased armor penalty and reduced thrust mod.
    
    The Hyena and Shark are still mostly identical, but the choice is
    less clear now: you have the Hyena, which is faster but weaker and
    with less utility / structure slots, or the Shark, which is slower
    but stronger and with more slots.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Tweaked Peacemaker and Watson masses
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Removed comment lines that are now meaningless.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Weakened the Mule a bit.
    
    The combat advantage the Rhino had over the Mule was too strong I think.
    I've weakened the Mule a bit to correct this.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    Apparently, the Medium Civilian Vessel License doesn't exist.
    * Removed comment lines that are now meaningless.
    * Remove caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added more ships for pirate ship stealing.
    
    This also changes "Za'lek Prototype Cruiser" to just "Za'lek Prototype"
    and adds Za'lek ships that were mission from tech.xml.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Rebalanced newer Soromid and Za'lek ships
    Replace obsolete outfits in ship XML
    Fixed location of fuel consumption block in Soromid Vox, Za'lek Hephaestus, and Za'lek Prototype cruiser from Stats block to characteristics block. Added fuel consumption blocks for Heavy Drone and Za'lek Drones with value of 1.
    major zalek update
    zalek ships and further map fixes
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Start of bio fins
    
    Just need the in-between stages now.
    Updated all Soromid ships for custom slot types
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Rebalanced newer Soromid and Za'lek ships
    Remove CPU element from Soromid Vox
    Replace obsolete outfits in ship XML
    Fixed location of fuel consumption block in Soromid Vox, Za'lek Hephaestus, and Za'lek Prototype cruiser from Stats block to characteristics block. Added fuel consumption blocks for Heavy Drone and Za'lek Drones with value of 1.
    general update, hopefully not broken
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Improved the descriptions of Empire and Dvaered versions of standard ships.
    
    They previously all just said things like, "An Empire Lancelot." which
    is completely obvious and provides no information to the player.
    This fixes that; descriptions now explain how each of these ships
    differs from the standard version, just as with the pirate ships.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    Apparently, the Medium Civilian Vessel License doesn't exist.
    * Remove caps.
    * Load ships from laid out data.
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Fix a merge error in the Pirate Ancestor's XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Removed comment lines that are now meaningless.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Za'lek outfits + fixes
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Assorted Changes
    
    Makes Za'lek drones more drone-like (They'll never be piloted by the
    player under legit circumstances). Further trying to balance Electron
    Cannons so a mob of Col. HDs can't annihilate heavy ships quite as
    easily (will probably have to switch their damage to shieldbreaker to
    coinside with their desc.).
    Remove intrinsic energy, shield, etc. from Za'lek drones
    Initial attempt at ship stat rebalancing
    Rebalanced newer Soromid and Za'lek ships
    Replace obsolete outfits in ship XML
    Fixed location of fuel consumption block in Soromid Vox, Za'lek Hephaestus, and Za'lek Prototype cruiser from Stats block to characteristics block. Added fuel consumption blocks for Heavy Drone and Za'lek Drones with value of 1.
    general update, hopefully not broken
    major zalek update
    * Set exclusive and required flags on core slots.
    * Remove caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Rebalanced newer Soromid and Za'lek ships
    Replace obsolete outfits in ship XML
    Fixed location of fuel consumption block in Soromid Vox, Za'lek Hephaestus, and Za'lek Prototype cruiser from Stats block to characteristics block. Added fuel consumption blocks for Heavy Drone and Za'lek Drones with value of 1.
    commiting for merge conflict issue
    general update, hopefully not broken
    major zalek update
    zalek ships and further map fixes
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Start of bio fins
    
    Just need the in-between stages now.
    Updated all Soromid ships for custom slot types
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Rebalanced newer Soromid and Za'lek ships
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Renamed ver1->demon and ver2->imp as they should have been originally.
    zalek ships and further map fixes
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Improved the descriptions of Empire and Dvaered versions of standard ships.
    
    They previously all just said things like, "An Empire Lancelot." which
    is completely obvious and provides no information to the player.
    This fixes that; descriptions now explain how each of these ships
    differs from the standard version, just as with the pirate ships.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Removed comment lines that are now meaningless.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Start of bio fins
    
    Just need the in-between stages now.
    Updated all Soromid ships for custom slot types
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    * Set exclusive and required flags on core slots.
    * Removed comment lines that are now meaningless.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Fixed Thurion ship descriptions.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Added two new Thurion ships (light fighter and bomber) and some new Thurion modifier outfits.
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated Sirius Reverence.
    fixed warnings
    Fixed typo in filename.
    Added a ship tag to avoid false-positives in in-sanity and clean up NSH's output.
    s/Reverance/Reverence/g
    New event in Sirius space- attempt to convert the player
    
    Signed-off-by: Sudarshan S
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Start of bio fins
    
    Just need the in-between stages now.
    Updated all Soromid ships for custom slot types
    Updated Soromid Reaver
    First round of brains
    
    Braaaaaaaaaaaaaaaaains...
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Improved the descriptions of Empire and Dvaered versions of standard ships.
    
    They previously all just said things like, "An Empire Lancelot." which
    is completely obvious and provides no information to the player.
    This fixes that; descriptions now explain how each of these ships
    differs from the standard version, just as with the pirate ships.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Fixed up equip script, improved Proteron kahan balancing.
    
    This replaces the heavier weapons and extra med utility slot with
    lighter size and an extra lge structural. Works better that way I
    think. The lighter mass (lightest mass of any cruiser) enables it
    to be faster than other cruisers while carrying more of a payload.
    Given this, it's had its time dilation value decreased as well,
    to 175% (compared to the 150% time dilation of corvettes), not
    unlike the Kestrel in that sense.
    More Proteron stuff.
    
    Also fixed a misalignment with the description and reality of the
    Kahan by making its weapons heavy rather than medium (otherwise the
    Pacifier would just be better than it in that regard).
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Make the Admonisher's last two weapon slot small
    
    This brings it back to parity with the Empire and Pirate variants.
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Start of bio fins
    
    Just need the in-between stages now.
    Updated all Soromid ships for custom slot types
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Improved the descriptions of Empire and Dvaered versions of standard ships.
    
    They previously all just said things like, "An Empire Lancelot." which
    is completely obvious and provides no information to the player.
    This fixes that; descriptions now explain how each of these ships
    differs from the standard version, just as with the pirate ships.
    Changed default GUI to "brushed".
    Add license requirements to the DV Vendetta and Thurion Ingenuity
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove spaces and caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Rebalanced newer Soromid and Za'lek ships
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Tweak the Zalek Sting's armour to be in line with other heavy fighters
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    major zalek update
    zalek ships and further map fixes
    * Remove spaces and caps.
    * Load ships from laid out data.
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Gave the Schroedinger back its big fuel tanks.
    
    I'm guessing they were removed when the core systems thing was
    added. I've added them back. Well, I've added something like that
    back. The Schroedinger now has 800 fuel units in its base form.
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Schroedinger gets jump detection boost.
    * Remove caps.
    * Load ships from laid out data.
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove caps.
    * Load ships from laid out data.
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Decreased rarity of vendetta.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    * Set exclusive and required flags on core slots.
    * Remove caps.
    * Load ships from laid out data.
    Tweaked the rarities as suggested by bobbens
    Reassigned ship rarity to indicate faction.
    
    Rarity 0 for neutral ships, 1 for known faction ships, 2 for unknown
    faction ships (Thurion and Proteron).
    Added accessory slots to all the ships.
    Regenerated all ships with balancer.
    Added rarity indicator to all ships.
    Added variable "time mod" bases.
    
    This was a pretty simple idea I had: bigger ships see time passing
    faster. So in effect, by using a big ship, there's a trade-off: it's
    stronger, sure, but it's also harder to react.
    
    Justification: the bigger ships are harder to pilot and therefore
    it takes longer to send out the commands.
    
    Also made both the Collective Drone and the Hyena have *slower*
    time passage. This gives them an advantage over heavier craft: with
    slower time passage, the player has more time to react.
    Changed default GUI to "brushed".
    Initial attempt at ship stat rebalancing
    Replace obsolete outfits in ship XML
    Updated all ships to use fuel_consumption, with one exception.
    
    I didn't update the Reverance because that ship needs other updates
    to it as well. It seems to have been left behind when the core
    systems were added.
    
    Conflicts:
    
            dat/ships/flf_lancelot.xml
            dat/ships/flf_vendetta.xml
    Completed renaming of core systems in XML and Lua
    
    As with the engine rebalance, the now-unused outfits have not been
    deleted, they've just been removed from all techs except "All Outfits"
    Replace default engines for most ships
    Rebalanced armour and absorb values
    
    Most ships now have roughly 50% of their circa-0.5.3 values. Carriers
    have around two-thirds of similar-mass cruisers' values.
    Modified cargo values based on 0.5.3 values (50% for most, 25% for cruisers)
    general update, hopefully not broken
    major zalek update
    zalek ships and further map fixes
    * Remove spaces and caps.
    * Load ships from laid out data.
    Got rid of dat/unidiff.xml in favour of laid out representation in dat/unidiff/.
    Got rid of dat/unidiff.xml in favour of laid out representation in dat/unidiff/.
    Got rid of dat/unidiff.xml in favour of laid out representation in dat/unidiff/.
    Got rid of dat/unidiff.xml in favour of laid out representation in dat/unidiff/.
    Got rid of dat/unidiff.xml in favour of laid out representation in dat/unidiff/.
    Got rid of dat/unidiff.xml in favour of laid out representation in dat/unidiff/.
    Got rid of dat/unidiff.xml in favour of laid out representation in dat/unidiff/.
    Got rid of dat/unidiff.xml in favour of laid out representation in dat/unidiff/.
    Got rid of dat/unidiff.xml in favour of laid out representation in dat/unidiff/.
    Got rid of dat/unidiff.xml in favour of laid out representation in dat/unidiff/.
    Got rid of dat/unidiff.xml in favour of laid out representation in dat/unidiff/.
    Got rid of dat/unidiff.xml in favour of laid out representation in dat/unidiff/.
    Add vscode configuration
    Includes
     - Build tasks
     - Launch with GDB
     - Auto complete with the C/C++ extension
    Add vscode configuration
    Includes
     - Build tasks
     - Launch with GDB
     - Auto complete with the C/C++ extension
    Add vscode configuration
    Includes
     - Build tasks
     - Launch with GDB
     - Auto complete with the C/C++ extension
    Add vscode configuration
    Includes
     - Build tasks
     - Launch with GDB
     - Auto complete with the C/C++ extension
    This file seems not covered by .gitignore, so have to commit it...
    
    Signed-off-by: Mutos <benoit.robin@hoshikaze.net>
    Update sdl2.m4
    * Changed SDL_CONFIG to SDL2_CONFIG thus not needing to unset the cached variable (submitted bug report to SDL2 also).
    * Added sdl and sdl2 m4s.
    Moved OpenAL detection to a separate file
    Use an m4 include directory instead of putting everything in aclocal.m4
    Added shave to autotools for a cleaner output.
    Bring back original autoconf check for OpenGL.
    Use pkg-config to check for OpenGL and SDL_mixer.
    Use a non-clashing variable prefix in opengl detection
    Make opengl.m4 more consistent with other aclocal scripts
    Try -framework first when looking for OpenGL
    Add better OpenGL detection
    Properly ignore subdirs as necessary.
    looks like you can append stuff in Makefile.am
    Do not recurse into the embedded csparse dir when using external version
    * You can now either use internal, shared or luajit as implementations of Lua.
    * Use Lua JIT if it's available.
    * Autotools support by Unavowed.
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Updated to lua 5.1.5.
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    Refer to macOS as 'macOS' everywhere
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Updated to lua 5.1.5.
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Updated to lua 5.1.5.
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Updated to lua 5.1.5.
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Updated to lua 5.1.5.
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Autotools support by Unavowed.
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Updated to lua 5.1.5.
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    Refer to macOS as 'macOS' everywhere
    * Updated to lua 5.1.5.
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Updated to lua 5.1.5.
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Updated to lua 5.1.5.
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Updated to lua 5.1.5.
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Updated to lua 5.1.5.
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Updated to lua 5.1.5.
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Update Lua to 5.1.4.
    branch:      naev
    [svn] added lua so it's no longer an externel dependency
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Fixed all compilation warnings in csparse library: unused and shadowed.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Fixed all compilation warnings in csparse library: unused and shadowed.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Fixed all compilation warnings in csparse library: unused and shadowed.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Fixed all compilation warnings in csparse library: unused and shadowed.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Autotools support by Unavowed.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Fixed all compilation warnings in csparse library: unused and shadowed.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
    * Fixed new gcc -Wunused-but-set-variable warning.
    * Added CSparse lib for linear algebra.
    * Added CSparse lib for linear algebra.
