    added license file
    Ignore venv dir more. Helps w/ #1799.
    update eslintignore
    Run eslint on dap-hacks.js and appease it.
    Add 'coverage' dir to .eslintignore.
    Use TypeScript's checkJs functionality on whitelisted files.
    Auto-generate sphinx docs in gulp, mount at /docs/.
    Remove legacy files from .eslintignore.
    make eslintignore more specific
    move all hourglass_site/static into frontend
    output built js and css to frontend app
    move qunit and selenium tests to frontend
    update static_source paths
    ignore renamed hourglass_tests.js
    JavaScript pipeline for new data-capture scripts (#391)
    
    * change to airbnb-base config, eslintignore all vendor folders
    * add gulp task for building babel+browserify'd data-capture script
    * add `gulp clean` task for cleaning built folders
    * some relatively small gulpfile modifications/cleanups
    also eslintignore test lib and script
    add eslintignore, add eslint script to package.json
    Run mypy on all files. Fixes #1803.
    Upgrade to mypy 0.501.
    Store /home in a Docker volume. Fixes #1471.
    Decouple docker_django_management.py from CALC specifics.
    Move venv dir to /venv, store in VENV_DIR.
    Use docker volumes to store python and node packages.
    revert to ImportError b/c mypy
    change ImportError -> ModuleNotFoundError
    Make docker_django_management.py support win32.
    enable mypy disallow_untyped_calls, disallow_untyped_defs.
    Annotate docker_django_management.py.
    docker_django_management.py outputs to stderr. Fixes #1003.
    Get rid of final flake8 errors.
    
    Specifically, this gets rid of:
    
    ./docker_django_management.py:174:12: E713 test for membership should be 'not in
    '
    ./contracts/management/commands/load_data.py:8:1: F401 'datetime.date' imported
    but unused
    ./selenium_tests/tests.py:75:42: E712 comparison to False should be 'if cond is
    False:' or 'if not cond:'
    ./selenium_tests/tests.py:82:19: F821 undefined name 'Error'
    Don't use .env in cloud deploys. Remove docker-compose.cloud.yml.
    Add support for docker-machine's cloud providers.
    Factor out docker_django_management.py.
    Updated about page and calc log
    Revert "Removed Some Entries from change logs"
    
    This reverts commit 796e5ff2c584a7d2c59861fe11f1fa2155ed023b.
    Removed Some Entries from change logs
    Updated discription
    Updated description
    Formatting
    Updated description
    Updated version
    Updated description
    Updated version
    Descrition changed
    Updated Description
    added change logs
    bump changelog for v3.2.2
    Updated changelog.
    Release v3.2.1.
    Updated changelog.
    Release v3.2.0.
    Update changelog.
    bump changelog version
    correct schedule number in changelog
    Updated changelog.
    Release v3.0.1.
    updated changelog
    Release v3.0.0.
    Updated changelog.
    Release v2.10.0.
    updated changelog
    Updated changelog
    Release v2.9.1.
    update changelog
    Release v2.9.0.
    Update CHANGELOG.md.
    Update 'unreleased' section of changelog.
    Release v2.8.6.
    Add to changelog.
    Release v2.8.5
    update changelog for 2.8.5 release
    Release v2.8.4
    Update changelog for v2.8.4 release
    Release v2.8.3.
    Add changelog info about #1594.
    Release v2.8.2.
    
    - update changelog and bump version to 2.8.2
    Release v2.8.1.
    Add more to changelog.
    Update changelog.
    Release v2.8.0
    update changelog for 2.8.0 release candidate
    Release v2.7.2.
    udate changelog for v2.7.2 release
    Release v2.7.1
    update unreleased section for release
    Release v2.7.0
    Add to changelog.
    update changelog for 2.7.0 release
    Release v2.7.0
    Add to changelog.
    update changelog for 2.7.0 release
    Release v2.6.0
    update in preparation of v2.6.0 release
    Release v2.5.1.
    update changelog for 2.5.1 release
    Release v2.5.0
    include admin styling bugfixes
    update changelog in prep of v2.5.0 release
    Release v2.4.0
    Mention synonyms in changelog.
    update changelog for v2.4.0 release
    Release v2.3.0.
    update unreleased section in preparation of v2.3.0 deploy
    Show changelog in Sphinx docs.
    Release v2.2.0
    update changelog in anticipation of 2.2.0 release (#1332)
    Tag and release v2.1.0 (#1303)
    Release v2.1.0.
    Add release notes to changelog.
    Release v2.0.0.
    Changelog mentions schedule 70 and region 10.
    Provide context around PSS change.
    Update 'unreleased' section of changelog.
    Add CHANGELOG.md.
    Rename 'hourglass' to 'calc'. Fixes #93.
    add meta management commands to coverage ignore list (#430)
    Coverage cleanup (#340)
    
    * rm unused view files
    * rm unused docker_settings
    tweak coverage config to measure relevant code
    add codecov
    Specify Python at minor version instead of patch
    upgrade to python 3.6.4
    
    3.6.2 is no longer supported on cloud.gov
    migrate to CircleCI
    
    - raise real Exception in test_selenium
    - remove debug print statement in styleguide tests
    - comment out WebDriver/Sauce test stuff because no time to get it working right now
    - upgrade to python 3.6.2
    upgrade to python 3.6
    Upgrade to Python 3.5.2.
    Fix staging deploy (#598)
    
    * change the way we set email config vars to prevent KeyError
    * update runtime to latest 3.4.x on cloud.gov
    * auto-generated migration for date fields in SubmittedPriceList
    * add cf-ssh.yml to ignore files
    changing to new buildpack and python version in CF
    cloudfoundry files and settings updates
    use docker-compose for all referenced commands
    Use `yarn` instead of `npm run` everywhere
    
    We switched to `yarn` a while back but didn't update various docs and tooling to use it in place of `npm` or `npm run`.
    
    Closes #1541.
    add small note about running with docker-compose
    doc how to run specific tests via ultratest
    fix links to Git Protocol and Code Review guides (#471)
    add note about ultratest to both README and CONTRIBUTING
    improve npm script for eslint; add eslint note to CONTRIBUTING.md
    fill out contributing guide (#332)
    
    cribbed from https://github.com/18F/identity-idp/blob/master/CONTRIBUTING.md
    Enable pep8 in CodeClimate (#322)
    
    * enable pep8 in CodeClimate
    * update Contributing with pep8 information
    remove testing section, it is already in README
    rm sauce labs testing and supporting code
    adding internal contributor file
    add browser testing notes
    contributing and readme files
    Upgrade mypy to 0.590.
    add selenium_tests_screenshot.png to .cfignore
    combine jest and python coverage reporting
    
    - upgrade jest and snapshots
    - add coverage/ to ignore-dotfiles
    - add jest config to package.json
    start tests for r10 gleaner
    Document release process and add associated tooling (#1215)
    Production deployment stuff (#819)
    
    * add production manifests
    * rename db-calc-x to calc-db
    * fill in deploy.md; DISABLE_COLLECTSTATIC on non-web instances
    * update deploy.md
    * add note about initial superuser, closes #348
    ignore static_compressed dir
    Fix staging deploy (#598)
    
    * change the way we set email config vars to prevent KeyError
    * update runtime to latest 3.4.x on cloud.gov
    * auto-generated migration for date fields in SubmittedPriceList
    * add cf-ssh.yml to ignore files
    Show test coverage in Ultratest (#485)
    
    show coverage and change in coverage
    create manifests/ folder; target specific manifest for auto-deploy;
    Don't use .env in cloud deploys. Remove docker-compose.cloud.yml.
    Add support for docker-machine's cloud providers.
    match cfignore to gitignore (#328)
    add .env to cfignore (#327)
    cloudfoundry files and settings updates
    Lock bandit version to temporarly avoid issues with 1.5.0 version.
    Attempt to document API via DRF.
    upgrade flake8/pyflakes; fix bare exceptions
    Add progress bar via tqdm.
    Added tests for slackbot.bot.
    [WIP] adding postgres version to healthcheck
    Use pyflakes 1.4 for python 3.6 f-string support.
    Add test to ensure python and node versions in docs match config.
    move sphinx dependencies to requirements-dev.txt.
    Upgrade python packages (#1324)
    add instructions on python debugging
    Expose changelog view at /updates/.
    If sauce connect tunnel fails, fall back to phantomJS.
    Use freezegun to freeze time in tests (#1231)
    Use semantic_version instead of packaging.
    Add hourglass.__version__ and tests for changelog.
    Move robobrowser into requirements-dev.txt.
    add requirements-dev.txt for specifying separate dev dependencies (#681)
    Emit virtual pageviews to DAP and our GA.
    Use @ts-check.
    Use TypeScript's checkJs functionality on whitelisted files.
    Run mypy on all files. Fixes #1803.
    More mypy typings; make mypy defaults less strict.
    Add some mypy typings.
    Actually, just allow untyped defs by default.
    Fix mypy errors on xml.__init__.
    Upgrade to mypy 0.501.
    Tag and release v2.1.0 (#1303)
    Add mypy annotations for schedules/base.py.
    Add mypy annotations to ultratest.
    enable mypy disallow_untyped_calls, disallow_untyped_defs.
    Annotate docker_django_management.py.
    Add experimental mypy integration.
    reverting changes
    commeting initgroups
    Add NLTK's Averaged Perceptron Tagger .pickle file to repository instead of downloading it on every build, and make changes to build files and to price analysis reflecting those changes.
    Clear python cache in update.sh.
    Mostly migrate off djorm_ext_pgfulltext.
    adding to update.sh so that things will work outside of docker and with python 3.6
    update call to update_search_field to include model name
    switch to using yarn for node packages
    Run update_search_field in update scripts.
    Fix docker cloud setup, hopefully.
    Also update search field in update.sh.
    Use docker volumes to store python and node packages.
    Fix docker cloud setup, hopefully.
    Don't use .env in cloud deploys. Remove docker-compose.cloud.yml.
    Add support for docker-machine's cloud providers.
    Add NLTK's Averaged Perceptron Tagger .pickle file to repository instead of downloading it on every build, and make changes to build files and to price analysis reflecting those changes.
    see if explicitly classifying xls/xlsx as binary files helps
    set *.csv to binary
    Get rid of make.bat.
    Add Sphinx docs/ dir.
    Force .png files to be treated as binary.
    Add a .gitattributes file forcing Unix-style line endings.
    initial setup of loadable filters
    upgrade babel and webpack
    
    also switch to babel-preset-env, which will target the latest 2 browser versions
    writing up stuff
    Link to /updates/ instead of putting changelog in /docs/.
    Upgrade mypy to 0.590.
    Write screenshot to selenium_tests_screenshot.png.
    Ensure sphinx docs build on Windows without errors.
    combine jest and python coverage reporting
    
    - upgrade jest and snapshots
    - add coverage/ to ignore-dotfiles
    - add jest config to package.json
    Add UploadedFile class.
    Ack, fix merge conflict
    Fix broken collectstatic test.
    Add Sphinx docs/ dir.
    Only copy source code, run gulp for docker cloud deploys
    start tests for r10 gleaner
    Document release process and add associated tooling (#1215)
    Production deployment stuff (#819)
    
    * add production manifests
    * rename db-calc-x to calc-db
    * fill in deploy.md; DISABLE_COLLECTSTATIC on non-web instances
    * update deploy.md
    * add note about initial superuser, closes #348
    ignore static_compressed dir
    Fix staging deploy (#598)
    
    * change the way we set email config vars to prevent KeyError
    * update runtime to latest 3.4.x on cloud.gov
    * auto-generated migration for date fields in SubmittedPriceList
    * add cf-ssh.yml to ignore files
    move all hourglass_site/static into frontend
    output built js and css to frontend app
    Show test coverage in Ultratest (#485)
    
    show coverage and change in coverage
    js and sass/css pipeline with gulp (#367)
    
    * add gulp for building sass and js with sourcemaps
    * setup container for running gulp during development
    * rm built static files from the repo
    * update README with gulp information
    * modify travis to run gulp build
    * remove ruby sass stuff
    * specify and install node version in travis
    * add new static_source vendor paths to CodeClimate ignore list
    create manifests/ folder; target specific manifest for auto-deploy;
    Add support for docker-machine's cloud providers.
    match cfignore to gitignore (#328)
    Use python-dotenv and .env file. Fixes #319.
    Add credentials.json to .gitignore.
    ignore ruby versions, which shouldn't even be showing up
    Switch to py.test (#278)
    
    * use `py.test` for running tests
    * remove `nose` since it is no longer used
    ignore manifest-sandbox.yml
    update gitignore
    ignore selenium_tests/screenshot.png
    ignore node_modules
    really ignore /static
    only ignore the root /static
    Add static/ to gitignore
    Updating .gitignore for coverage and nose
    added just log files (*.log) to gitignore, and dummy file in logs dir so it gets created on a pull
    Issue #27: Speed up load_data command
    
    - Configure logging in settings.py
    - Log DEBUG and higher to file
    - Log WARN and higher to console
    ignore ghostdriver.log (generated by PhantomJS)
    updated data loader
    ignore venv
    first pass at loader
    Remove eslint and pep8 plugins from .codeclimate.yml.
    exclude all tests
    
    duplicated code in tests is not necessarily a maintainability issue, and codeclimate is being overly aggressive with this check IMO
    update codeclimate config format
    disable import/extensions check in codeclimate
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    rename hourglass_site to data_explorer
    move qunit and selenium tests to frontend
    update static_source paths
    remove csslint from codeclimate
    Tell codeclimate to ignore all migrations dirs.
    disable eslint import check in codeclimate
    remove skeleton-specific watch from code climate
    I can't spell
    rename static_source/vendor folder in codeclimate
    enable eslint-2 channel in code climate (#403)
    enable codeclimate eslint-2 channel
    Hopefully appease CodeClimate.
    js and sass/css pipeline with gulp (#367)
    
    * add gulp for building sass and js with sourcemaps
    * setup container for running gulp during development
    * rm built static files from the repo
    * update README with gulp information
    * modify travis to run gulp build
    * remove ruby sass stuff
    * specify and install node version in travis
    * add new static_source vendor paths to CodeClimate ignore list
    Enable pep8 in CodeClimate (#322)
    
    * enable pep8 in CodeClimate
    * update Contributing with pep8 information
    fixed code climate exclude
    added code climate engines
    Create .codeclimate.yml
    Remove commentary
    Add Trammell's work to README
    add link to wiki
    refactor and expand readme
    Corrected typo
    Added link to API docs
    Link to /docs/ on dev server from readme. Fixes #1362.
    Remove references to Trello. Fixes #1846.
    Rename 'hourglass' to 'calc'. Fixes #93.
    migrate to CircleCI
    
    - raise real Exception in test_selenium
    - remove debug print statement in styleguide tests
    - comment out WebDriver/Sauce test stuff because no time to get it working right now
    - upgrade to python 3.6.2
    Add Sphinx docs/ dir.
    Only copy source code, run gulp for docker cloud deploys
    remove ethnio stuff (#1316)
    Line-wrap README.md
    add instructions on python debugging
    Add banner to show non-prod message (#1302)
    Tag and release v2.1.0 (#1303)
    Add HELP_EMAIL setting; Use it in reply-to for emails (#1264)
    Document 'docker-machine create' example w/ amazonec2.
    Add a MailCatcher container for development.
    use django's built-in settings for email from addresses (#1211)
    Change "NEW" to "UNREVIEWED" and "UNAPPROVED" to "RETIRED" (#1083)
    
    closes #1082
    Add TEST_WITH_ROBOBROWSER env var.
    make ethnio id configurable by env var (#1047)
    typo fix in readme
    Add link to 18F/calc-analysis in readme.
    mention that using the load_data and load_s70 commands are optional
    updating documentation (#1002)
    Init New Relic agent in wsgi.py (#906)
    
    * update newrelic
    * use new attributes.exclude instead of deprecated capture_params
    * init New Relic agent in wsgi.py instead of using run-command
    * default `load_cups_from_vcap_services` to `'calc-dev'`
    Minor changes to the Authentication and Authorization section of the README (#856)
    
    * minor changes to the Authentication and Authorization section
    * add note to update readme when roles are modified
    get GA_TRACKING_ID from env, add context_processor for it (#855)
    Add selenium.md.
    improve cloud deployment YAML config.
    Fix typos.
    Actually run doctests during py.test (#708)
    
    * Actually run doctests during py.test.
    * add --cov to addopts, rm from elsewhere
    * Don't py.test anything in node_modules.
    Use a separate redis DB for tests. (#709)
    Add API documentation of SIN filtering.
    Hide template content about emails when EMAIL_URL is dummy (#684)
    
    * add SEND_TRANSACTIONAL_EMAILS setting
    * use SEND_TRANSACTIONAL_EMAILS as flag to hide content about emails
    add requirements-dev.txt for specifying separate dev dependencies (#681)
    Document 'createsuperuser --noinput'. Fixes #666.
    Document auth in README.
    Send email to submitter when Price List is un/approved by admin (#640)
    
    * create email template subdirectory
    * add email module for holding all email-sending logic; separate bulk upload emails
    * add EmailResult class
    * add SYSTEM_EMAIL_ADDRESS setting
    remove references to QuantifiedCode
    Mention 'python manage.py rqworker' in readme.
    Add readme notes about postgres, redis. Fix #611.
    Document REDIS_URL, set default in DEBUG mode.
    Add dj-email-url, sendtestemail command.
    Add HIDE_DEBUG_UI setting. (#527)
    remove bad link
    update README information regarding built assets
    move qunit and selenium tests to frontend
    preposition modification
    update README with more info about our gulp build
    add gemnasium badge to readme
    add bandit scanning to ultratest and travis
    add note about ultratest to both README and CONTRIBUTING
    Add load_s70 to docker-compose guide.
    only add security-related headers to error responses (#375)
    
    * use a setting to enable security headers on error responses only
    * rm djangosecure from middleware and requirements.txt
    js and sass/css pipeline with gulp (#367)
    
    * add gulp for building sass and js with sourcemaps
    * setup container for running gulp during development
    * rm built static files from the repo
    * update README with gulp information
    * modify travis to run gulp build
    * remove ruby sass stuff
    * specify and install node version in travis
    * add new static_source vendor paths to CodeClimate ignore list
    expect WHITELISTED_IPS to be a comma-separated string (#366)
    
    instead of a python-like list that gets eval'd. fixes #365.
    Document API_HOST and WHITELISTED_IPS. (#362)
    
    Fixes #301.
    More compliant security (#360)
    
    * Add FORCE_DISABLE_SECURE_SSL_REDIRECT setting.
    * Use secure cookies when in production/https.
    * Enable SecurityMiddleware settings for nosniff, X-XSS-Protection.
    * Add compliance tests for 404s.
    add QuantifiedCode badge (#350)
    
    * add QuantifiedCode badge
    * update quantified code urls in about.yml
    add command to load s70 data
    minor readme change
    Mention local development only for .env files.
    Add FORCE_DISABLE_SECURE_SSL_REDIRECT setting.
    Don't use .env in cloud deploys. Remove docker-compose.cloud.yml.
    Add support for docker-machine's cloud providers.
    Add support for cloud.gov UAA authentication. (#317)
    
    * Add fake_uaa_provider app.
    * Add uaa_client app.
    * Add login link in footer, admin and logout links in header.
    * replace admin login w/ UAA login.
    * Document how to create staff users.
    Add note about generating coverage report with py.test
    add test coverage badge
    Remove makefile, ignore selenium tests on Travis (#330).
    Use python-dotenv and .env file. Fixes #319.
    Updated docker docs in README.
    Add ENABLE_SEO_INDEXING setting. Fixes #299.
    Use branch=develop for travis CI badge
    Add support for cloudfoundry CUPS. Fixes #306.
    Document SASS setup in README.
    Document SECRET_KEY in readme.
    Add docker info to readme.
    Add frontend bits and documentation around s70 data
    Add testing documentation
    add codeclimate button
    merge master
    Update README.md
    
    update per PR
    resetting readme language to deal with in a separate changeset
    resetting readme language to deal with in a separate changeset
    changing intro wording
    Update README.md
    
    updated README that CALC is in beta
    add link to deploy.md to readme
    removing parens in readme
    adding link to data docs to readme
    add documentation for multiple labor category search
    Update intro on README to link to calc
    Update README.md
    breaking out education and experience api docs
    updating api docs to add education endpoint
    Update README.md
    adding drop down to filter by experience range and creating supporting API functionality
    remove ?branch=add-travis from badge URL
    add travis badge
    remove ?branch=add-travis from badge URL
    add travis badge
    dangling Hourglass refs, update manifest, README hourglass refs
    Hourglass -> CALC
    added readme
    clean up README, add query_type description
    Update README with valid values for business_size param.
    Updated README with price parameters
    updated readme for small biz param
    updated small business filter to business size
    added py2 support for csv export
    Add high school education level value
    added new parameters to readme
    fixed spacing in readme
    added more filters
    added pagination and q search parameter
    beefed up readme, added local_settings example
    contributing and readme files
    Fix docker cloud setup, hopefully.
    minor copy change
    Only copy source code, run gulp for docker cloud deploys
    Add NLTK's Averaged Perceptron Tagger .pickle file to repository instead of downloading it on every build, and make changes to build files and to price analysis reflecting those changes.
    Rename 'hourglass' to 'calc'. Fixes #93.
    Set mem limit of docker containers to match deployment.
    modify docker analyze-webpack instructions/port bindings
    
    also removes somme duplicated content from a funky merge
    finish LoadableWrapper and add tests
    
    Also document the webpack-bundle-analyzer workflow for visualizing the data explorer bundles.
    attempt to analyze webpack bundle
    
    unfortunately the analyzer plugin is only showing the `stats` size of the bundles, which does not take into account minification.
    upgrade to redis 3.2 service
    upgrade to postgres 9.5.4
    normalize to postgres 9.4.7
    Add named 'pgdata' volume to docker-compose.yml.
    Store /home in a Docker volume. Fixes #1471.
    Make docker-compose setup more DRY.
    Only copy source code, run gulp for docker cloud deploys
    Add support for periodic tasks and send admin approval reminder email (#655)
    
    * install rq-scheduler
    * setup docker and CF apps for rqworker container
    * add email template and method for sending approval reminder
    * use custom AppConfig that adds scheduled admin reminder email job
    * send approval reminders to all superusers who have email addresses
    * add DefaultDataCaptureApp; load app based on IS_RQ_SCHEDULER
    * Add a ScheduledJobsPanel to DjDT.
    Add docker-services.yml to improve DRY.
    Use redis + rq/django-rq for jobs.
    Use Gunicorn instead of Waitress (#604)
    
    * use gunicorn instead of waitress
    * remove unused files
    move DDM_IS_RUNNING_IN_DOCKER to Dockerfile, rm IS_IN_DOCKER
    Run 'gulp build' in the Dockerfile, be more awesome
    js and sass/css pipeline with gulp (#367)
    
    * add gulp for building sass and js with sourcemaps
    * setup container for running gulp during development
    * rm built static files from the repo
    * update README with gulp information
    * modify travis to run gulp build
    * remove ruby sass stuff
    * specify and install node version in travis
    * add new static_source vendor paths to CodeClimate ignore list
    Don't use .env in cloud deploys. Remove docker-compose.cloud.yml.
    Add support for docker-machine's cloud providers.
    Use python-dotenv and .env file. Fixes #319.
    Fix sass container entrypoint.
    Take SECRET_KEY from environment. Fixes #280.
    Factor out docker_django_management.py.
    Add a sass container.
    Ignore local_settings.py when running in docker.
    Add initial docker support.
    for some reason, jsx-a11y-label-has-associated-control needs default config supplied
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Re-enable global-require, no-use-before-define.
    Disable dumb eslint rules.
    Emit custom events to DAP and our GA.
    initial setup of loadable filters
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Factor out a RestoreExcluded JSX component.
    make eslint ensure import statements are valid.
    move no-underscore-dangle into .eslintrc.
    Revert "Ignore unresolved imports from eslint for Docker support."
    
    This reverts commit 47b20cd6122e1ef11a2f20921c6012d681f36e1b.
    Ignore unresolved imports from eslint for Docker support.
    JavaScript pipeline for new data-capture scripts (#391)
    
    * change to airbnb-base config, eslintignore all vendor folders
    * add gulp task for building babel+browserify'd data-capture script
    * add `gulp clean` task for cleaning built folders
    * some relatively small gulpfile modifications/cleanups
    add eslint and airbnb config modules
    added logs
    removed initgroups
    reverting changes
    commented initgroups
    adding initgroups
    temporariy commit
    Add NLTK's Averaged Perceptron Tagger .pickle file to repository instead of downloading it on every build, and make changes to build files and to price analysis reflecting those changes.
    Add download of NLTK resources to cloud.gov deploy/setup script.
    Rename 'hourglass' to 'calc'. Fixes #93.
    Mostly migrate off djorm_ext_pgfulltext.
    add set -e so that script fails on error
    Run update_search_field in update scripts.
    Init New Relic agent in wsgi.py (#906)
    
    * update newrelic
    * use new attributes.exclude instead of deprecated capture_params
    * init New Relic agent in wsgi.py instead of using run-command
    * default `load_cups_from_vcap_services` to `'calc-dev'`
    Production deployment stuff (#819)
    
    * add production manifests
    * rename db-calc-x to calc-db
    * fill in deploy.md; DISABLE_COLLECTSTATIC on non-web instances
    * update deploy.md
    * add note about initial superuser, closes #348
    Run 'manage.py initgroups' as part of cf.sh.
    switch to gunicorn (#605)
    Use Gunicorn instead of Waitress (#604)
    
    * use gunicorn instead of waitress
    * remove unused files
    Fix staging deploy: load smaller sample datasets on deploy (#599)
    loading s70 data on deploy
    adding migrations and data loading into CF script
    Rename 'hourglass' to 'calc'. Fixes #93.
    Ignore venv dir more. Helps w/ #1799.
    BELAY THAT ORDER
    Fix broken pytest test collection blah
    Don't try to find tests in mypy-stubs.
    Rename cloudfront_tests to production_tests.
    Don't run cloudfront tests by default.
    change back to being explicit about adding the --cov flag
    
    reverts a43a49ac1807883560e4f5fe78923912a5e05519
    Actually run doctests during py.test (#708)
    
    * Actually run doctests during py.test.
    * add --cov to addopts, rm from elsewhere
    * Don't py.test anything in node_modules.
    move all hourglass_site/static into frontend
    move qunit and selenium tests to frontend
    Switch to py.test (#278)
    
    * use `py.test` for running tests
    * remove `nose` since it is no longer used
    Rename 'hourglass' to 'calc'. Fixes #93.
    Factor out docker_django_management.py.
    Show warning if user runs 'manage.py runserver' manually. (#271)
    Check env instead of cwd to determine docker status.
    Add initial docker support.
    first pass at loader
    Add NLTK's Averaged Perceptron Tagger .pickle file to repository instead of downloading it on every build, and make changes to build files and to price analysis reflecting those changes.
    Set mem limit of docker containers to match deployment.
    Store /home in a Docker volume. Fixes #1471.
    Enforce engine-strict on npm.
    Explain why our python/node deps are in docker volumes.
    Decouple docker_django_management.py from CALC specifics.
    Move venv dir to /venv, store in VENV_DIR.
    Make docker-compose setup more DRY.
    Only copy source code, run gulp for docker cloud deploys
    Use a separate redis DB for tests. (#709)
    Make docker-compose work w/ gunicorn.
    Add docker-services.yml to improve DRY.
    Recommend `docker-compose down -v`
    
    Closes #1386
    Show help if ./docker-update.sh fails.
    make docker-update.sh executable.
    Update docs, add docker-update.sh.
    Fixed 5 Medium 2 Critical vulnerabilities
    updated yarn
    snyk fixes
    Fixes security vulnerabilities
    security fixes
    Resolved 1 High Venerability.
    Resolved 1 High Venerability.
    snyk fixes
    updated webpack-bundle-analyzer
     webpack-bundle-analyzer reduced version
    snyk fixes
    Removed 1 security vulnerability
    Removed 1 Security vulnerability
    snyk handlebar fix
    handlebars upgrade
    Upgraded handlebars
    upgraded package.json
    removed 4 dependencies
    fixed merge vulnerabilities
    removed mem and  chownr vulnerabilities
    reverted webpack-stream to 4.0.3
    fixed mom package vulnerabilities
    upgraded cached-path-relative
    upgraded the version for cached-path-relative to 1.0.2
    upgrade Jest to 23.5.0 to fix JSDom issue
    update yarn and package.json
    #2032: Updated gulp & minimatch to resolve Snyk warnings (#2044)
    
    * Updated gulpfile for Gulp 4.0
    
    * Changed circle config to use gulp4
    
    * Updated gulpfile to get js tasks to build
    
    * Post conflict cleanup
    upgrade eslint and related dependencies
    Make schedules be pulled from api, omg i hate this
    Upgrade document-register-element to 1.9.1.
    Upgrade d3-timer to 1.0.7. Fixes #1976.
    Update yarn.lock.
    break prod builds on sass error; upgrade gulp-sass
    initial setup of loadable filters
    attempt to analyze webpack bundle
    
    unfortunately the analyzer plugin is only showing the `stats` size of the bundles, which does not take into account minification.
    upgrade babel-polyfill; add raf polyfill
    upgrade babel and webpack
    
    also switch to babel-preset-env, which will target the latest 2 browser versions
    use react-transition-group@1.x; update slidey-panel tests
    add jest setup; update snaps; upgrade rc-slider deps
    update components
    upgrade React and related deps to v16
    update react to 15.5
    update yarn.lock
    whoops, I should commit this
    Use TypeScript's checkJs functionality on whitelisted files.
    uglify vendored JS in production builds
    combine jest and python coverage reporting
    
    - upgrade jest and snapshots
    - add coverage/ to ignore-dotfiles
    - add jest config to package.json
    Run aXe-core on data explorer, fix a11y violation.
    upgrade to jquery 3.2.1
    rm unused tooltipster npm install
    move jquery to package.json; webpack common
    use 'yarn remove' to rm gulp-plumber
    upgrade sinon; rm gulp-plumber
    specify pre-release sinon
    use webpack for all js bundles; rm browserify and pals
    [WIP] Using webpack for data-explorer
    use npm modules for d3
    rm eyeglass; make slider width nicer
    Switch to react-based slider
    update yarn.lock
    switch to using yarn for node packages
    Fixed 5 Medium 2 Critical vulnerabilities
    Updated markdown library
    Upgraded Django version
    Upg
    Django version upgrade
    Django version upgrade
    PSHCDT-87:CALC's Session Timeout with popup
    PSHCDT-87:CALC's Session Timeout
    PSHCDT-87:CALC's Session Timeout with popup
    PSHCDT-87:CALC's Session Timeout
    Updated Djano versoin
    Updated Djano versoin
    updated psycopg2 to version 2.7.3.2
    Upgraded psycopg2 to version 2.7.3.2
    updated django-rq==1.3
    Fixed Snyc Issue
    Snyk Fixes
    Removed new Relic From Application
    Removed new Relic From Application
    version upgrade patch
    Django version change
    Django version change
    upgraded rq-scheduler to version 0.9
    changed django version to 1.11.20
    version update
    reverted rq version
    rq-scheduler version update
    upgraded rq version
    revert version
    Django version change
    corrected Django package name
    upgrade django
    upgraded django to verson 1.11.19
    Upgreade Jango to >=1.11.19
    corrected versions
    snyk upgraded requests and django
    Upgraded Bleach version
    Reverted Version
    Updated Version
    Updated Scheduler version
    Upgrade Django and NLTK versions; also change a test to rely on an ordering that isn't guaranteed.
    Use bleach for HTML sanitization.
    Install django-uswds-forms via PyPI
    update version of django-uswds-forms
    add django-modeladmin-reoder to requirements
    Upgrade mypy to 0.590.
    Attempt to document API via DRF.
    upgrade dj-email-url; rm EMAIL_USE_TLS setting
    
    The latest version (0.1.0) of dj-email-url will automatically set EMAIL_USE_TLS to True when the given EMAIL_URL starts with the "submission:" protocol (instead of "smtp:")
    Upgrade to cg-django-uaa 1.3.0. Fixes #1648.
    Mostly migrate off djorm_ext_pgfulltext.
    Remove PyJWT. Fixes #1561.
    Upgrade to Django 1.11, use uswds_forms.
    Actually upgrade to Django 1.10. Fixes #1633.
    upgrade cg-django-uaa
    Use updated djorm-ext-pgfulltext. Fixes #1546.
    Use Django 1.10-compliant djorm-ext-pgfulltext.
    upgrade to Django 1.9.13
    Upgrade to mypy 0.501.
    Yet another alternate fix for #1498.
    [WIP] adding postgres version to healthcheck
    Fix broken selenium test.
    Use our fork of djorm-ext-pgfulltext. Use Django 1.9.12.
    Drop premailer for now.
    Add HTMLemail template, use premailer to inline CSS.
    move sphinx dependencies to requirements-dev.txt.
    Oops, migrate temp requirements.
    upgrade defusedxml to 0.5.0
    Upgrade python packages (#1324)
    CSV and XLSX export of R10 price list analysis results (#1310)
    Remove TEMP_requirements.txt.
    Expose changelog view at /updates/.
    Display datetimes in emails localized to US/Eastern time (#1217)
    
    * Display datetimes in emails localized to Eastern time using new `tz_timestamp` template filter
    Add experimental mypy integration.
    upgrade django to 1.8.16 (minor security release) (#987)
    remove grappelli
    set up admin basics for grappelli
    Init New Relic agent in wsgi.py (#906)
    
    * update newrelic
    * use new attributes.exclude instead of deprecated capture_params
    * init New Relic agent in wsgi.py instead of using run-command
    * default `load_cups_from_vcap_services` to `'calc-dev'`
    Use defusedxml and ensure xlrd is using it.
    upgrade django to 1.8.15
    Add support for periodic tasks and send admin approval reminder email (#655)
    
    * install rq-scheduler
    * setup docker and CF apps for rqworker container
    * add email template and method for sending approval reminder
    * use custom AppConfig that adds scheduled admin reminder email job
    * send approval reminders to all superusers who have email addresses
    * add DefaultDataCaptureApp; load app based on IS_RQ_SCHEDULER
    * Add a ScheduledJobsPanel to DjDT.
    add requirements-dev.txt for specifying separate dev dependencies (#681)
    move rq, django-rq from Dockerfile to requirements.txt.
    switch to gunicorn (#605)
    Use Gunicorn instead of Waitress (#604)
    
    * use gunicorn instead of waitress
    * remove unused files
    Add dj-email-url, sendtestemail command.
    revert djorm-ext-pgfulltext back to 0.9.3
    upgrade python deps (other than django)
    Fix #517, remove nose and django-nose from requirements.txt.
    Add support for django debug toolbar.
    Glean data from Excel files for s70.
    lock bandit to 1.0 releases
    add bandit scanning to ultratest and travis
    July 2016 Hourly Prices Update (#444)
    
    * add hourly prices from July 2016 export
    * rm django admin, upgrade to latest 1.7 release
    * add overflow-wrap to filters spans
    upgrade django to 1.8.14 for security fix of CVE-2016-6186
    use django-click
    only add security-related headers to error responses (#375)
    
    * use a setting to enable security headers on error responses only
    * rm djangosecure from middleware and requirements.txt
    Replace numpy (#337)
    
    - replace `numpy.std` with value calculated from `statistics.pvariance`
    - replace `numpy.histogram` with simple local implementation
    - remove numpy from requirements.txt
    Add support for cloud.gov UAA authentication. (#317)
    
    * Add fake_uaa_provider app.
    * Add uaa_client app.
    * Add login link in footer, admin and logout links in header.
    * replace admin login w/ UAA login.
    * Document how to create staff users.
    add code coverage reporting via code climate
    Use python-dotenv and .env file. Fixes #319.
    Add flake8 to requirements.txt.
    Upgrade to djangorestframework 3.3.3.
    Upgrade to Django REST framework 3.2.5.
    Upgrade to Django REST Framework 3.1.
    Upgrade to Django 1.8.
    Switch to py.test (#278)
    
    * use `py.test` for running tests
    * remove `nose` since it is no longer used
    Specify package versions (#277)
    
    * pin dependencies to exact versions
    * use djorm-ext-pgfulltext from pypi instead of git repo
    Upgrade to whitenoise 3.2.
    upgrading waitress to see if it fixes slow prod issue
    use specific version of pgfulltext as there are issues with 0.9.4
    adding migrations and data loading into CF script
    Updated CF manifest, forcing https, deploy instructions
    switch to api.data.gov
    cloudfoundry files and settings updates
    Adding django_nose to requirements
    add django-nose to pip requirements
    Fix model_mommy object generation, add Nose
    
    - Ensure tests are independent by generating a new recipe for each test
    - Add nose as django test runner to allow more fine-grained test runs
    Added greater than and less than price filtering to API
    
    - Added the filters
    - Wrote tests for each filter
    - Replaced fixture with object factory to speed up tests
    add numpy to requirements
    Remove unicodecsv from requirements.txt
    use unicodecsv instead of built-in csv module
    updated DRF to v3, fixes #13
    added requirements
    Add commented-out USE_POLLING to .env.sample.
    In .env.sample, point to docs/environment.md.
    Remove DATABASE_URL from .env.sample.
    Rename 'hourglass' to 'calc'. Fixes #93.
    Add support for docker-machine's cloud providers.
    Use python-dotenv and .env file. Fixes #319.
    Remove references to Trello. Fixes #1846.
    Rename 'hourglass' to 'calc'. Fixes #93.
    migrate to CircleCI
    
    - raise real Exception in test_selenium
    - remove debug print statement in styleguide tests
    - comment out WebDriver/Sauce test stuff because no time to get it working right now
    - upgrade to python 3.6.2
    add redis to 'stack' (#680)
    remove references to QuantifiedCode
    add gemnasium to about.yml
    add QuantifiedCode badge (#350)
    
    * add QuantifiedCode badge
    * update quantified code urls in about.yml
    update .about.yml to include data capture project details
    Update .about.yml
    
    >updated description
    > updated impact
    > rewrote milestones to be complete sentences
    > add blog tags
    fixed typo
    added services to about.yml
    updated about.yml
    Update .about.yml
    
    Now that https://team-api.18f.gov/ is about ready for production, I've run the
    `scripts/about/validate.rb` script from 18F/team-api#84 to ensure this file is
    now up-to-spec (given the state of the spec today).
    merge master
    Update .about.yml
    add .about.yml
    Fixed 5 Medium 2 Critical vulnerabilities
    snyk fixes
    Fixes security vulnerabilities
    security fixes
    Resolved 1 High Venerability.
    Resolved 1 High Venerability.
    updated node version
    snyk fixes
    Updated Node Version
    updated webpack-bundle-analyzer
     webpack-bundle-analyzer reduced version
    vv1.15.2
    Updated node engine version
    upgraded node version
    snyk fixes
    Removed 1 security vulnerability
    Removed 1 Security vulnerability
    snyk handlebar fix
    handlebars upgrade
    Upgraded handlebars
    upgraded package.json
    corrected versions
    removed 4 dependencies
    fixed merge vulnerabilities
    removed mem and  chownr vulnerabilities
    reverted webpack-stream to 4.0.3
    corrected package.json
    fixed mom package vulnerabilities
    upgraded cached-path-relative
    upgraded the version for cached-path-relative to 1.0.2
    upgrade Jest to 23.5.0 to fix JSDom issue
    update Jest to 23.5.0 for jsdom fix
    update yarn and package.json
    #2032: Updated gulp & minimatch to resolve Snyk warnings (#2044)
    
    * Updated gulpfile for Gulp 4.0
    
    * Changed circle config to use gulp4
    
    * Updated gulpfile to get js tasks to build
    
    * Post conflict cleanup
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    upgrade eslint and related dependencies
    Make schedules be pulled from api, omg i hate this
    Upgrade document-register-element to 1.9.1.
    Upgrade d3-timer to 1.0.7. Fixes #1976.
    Don't lint as part of JS compilation.
    Ignore venv dir more. Helps w/ #1799.
    break prod builds on sass error; upgrade gulp-sass
    initial setup of loadable filters
    attempt to analyze webpack bundle
    
    unfortunately the analyzer plugin is only showing the `stats` size of the bundles, which does not take into account minification.
    upgrade babel-polyfill; add raf polyfill
    use node >= 6.13
    upgrade babel and webpack
    
    also switch to babel-preset-env, which will target the latest 2 browser versions
    use react-transition-group@1.x; update slidey-panel tests
    add jest setup; update snaps; upgrade rc-slider deps
    update components
    upgrade React and related deps to v16
    update react to 15.5
    Use `yarn` instead of `npm run` everywhere
    
    We switched to `yarn` a while back but didn't update various docs and tooling to use it in place of `npm` or `npm run`.
    
    Closes #1541.
    add wds to main CSS package
    Use TypeScript's checkJs functionality on whitelisted files.
    uglify vendored JS in production builds
    combine jest and python coverage reporting
    
    - upgrade jest and snapshots
    - add coverage/ to ignore-dotfiles
    - add jest config to package.json
    Run aXe-core on data explorer, fix a11y violation.
    upgrade to jquery 3.2.1
    rm unused tooltipster npm install
    move jquery to package.json; webpack common
    upgrade sinon; rm gulp-plumber
    specify pre-release sinon
    use webpack for all js bundles; rm browserify and pals
    [WIP] Using webpack for data-explorer
    use npm modules for d3
    rm eyeglass; make slider width nicer
    Switch to react-based slider
    omg we need npm shrinkwrap
    Use sinon for XHR mocking, maybe fix travis.
    Add SlideyPanel. Fixes #1227.
    use querystring instead of qs
    get rid of hourglass.js; use module for ajax requests; tests
    Pin gulp-clean-css to 2.3.2. Fixes #1343.
    Use uglifyIFY to excise unused deps from bundle.
    add envify maybe i have no idea (#1243)
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    remove jquery-tablesort dep and our customization
    Use redux-logger for logging.
    upgrade to enzyme 2.7.0
    add snapshot test
    start test for Highlights; add d3-format package
    writing up stuff
    install jest
    Added a very simple Enzyme-based test suite for data explorer.
    Make labor category column sortable.
    use npm'd neat via eyeglass
    Use a Redux store to drive props to <RestoreExcluded>.
    Factor out a RestoreExcluded JSX component.
    Add Modal Dialog for Canceling (#918)
    
    * add modal dialogs with a11y-dialog library
    * use modal dialogs for all Cancel links in Price List Upload and Region 10 Bulk Upload flows
    * handle_cancel on step_3_errors view so modal can POST cancel
    lock gulp-sourcemap version to 1.6.0
    Disable uglify when DEBUG is false. (#725)
    upgrade to node v6, closes #701
    upgrade eslint and eslint-plugin-import
    Move document-register-element into package.json.
    upgrade js deps, fix minor new eslint issue
    Add sinon, more tests.
    add jquery-tablesort
    use --max-warnings flag so failable-eslint fails on warnings
    just use require() to include polyfill
    update eslint to 3.1.0
    improve output, add verbose mode
    JavaScript pipeline for new data-capture scripts (#391)
    
    * change to airbnb-base config, eslintignore all vendor folders
    * add gulp task for building babel+browserify'd data-capture script
    * add `gulp clean` task for cleaning built folders
    * some relatively small gulpfile modifications/cleanups
    add eslint to gulp
    improve npm script for eslint; add eslint note to CONTRIBUTING.md
    add eslintignore, add eslint script to package.json
    modernize gulpfile code; reorganize legacy js
    add eslint and airbnb config modules
    js and sass/css pipeline with gulp (#367)
    
    * add gulp for building sass and js with sourcemaps
    * setup container for running gulp during development
    * rm built static files from the repo
    * update README with gulp information
    * modify travis to run gulp build
    * remove ruby sass stuff
    * specify and install node version in travis
    * add new static_source vendor paths to CodeClimate ignore list
    rm sauce labs testing and supporting code
    add package.json for npm install
    Appease eslint.
    Fix four layers of problems that caused local frontend file watching not to function. See PR for gory details.
    #2032: Updated gulp & minimatch to resolve Snyk warnings (#2044)
    
    * Updated gulpfile for Gulp 4.0
    
    * Changed circle config to use gulp4
    
    * Updated gulpfile to get js tasks to build
    
    * Post conflict cleanup
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Much better indication of when dev CALC is ready.
    Re-enable global-require, no-use-before-define.
    Disable dumb eslint rules.
    Don't lint as part of JS compilation.
    Remove references to changelog in gulpfile.
    break sass when not isWatching
    break prod builds on sass error; upgrade gulp-sass
    so you actually have to tell gulp to run tasks
    trailing slash
    remove comma and add parentheses
    attempt to compile wds asssets
    Use `yarn` instead of `npm run` everywhere
    
    We switched to `yarn` a while back but didn't update various docs and tooling to use it in place of `npm` or `npm run`.
    
    Closes #1541.
    uglify vendored JS in production builds
    Ensure sphinx docs build on Windows without errors.
    move jquery to package.json; webpack common
    rm unused jquery.xdomainrequest plugin
    upgrade to jquery 1.12.4
    Don't eslint on file change if ESLINT_CHILL_OUT is set.
    don't return webpack stream; rm plumber
    Create frontend/gulp/ dir, add tests for webpack.
    Fix web-component-link in webpack builds.
    rm extranneous stats config prop
    improve dev source maps; enable prod source maps
    vendor bundles to match js bundles
    use webpack for all js bundles; rm browserify and pals
    fix trailing comma
    Define NODE_ENV properly in webpack pipeline.
    rm non-needed excludes
    only update vendor bundles on vendor script changes
    Use non-min vendor scripts; rm unused
    enable cacheDirectory for even more speed
    finish setting up webpack for data-explorer
    [WIP] Using webpack for data-explorer
    use npm modules for d3
    rm eyeglass; make slider width nicer
    Switch to react-based slider
    create new common js bundle and put usermenu there
    use plain JS; make new admin bundle; include usermenu js
    Auto-generate sphinx docs in gulp, mount at /docs/.
    Build production scripts before deploy (#1246)
    add comments about uglifyify
    appease eslint
    Use uglifyIFY to excise unused deps from bundle.
    add envify maybe i have no idea (#1243)
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Remove formdb, StoreFormSynchronizer, legacyInputs.
    Added a very simple Enzyme-based test suite for data explorer.
    Modify price list details (#1077)
    use npm'd neat via eyeglass
    Factor out a RestoreExcluded JSX component.
    Fix eslint error.
    Un-inline script in price list upload step 4.
    Simplify 'js' task definition based on seppi's feedback.
    Fix eslint issues, mostly.
    Refactor gulpfile to make it easier to add new JS bundles.
    Allow skip ahead on Step 3 if price list already uploaded (#1027)
    
    * also implement step_3_data interstitial page
    Use browserify cache. (#945)
    Use browserify for data-explorer. Fixes #917.
    Disable uglify when DEBUG is false. (#725)
    Mention, link to web components in style guide.
    Fix eslint issues.
    Log writes of JS bundles in gulpfile.
    fix built paths
    move all hourglass_site/static into frontend
    output built js and css to frontend app
    move qunit and selenium tests to frontend
    update static_source paths
    Add a comment to gulpfile.
    move DDM_IS_RUNNING_IN_DOCKER to Dockerfile, rm IS_IN_DOCKER
    use env var to turn off no-import rule when in docker, fixes #441
    fix multiple rebundles, closes #437
    fix generation of style sourcemaps so they include the sass sources
    add js tests to build pipeline so we can use es6 and linting
    rename static_source/vendor to static_source/libs, fix references to skeleton import, remove css task from gulpfile
    add task to gulpfile to copy over vendor css
    Move upload.js to data-capture and ES2015-ify it.
    JavaScript pipeline for new data-capture scripts (#391)
    
    * change to airbnb-base config, eslintignore all vendor folders
    * add gulp task for building babel+browserify'd data-capture script
    * add `gulp clean` task for cleaning built folders
    * some relatively small gulpfile modifications/cleanups
    Partial implementation of file upload widget.
    add eslint to gulp
    modernize gulpfile code; reorganize legacy js
    js and sass/css pipeline with gulp (#367)
    
    * add gulp for building sass and js with sourcemaps
    * setup container for running gulp during development
    * rm built static files from the repo
    * update README with gulp information
    * modify travis to run gulp build
    * remove ruby sass stuff
    * specify and install node version in travis
    * add new static_source vendor paths to CodeClimate ignore list
    update docker docs. Fix #1313.
    Use headless chrome with selenium in docker.
    use delegated volumes in local dc config
    Add private DEFAULT_DEBUG_EMAIL_URL env var.
    Make docker-compose setup more DRY.
    Use docker volumes to store python and node packages.
    Only copy source code, run gulp for docker cloud deploys
    Tag and release v2.1.0 (#1303)
    Send html versions of admin emails and include relevant links (#1263)
    Add a MailCatcher container for development.
    Add support for periodic tasks and send admin approval reminder email (#655)
    
    * install rq-scheduler
    * setup docker and CF apps for rqworker container
    * add email template and method for sending approval reminder
    * use custom AppConfig that adds scheduled admin reminder email job
    * send approval reminders to all superusers who have email addresses
    * add DefaultDataCaptureApp; load app based on IS_RQ_SCHEDULER
    * Add a ScheduledJobsPanel to DjDT.
    Use redis + rq/django-rq for jobs.
    Ignore 'node_modules' in docker volume mount. Fixes #401.
    Run 'gulp build' in the Dockerfile, be more awesome
    Don't use .env in cloud deploys. Remove docker-compose.cloud.yml.
    Add support for docker-machine's cloud providers.
    Remove load_data and load_s70 commands. Fixes #1028.
    Add create-aws-instance.sh script.
    Added script to make it easier to deploy to AWS.
    Rename enable_js to safe_mode.
    Implement safe mode.
    Run mypy on all files. Fixes #1803.
    show alert if user is in replay mode.
    Add more docs to steps.py.
    Move Steps, StepRenderer to steps.py. Fixes #1173.
    Define step labels via @step decorator.
    Make StepRenderer.widget throw if no labels are defined.
    Add more tests.
    Encapsulate steps widget HTML rendering in a StepsWidget class.
    Validate duplicate contract number in Step 1 (#985)
    
    * start duplicate contract substep
    
    * start fleshing out duplicate contract page
    
    * add simple interstitial page when contract num already exists
    
    * add path to modify view
    
    * add overflow so dl has a height
    
    * start filling out modify page
    
    * extract fields to shared place, start ModifyForm
    
    * more cleaning logic in ModifyForm
    
    * render form in template
    
    * move form to partial for ajax; instantiate instance in form
    
    * make ajaxform
    
    * update modal content
    
    * pass kwargs to reverse
    
    * add styling for .message-info
    
    * stub out more tests; make file not required; process POST
    
    * extract pl rows table to partial; add display of pl rows to modify page
    
    * [WIP] allow skip ahead on step 3 if already uploaded
    
    * show table on step 3 if data in session; add tests
    
    * simplify to just one submit button Step 3; adjust tests
    
    * skip directly to 4 if already uploaded; add anchor and header
    
    * previous goes to step 2 from step 3 errors
    
    * implement step_3_data interstitial page
    
    * fix for eslint
    
    * finish up step/3/data, including tests
    
    * doc is_file_required
    
    * better test names
    
    * docstring for get_deserialized_gleaned_data
    
    * rm modify form/page stuff
    
    * start outlining modify stuff
    
    * upload flow changes to validate dupe contract number
    
    * rm stubbed method, will implement separately
    
    * rm fields.py; amend data capture integration test
    
    * test Step1 duplicate validation
    
    * return HttpResponseBadRequest instead of raising error
    
    * address code review items
    Canceling data_capture flows (#629)
    
    * add `handle_cancel` decorator for canceling data_capture flows via POST request
    * update formbuttonrow to work with buttons; replace button-cancel with button-secondary
    * handle_cancel on price_list_upload views; add tests
    * factor out ajax_redirect to a method in ajaxform (#641)
    remove unused import
    Call render_to_string() in a non-deprecated way.
    Add docstrings to ajaxform.py and upload.py.
    move ajaxform, upload python files into frontend package.
    Factor out data_capture.ajaxform.
    Add test for crotchety.py.
    Add frontend/crotchety.py to simulate production static file storage.
    move qunit and selenium tests to frontend
    Add qunit tests.
    first pass at loader
    Run mypy on all files. Fixes #1803.
    adjust self.required exception condition check
    clear our some old TODO comments
    Run aXe on styleguide, fix violations.
    Sanitize filename on downloads.
    simplify code a bit
    Show 'you have already uploaded boop.csv' above file input.
    Support fake filenames in upload widget.
    Use HTML5 form validation on upgraded upload widgets.
    dynamically add ' or drag and drop here' text.
    Add <upload-widget> and <input is="upload-input">.
    Add docstrings to ajaxform.py and upload.py.
    move ajaxform, upload python files into frontend package.
    Add ajax form examples to styleguide.
    Add a django forms UploadWidget.
    Pull schedule choices from registry dynamically.
    Implement step 3.
    Attempt to guess schedule of price list if initial load fails.
    add settings.DATA_CAPTURE_SCHEDULES.
    Add step 2, 'Fake Schedule' implementation.
    Implement most of step 1.
    Rename enable_js to safe_mode.
    Make email CSS match mockup.
    Add email.scss.
    Appease eslint.
    Fix four layers of problems that caused local frontend file watching not to function. See PR for gory details.
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    finish LoadableWrapper and add tests
    
    Also document the webpack-bundle-analyzer workflow for visualizing the data explorer bundles.
    initial setup of loadable filters
    move stats.json to bundle output dir
    
    and run analyzer from cli instead of from gulp:
    
    ```
    webpack-bundle-analyzer ./frontend/static/frontend/built/js/stats.json
    ```
    attempt to analyze webpack bundle
    
    unfortunately the analyzer plugin is only showing the `stats` size of the bundles, which does not take into account minification.
    rm use of DefinePlugin
    
    Webpack v4's `mode` handles setting `process.env.NODE_ENV` based on the value of `mode`
    so we do not need to do it manually via the `DefinePlugin`.
    upgrade babel and webpack
    
    also switch to babel-preset-env, which will target the latest 2 browser versions
    Add USE_POLLING env var. Fixes #1671.
    Create frontend/gulp/ dir, add tests for webpack.
    up the timeouts again
    move timeout to webpackify function
    attempt to bump up jest timeout
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    rm use of DefinePlugin
    
    Webpack v4's `mode` handles setting `process.env.NODE_ENV` based on the value of `mode`
    so we do not need to do it manually via the `DefinePlugin`.
    use node as jest test environment
    Create frontend/gulp/ dir, add tests for webpack.
    Create frontend/gulp/ dir, add tests for webpack.
    add jest env to tests/.eslintrc; rm globals
    Create frontend/gulp/ dir, add tests for webpack.
    Create frontend/gulp/ dir, add tests for webpack.
    move all hourglass_site/static into frontend
    bump to aight v2.0.2a
    include aight v2.0.1a
    move all hourglass_site/static into frontend
    bump to aight v2.0.2a
    include aight v2.0.1a
    move all hourglass_site/static into frontend
    add history API polyfill for IE9
    move all hourglass_site/static into frontend
    add history API polyfill for IE9
    move all hourglass_site/static into frontend
    use local qunit assets
    move all hourglass_site/static into frontend
    adding IE9 modal fallback
    Adds 2 button icons
    Added a slew of favicon files
    Added a slew of favicon files
    move all hourglass_site/static into frontend
    add USA flag, tweaks
    Added a slew of favicon files
    Added a slew of favicon files
    add status icons
    move all hourglass_site/static into frontend
    add document icon
    Added a slew of favicon files
    fix merge conflict in header
    Arrow additions and corner roundings
    Added a slew of favicon files
    Added a slew of favicon files
    add status icons
    Adds black logo for email, etc
    Icon size adj on buttons
    Creates ghost buttons for downloads
    Revert colors to pre-WDS ones (#1145)
    
    * revert colors
    * tweak alt blues for wcag compat; use them for header text instead of doing opacity
    * bold current tab
    * divider color
    * add back the old color header bg image
    move all hourglass_site/static into frontend
    new background header color
    logos, header background
    Icon size adj on buttons
    Creates ghost buttons for downloads
    move inline schedule selection code from #2051 to here
    Added a slew of favicon files
    Resized logo and replaced png with sized version, for crispness
    Add CALC logo to email, make cta wide.
    Normalize line endings to Unix.
    move all hourglass_site/static into frontend
    Replace old 18F logo. Fixes #264.
    Adding OG and other meta tags to head (#2033)
    
    * Added OG and other meta tags to head
    * Added "capture" tag
    * Added new "striptext" simple tag
    Tag and release v2.1.0 (#1303)
    new info badge icons
    Tag and release v2.1.0 (#1303)
    new info badge icons
    move external page icon and update reference
    Use CC0 external link SVG.
    Crops divider rule to match header style
    Removes uswds buttons.scss
    Added a slew of favicon files
    Added a slew of favicon files
    get the dropdown reflecting the name of the current schedule
    Swaps in png logo for svg
    Added a slew of favicon files
    Added a slew of favicon files
    move all hourglass_site/static into frontend
    logos, header background
    re-adding the icon
    add status icons
    Icon size adj on buttons
    Creates ghost buttons for downloads
    Added a slew of favicon files
    Arrow additions and corner roundings
    Added a slew of favicon files
    Swaps in new doc icon
    Swaps in new logo
    Icon size adj on buttons
    Creates ghost buttons for downloads
    Added a slew of favicon files
    Added a slew of favicon files
    Added a slew of favicon files
    Removes superfluous icons and fixes checkmark
    move all hourglass_site/static into frontend
    Add new logo
    logo and header tweaks
    new logo, header tweaks
    add status icons
    Stubs out add data "tutorial" based on announcement email
    Adds 2 button icons
    Added a slew of favicon files
    add status icons
    Added a slew of favicon files
    Updates images to match new look
    Stubs out add data "tutorial" based on announcement email
    Updates images to match new look
    Copy edits, card chunking
    
    Rewrote some text so the instructions are more accurate to the
    experience for those viewing this page, and so that it reflects the new
    motif where “Add price data” is always visible. Also broke up the
    content into individual cards.
    Stubs out add data "tutorial" based on announcement email
    Stubs out add data "tutorial" based on announcement email
    Updates images to match new look
    Stubs out add data "tutorial" based on announcement email
    Updates images to match new look
    Stubs out add data "tutorial" based on announcement email
    Stubs out add data "tutorial" based on announcement email
    Updates images to match new look
    Stubs out add data "tutorial" based on announcement email
    Updates images to match new look
    Stubs out add data "tutorial" based on announcement email
    add images needed for collectstatic to pass
    move all hourglass_site/static into frontend
    add dropdowns and errors to form styles
    move all hourglass_site/static into frontend
    add dropdowns and errors to form styles
    add images needed for collectstatic to pass
    add images needed for collectstatic to pass
    add images needed for collectstatic to pass
    Normalize line endings to Unix.
    add bg to errors, restyle errorlists in alert tables
    Normalize line endings to Unix.
    add bg to errors, restyle errorlists in alert tables
    add bg to errors, restyle errorlists in alert tables
    add bg to errors, restyle errorlists in alert tables
    More UI bugfixes (#1138)
    
    * add clearfix mixin and add to header row
    * truncate long filenames
    * fix homepage bullet alignment
    * cardify error pages
    * header bullet tweaks
    * Added canvas to 3 icons so all four match (#1144)
    * Recolored icons to #839EA8
    * Bullet sizing etc (#1154)
    * change a couple of ems to rems
    resize icons and make structure hold up to resizing better
    move all hourglass_site/static into frontend
    Add images to img folder
    More UI bugfixes (#1138)
    
    * add clearfix mixin and add to header row
    * truncate long filenames
    * fix homepage bullet alignment
    * cardify error pages
    * header bullet tweaks
    * Added canvas to 3 icons so all four match (#1144)
    * Recolored icons to #839EA8
    * Bullet sizing etc (#1154)
    * change a couple of ems to rems
    fix padding on dropdowns
    move all hourglass_site/static into frontend
    Add images to img folder
    More UI bugfixes (#1138)
    
    * add clearfix mixin and add to header row
    * truncate long filenames
    * fix homepage bullet alignment
    * cardify error pages
    * header bullet tweaks
    * Added canvas to 3 icons so all four match (#1144)
    * Recolored icons to #839EA8
    * Bullet sizing etc (#1154)
    * change a couple of ems to rems
    resize icons and make structure hold up to resizing better
    move all hourglass_site/static into frontend
    Add images to img folder
    More UI bugfixes (#1138)
    
    * add clearfix mixin and add to header row
    * truncate long filenames
    * fix homepage bullet alignment
    * cardify error pages
    * header bullet tweaks
    * Added canvas to 3 icons so all four match (#1144)
    * Recolored icons to #839EA8
    * Bullet sizing etc (#1154)
    * change a couple of ems to rems
    resize icons and make structure hold up to resizing better
    move all hourglass_site/static into frontend
    Add images to img folder
    update links and add section about sass
    More UI bugfixes (#1138)
    
    * add clearfix mixin and add to header row
    * truncate long filenames
    * fix homepage bullet alignment
    * cardify error pages
    * header bullet tweaks
    * Added canvas to 3 icons so all four match (#1144)
    * Recolored icons to #839EA8
    * Bullet sizing etc (#1154)
    * change a couple of ems to rems
    resize icons and make structure hold up to resizing better
    move all hourglass_site/static into frontend
    Add images to img folder
    PSHCDT-87: UAA logout update
    PSHCDT-87:CALC's Session Timeout updated
    PSHCDT-87: UAA logout update
    PSHCDT-87:CALC's Session Timeout updated
    move all hourglass_site/static into frontend
    use local qunit assets
    move all hourglass_site/static into frontend
    adding IE9 modal fallback
    move all hourglass_site/static into frontend
    adding IE9 modal fallback
    Get rid of date.py, add tests for our template override.
    Upgrade to Django 1.11, use uswds_forms.
    Add tests for split date widget/field.
    PSHCDT-87: UAA logout update
    PSHCDT-87: UAA logout update
    freakin indents man
    shorten line
    fix failing selenium test
    god i hate selenium
    whatever, selenium
    Run aXe on /styleguide/docs/.
    Keep a long-lived WebDriver instance through the whole test run.
    Remove outdated notes about travis.
    Get rid of selenium.md and most selenium env vars.
    Write screenshot to selenium_tests_screenshot.png.
    Obliterate all references to phantomjs.
    Use headless chrome with selenium in docker.
    Remove Travis and Sauce Labs-related code. Fixes #1639.
    Remove selenium xtests. Fixes #1661.
    migrate to CircleCI
    
    - raise real Exception in test_selenium
    - remove debug print statement in styleguide tests
    - comment out WebDriver/Sauce test stuff because no time to get it working right now
    - upgrade to python 3.6.2
    Run aXe on styleguide, fix violations.
    Run aXe-core on data explorer, fix a11y violation.
    Upgrade python packages (#1324)
    If sauce connect tunnel fails, fall back to phantomJS.
    Use StaticLiveServerTestCase (#1148)
    
    Fixes #1147
    Fix broken selenium tests, autocomplete bugs.
    Ensure gateway works when testing on sauce labs.
    Display link to sauce labs results in selenium teardown.
    Fix travis hopefully.
    Hopefully make travis use PhantomJS for untrusted PRs.
    Hopefully run qunit tests in ie11 on travis.
    Add WD_SOCKET_TIMEOUT and WD_JOB_VISIBILITY.
    Consolidate all qunit testing into test_qunit.py.
    hopefully make test_one_column_is_sortable_at_a_time not randomly fail.
    Test qunit tests when running selenium.
    Fix intermittently failing selenium tests.
    Set default socket timeout in setup.
    call super().teardDownClass() in selenium tests.
    Appease flake8.
    Better support for webdriver testing via env vars.
    fix selenium tests and radios in data explorer.
    move all hourglass_site/static into frontend
    move qunit and selenium tests to frontend
    Get rid of final flake8 errors.
    
    Specifically, this gets rid of:
    
    ./docker_django_management.py:174:12: E713 test for membership should be 'not in
    '
    ./contracts/management/commands/load_data.py:8:1: F401 'datetime.date' imported
    but unused
    ./selenium_tests/tests.py:75:42: E712 comparison to False should be 'if cond is
    False:' or 'if not cond:'
    ./selenium_tests/tests.py:82:19: F821 undefined name 'Error'
    Get rid of unused imports, files, variables.
    Fix all remaining PEP8 violations involving line length.
    Ran 'autopep8 -i -r .' on code.
    
    These are only whitespace changes, and they don't even fix all the
    whitespace issues raised by flake8.
    Run qunit tests. Fix #287.
    js and sass/css pipeline with gulp (#367)
    
    * add gulp for building sass and js with sourcemaps
    * setup container for running gulp during development
    * rm built static files from the repo
    * update README with gulp information
    * modify travis to run gulp build
    * remove ruby sass stuff
    * specify and install node version in travis
    * add new static_source vendor paths to CodeClimate ignore list
    Remove makefile, ignore selenium tests on Travis (#330).
    Increase phantomJS timeout to 15s on travis.
    rm sauce labs testing and supporting code
    Attempt to make selenium tests more reliable (#266).
    doc cleanup
    decommissioning more selenium tests
    decommissioning more selenium tests
    adding notes about selenium test timeouts
    leaving a note about selenium tests
    leaving a note about selenium tests
    decommissioning tests
    year out selenium test
    trying to wait until the data is loaded before grabbing the form in search-related tests
    update filter experience selenium test
    set larger initial range, focus state with fields labels
    
    also update test
    removing hide schedule button
    adding selenium tests for download graph functionality
    adding selenium test for contract link
    Add schedule test
    Remove price range tests and add experience range
    
    ...test
    update tests
    remove python2-specific imports
    fix frontend tests without outdated selectors
    argh, fix typo
    fix socketserver import for py3
    fix except clause syntax for python 3
    ignore selenium_tests/screenshot.png
    fix frontend tests, look for settings.REMOTE_TESTING, etc.
    do the right thing if settings.SAUCE is True
    add monkey patch to quell connection errors
    re-add #results-count, disable tick count test
    
    - I thought I added the "results-count" id back in, but maybe not.
    - The test for the number of tick counts is too brittle because it
      assumes a fixed number of histogram bins. This test isn't critical.
    add basic tests for query types
    fix set_form_values(), checkbox and radio selection
    Consolidated sorting tests
    
    - Default column
    - Non-default columns
    Cleaned up and added comment to filter order test
    fix broken tests
    
    `self.submit_form` -> `self.submit_form()`
    ensure that we're sending a string to form inputs
    more sorting selenium tests
    attempt to debug query string
    add remaining histogram selenium tests
    
    and clean up some other tests in the process
    Increasing Selenium test compatibility w/ Firefox
    
    - More waits needed-- refactoring waits into helper methods
    
    Conflicts:
            selenium_tests/tests.py
    look for .average instead of .avg
    test fixes, attempt at finding the average (failing)
    add basic test for detecting histogram bars
    look for .average instead of .avg
    test fixes, attempt at finding the average (failing)
    add basic test for detecting histogram bars
    click .toggle-collapse to hide the schedule column
    Test that price filter is the last
    
    - Also fixed a regression in the filter input names
    Changing super() syntax for Py2 compatibility
    Schedule and business size front-end tests
    Business size tests
    Refactoring result counting into a custom assert
    Moving webdriver setup to setUpClass
    
    - results in 3x faster tests
    Front-end changes for price filter going from > to >=, etc.
    
    - Changed form field names so everything matches
    - Updated Selenium tests
    Change price filters from < > to <= >=
    Selenium test improvements
    
    - No longer hardcoding the dev server, using live_server_url instead
    - Generate test data
    - Rewrite some tests to take advantage of known test data
    - Should be invoked with something like:
        ./manage.py test --liveserver=localhost:8081-8181
    - Eliminate asserts that are redundant w/ API tests
    - Set longMessage so that built-in failure messages show alongside
      custom ones
    split out price filter test into separate lt & gt
    add column sorting test, assert query strings in URLs
    some really simple tests that pass for me
    bad whitespace
    frontend test scaffolding (copped from Mirage)
    Add test for crotchety.py.
    Move Steps, StepRenderer to steps.py. Fixes #1173.
    Use assertRegexpMatches, styleguide rewording.
    Define step labels via @step decorator.
    Make StepRenderer.widget throw if no labels are defined.
    Add more tests.
    Encapsulate steps widget HTML rendering in a StepsWidget class.
    Rename 'hourglass' to 'calc'. Fixes #93.
    Obliterate all references to phantomjs.
    Use StaticLiveServerTestCase (#1148)
    
    Fixes #1147
    Hide passed tests in qunit output.
    Consolidate all qunit testing into test_qunit.py.
    Make qunit tests, styleguide visible on DEBUG only.
    move all hourglass_site/static into frontend
    move qunit and selenium tests to frontend
    Ran 'autopep8 -i -r .' on code.
    
    These are only whitespace changes, and they don't even fix all the
    whitespace issues raised by flake8.
    Add license for qunit-phantomjs-runner.
    Run qunit tests. Fix #287.
    Add qunit tests.
    Add upload.py tests.
    Fix flake8 issues.
    Run aXe on styleguide, fix violations.
    Run aXe-core on data explorer, fix a11y violation.
    Use StaticLiveServerTestCase (#1148)
    
    Fixes #1147
    Add compressed collectstatic tests.
    move qunit and selenium tests to frontend
    Add qunit tests.
    first pass at loader
    Use `yarn` instead of `npm run` everywhere
    
    We switched to `yarn` a while back but didn't update various docs and tooling to use it in place of `npm` or `npm run`.
    
    Closes #1541.
    Use StaticLiveServerTestCase (#1148)
    
    Fixes #1147
    Add SKIP_STATIC_ASSET_BUILDING env var.
    Add compressed collectstatic tests.
    move qunit and selenium tests to frontend
    Add newline for PEP-8 goodness.
    Run qunit tests. Fix #287.
    Add more tests to test_safe_mode.py.
    Add test_safe_mode.py.
    Fix dangling comma in labor category description (#1237)
    Add support for radio and checkbox inputs to ajax-form (#1001)
    
    * add support for radio and checkbox inputs, closes #570
    * add uswds-style checkbox widget
    * add note and throw error on select or textarea elements
    Support multiple submit buttons in ajaxform.
    decouple UploadWidget from UploadInput a bit more.
    Fix tests for ajaxform.
    Ensure qunit_fixture_data_json isn't HTML-escaped.
    Import UploadWidget relatively in qunit_fixture_data.py.
    Rename step1-form to ajaxform.
    Make step 1 JS tests use UploadWidget.
    move tests.html to frontend app, render UploadWidget in it.
    Get rid of date.py, add tests for our template override.
    Run aXe on styleguide, fix violations.
    use <legend> where appropriate.
    Add {% fieldset %] template tag. Fixes #808.
    move tests.html to frontend app, render UploadWidget in it.
    first pass at loader
    rm API_HOST, WHITELISTED_IPS, and assoc code
    move jquery to package.json; webpack common
    vendor bundles to match js bundles
    use webpack for all js bundles; rm browserify and pals
    create new common js bundle and put usermenu there
    Fix unit tests.
    Add QUnit tests for safe mode.
    import data-capture modules from test suite. Fixes #541.
    move tests.html to frontend app, render UploadWidget in it.
    rename hourglass_site to data_explorer
    move all hourglass_site/static into frontend
    add js tests to build pipeline so we can use es6 and linting
    just use require() to include polyfill
    include babel browser polyfill
    Move upload.js to data-capture and ES2015-ify it.
    add some tests for upload widget.
    modernize gulpfile code; reorganize legacy js
    js and sass/css pipeline with gulp (#367)
    
    * add gulp for building sass and js with sourcemaps
    * setup container for running gulp during development
    * rm built static files from the repo
    * update README with gulp information
    * modify travis to run gulp build
    * remove ruby sass stuff
    * specify and install node version in travis
    * add new static_source vendor paths to CodeClimate ignore list
    local qunit assets, set API_HOST in unit tests
    dangling Hourglass refs, update manifest, README hourglass refs
    ditch type="text/javascript"
    add aight to JS unit tests, fix #54
    add basic unit tests for hourglass.js
    get the missed files
    Add 'title' attribute to each <li> in a steps widget.
    Encapsulate steps widget HTML rendering in a StepsWidget class.
    get the missed files
    Make <legend>s work on NVDA.
    use <legend> where appropriate.
    Add {% fieldset %] template tag. Fixes #808.
    Adding OG and other meta tags to head (#2033)
    
    * Added OG and other meta tags to head
    * Added "capture" tag
    * Added new "striptext" simple tag
    Trigger GA event on safe mode opt-in display.
    Add QUnit tests for safe mode.
    don't disable critical JS in safe mode.
    Rename enable_js to safe_mode.
    Applies `usa-button` class globally
    update buttons to use uswds
    Rename 'safe mode' to 'compatibility mode', fix #854.
    Rename enable_js to safe_mode.
    Adding OG and other meta tags to head (#2033)
    
    * Added OG and other meta tags to head
    * Added "capture" tag
    * Added new "striptext" simple tag
    Add nonce-based CSP to index page only.
    Add QUnit tests for safe mode.
    don't disable critical JS in safe mode.
    Rename enable_js to safe_mode.
    Add QUnit tests for safe mode.
    fix date forms
    Fix form hint color.
    Use <uswds-date> and our funky non 'usa-' classes.
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    js and sass/css pipeline with gulp (#367)
    
    * add gulp for building sass and js with sourcemaps
    * setup container for running gulp during development
    * rm built static files from the repo
    * update README with gulp information
    * modify travis to run gulp build
    * remove ruby sass stuff
    * specify and install node version in travis
    * add new static_source vendor paths to CodeClimate ignore list
    first pass at histogram download
    Merge branch 'develop' into add-data-how-to
    Weird newline changes I guess.
    fix mock event in upload_tests; stupid line endings
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    js and sass/css pipeline with gulp (#367)
    
    * add gulp for building sass and js with sourcemaps
    * setup container for running gulp during development
    * rm built static files from the repo
    * update README with gulp information
    * modify travis to run gulp build
    * remove ruby sass stuff
    * specify and install node version in travis
    * add new static_source vendor paths to CodeClimate ignore list
    first pass at histogram download
    Normalize line endings to Unix.
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    js and sass/css pipeline with gulp (#367)
    
    * add gulp for building sass and js with sourcemaps
    * setup container for running gulp during development
    * rm built static files from the repo
    * update README with gulp information
    * modify travis to run gulp build
    * remove ruby sass stuff
    * specify and install node version in travis
    * add new static_source vendor paths to CodeClimate ignore list
    first pass at histogram download
    Merge branch 'develop' into add-data-how-to
    Weird newline changes I guess.
    fix mock event in upload_tests; stupid line endings
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    js and sass/css pipeline with gulp (#367)
    
    * add gulp for building sass and js with sourcemaps
    * setup container for running gulp during development
    * rm built static files from the repo
    * update README with gulp information
    * modify travis to run gulp build
    * remove ruby sass stuff
    * specify and install node version in travis
    * add new static_source vendor paths to CodeClimate ignore list
    first pass at histogram download
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    js and sass/css pipeline with gulp (#367)
    
    * add gulp for building sass and js with sourcemaps
    * setup container for running gulp during development
    * rm built static files from the repo
    * update README with gulp information
    * modify travis to run gulp build
    * remove ruby sass stuff
    * specify and install node version in travis
    * add new static_source vendor paths to CodeClimate ignore list
    first pass at histogram download
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    js and sass/css pipeline with gulp (#367)
    
    * add gulp for building sass and js with sourcemaps
    * setup container for running gulp during development
    * rm built static files from the repo
    * update README with gulp information
    * modify travis to run gulp build
    * remove ruby sass stuff
    * specify and install node version in travis
    * add new static_source vendor paths to CodeClimate ignore list
    merge master
    another comment about edits in autocomplete library source
    autocomplete edits
    
    - removed input delay for faster response
    - edited autocomplete library to have better handling of keyboard
    selections
    autocomplete comma separated labor category search terms
    fix #36
    
    I patched the autocomplete plug into respect the return key.
    add jquery autocomplete plugin
    Normalize line endings to Unix.
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    js and sass/css pipeline with gulp (#367)
    
    * add gulp for building sass and js with sourcemaps
    * setup container for running gulp during development
    * rm built static files from the repo
    * update README with gulp information
    * modify travis to run gulp build
    * remove ruby sass stuff
    * specify and install node version in travis
    * add new static_source vendor paths to CodeClimate ignore list
    Add tooltipster plugin
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Document {% webcomponent %}.
    Disable dumb eslint rules.
    Fix web-component-link in webpack builds.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Mention, link to web components in style guide.
    Mention, link to web components in style guide.
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Fix ga.trackInterestingLink() on IE11. Fixes #2005.
    Add autoTrackInterestingLinks() tests.
    Emit custom events to DAP and our GA.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    every call to ga() proxies to window.ga().
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    use querystring module in place of custom functions
    add some basic tests for appendHighlightedTerm
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    move Highlights assertions to new jest test
    Add tests for parseQuery/joinQuery.
    Fix stored XSS vuln in autocomplete. Fixes #1118.
    Added a very simple Enzyme-based test suite for data explorer.
    wip tests
    Get rid of dap-hacks.js and just autotrack ourselves.
    get rid of hourglass.js; use module for ajax requests; tests
    Added a very simple Enzyme-based test suite for data explorer.
    Add tests for dap-hacks.js.
    Fix unit tests.
    Add smooth-scroll_tests.js.
    every call to ga() proxies to window.ga().
    add tests for date.js.
    Add tests for AlertsWidget.
    rename <collapsible-area> to <expandable-area>
    Add some <collapsible-area> tests.
    import data-capture modules from test suite. Fixes #541.
    Rename step1-form to ajaxform.
    Add a few tests for step_1.
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    add js tests to build pipeline so we can use es6 and linting
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Obliterate all references to phantomjs.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Add support for radio and checkbox inputs to ajax-form (#1001)
    
    * add support for radio and checkbox inputs, closes #570
    * add uswds-style checkbox widget
    * add note and throw error on select or textarea elements
    Fix ajaxform interop w/ back-forward cache.
    Support multiple submit buttons in ajaxform.
    Add test to ensure ajaxform X-Requested-With header.
    Refactor funcs into methods in upload.js.
    import data-capture modules from test suite. Fixes #541.
    Refactor functions to methods in ajaxform.
    Get rid of iframes in ajaxform tests.
    Simplify ajaxform tests using promises.
    decouple ajaxform tests from .data('ajaxform').
    Decouple ajaxform tests from .data('upload').
    Add ajaxform test for normal file inputs.
    Fix tests for ajaxform.
    Friendlier ajax error copy. Fixes #456.
    Rename step1-form to ajaxform.
    minor fix to clear eslint unary typeof error
    Make step 1 JS tests use UploadWidget.
    Fix weird unrelated eslint errors
    fix codeclimate warning.
    Finish up tests for step 1.
    Add form_html response test.
    Add sinon, more tests.
    Add a few tests for step_1.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Add tests for AlertsWidget.
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    rename <collapsible-area> to <expandable-area>
    typo fix
    Add <collapsible-area> tests for click and keyup events.
    Add some <collapsible-area> tests.
    eslint and flake8
    add class to form we're targeting for validation, and fix tests
    last tweaks
    appease eslint on tests too
    wip tests for checkInputs
    remove comments
    unnecessary assignment
    tests for parseInput
    tests for toggleErrorMessage
    more wip tests
    more wip tests
    wip tests
    wip tests"
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Disable dumb eslint rules.
    Obliterate all references to phantomjs.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Smoothly scroll to location hash on new page load.
    Assign each page visit its own unique visit id.
    Store scrollTop in history.state instead of sessionStorage.
    Fix qunit tests on phantomjs.
    Add tests for activateManualScrollRestoration().
    test going forward in history.
    Use coroutine in smooth-scroll_tests.js.
    better test cleanup.
    Oops, actually add smooth-scroll_tests.js.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    add tests for date.js.
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Disable dumb eslint rules.
    fix mock event in upload_tests; stupid line endings
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Add js unit tests for fake filename stuff.
    Fix problems w/ upload widget drag/drop indication. Fixes #919.
    Decouple upload widget from html.js / html.no-js.
    Fix #710, <upload-widget> works w/ funky upgrade timings.
    Degrade upload widget if not in ajaxform. Fixes #628.
    Refactor funcs into methods in upload.js.
    import data-capture modules from test suite. Fixes #541.
    Add tests for upload input validation.
    UploadInput now uses CustomEvents instead of jQuery events.
    decouple UploadWidget from UploadInput a bit more.
    Decouple upload widget tests from .data('upload').
    Add more upload.js tests.
    Properly clean-up after upload tests.
    Fix upload_tests.js.
    move tests.html to frontend app, render UploadWidget in it.
    upgrade js deps, fix minor new eslint issue
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    es6ify upload_tests.js
    add js tests to build pipeline so we can use es6 and linting
    show simple message on invalid file type
    test that it works without 'accept' attribute
    validate dropped file based on 'accept' attribute
    finish upload unit tests
    refactor upload tests.
    add another upload widget test.
    add some tests for upload widget.
    add wds to common
    Get rid of dap-hacks.js and just autotrack ourselves.
    upgrade babel-polyfill; add raf polyfill
    move jquery to package.json; webpack common
    create new common js bundle and put usermenu there
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Make schedules be pulled from api, omg i hate this
    Update IE11 comment in trackInterestingLink().
    Fix ga.trackInterestingLink() on IE11. Fixes #2005.
    Get rid of dap-hacks.js and just autotrack ourselves.
    Emit custom events to DAP and our GA.
    Emit virtual pageviews to DAP and our GA.
    Move DAP hacks to dap-hacks.js, require() in both bundles.
    Horribly hack around DAP _initAutoTracker to make it work.
    Make DAP auto tracker work w/ dynamic content.
    every call to ga() proxies to window.ga().
    Track expand/collapse of expandable areas in GA.
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    extract toggleMenu to appease codeclimate
    hide the usermenu on outside click
    
    Modifies the behavior of the header usermenu to hide not only on click of its trigger link, but also on click of anywhere outside of its descendents.
    Use @ts-check.
    Use TypeScript's checkJs functionality on whitelisted files.
    preventDefault at the end in case of errors
    create new common js bundle and put usermenu there
    change 'open' to 'is-open'
    
    as suggested in https://philipwalton.com/articles/decoupling-html-css-and-javascript/
    guard against elements missing
    use plain JS; make new admin bundle; include usermenu js
    Factor out schedule-metadata.js.
    Make schedules be pulled from api, omg i hate this
    move api base and paths to constants
    rm API_HOST, WHITELISTED_IPS, and assoc code
    omg we need npm shrinkwrap
    use querystring instead of qs
    check statusCode >= 400 for error
    callback with error on non-200 response
    get rid of hourglass.js; use module for ajax requests; tests
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    add back somewhat custom parseQueryString method
    use querystring module in place of custom functions
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Add some docs to history.js, rates-request.js, serialization.js.
    Add <ExportData> JSX component.
    Split up store-form-synchronizer into separate modules.
    move api base and paths to constants
    rm spurious format:'json'
    start removing hourglass.js
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Add some docs to history.js, rates-request.js, serialization.js.
    Add <ExportData> JSX component.
    Move API request management into rates-request.js.
    Split up store-form-synchronizer into separate modules.
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    move api base and paths to constants
    Limit autocomplete results on server-side
    modify processResults to just take result
    extract result processing logic and test it
    guard against null or undefined result
    mv getLastCommaSeparatedTerm to utils; add labor-category tests
    duh, remove debugger statement
    return if sanitizedSearch is empty string
    Set query when search field loses focus. Fixes #1334.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Fix weird codeclimate issue.
    Fix stored XSS vuln in autocomplete. Fixes #1118.
    Fix broken selenium tests, autocomplete bugs.
    Add <LaborCategory> component.
    Couple autocomplete to redux store instead of form.
    Factor out autocomplete.js.
    remove logging statements and add new validator to serializers
    get vendor search UI acting as expected
    update frontend code to refernce query by instead of search type for consistency with API
    basic plumbing to set up contract vendor UI
    fix eslint errors on checkbox code
    reuse existing setQueryType action/reducer to toggle checkbox and querystring
    add action/reducer/logic for toggling exact match
    reduce q correctly; adjust associated test
    move truncation logic to reducer; add simple test
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Add <LaborCategory> component.
    Add <BusinessSize> JSX component.
    Add <Site> JSX component.
    Add <QueryType> JSX component.
    Add <ContractYear> JSX component.
    Add a <Schedule> JSX component.
    Create an <Experience> JSX component.
    Added an invalidateRates() action.
    Added a resetState() action type.
    Add <EducationLevel> JSX component.
    Use redux store for all data retrieval instead of formdb.
    (Mostly) Reactify 'proposed price' widget.
    Add query_type to redux store.
    Add sort to redux store, decoupling table from form and submit.
    Migrate price highlights to <Highlights> component.
    Add /api/rates request info to redux store.
    Add site, business size, schedule to redux store.
    Add min/max experience to redux store.
    Add education to redux store.
    Add search terms to Redux store, improve form-store sync.
    Add a stub reducer for contract-year.
    Make store/form sync a bit more generic.
    Make redux store of shape { exclude: [] } via combineReducers().
    Split store.js into actions.js, reducers.js, sync-store-to-form.js.
    create new common js bundle and put usermenu there
    use plain JS; make new admin bundle; include usermenu js
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Move DAP hacks to dap-hacks.js, require() in both bundles.
    Use browserify for data-explorer. Fixes #917.
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    Fix typo, terms -> term.
    Fix #458 (multi-word autocomplete).
    modernize gulpfile code; reorganize legacy js
    js and sass/css pipeline with gulp (#367)
    
    * add gulp for building sass and js with sourcemaps
    * setup container for running gulp during development
    * rm built static files from the repo
    * update README with gulp information
    * modify travis to run gulp build
    * remove ruby sass stuff
    * specify and install node version in travis
    * add new static_source vendor paths to CodeClimate ignore list
    Fix empty price histogram. Fixes #244 and #289.
    a few stylistic improvements from jshint
    do not show years of experience on description on initial page load
    removing changes that caused a search results text regression
    add in fade effect after description update
    don't show experience range if no other filters have been selected
    add spaces between filters in sentence
    refactor updateDescription function
    clean up autocomplete onSelect callback function, use minified version in template
    rendering relevant rate in table
    autocomplete edits
    
    - removed input delay for faster response
    - edited autocomplete library to have better handling of keyboard
    selections
    update dynamic sentence (description) generation
    
    #196
    resetting the autocomplete endpoint location now that we're sticking with the original
    autocomplete comma separated labor category search terms
    removing tspan
    adjusting the size of the img that is generated to match d3 graph
    change autocomplete endpoint
    clean up proposed price code
    proposed price with decimal support in histogram
    proposed price block updates
    start of update description rewrite
    black label box for proposed price
    label color for average price
    show proposed price block when passed url parameter
    proposed price line
    standard deviation label styling and rectangle height
    Add transition to bar
    Add std deviation bar
    adding ability to use decimal in proposed price
    display $0 instead of NaN when no results for standard deviation
    force education multi-select reset on clear search
    education filter query string fix
    clear search to reset education multiselect and experience slider
    fix education level field disappearing
    
    was an issue with conflicting class.
    load experience range query string
    fixing callout to reflect filter changes
    clean up javascript in multi select javascript
    formatting
    clear histogram labels on each draw
    show education levels selected on load with passed url parameters
    generating comma separated strings from arrays for eduation filter
    education multi-select api integration
    Update proposed price input with enter click
    if proposed price input empty, remove callout
    proposed price input
    add blue outline focus on experience slider handles
    remove active state on experience slider on load
    set larger initial range, focus state with fields labels
    
    also update test
    include up to 45 years in experience
    
    also clean up comments
    adding std deviation calculation callouts
    first pass at adding standard deviation to the API
    add select inputs for years of experience
    hook up experience slider to api
    range slider on years of experience filter
    
    (not hooked up to api yet)
    I added a preventDefault function on both of the dropdown anchor click
    functions so they won’t jump to the top of the page.
    
    Also removed href in the anchor tag in the html since it actually isn’t
    going anywhere.
    
    #173
    Add ceiling before price
    Add js and style
    removing hidden class
    removing hide schedule button
    Use aria-label and use tooltipster
    use aria-label as content instead of title
    improve download img message
    preserve download button classes
    Add tooltipster plugin
    adding IE9 modal fallback
    move to using xmlserializer instead of minimally supported outerHTML
    first pass at histogram download
    Add svg inline and style w/ css
    add document icon
    create links to contract documents
    experience table cells with '1' should have a singular label
    use existing way of updating export link
    adding api host into export link
    Add average price highlight
    add N/A to empty cells
    adding years label to experience field on hover
    x-axis label tweak
    make sure that the td with the remove link is being updated when new data is loaded
    Change min experience to new experience range
    Remove price range from sentence
    Update price label on x-axis
    add schedule to text filter summary
    fix bad function name in index.js
    adding search and filter values into export CSV
    Fix #97
    
    Adds `title` attributes to all sortable headers that reflect their
    current state, for instance when a column is sorted it gets the title,
    "{title}: sorted {order}, click to sort {opposite order}".
    
    @bristow, we decided to use `title` instead of sr-only span and replaced
    one instance of `aria-describedby` that looked wrong. Thanks for taking
    a look!
    fix #117
    add axis labels, fix #115
    add note about IE9 links with location.hash
    fix #95
    fix #94
    add scope="row" to labor category cell per #98; styles
    fix #107
    clean up
    fixes #102
    browser shim, der
    fix bad count listing in #results-count
    JSON+URL tweaks (to kill bad 301s in localtunnel)
    better histogram sizing and alignment per #86
    jaunty icons for restore and expand column links
    no active ring around radio buttons
    
    Also, don't display the restore link if it's not active.
    style input focus links with dotted underline
    no serial comma?
    enable label variations for some options
    chart: more bins, fix label orientation; cleanup
    fix #77
    resize the historgram
    per #64
    switch to api.data.gov
    add dynamic query description
    
    I renamed `data` to `res` inside the update() function for clarity, and
    added the updateDescription() function, which builds the appropriate
    HTML to describe all of the active filters.
    remove updateHourlyWages() function
    ditch "new" class on new rows
    add exclude row functionality
    remove getFormData() and setFormData()
    argh
    now with formdb
    use formdb
    fix #82
    
    The reset handler was just setting each input's value to "", which is
    not what you want to do with radio buttons and checkboxes.
    add query_type to search parameters
    make getFormData() and setFormData() work with radios
    add one-liner for history API polyfill
    nicer price histogram bar tooltips
    don't use .html() on average svg element
    
    The `test_histogram_shows_min_max` selenium test was failing for some
    reason that remains unclear. This change fixes it, by switching from
    using d3's .html() function on an svg node to creating the elements via
    the DOM.
    add min, max and average classes for selenium tests
    more space for the average indicator, kill magic numbers
    add more left padding to the histogram
    don't use .html() on average svg element
    
    The `test_histogram_shows_min_max` selenium test was failing for some
    reason that remains unclear. This change fixes it, by switching from
    using d3's .html() function on an svg node to creating the elements via
    the DOM.
    add min, max and average classes for selenium tests
    more space for the average indicator, kill magic numbers
    add more left padding to the histogram
    fix #44
    make form reset-able
    add filter_active class to any input with a value
    add support for sorted styles on tbody cells
    add support for {} and ?{plural} bits in getFormat()
    
    and set cell values as HTML rather than text
    make schedule column collapsible
    
    Now any column can be made collapsible by adding the "collapsible" class
    to its header. The state of collapsed headers isn't saved in the URL
    yet, but could be.
    clean up some whitespace
    make schedule column collapsible
    
    Now any column can be made collapsible by adding the "collapsible" class
    to its header. The state of collapsed headers isn't saved in the URL
    yet, but could be.
    clean up some whitespace
    remove debouncing of 'loading' form class
    sortable table headers
    move main script to index.js
    add submit button id, fix error form class
    no placeholders
    remove permalink
    add wage histogram
    
    We have a wage histogram, and I think it looks pretty nice.
    add loading indicator
    add loading state to price chart and table
    switch business size to a <select> input
    query string -> checkbox input
    add small business checkbox
    fix #26
    fix #23
    don't add ?format=csv to export link href, per #21
    added backend guts for csv export;
    change CSV export URI to /api/rates
    use HS and AA for edu values
    switch Associates and High School edu options
    Associates before High School, right?
    add HS and Assoc. education options
    add section titles
    don't show the results table until results are loaded
    style refactor with Skeleton
    add export CSV link
    add basic autocomplete UI for labor category
    update results table columns, size them better
    adjust column widths, fix td classes
    move row count to table caption, clean up
    hide hourly wage graph, don't sort results
    add outer div.container, spec in sass
    always use 2-decimal precision
    fix vendor and price columns
    use the columns from the wireframe
    add results table
    add hourly wage stats / min. experience chart
    add a plaecholder for hourly wage stats
    add site field options, comment out schedule
    use a better name for the graph selection
    clean up before bailing on errors
    hush
    add setFormData(), report errors
    s/worksite/site
    first stab prototype
    basic templates
    eslint
    update frontend code to refernce query by instead of search type for consistency with API
    basic plumbing to set up contract vendor UI
    reuse existing setQueryType action/reducer to toggle checkbox and querystring
    add action/reducer/logic for toggling exact match
    Add <LaborCategory> component.
    Add <BusinessSize> JSX component.
    Add <Site> JSX component.
    Add <QueryType> JSX component.
    Add <ContractYear> JSX component.
    Add a <Schedule> JSX component.
    Create an <Experience> JSX component.
    Added an invalidateRates() action.
    Added a resetState() action type.
    Add <EducationLevel> JSX component.
    (Mostly) Reactify 'proposed price' widget.
    Add sort to redux store, decoupling table from form and submit.
    Add /api/rates request info to redux store.
    Make store/form sync a bit more generic.
    Split store.js into actions.js, reducers.js, sync-store-to-form.js.
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Move more init logic into startApp().
    Factor out schedule-metadata.js.
    Make schedules be pulled from api, omg i hate this
    Re-enable global-require, no-use-before-define.
    Disable dumb eslint rules.
    Emit virtual pageviews to DAP and our GA.
    use npm modules for d3
    get rid of hourglass.js; use module for ajax requests; tests
    load scripts in <head>
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Use redux-logger for logging.
    Get rid of unneeded code/comments.
    Factor out <App> component.
    Add <LoadingIndicator> component.
    Remove formdb, StoreFormSynchronizer, legacyInputs.
    Add <LaborCategory> component.
    Add <ContractYear> JSX component.
    WIP (broken build) - Begin <ResultsTable> JSX component.
    Use console.groupCollapsed() for logging Redux actions.
    Add <ExportData> JSX component.
    Minor changes to comments, variable names.
    Embed JSX components via data-embed-jsx attribute.
    Create an <Experience> JSX component.
    Move API request management into rates-request.js.
    Split up store-form-synchronizer into separate modules.
    Move action logging to its own middleware.
    Added an invalidateRates() action.
    Added a resetState() action type.
    Add <EducationLevel> JSX component.
    Notify GA of push/popstate-based page changes.
    Remove commented-out code.
    Partially fix education selector, implement reset via redux.
    Sync noui slider w/ min/max experience values.
    Implement improved redux middelware-based pushstate/popstate.
    Remove unneeded code.
    Use redux store for all data retrieval instead of formdb.
    Generate /rates/ params from redux store, not form.
    (Mostly) Reactify 'proposed price' widget.
    Replace hard-coded number w/ MAX_EXPERIENCE.
    Get rid of extra spurious change listener.
    Couple autocomplete to redux store instead of form.
    Make table.js responsible for all its tooltipster functionality.
    Add sort to redux store, decoupling table from form and submit.
    Eliminate all global selectors in table.js.
    Move histogram into a <Histogram> component.
    Decouple histogram.js from global selectors.
    Migrate price highlights to <Highlights> component.
    Factor out a <Description> JSX component.
    Pass proposedPrice into updateHistogram as an arg.
    Fix search breakage.
    Add /api/rates request info to redux store.
    Add min/max experience to redux store.
    Use Redux middleware pattern for syncing btwn store and form.
    Split store.js into actions.js, reducers.js, sync-store-to-form.js.
    Use a Redux store to drive props to <RestoreExcluded>.
    Factor out a RestoreExcluded JSX component.
    Move initializeTable() call into initialize().
    Encapsulate table.js a bit better.
    Factor out autocomplete.js.
    Factor out histogram-to-img.js.
    factor out histogram.js from explorer.js.
    Factor more code out to table.js.
    Factor out a table.js from explorer.js.
    Factor out a util.js from explorer.js.
    Lint (and minor refactoring) explorer.js (#1053)
    Sanitize data explorer query string when parsed (#1060)
    
    * remove < and > from querystring, fixes #1058
    
    * also sanitize escaped characters
    
    * also sanitize param in getUrlParameterByName
    Set GA 'page' property instead of 'location'.
    Get 'ga' function from 'common/ga' module.
    Set GA location, send pageview on search. Fixes #924.
    Use browserify for data-explorer. Fixes #917.
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    Fix typo, terms -> term.
    Fix #458 (multi-word autocomplete).
    modernize gulpfile code; reorganize legacy js
    js and sass/css pipeline with gulp (#367)
    
    * add gulp for building sass and js with sourcemaps
    * setup container for running gulp during development
    * rm built static files from the repo
    * update README with gulp information
    * modify travis to run gulp build
    * remove ruby sass stuff
    * specify and install node version in travis
    * add new static_source vendor paths to CodeClimate ignore list
    Fix empty price histogram. Fixes #244 and #289.
    a few stylistic improvements from jshint
    do not show years of experience on description on initial page load
    removing changes that caused a search results text regression
    add in fade effect after description update
    don't show experience range if no other filters have been selected
    add spaces between filters in sentence
    refactor updateDescription function
    clean up autocomplete onSelect callback function, use minified version in template
    rendering relevant rate in table
    autocomplete edits
    
    - removed input delay for faster response
    - edited autocomplete library to have better handling of keyboard
    selections
    update dynamic sentence (description) generation
    
    #196
    resetting the autocomplete endpoint location now that we're sticking with the original
    autocomplete comma separated labor category search terms
    removing tspan
    adjusting the size of the img that is generated to match d3 graph
    change autocomplete endpoint
    clean up proposed price code
    proposed price with decimal support in histogram
    proposed price block updates
    start of update description rewrite
    black label box for proposed price
    label color for average price
    show proposed price block when passed url parameter
    proposed price line
    standard deviation label styling and rectangle height
    Add transition to bar
    Add std deviation bar
    adding ability to use decimal in proposed price
    display $0 instead of NaN when no results for standard deviation
    force education multi-select reset on clear search
    education filter query string fix
    clear search to reset education multiselect and experience slider
    fix education level field disappearing
    
    was an issue with conflicting class.
    load experience range query string
    fixing callout to reflect filter changes
    clean up javascript in multi select javascript
    formatting
    clear histogram labels on each draw
    show education levels selected on load with passed url parameters
    generating comma separated strings from arrays for eduation filter
    education multi-select api integration
    Update proposed price input with enter click
    if proposed price input empty, remove callout
    proposed price input
    add blue outline focus on experience slider handles
    remove active state on experience slider on load
    set larger initial range, focus state with fields labels
    
    also update test
    include up to 45 years in experience
    
    also clean up comments
    adding std deviation calculation callouts
    first pass at adding standard deviation to the API
    add select inputs for years of experience
    hook up experience slider to api
    range slider on years of experience filter
    
    (not hooked up to api yet)
    I added a preventDefault function on both of the dropdown anchor click
    functions so they won’t jump to the top of the page.
    
    Also removed href in the anchor tag in the html since it actually isn’t
    going anywhere.
    
    #173
    Add ceiling before price
    Add js and style
    removing hidden class
    removing hide schedule button
    Use aria-label and use tooltipster
    use aria-label as content instead of title
    improve download img message
    preserve download button classes
    Add tooltipster plugin
    adding IE9 modal fallback
    move to using xmlserializer instead of minimally supported outerHTML
    first pass at histogram download
    Add svg inline and style w/ css
    add document icon
    create links to contract documents
    experience table cells with '1' should have a singular label
    use existing way of updating export link
    adding api host into export link
    Add average price highlight
    add N/A to empty cells
    adding years label to experience field on hover
    x-axis label tweak
    make sure that the td with the remove link is being updated when new data is loaded
    Change min experience to new experience range
    Remove price range from sentence
    Update price label on x-axis
    add schedule to text filter summary
    fix bad function name in index.js
    adding search and filter values into export CSV
    Fix #97
    
    Adds `title` attributes to all sortable headers that reflect their
    current state, for instance when a column is sorted it gets the title,
    "{title}: sorted {order}, click to sort {opposite order}".
    
    @bristow, we decided to use `title` instead of sr-only span and replaced
    one instance of `aria-describedby` that looked wrong. Thanks for taking
    a look!
    fix #117
    add axis labels, fix #115
    add note about IE9 links with location.hash
    fix #95
    fix #94
    add scope="row" to labor category cell per #98; styles
    fix #107
    clean up
    fixes #102
    browser shim, der
    fix bad count listing in #results-count
    JSON+URL tweaks (to kill bad 301s in localtunnel)
    better histogram sizing and alignment per #86
    jaunty icons for restore and expand column links
    no active ring around radio buttons
    
    Also, don't display the restore link if it's not active.
    style input focus links with dotted underline
    no serial comma?
    enable label variations for some options
    chart: more bins, fix label orientation; cleanup
    fix #77
    resize the historgram
    per #64
    switch to api.data.gov
    add dynamic query description
    
    I renamed `data` to `res` inside the update() function for clarity, and
    added the updateDescription() function, which builds the appropriate
    HTML to describe all of the active filters.
    remove updateHourlyWages() function
    ditch "new" class on new rows
    add exclude row functionality
    remove getFormData() and setFormData()
    argh
    now with formdb
    use formdb
    fix #82
    
    The reset handler was just setting each input's value to "", which is
    not what you want to do with radio buttons and checkboxes.
    add query_type to search parameters
    make getFormData() and setFormData() work with radios
    add one-liner for history API polyfill
    nicer price histogram bar tooltips
    don't use .html() on average svg element
    
    The `test_histogram_shows_min_max` selenium test was failing for some
    reason that remains unclear. This change fixes it, by switching from
    using d3's .html() function on an svg node to creating the elements via
    the DOM.
    add min, max and average classes for selenium tests
    more space for the average indicator, kill magic numbers
    add more left padding to the histogram
    don't use .html() on average svg element
    
    The `test_histogram_shows_min_max` selenium test was failing for some
    reason that remains unclear. This change fixes it, by switching from
    using d3's .html() function on an svg node to creating the elements via
    the DOM.
    add min, max and average classes for selenium tests
    more space for the average indicator, kill magic numbers
    add more left padding to the histogram
    fix #44
    make form reset-able
    add filter_active class to any input with a value
    add support for sorted styles on tbody cells
    add support for {} and ?{plural} bits in getFormat()
    
    and set cell values as HTML rather than text
    make schedule column collapsible
    
    Now any column can be made collapsible by adding the "collapsible" class
    to its header. The state of collapsed headers isn't saved in the URL
    yet, but could be.
    clean up some whitespace
    make schedule column collapsible
    
    Now any column can be made collapsible by adding the "collapsible" class
    to its header. The state of collapsed headers isn't saved in the URL
    yet, but could be.
    clean up some whitespace
    remove debouncing of 'loading' form class
    sortable table headers
    move main script to index.js
    add submit button id, fix error form class
    no placeholders
    remove permalink
    add wage histogram
    
    We have a wage histogram, and I think it looks pretty nice.
    add loading indicator
    add loading state to price chart and table
    switch business size to a <select> input
    query string -> checkbox input
    add small business checkbox
    fix #26
    fix #23
    don't add ?format=csv to export link href, per #21
    added backend guts for csv export;
    change CSV export URI to /api/rates
    use HS and AA for edu values
    switch Associates and High School edu options
    Associates before High School, right?
    add HS and Assoc. education options
    add section titles
    don't show the results table until results are loaded
    style refactor with Skeleton
    add export CSV link
    add basic autocomplete UI for labor category
    update results table columns, size them better
    adjust column widths, fix td classes
    move row count to table caption, clean up
    hide hourly wage graph, don't sort results
    add outer div.container, spec in sass
    always use 2-decimal precision
    fix vendor and price columns
    use the columns from the wireframe
    add results table
    add hourly wage stats / min. experience chart
    add a plaecholder for hourly wage stats
    add site field options, comment out schedule
    use a better name for the graph selection
    clean up before bailing on errors
    hush
    add setFormData(), report errors
    s/worksite/site
    first stab prototype
    basic templates
    Factor out histogram-to-img.js.
    remove unused constants
    remove logging statements and add new validator to serializers
    get vendor search UI acting as expected
    update frontend code to refernce query by instead of search type for consistency with API
    basic plumbing to set up contract vendor UI
    add action/reducer/logic for toggling exact match
    remove match phrase option from ui and update tests
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Factor out schedule-metadata.js.
    Make schedules be pulled from api, omg i hate this
    amend front end tests
    rm API_HOST, WHITELISTED_IPS, and assoc code
    specify a max length for labor category query
    Ensure sort deserializer validates key, add tests.
    Add <ContractYear> JSX component.
    Get rid of redundant get_schedules template tag.
    Add TODOs.
    Add <ExportData> JSX component.
    Add query_type to redux store.
    Add sort to redux store, decoupling table from form and submit.
    Migrate price highlights to <Highlights> component.
    Pass proposedPrice into updateHistogram as an arg.
    Add /api/rates request info to redux store.
    Add site, business size, schedule to redux store.
    Add min/max experience to redux store.
    Add education to redux store.
    eslint
    remove unused constants
    remove logging statements and add new validator to serializers
    add query string param for search type
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Factor out schedule-metadata.js.
    truncate q param in deserialization
    move truncation logic to reducer; add simple test
    specify a max length for labor category query
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Ensure sort deserializer validates key, add tests.
    Add some docs to history.js, rates-request.js, serialization.js.
    Split up store-form-synchronizer into separate modules.
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    add back somewhat custom parseQueryString method
    use querystring module in place of custom functions
    Sync page <title> to name of search. Fixes #1315.
    mv getLastCommaSeparatedTerm to utils; add labor-category tests
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Format proposed price w/ cents properly.
    start test for Highlights; add d3-format package
    Get rid of unneeded code/comments.
    Add tests for parseQuery/joinQuery.
    Set .filter_active on all relevant form fields.
    Add <LaborCategory> component.
    Make education level dropdown accessible.
    Make results table headers accessible.
    Get rid of unused getFormat() function.
    Add price column.
    Add <ExportData> JSX component.
    Add <EducationLevel> JSX component.
    Implement improved redux middelware-based pushstate/popstate.
    Generate /rates/ params from redux store, not form.
    (Mostly) Reactify 'proposed price' widget.
    Migrate price highlights to <Highlights> component.
    Encapsulate table.js a bit better.
    Factor out a table.js from explorer.js.
    Factor out a util.js from explorer.js.
    move inline schedule selection code from #2051 to here
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Disable dumb eslint rules.
    Add SlideyPanel. Fixes #1227.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Add <Site> JSX component.
    Formatting
    formatting
    UI Changes
    pull proposed price back out into its own main-level component to make redux happy
    Eslint got mad
    pull hourly rate data header out and combine with description
    Quick crack at restyling the search description
    Repositions and begins restyling of proposed price tool
    Fixes button spacing
    Shifts footnote *back* cuz better safe than sorry
    
    Felt like too big of a shift to do, given lack of time to test.
    Shifts rates footnote to filter column & shrinks a bit
    fix graph overflowing dropdown menu
    remove old css
    add back reset button
    eslint appeasement
    Selector visual adjs, header text change
    fiddly bits
    get the dropdown reflecting the name of the current schedule
    make schedule items into radio buttons
    move inline schedule selection code from #2051 to here
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Indentation adj (circle ci-roll)
    Adds header, spacing adjs
    Changes "clear search" to "reset", widens field
    Changes clear btn to secondary style
    move the filters up
    remove card styles and replace with custom
    Replaces upload prev btns with secondary style
    Emit custom events to DAP and our GA.
    finish LoadableWrapper and add tests
    
    Also document the webpack-bundle-analyzer workflow for visualizing the data explorer bundles.
    initial setup of loadable filters
    rejigger classes in templates
    Track 'download graph' clicks. Fixes #946.
    fix button styles and menu poisiton
    use prop-types instead of React.PropTypes
    
    React.PropTypes is deprecated in favor of the standalone prop-types package.
    I used react-codemode's https://github.com/reactjs/react-codemod#react-proptypes-to-prop-types transform to automatically update our code.
    update buttons to use uswds
    Sync page <title> to name of search. Fixes #1315.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    get rid of id="results-actions four columns"
    Make download-buttons row layout consistent w/ develop branch.
    Use twelve column layout for top search fields.
    fix(eslint): rm extra newline
    Factor out <App> component.
    eslint and flake8
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Demotes alert bold messages from h3 to h4
    finish LoadableWrapper and add tests
    
    Also document the webpack-bundle-analyzer workflow for visualizing the data explorer bundles.
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    use prop-types instead of React.PropTypes
    
    React.PropTypes is deprecated in favor of the standalone prop-types package.
    I used react-codemode's https://github.com/reactjs/react-codemod#react-proptypes-to-prop-types transform to automatically update our code.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    rm v1.x note
    use react-transition-group@1.x; update slidey-panel tests
    update components
    use prop-types instead of React.PropTypes
    
    React.PropTypes is deprecated in favor of the standalone prop-types package.
    I used react-codemode's https://github.com/reactjs/react-codemod#react-proptypes-to-prop-types transform to automatically update our code.
    Make SlideyPanel include ReactTransitionGroup, add tests.
    use fake jQuery if real isn't available
    Fix broken tests.
    Add SlideyPanel. Fixes #1227.
    remove unnecessary variable
    fix eslint errors on checkbox code
    reuse existing setQueryType action/reducer to toggle checkbox and querystring
    add action/reducer/logic for toggling exact match
    remove match phrase option from ui and update tests
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    turns out we need 'group'
    normalize markup for radios on data explorer
    use prop-types instead of React.PropTypes
    
    React.PropTypes is deprecated in favor of the standalone prop-types package.
    I used react-codemode's https://github.com/reactjs/react-codemod#react-proptypes-to-prop-types transform to automatically update our code.
    Run aXe-core on data explorer, fix a11y violation.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    tests for QueryType component
    Add <QueryType> JSX component.
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    downcase buttons
    move api base and paths to constants
    amend front end tests
    fix button styles and menu poisiton
    use prop-types instead of React.PropTypes
    
    React.PropTypes is deprecated in favor of the standalone prop-types package.
    I used react-codemode's https://github.com/reactjs/react-codemod#react-proptypes-to-prop-types transform to automatically update our code.
    use querystring module in place of custom functions
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    test ExportData component
    Add <ExportData> JSX component.
    use prop-types instead of React.PropTypes
    
    React.PropTypes is deprecated in favor of the standalone prop-types package.
    I used react-codemode's https://github.com/reactjs/react-codemod#react-proptypes-to-prop-types transform to automatically update our code.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Make results table headers accessible.
    Show/hide tooltip when a child is focused/blurred.
    Bring back tooltips via a new <Tooltip> component.
    little tweaky bits
    disable indent eslint rule
    accidental padding
    make magic number a const
    add dark green stroke
    jsx space fix
    Truncates avg and proposed lines at the base
    Moves x axis labels closer to graph
    Colors axis labels gray
    Kills some ticks
    fix merge conflict with bar gap
    Colors proposed text in gray
    Removes bar strokes, etc
    Restyles average and proposed displays
    Fills bars with green
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    use our colors for the histogram
    Disable dumb eslint rules.
    use prop-types instead of React.PropTypes
    
    React.PropTypes is deprecated in favor of the standalone prop-types package.
    I used react-codemode's https://github.com/reactjs/react-codemod#react-proptypes-to-prop-types transform to automatically update our code.
    use npm modules for d3
    change histogram .label(s) to .chart-label(s)
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Format proposed price w/ cents properly.
    Factor out <App> component.
    (Mostly) Reactify 'proposed price' widget.
    Move histogram into a <Histogram> component.
    Decouple histogram.js from global selectors.
    Migrate price highlights to <Highlights> component.
    Pass proposedPrice into updateHistogram as an arg.
    Factor out global CSS selectors in histogram.js.
    factor out histogram.js from explorer.js.
    Style tweaks and flopping list order
    styling tweaks
    eslint
    fix auto 'all schedule' selection bug
    get vendor search UI acting as expected
    basic plumbing to set up contract vendor UI
    more tests
    omg these tests
    eslint
    add blank default schedule to appease jest
    eslint appeasement
    update key for 'all' selection
    add accordion classes to enable interactivity
    split 'legacy' from the schedule name; style radios
    make schedule items into radio buttons
    move inline schedule selection code from #2051 to here
    Contract vehicle labeling (#2067)
    
    * Relabels filter to "Contract vehicle"
    
    * Relabels table column to "Contract vehicle"
    
    * Set a min width to contract vehicle col
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Factor out schedule-metadata.js.
    use prop-types instead of React.PropTypes
    
    React.PropTypes is deprecated in favor of the standalone prop-types package.
    I used react-codemode's https://github.com/reactjs/react-codemod#react-proptypes-to-prop-types transform to automatically update our code.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    test Schedule component
    Set .filter_active on all relevant form fields.
    Add <Site> JSX component.
    Add a <Schedule> JSX component.
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    use prop-types instead of React.PropTypes
    
    React.PropTypes is deprecated in favor of the standalone prop-types package.
    I used react-codemode's https://github.com/reactjs/react-codemod#react-proptypes-to-prop-types transform to automatically update our code.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    test site filter; extract makeSetup fn
    Set .filter_active on all relevant form fields.
    Add <Site> JSX component.
    eslint
    basic tests
    show check on vendor/contract buttons
    basic styling
    get vendor search UI acting as expected
    pull proposed price back out into its own main-level component to make redux happy
    Polishes highlights block and proposed
    
    Likely not ideal method. #helpwanted
    Repositions and begins restyling of proposed price tool
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    use prop-types instead of React.PropTypes
    
    React.PropTypes is deprecated in favor of the standalone prop-types package.
    I used react-codemode's https://github.com/reactjs/react-codemod#react-proptypes-to-prop-types transform to automatically update our code.
    Added a very simple Enzyme-based test suite for data explorer.
    Move JSX components into a components/ dir.
    Migrate price highlights to <Highlights> component.
    pull proposed price back out into its own main-level component to make redux happy
    Styles proposed price tool
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    remove sr-only class in favor of WDS built-in class; update Jest snapshots
    use prop-types instead of React.PropTypes
    
    React.PropTypes is deprecated in favor of the standalone prop-types package.
    I used react-codemode's https://github.com/reactjs/react-codemod#react-proptypes-to-prop-types transform to automatically update our code.
    change go button to type='button'
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Make 'Go' button a no-op.
    test ProposedPrice component
    Use form__inline class on proposed price field.
    Replace props.dispatch() calls w/ mapDispatchToProps usage.
    Give proposed price field a proper label. Fixes #547.
    (Mostly) Reactify 'proposed price' widget.
    Eslint got mad
    Re-adds a line about a joiner!
    inline rendering of labels for greater clarity
    Further styles search description
    some bugfixes
    probably should be a p tag
    conditional label for number of results
    pull hourly rate data header out and combine with description
    Moves "hourly data" to description and begins styling
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Factor out schedule-metadata.js.
    use prop-types instead of React.PropTypes
    
    React.PropTypes is deprecated in favor of the standalone prop-types package.
    I used react-codemode's https://github.com/reactjs/react-codemod#react-proptypes-to-prop-types transform to automatically update our code.
    Sync page <title> to name of search. Fixes #1315.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Fix dangling comma in labor category description (#1237)
    Remove TODO about filters on page load.
    test Description and DescriptionFilter (previously Filter)
    Convert <a> in description to <b>. Fixes #1094.
    Move JSX components into a components/ dir.
    Get rid of unneeded id='description'
    Factor out a <Description> JSX component.
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    remove sr-only class in favor of WDS built-in class; update Jest snapshots
    use prop-types instead of React.PropTypes
    
    React.PropTypes is deprecated in favor of the standalone prop-types package.
    I used react-codemode's https://github.com/reactjs/react-codemod#react-proptypes-to-prop-types transform to automatically update our code.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Make <LoadingIndicator> accessible.
    test LoadingIndicator component
    Add <LoadingIndicator> component.
    use prop-types instead of React.PropTypes
    
    React.PropTypes is deprecated in favor of the standalone prop-types package.
    I used react-codemode's https://github.com/reactjs/react-codemod#react-proptypes-to-prop-types transform to automatically update our code.
    Sync page <title> to name of search. Fixes #1315.
    eslint
    show check on vendor/contract buttons
    basic styling
    add contract search button
    get vendor search UI acting as expected
    bump h3 back out
    Indentations proffered in hopes of eslint appeasal
    Label edits
    Style tweaks and flopping list order
     always show labor category descriptor in search dropdown
    update tests
    styling tweaks
    change labelling
    eslint
    basic tests
    fix auto 'all schedule' selection bug
    toggle labor category modifier
    basic styling
    add contract search button
    get vendor search UI acting as expected
    basic plumbing to set up contract vendor UI
    revert changes pushed to wrong branch
    wip filter abstraction
    wip filter abstraction
    abstract button text
    eslint appeasement
    update tests for schedule selection
    add function to ignore double 'click' from label/input'
    back out documentclick
    wip auto-collapse, ripping out the WDS accordion code
    fiddly bits
    add accordion classes to enable interactivity
    get the dropdown reflecting the name of the current schedule
    for the love of all that's holy
    update tests again
    update tests
    add back correct input class
    change placeholder text on search type change
    move inline schedule selection code from #2051 to here
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    remove sr-only class in favor of WDS built-in class; update Jest snapshots
    use prop-types instead of React.PropTypes
    
    React.PropTypes is deprecated in favor of the standalone prop-types package.
    I used react-codemode's https://github.com/reactjs/react-codemod#react-proptypes-to-prop-types transform to automatically update our code.
    specify a max length for labor category query
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Use twelve column layout for top search fields.
    Set .filter_active on all relevant form fields.
    Fix broken selenium tests, autocomplete bugs.
    Add <LaborCategory> component.
    use prop-types instead of React.PropTypes
    
    React.PropTypes is deprecated in favor of the standalone prop-types package.
    I used react-codemode's https://github.com/reactjs/react-codemod#react-proptypes-to-prop-types transform to automatically update our code.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    test Description and DescriptionFilter (previously Filter)
    Drops in maybe-better tool tip content
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    remove sr-only class in favor of WDS built-in class; update Jest snapshots
    use prop-types instead of React.PropTypes
    
    React.PropTypes is deprecated in favor of the standalone prop-types package.
    I used react-codemode's https://github.com/reactjs/react-codemod#react-proptypes-to-prop-types transform to automatically update our code.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    test contract-year component
    Make explainer link in <ContractYear> accessible. Fixes #421.
    Refactor <ContractYear> to be more DRY.
    Add <ContractYear> JSX component.
    for some reason, jsx-a11y-label-has-associated-control needs default config supplied
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    remove sr-only class in favor of WDS built-in class; update Jest snapshots
    update components
    use prop-types instead of React.PropTypes
    
    React.PropTypes is deprecated in favor of the standalone prop-types package.
    I used react-codemode's https://github.com/reactjs/react-codemod#react-proptypes-to-prop-types transform to automatically update our code.
    customize experience slider styling
    Switch to react-based slider
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    tests for Experience component
    Set .filter_active on all relevant form fields.
    Replace props.dispatch() calls w/ mapDispatchToProps usage.
    Experience <select> fields update as slider slides.
    Remove spurious console.log().
    Create an <Experience> JSX component.
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    remove sr-only class in favor of WDS built-in class; update Jest snapshots
    use prop-types instead of React.PropTypes
    
    React.PropTypes is deprecated in favor of the standalone prop-types package.
    I used react-codemode's https://github.com/reactjs/react-codemod#react-proptypes-to-prop-types transform to automatically update our code.
    Remove redundant display:none from multiselect styling.
    Make SlideyPanel include ReactTransitionGroup, add tests.
    Add SlideyPanel. Fixes #1227.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    test EducationLevel component
    Set .filter_active on all relevant form fields.
    Replace props.dispatch() calls w/ mapDispatchToProps usage.
    Make education level dropdown accessible.
    Add <EducationLevel> JSX component.
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    use prop-types instead of React.PropTypes
    
    React.PropTypes is deprecated in favor of the standalone prop-types package.
    I used react-codemode's https://github.com/reactjs/react-codemod#react-proptypes-to-prop-types transform to automatically update our code.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    test business-size filter component
    Set .filter_active on all relevant form fields.
    Add <BusinessSize> JSX component.
    move inline schedule selection code from #2051 to here
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    finish LoadableWrapper and add tests
    
    Also document the webpack-bundle-analyzer workflow for visualizing the data explorer bundles.
    initial setup of loadable filters
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    finish LoadableWrapper and add tests
    
    Also document the webpack-bundle-analyzer workflow for visualizing the data explorer bundles.
    remove contract column and add contract # to vendor column instead
    Contract vehicle labeling (#2067)
    
    * Relabels filter to "Contract vehicle"
    
    * Relabels table column to "Contract vehicle"
    
    * Set a min width to contract vehicle col
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Shifts price column leftward
    BEM-izes results return link
    Right aligns "return to top" link
    
    Closes #1763
    
    Also made it bold. Would like to add a little space over the top of it, but having trouble (because tables?) @hbillings
    use prop-types instead of React.PropTypes
    
    React.PropTypes is deprecated in favor of the standalone prop-types package.
    I used react-codemode's https://github.com/reactjs/react-codemod#react-proptypes-to-prop-types transform to automatically update our code.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Filter out rows that have no price information.
    Education column shows 'N/A' if needed.
    Decouple sortable-column.jsx from redux.
    Add vendor, schedule columns; remove unneeded code.
    Add contract number column.
    Add price column.
    Add experience column.
    Refactor column generation a bit.
    Added education column.
    Make labor category column sortable.
    Put <ResultsTable>-related classes in their own directory.
    WIP (broken build) - Begin <ResultsTable> JSX component.
    use prop-types instead of React.PropTypes
    
    React.PropTypes is deprecated in favor of the standalone prop-types package.
    I used react-codemode's https://github.com/reactjs/react-codemod#react-proptypes-to-prop-types transform to automatically update our code.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Put <ResultsTable>-related classes in their own directory.
    Move JSX components into a components/ dir.
    Make redux store of shape { exclude: [] } via combineReducers().
    Split store.js into actions.js, reducers.js, sync-store-to-form.js.
    Use mapDispatchToProps to set onClick handler.
    Use a Redux store to drive props to <RestoreExcluded>.
    Factor out a RestoreExcluded JSX component.
    update eslint rules
    remove contract column and add contract # to vendor column instead
    add number class to current price
    use prop-types instead of React.PropTypes
    
    React.PropTypes is deprecated in favor of the standalone prop-types package.
    I used react-codemode's https://github.com/reactjs/react-codemod#react-proptypes-to-prop-types transform to automatically update our code.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Simplify <EducationColumn.DataCell> tests.
    Split sortable-column.jsx into multiple files.
    bit of styling
    remove contract column and add contract # to vendor column instead
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    1 camel case change
    Mods to svg code to please circle ci
    Blue-ifies doc icon
    Swaps in new doc icon
    Begins to improve table header styles
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Add contract number column.
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Begins to improve table header styles
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Add experience column.
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    use prop-types instead of React.PropTypes
    
    React.PropTypes is deprecated in favor of the standalone prop-types package.
    I used react-codemode's https://github.com/reactjs/react-codemod#react-proptypes-to-prop-types transform to automatically update our code.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Split sortable-column.jsx into multiple files.
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Attempting fix to resolve test error
    Makes exclusion hover more accurate
    use prop-types instead of React.PropTypes
    
    React.PropTypes is deprecated in favor of the standalone prop-types package.
    I used react-codemode's https://github.com/reactjs/react-codemod#react-proptypes-to-prop-types transform to automatically update our code.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Replace props.dispatch() calls w/ mapDispatchToProps usage.
    Show/hide tooltip when a child is focused/blurred.
    Bring back tooltips via a new <Tooltip> component.
    Put <ResultsTable>-related classes in their own directory.
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Adjusts position and color of Restore "link"
    Revert "Aligns table contents to top"
    
    This reverts commit 571364c5f571ef609341d1ed12e74574d59f1c7b.
    Aligns table contents to top
    
    Also adjusts Restore button position and let's it inherit site link color, and changes "Labor Category" to sentence case
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Set tooltip/title for table headings.
    Use classNames in sortable-column.jsx.
    Attempt to use higher-order components for sortable cells.
    Make labor category column sortable.
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Filter out rows that have no price information.
    Add price column.
    Split sortable-column.jsx into multiple files.
    More refactoring of sortable-column.jsx.
    Make education level dropdown accessible.
    Make results table headers accessible.
    Bring back tooltips via a new <Tooltip> component.
    Simplify sortable-column.jsx more.
    Decouple sortable-column.jsx from redux.
    Refactor sortable-column.jsx a bit.
    Add vendor, schedule columns; remove unneeded code.
    Set tooltip/title for table headings.
    Use classNames in sortable-column.jsx.
    Attempt to use higher-order components for sortable cells.
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Begins to improve table header styles
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Education column shows 'N/A' if needed.
    Set tooltip/title for table headings.
    Use classNames in sortable-column.jsx.
    Attempt to use higher-order components for sortable cells.
    Make labor category column sortable.
    fix tooltipster tests
    
    shallow rendering resulted in an undefined `ref` within the component, so only do `mount`ed rendering for the test
    pacify eslint
    shouldn't have had that wip tooltip bit in there
    wip tooltip test
    add jest env to tests/.eslintrc; rm globals
    minimal test for Tooltip component
    eslint
    basic tests
    eslint appeasement
    add very basic test for search dropdown
    add jest env to tests/.eslintrc; rm globals
    Fix mutation bug in makeSetup().
    test business-size filter component
    use shallow instead of render; use exists()
    test site filter; extract makeSetup fn
    finish LoadableWrapper and add tests
    
    Also document the webpack-bundle-analyzer workflow for visualizing the data explorer bundles.
    doggone trailing comma
    remove console.log
    don't set the wrapper state in the test
    add test for education-level toggle menu
    Fix broken tests.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    add jest env to tests/.eslintrc; rm globals
    finish up incomplete EducationLevel test method
    test EducationLevel component
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    move api base and paths to constants
    test rates-request middleware
    eslint
    basic tests
    eslint
    basic tests
    fix tests
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    use react-transition-group@1.x; update slidey-panel tests
    Make SlideyPanel include ReactTransitionGroup, add tests.
    Factor out schedule-metadata.js.
    Make schedules be pulled from api, omg i hate this
    add jest setup; update snaps; upgrade rc-slider deps
    add back somewhat custom parseQueryString method
    mv getLastCommaSeparatedTerm to utils; add labor-category tests
    Format proposed price w/ cents properly.
    add jest env to tests/.eslintrc; rm globals
    test Description and DescriptionFilter (previously Filter)
    add jest env to tests/.eslintrc; rm globals
    test EducationLevel component
    test contract-year component
    pull proposed price back out into its own main-level component to make redux happy
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    add jest env to tests/.eslintrc; rm globals
    test site filter; extract makeSetup fn
    add snapshot test
    move Highlights assertions to new jest test
    start test for Highlights; add d3-format package
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    fix TitleTagSynchonizer tests
    Sync page <title> to name of search. Fixes #1315.
    reduce q correctly; adjust associated test
    move truncation logic to reducer; add simple test
    add jest env to tests/.eslintrc; rm globals
    use shallow instead of render; use exists()
    test site filter; extract makeSetup fn
    mv getLastCommaSeparatedTerm to utils; add labor-category tests
    Filter out rows that have no price information.
    add jest env to tests/.eslintrc; rm globals
    Add tests for <ExperienceColumn.DataCell>.
    Add tests for <EducationColumn.DataCell>.
    Fix mutation bug in makeSetup().
    use shallow instead of render; use exists()
    test site filter; extract makeSetup fn
    add jest env to tests/.eslintrc; rm globals
    test ProposedPrice component
    add jest env to tests/.eslintrc; rm globals
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    move api base and paths to constants
    amend front end tests
    rm API_HOST, WHITELISTED_IPS, and assoc code
    Use sinon for XHR mocking, maybe fix travis.
    check statusCode >= 400 for error
    callback with error on non-200 response
    get rid of hourglass.js; use module for ajax requests; tests
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Switch to react-based slider
    add jest env to tests/.eslintrc; rm globals
    tests for Experience component
    remove sr-only class in favor of WDS built-in class; update Jest snapshots
    add jest env to tests/.eslintrc; rm globals
    adjust LoadingIndicator tests
    test LoadingIndicator component
    move api base and paths to constants
    amend front end tests
    add jest env to tests/.eslintrc; rm globals
    test ExportData component
    update tests
    remove match phrase option from ui and update tests
    add jest env to tests/.eslintrc; rm globals
    use shallow instead of render; use exists()
    test site filter; extract makeSetup fn
    tests for QueryType component
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Filter out rows that have no price information.
    add jest env to tests/.eslintrc; rm globals
    Add tests for <ExperienceColumn.DataCell>.
    Simplify <EducationColumn.DataCell> tests.
    Add tests for <EducationColumn.DataCell>.
    add jest env to tests/.eslintrc; rm globals
    add actions.test.js.
    rm now unnecessary front end test
    modify processResults to just take result
    extract result processing logic and test it
    eslint
    remove match phrase option from ui and update tests
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    test rates-request middleware
    coverage and tests for serialization.js
    use toHaveLength
    truncate q param in deserialization
    move truncation logic to reducer; add simple test
    specify a max length for labor category query
    add jest env to tests/.eslintrc; rm globals
    Ensure sort deserializer validates key, add tests.
    add jest env to tests/.eslintrc; rm globals
    test Description and DescriptionFilter (previously Filter)
    fix schedule tests
    eslint appeasement
    update tests for schedule selection
    Factor out schedule-metadata.js.
    add jest env to tests/.eslintrc; rm globals
    test Schedule component
    remove sr-only class in favor of WDS built-in class; update Jest snapshots
    add jest setup; update snaps; upgrade rc-slider deps
    combine jest and python coverage reporting
    
    - upgrade jest and snapshots
    - add coverage/ to ignore-dotfiles
    - add jest config to package.json
    update snapshot to include className
    Switch to react-based slider
    update snapshot to reflect fix in enzyme-to-json
    
    ref https://github.com/adriantoine/enzyme-to-json/pull/45
    tests for Experience component
    remove sr-only class in favor of WDS built-in class; update Jest snapshots
    combine jest and python coverage reporting
    
    - upgrade jest and snapshots
    - add coverage/ to ignore-dotfiles
    - add jest config to package.json
    adjust LoadingIndicator tests
    test LoadingIndicator component
    update snapshot
    amend front end tests
    update jest snapshot to reflect new button classes
    combine jest and python coverage reporting
    
    - upgrade jest and snapshots
    - add coverage/ to ignore-dotfiles
    - add jest config to package.json
    test ExportData component
    update snapshot
    Label edits
    And making a test match
    Style tweaks and flopping list order
    styling tweaks
    fix schedule tests
    basic tests
    update tests again
    fix schedule tests
    update snapshots
    add jest setup; update snaps; upgrade rc-slider deps
    combine jest and python coverage reporting
    
    - upgrade jest and snapshots
    - add coverage/ to ignore-dotfiles
    - add jest config to package.json
    use shallow instead of render; use exists()
    test site filter; extract makeSetup fn
    Updated jest snapshots
    Drops in maybe-better tool tip content
    remove sr-only class in favor of WDS built-in class; update Jest snapshots
    combine jest and python coverage reporting
    
    - upgrade jest and snapshots
    - add coverage/ to ignore-dotfiles
    - add jest config to package.json
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    test contract-year component
    update tests
    remove match phrase option from ui and update tests
    update snap again
    update tests
    combine jest and python coverage reporting
    
    - upgrade jest and snapshots
    - add coverage/ to ignore-dotfiles
    - add jest config to package.json
    Fix snapshot test.
    use shallow instead of render; use exists()
    tests for QueryType component
    Style tweaks and flopping list order
    update tests
    fix schedule tests
    more tests
    omg these tests
    update tests for schedule selection
    Contract vehicle labeling (#2067)
    
    * Relabels filter to "Contract vehicle"
    
    * Relabels table column to "Contract vehicle"
    
    * Set a min width to contract vehicle col
    add jest setup; update snaps; upgrade rc-slider deps
    combine jest and python coverage reporting
    
    - upgrade jest and snapshots
    - add coverage/ to ignore-dotfiles
    - add jest config to package.json
    test Schedule component
    basic tests
    update tests again
    fix schedule tests
    update snapshots
    Demotes alert bold messages from h3 to h4
    finish LoadableWrapper and add tests
    
    Also document the webpack-bundle-analyzer workflow for visualizing the data explorer bundles.
    combine jest and python coverage reporting
    
    - upgrade jest and snapshots
    - add coverage/ to ignore-dotfiles
    - add jest config to package.json
    test Description and DescriptionFilter (previously Filter)
    remove sr-only class in favor of WDS built-in class; update Jest snapshots
    add jest setup; update snaps; upgrade rc-slider deps
    combine jest and python coverage reporting
    
    - upgrade jest and snapshots
    - add coverage/ to ignore-dotfiles
    - add jest config to package.json
    Remove redundant display:none from multiselect styling.
    Make SlideyPanel include ReactTransitionGroup, add tests.
    use fake jQuery if real isn't available
    Fix broken tests.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    test EducationLevel component
    combine jest and python coverage reporting
    
    - upgrade jest and snapshots
    - add coverage/ to ignore-dotfiles
    - add jest config to package.json
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    pull proposed price back out into its own main-level component to make redux happy
    combine jest and python coverage reporting
    
    - upgrade jest and snapshots
    - add coverage/ to ignore-dotfiles
    - add jest config to package.json
    use shallow instead of render; use exists()
    add snapshot test
    pull proposed price back out into its own main-level component to make redux happy
    Updates snapshot
    remove sr-only class in favor of WDS built-in class; update Jest snapshots
    change go button to type='button'
    combine jest and python coverage reporting
    
    - upgrade jest and snapshots
    - add coverage/ to ignore-dotfiles
    - add jest config to package.json
    Ack, fix broken snapshot test.
    test ProposedPrice component
    update tests for schedule selection
    remove sr-only class in favor of WDS built-in class; update Jest snapshots
    combine jest and python coverage reporting
    
    - upgrade jest and snapshots
    - add coverage/ to ignore-dotfiles
    - add jest config to package.json
    mv getLastCommaSeparatedTerm to utils; add labor-category tests
    update tests again
    fix schedule tests
    update snapshots
    add jest setup; update snaps; upgrade rc-slider deps
    combine jest and python coverage reporting
    
    - upgrade jest and snapshots
    - add coverage/ to ignore-dotfiles
    - add jest config to package.json
    test business-size filter component
    pull proposed price back out into its own main-level component to make redux happy
    Updates snapshot
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    add jest setup; update snaps; upgrade rc-slider deps
    combine jest and python coverage reporting
    
    - upgrade jest and snapshots
    - add coverage/ to ignore-dotfiles
    - add jest config to package.json
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    test Description and DescriptionFilter (previously Filter)
    basic tests
    fix tooltipster tests
    
    shallow rendering resulted in an undefined `ref` within the component, so only do `mount`ed rendering for the test
    combine jest and python coverage reporting
    
    - upgrade jest and snapshots
    - add coverage/ to ignore-dotfiles
    - add jest config to package.json
    minimal test for Tooltip component
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Use ponyfill in force mode.
    Emit custom events to DAP and our GA.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    make eslint ensure import statements are valid.
    Report expander label in GA.
    Track expand/collapse of expandable areas in GA.
    rename <collapsible-area> to <expandable-area>
    Add comment about prog enh. on IE6-8.
    Add <collapsible-area> tests for click and keyup events.
    Add some <collapsible-area> tests.
    Add <collapsible-area> web component.
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Use ponyfill in force mode.
    Emit virtual pageviews to DAP and our GA.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Fix #1006 (<select> and <textarea> in ajaxform).
    make eslint ensure import statements are valid.
    Add support for radio and checkbox inputs to ajax-form (#1001)
    
    * add support for radio and checkbox inputs, closes #570
    * add uswds-style checkbox widget
    * add note and throw error on select or textarea elements
    Additional improvements to Google Analytics (#869)
    
    * set custom dimensions to empty string if needed.
    * Move GA dimension-setting after ga('create').
    * Trigger GA pageview on ajaxform html injection.
    * Get rid of the user ID GA custom dimension.
    Add explanatory comment.
    Fix ajaxform interop w/ back-forward cache.
    Support multiple submit buttons in ajaxform.
    Document web components.
    Mention, link to web components in style guide.
    import data-capture modules from test suite. Fixes #541.
    Refactor functions to methods in ajaxform.
    Convert all createdCallbacks to attachedCallbacks.
    Factor out a isForciblyDegraded() function.
    decouple ajaxform tests from .data('ajaxform').
    Add ajaxform test for normal file inputs.
    Make tests work on IE11 and Phantom.
    Fix tests for ajaxform.
    Factor out feature-detection.js.
    Make ajaxform support standard file inputs.
    Get rid of submit btn req. in ajaxform
    Add <form is="ajax-form">.
    Add <upload-widget> and <input is="upload-input">.
    Friendlier ajax error copy. Fixes #456.
    Fix typo in ajaxform.js.
    Add comments, tweak docs a bit.
    Add a .submit-in-progress class.
    Add ajaxform assertions.
    Rename step1-form to ajaxform.
    Finish up tests for step 1.
    Add form_html response test.
    Add a few tests for step_1.
    Manually construct FormData.
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    disable/enable submit button based on upload file validity (#470)
    
    * disable/enable submit button based on file input events
    Revert "reload step 1 on form validation error"
    
    This reverts commit 7f9d2d4574e6f5eafc00bba40c2d35bf35f418a4.
    reload step 1 on form validation error
    Appease eslint for now.
    Add a comment re: delete/appending file info in formdata.
    Implement most of step 1.
    eslint and flake8
    add class to form we're targeting for validation, and fix tests
    appease eslint
    wip tests for checkInputs
    tests for parseInput
    more wip tests
    more wip tests
    gah, notetaking cruft
    wip tests
    wip tests"
    some clarifications
    combine error message functions
    don't swallow default error messages
    pre-optimization-everything-works-commit
    get validation for formgroups working
    refactor to check validity on submit
    fn ternary operators, how do they work
    don't highlight all the date fields
    grab label if no legend
    only insert error message once per set of formfields
    basic wip functionality
    basic wip functionality
    Use ponyfill in force mode.
    create new common js bundle and put usermenu there
    use plain JS; make new admin bundle; include usermenu js
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    remove jquery-tablesort dep and our customization
    Modify price list details (#1077)
    Move DAP hacks to dap-hacks.js, require() in both bundles.
    Add Modal Dialog for Canceling (#918)
    
    * add modal dialogs with a11y-dialog library
    * use modal dialogs for all Cancel links in Price List Upload and Region 10 Bulk Upload flows
    * handle_cancel on step_3_errors view so modal can POST cancel
    Smoothly scroll between in-page links.
    add <uswds-date> custom element.
    rename <collapsible-area> to <expandable-area>
    Add <collapsible-area> web component.
    Add <alerts-widget> and use it.
    Rename step1-form to ajaxform.
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    extract tablesort js to own file and es6ify it
    add jquery-tablesort
    rm price_list_alert.js since it is not currently used
    start adding collapse/expand classes
    Implement most of step 1.
    just use require() to include polyfill
    Move upload.js to data-capture and ES2015-ify it.
    JavaScript pipeline for new data-capture scripts (#391)
    
    * change to airbnb-base config, eslintignore all vendor folders
    * add gulp task for building babel+browserify'd data-capture script
    * add `gulp clean` task for cleaning built folders
    * some relatively small gulpfile modifications/cleanups
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Add Modal Dialog for Canceling (#918)
    
    * add modal dialogs with a11y-dialog library
    * use modal dialogs for all Cancel links in Price List Upload and Region 10 Bulk Upload flows
    * handle_cancel on step_3_errors view so modal can POST cancel
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Modify price list details (#1077)
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    make eslint ensure import statements are valid.
    use JSDoc-style @license directive in custom-event.js."
    Use MDN CustomEvent polyfill and credit its contributors.
    UploadInput now uses CustomEvents instead of jQuery events.
    Make tests work on IE11 and Phantom.
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Use ponyfill in force mode.
    add tests for date.js.
    add <uswds-date> custom element.
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Use ponyfill in force mode.
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    make eslint ensure import statements are valid.
    Move finishInitialization() to appease eslint.
    Support fake filenames in upload widget.
    Fix problems w/ upload widget drag/drop indication. Fixes #919.
    Decouple upload widget from html.js / html.no-js.
    Fix #710, <upload-widget> works w/ funky upgrade timings.
    Document web components.
    Mention, link to web components in style guide.
    Degrade upload widget if not in ajaxform. Fixes #628.
    Refactor funcs into methods in upload.js.
    Convert all createdCallbacks to attachedCallbacks.
    Use HTML5 form validation on upgraded upload widgets.
    UploadInput now uses CustomEvents instead of jQuery events.
    move no-underscore-dangle into .eslintrc.
    Factor out a isForciblyDegraded() function.
    Decouple UploadInput from UploadWidget a bit.
    decouple UploadWidget from UploadInput a bit more.
    Move isFileValid out of closure.
    Decouple ajaxform tests from .data('upload').
    Make tests work on IE11 and Phantom.
    Fix upload_tests.js.
    Factor out feature-detection.js.
    Make ajaxform support standard file inputs.
    dynamically add ' or drag and drop here' text.
    Add <upload-widget> and <input is="upload-input">.
    Manually construct FormData.
    Fix #520 by checking for FormData.prototype.delete().
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    change for..in to for..of
    show simple message on invalid file type
    rename fileIsValid to isFileValid
    change for..of to normal for-loop
    validate dropped file based on 'accept' attribute
    Move upload.js to data-capture and ES2015-ify it.
    updates to either ignore new rules on certain old files or make the code compatible with new rules
    Disable dumb eslint rules.
    Fix lint issue in smooth-scroll.js. Fixes #1327. (#1330)
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Smoothly scroll to location hash on new page load.
    Blerg, fix bug.
    Assign each page visit its own unique visit id.
    Store scrollTop in history.state instead of sessionStorage.
    Add tests for activateManualScrollRestoration().
    Remember last known scroll position. Fixes #921.
    Hyperlink 'try it again' to upload form. Fixes #880.
    use IS_SUPPORTED in check to activate
    don't queue scrolling animations.
    Add smooth-scroll_tests.js.
    Smoothly scroll between in-page links.
    make eslint ensure import statements are valid.
    Make AlertsWidget extend HTMLElement. Fixes #967.
    Add tests for AlertsWidget.
    Add styleguide entry for <alerts-widget>.
    Add <alerts-widget> and use it.
    Add link to Modernizr license.
    Factor out a isForciblyDegraded() function.
    Factor out feature-detection.js.
    Email "primary-alt" swap-outs
    Updates colors and narrows the action button
    Make email CSS match mockup.
    Fix button styling in gmail.
    Add CALC logo to email, make cta wide.
    Make email look more like mockup.
    Add email.scss.
    stylesheet changes
    Formatting
    UI Changes
    Minor alignments &c
    Adjusts highlights block style
    Adjusts padding on filter block
    Adjusts vertical spacing
    Polishes search description formatting
    Further styles search description
    Moves "hourly data" to description and begins styling
    Adds a bit more margin above highlights
    Quick crack at restyling the search description
    Polishes highlights block and proposed
    
    Likely not ideal method. #helpwanted
    Styles proposed price tool
    Reformats price block type
    Repositions and begins restyling of proposed price tool
    Shifts footnote *back* cuz better safe than sorry
    
    Felt like too big of a shift to do, given lack of time to test.
    Visually fuses the 2 results cards, for simplicity
    Trims the explorer card margins, for compactness
    Removes bottom margin from help text
    Removes bottom margin from filter-container
    Removes outlines from price block
    
    So they look less button-y. Because they aren't buttons.
    Shifts rates footnote to filter column & shrinks a bit
    Removes top margin from filter-container
    Removes top margin from search tally altogether
    Reduces spacing between results summary and Hourly rate data
    Fix for the hover jiggle
    
    Line height was causing rows with only two lines of info to grow taller on hover.
    bit of styling
    remove old css
    Search header vertical spacing alt
    get the dropdown reflecting the name of the current schedule
    some dropdown styling
    move inline schedule selection code from #2051 to here
    Contract vehicle labeling (#2067)
    
    * Relabels filter to "Contract vehicle"
    
    * Relabels table column to "Contract vehicle"
    
    * Set a min width to contract vehicle col
    Tweaks
    Changes contract-link to underline on hover
    Darkens the "years" hover text
    Bumps "years" hover text to next line
    Reduces space which resulted from switch to ul's
    Adjusts radio & checkbox spacing, woo
    display radios horizontally again and remove comment
    normalize markup for radios on data explorer
    Nesting
    Adds header, spacing adjs
    Spaces out radio buttons for a better read
    Fixes color of selected filter options
    add margin at small screen sizes
    fix focus rings
    restore focus states to filters
    Changes "clear search" to "reset", widens field
    2 more blue mappings, not sure where these are applied
    contract year
    spacing/padding tweaks from @tram
    move the filters up
    make margin selector pickier
    more padding
    remove card styles and replace with custom
    Changes all blue "darker"s to "dark"
    Revert "Balance of "primary" swaps"
    
    This reverts commit 1c4d3463a47fcbbf6fe8850b39b5b74a26c29eec.
    Navbar "green"; gray selector highlight
    Balance of "primary" swaps
    Balance of "primary" swaps
    all the documentation
    Darkens site bg to match design
    
    Also added a touch more saturation to `$color-gray-lightest`
    Cleans up variables, adds comments
    More for hero + prelim home card work
    remove old focus styles
    customize experience slider styling
    Switch to react-based slider
    Remove redundant display:none from multiselect styling.
    move truncation logic to reducer; add simple test
    additional filter-block fixes/clean-ups
    increase size, fix margins on contract year radios
    smaller labels for filters. Closes #1158.
    get rid of id="results-actions four columns"
    adjust input width for new font (#1180)
    Revert colors to pre-WDS ones (#1145)
    
    * revert colors
    * tweak alt blues for wcag compat; use them for header text instead of doing opacity
    * bold current tab
    * divider color
    * add back the old color header bg image
    fix reset button styles
    Add experience column.
    get nav structure working
    wip nav
    Add <ExportData> JSX component.
    Move histogram into a <Histogram> component.
    Migrate price highlights to <Highlights> component.
    add default rules for tables; fix spacing on proporosed price box headers
    use border-radius defined in variables.scss
    fix inline forms + buttons
    remove commented-out code
    flexbox for pricing
    fix spacing issues with sidebar
    remove padding from st dev h5s
    fix up proposed price input and education dropdown
    move all hourglass_site/static into frontend
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    change focus color to match Old CALC
    use WDS color variable names
    simplified, abstracted price-list-alert -> alert-error; move to data_capture.scss
    rm missing import
    revert to simple non-expand/collapse price list alert
    start adding collapse/expand classes
    start on markup and styling for price list alert
    include tooltipster and no-ui in their relevant scss files
    remove skeleton's normalize file and copy relevant input/button styles
    refactor index.scss into its components
    js and sass/css pipeline with gulp (#367)
    
    * add gulp for building sass and js with sourcemaps
    * setup container for running gulp during development
    * rm built static files from the repo
    * update README with gulp information
    * modify travis to run gulp build
    * remove ruby sass stuff
    * specify and install node version in travis
    * add new static_source vendor paths to CodeClimate ignore list
    basic color updates for wds
    include no-ui and tooltipster in index
    move colors to variables and simplify color range
    move main and index to SASS
    Applies variables to styleguide.scss colors
    
    Except for those marked for revisiting later.
    Updates styleguide blue references
    Applies sass nesting to styles
    Swaps in variables
    Deletes un-applied .styleguide-toc
    move external page icon and update reference
    move styleguide CSS to Sass and compile it
    remove prism overrides
    Adds "prism over rides" comment
    Adds "prism over rides" comment
    Adds `.` to `styleguide-example` in many a line
    Enough code styling for now!
    Overrides some variables, help needed to finish
    Color section styling
    Beginnings of html structure for colors
    Creates a place for Colors, with rough styles
    Move inline CSS to stylesheet.
    Make top-level styleguide headings sticky.
    Increase padding so list items don't overflow past borders.
    Hyperlink 'try it again' to upload form. Fixes #880.
    Adjust margin-left of styleguide section headers.
    Use slightly less intense highlight color.
    show highlight animation when section of styleguide is navigated to.
    use <kbd> and style it.
    Use CC0 external link SVG.
    Add pop-out link to styleguide example forms.
    Mention, link to web components in style guide.
    Tweak margin-left of heading anchors in styleguide.
    minor adjustment to h3 anchor margin
    Add TOC to style guide.
    Add margin-bottom to .styleguide-example.
    Hopefully appease CodeClimate.
    Move inline styleguide CSS to separate file.
    all the documentation
    update buttons to use uswds
    Add excel table CSS styles.
    move all hourglass_site/static into frontend
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    update paths
    create layout and markup for form button row (#472)
    
    - add it to existing step pages
    - add form-button-row to styleguide
    simplified, abstracted price-list-alert -> alert-error; move to data_capture.scss
    move styleguide CSS to Sass and compile it
    all the documentation
    Color section styling
    document Sass conventions and comment main.scss
    add side nav layout
    update buttons to use uswds
    add wds to main CSS package
    [WIP] starting markup for user dropdown menu
    add label styling for price list status
    add styles to re-show the django debug checkboxes. closes #821
    add neat and override grid variables
    remove skeleton
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    Add Modal Dialog for Canceling (#918)
    
    * add modal dialogs with a11y-dialog library
    * use modal dialogs for all Cancel links in Price List Upload and Region 10 Bulk Upload flows
    * handle_cancel on step_3_errors view so modal can POST cancel
     move header back to original position; add constraint on fieldset width
    add <uswds-date> custom element.
    Rename enable_js to safe_mode.
    use fieldsets and legends for uniform look and behavior
    rename <collapsible-area> to <expandable-area>
    Add <collapsible-area> web component.
    Implement safe mode.
    Add a .submit-in-progress class.
    add reset back to main
    re-add reset to main.scss
    move all hourglass_site/static into frontend
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    gotta actually include alerts to show them
    make alerts at least parallel with other components
    ERHMAHGERD BUTTERNS
    update main
    update paths to partials
    partials should have underscore prefix
    include tooltipster and no-ui in their relevant scss files
    rename static_source/vendor to static_source/libs, fix references to skeleton import, remove css task from gulpfile
    move skeleton to vendor and reimport normalize in main for now
    remove skeleton's normalize file and copy relevant input/button styles
    refactor CSS from main into component files
    Partial implementation of file upload widget.
    Add steps widget to styleguide.
    js and sass/css pipeline with gulp (#367)
    
    * add gulp for building sass and js with sourcemaps
    * setup container for running gulp during development
    * rm built static files from the repo
    * update README with gulp information
    * modify travis to run gulp build
    * remove ruby sass stuff
    * specify and install node version in travis
    * add new static_source vendor paths to CodeClimate ignore list
    Simple explainers for header icons (#296)
    
    * simple explainers for header icons
    * merge develop branch and fix overwritten SASS
    basic color updates for wds
    move colors to variables and simplify color range
    move main and index to SASS
    Add filter and style
    Update to accessible grays
    Add vertical centering
    Style icons
    Add ceiling price icon and adjust size
    Add sr-only content to select and update sr-only class
    Add legend to fieldset and screen reader offscreen class
    skip nav tweaks #153
    Fix format of css so each selector is on 1 line
    Fix site status link color
    Update link and button colors
    h4 tweak
    about page h4 tweak
    adding years label to experience field on hover
    Reduce secondary headline font size
    Update schedule markup
    Up secondary text font size slightly
    bunch of revisions to about page content
    Add a touch more breathing room to main headline
    adding schedule definitions to about page and rearranging filters
    Make logo larger a la Nick's suggestion so it's easier to read
    Tweak header padding
    Remove comment from css
    Style footer text spacing
    Update fonts to Lato
    header tweaks, add descriptive sentence
    Update About button to be more descriptive
    Update header styling
    Update description font size
    Update description class name
    Add secondary description text
    Add search help text
    Remove home link
    Add new logo
    logo and header tweaks
    add viewport meta tag per #86, better padding
    logo, header & footer tweaks
    about page
    new logo, header tweaks
    add (and disable) better button styling
    no more Raleway (sorry @brethauer)
    add USA flag, tweaks
    header background, footer, logos, etc.
    move styles around, split out modules
    banner tweaks
    basic header styles
    move index-specific styles to index.css
    cool it on captions, blue focus rings
    add exclude link styles and row hover background
    prevent errors from getting huge
    add query type styles
    fix formatting
    kill old chart styles
    override some skeleton table styles
    add underline to collapse link, nudge a bit
    remove collapse arrows, lighten up text
    fix #44
    tweak active filter color
    add filter_active class to any input with a value
    ui tweaks
    add sorted style for data cells
    make schedule column collapsible
    
    Now any column can be made collapsible by adding the "collapsible" class
    to its header. The state of collapsed headers isn't saved in the URL
    yet, but could be.
    make schedule column collapsible
    
    Now any column can be made collapsible by adding the "collapsible" class
    to its header. The state of collapsed headers isn't saved in the URL
    yet, but could be.
    sortable table headers
    add wage histogram
    
    We have a wage histogram, and I think it looks pretty nice.
    add loading indicator
    add loading state to price chart and table
    fix average tick alignment
    style refactor with Skeleton
    Header-Admin "primary-alt" overrides
    "primary-alt" swap-outs
    consolidate focus ring styling in utils
    all the documentation
    Add sample users.
    Fixes bg header color, table bottom padding
    Enlarges nav to base font size (16px)
    Adds padding to pull hero callout in from right edge
    Adds padding to force hero header wrap
    
    @hbillings apologies if this is not the optimal method! If so, perhaps we address when we dive into making the site overall more responsive?
    Overwriting inexplicably changed header.scss with dev version
    fix last card styles
    some nav cleanup
    fix content width styles to apply more evenly
    Updates colors, and replaces instances where necc
    Adjs to site admin nav
    Roughs in nav that sticks to card edge
    Resolves conflicts
    Removes uswds buttons.scss
    More for hero + prelim home card work
    Misc style, structure for home hero
    Minor adjs
    fix merge conflict in header
    fix logo and table styles
    update buttons to use uswds
    Specified logo height, to eliminate jump
    
    Previously the logo width was set, but not the height. This caused the
    page to sometimes shift down on load. I deleted the width spec and
    instead defined the height (58px).
    
    The body area of the page still flashes sometimes, briefly showing the
    top of the footer, it seems. Way better than before, tho.
    
    If there was a way to push the footer down a ways by default, that
    might fix it. I’m good with merging this, though!
    Add banner to show non-prod message (#1302)
    rm header log out link
    Header/Button anti aliasing (#1167)
    
    Closes #1165
    More UI bugfixes (#1138)
    
    * add clearfix mixin and add to header row
    * truncate long filenames
    * fix homepage bullet alignment
    * cardify error pages
    * header bullet tweaks
    * Added canvas to 3 icons so all four match (#1144)
    * Recolored icons to #839EA8
    * Bullet sizing etc (#1154)
    * change a couple of ems to rems
    Revert colors to pre-WDS ones (#1145)
    
    * revert colors
    * tweak alt blues for wcag compat; use them for header text instead of doing opacity
    * bold current tab
    * divider color
    * add back the old color header bg image
    adjust header nav padding and add card to logged-out page
    icons on the other side
    unbold email address, adjust padding in bullets, uncaps nav
    move the items to the right
    smallify banner text and remove descriptions
    stack the cards on the header bg
    remove unnecessary padding on nav ul
    update site admin and factor out footer
    get nav structure working
    wip nav
    fix nav tabs positioning
    add button-outline styles; tweaks to all step pages
    fix inline forms + buttons
    redo typography
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    align hello user message right
    position the nav absolutely so anon users see tabs ugh
    add nav content wrapper and tab styles
    restructure nav to use flexbox and allow for more robust nav
    tabby things
    tweak nav styles to allow for tab styles in the future
    resize icons and make structure hold up to resizing better
    tighten up header
    site status link color
    move all hourglass_site/static into frontend
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    change focus color to match Old CALC
    Use slim header for data capture. Fix #383.
    use WDS color variable names
    partials should have underscore prefix
    refactor CSS from main into component files
    Rename _ajaxform.css to _ajaxform.scss. (#799)
    Add <form is="ajax-form">.
    Add a .submit-in-progress class.
    Minor alignments &c
    creates table gap and de-bolds search count
    formats umbrella header
    Intro text + feeble attempt to create stacked headers
    Emboldens the labor category
    Applies blue color only to sortable th's
    add number styles to any number class
    Further (better!) message formatting
    Error message refining
    Corrects bg color for odd table rows
    
    This will apply globally
    Tweaks
    Reduces space between X and lab cat cols
    Recolors active sort head and triangle to gray
    Changes row hover to green
    
    The previous color (yellow) is only used for warnings. The green has better brand connection.
    Adds some left-right cell padding
    
    Possibly temporary
    Header style tweaks
    Fills sort-by column with our gray
    Fills odd rows with our gray
    Emboldens the labor category font
    display dollar signs inline I guess?
    apply to django admin
    add back the currency style
    all the documentation
    Fixes bg header color, table bottom padding
    Revert "Playing with table colors"
    
    This reverts commit 6cfe4f9f4366b5f682f8956a55c2f87fe7a15792.
    Playing with table colors
    Evens out vertical table padding
    BEM-izes results return link
    Adjusts position and color of Restore "link"
    Revert "Aligns table contents to top"
    
    This reverts commit 571364c5f571ef609341d1ed12e74574d59f1c7b.
    Aligns table contents to top
    
    Also adjusts Restore button position and let's it inherit site link color, and changes "Labor Category" to sentence case
    Begins to improve table header styles
    Right aligns "return to top" link
    
    Closes #1763
    
    Also made it bold. Would like to add a little space over the top of it, but having trouble (because tables?) @hbillings
    Cleans up variables, adds comments
    swap hardcoded border radius for variable
    fix logo and table styles
    move the info badge to the front
    fix if logic and bump table text size 2px
    padding
    right align only prices
    Tag and release v2.1.0 (#1303)
    some small tweaks to make table headers consistent
    make error cells keyboard-focusable and show tooltips on focus
    more robust tooltip/bubble placement
    make tooltip screen-reader friendly
    html change to prevent tooltip flicker
    swap in images for info badge; fix pointer size on multiline entries
    fix floaty tooltip arrow
    allow tooltip arrow to correspond with the width of the span
    style info badge and modify table designs
    add styling to tooltips
    get very basic CSS tooltips working
    left-align table number heds
    left-align number heds
    fix sortable table headers on admin
    Fix price cell error styling, improve minimum price message (#870)
    add space
    dolla dolla bills don't break y'all
    add sortable styles to price list tables
    factor hoverable and sortable table styles out of default table
    better error page styling
    remove width from currency on small screens
    word-wrap to the rescue
    limit width on labor category table cells
    Price List table row templates and styling (#660)
    
    * add methods, styling, calls for rendering price list tables
    * add monotype font family variable
    move all hourglass_site/static into frontend
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    use WDS color variable names
    factor out unused collapsible styles
    partials should have underscore prefix
    remove unused graphs.css and move table styles to scss file
    refactor CSS from main into component files
    js and sass/css pipeline with gulp (#367)
    
    * add gulp for building sass and js with sourcemaps
    * setup container for running gulp during development
    * rm built static files from the repo
    * update README with gulp information
    * modify travis to run gulp build
    * remove ruby sass stuff
    * specify and install node version in travis
    * add new static_source vendor paths to CodeClimate ignore list
    table elements get position: relative
    update results table columns, size them better
    better table styles
    all the documentation
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    all the documentation
    Cleans up variables, adds comments
    Updates colors, and replaces instances where necc
    swap hardcoded border radius for variable
    add label styling for price list status
    Adds a bottom border to search selector
    Squares off the right end of search box
    Narrows width of label element
    Stylin nitpix
    Style tweaks and flopping list order
    Drop-down styling misc
    styling tweaks
    change labelling
    show check on vendor/contract buttons
    basic styling
    Fixes right-side protruberance problem
    Fixes selector hover color
    add back reset button
    Vertical spacing changes
    Adjusts padding on selector
    Lightens list items for better contrast with selection
    restyle button to look right without accordion classes
    Selector visual adjs, header text change
    Arrow additions and corner roundings
    fiddly bits
    add accordion classes to enable interactivity
    get the dropdown reflecting the name of the current schedule
    split 'legacy' from the schedule name; style radios
    some dropdown styling
    more style bits
    don't highlight all the date fields
    basic wip functionality
    Removes text-field alert bg and vert bar
    all the documentation
    Cleans up variables, adds comments
    fix padding on number inputs
    fix alerts and inline form radii
    adjust padding on inputs
    adjust border radii in a variety of places
    fix date forms
    move forms to standard uswds
    update buttons to use uswds
    fix inline forms in a few places
    fix for inline button and form on firefox
    smaller labels for filters. Closes #1158.
    fix spacing on date-range
    Validate duplicate contract number in Step 1 (#985)
    
    * start duplicate contract substep
    
    * start fleshing out duplicate contract page
    
    * add simple interstitial page when contract num already exists
    
    * add path to modify view
    
    * add overflow so dl has a height
    
    * start filling out modify page
    
    * extract fields to shared place, start ModifyForm
    
    * more cleaning logic in ModifyForm
    
    * render form in template
    
    * move form to partial for ajax; instantiate instance in form
    
    * make ajaxform
    
    * update modal content
    
    * pass kwargs to reverse
    
    * add styling for .message-info
    
    * stub out more tests; make file not required; process POST
    
    * extract pl rows table to partial; add display of pl rows to modify page
    
    * [WIP] allow skip ahead on step 3 if already uploaded
    
    * show table on step 3 if data in session; add tests
    
    * simplify to just one submit button Step 3; adjust tests
    
    * skip directly to 4 if already uploaded; add anchor and header
    
    * previous goes to step 2 from step 3 errors
    
    * implement step_3_data interstitial page
    
    * fix for eslint
    
    * finish up step/3/data, including tests
    
    * doc is_file_required
    
    * better test names
    
    * docstring for get_deserialized_gleaned_data
    
    * rm modify form/page stuff
    
    * start outlining modify stuff
    
    * upload flow changes to validate dupe contract number
    
    * rm stubbed method, will implement separately
    
    * rm fields.py; amend data capture integration test
    
    * test Step1 duplicate validation
    
    * return HttpResponseBadRequest instead of raising error
    
    * address code review items
    resize help text
    normalize input/select padding and fix padding on steps widget
    fix inline forms + buttons
    Use <dl> more properly on Step 4 (#961)
    
    * move schedule note outside of dl, into separate row
    * rm margin from dl.contract-details
    standardize spacing
    remove default margin on labels and apply to sequential fieldsets instead
    use dls and dds instead of uls and spans for accessibility
    add contract data to validate page
    Make date range error CSS more modular.
    fix padding on dropdowns
    modify todo comment
     move header back to original position; add constraint on fieldset width
    display side-by-side contract start and end dates
    display contract start and end side-by-side
    Price List table row templates and styling (#660)
    
    * add methods, styling, calls for rendering price list tables
    * add monotype font family variable
    Use 'form ul' selector to style radio btn lists.
    Fix #499 by making 'is small business' radios.
    remove heading size overrides and add bolding
    fix padding in dropdowns
    normalize label and legend sizes in filter sidebar
    move all hourglass_site/static into frontend
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    break forms into original scss filenames and import into component
    ERHMAHGERD BUTTERNS
    add dropdowns and errors to form styles
    add form styles
    … and for opened state
    Shrinks expandable-area triangle a bit
    Revert "More "primary" swap outs"
    
    This reverts commit e35565ca33ef57354eceb5c30508a9a5c43f38a7.
    More "primary" swap outs
    More "primary" swap outs
    all the documentation
    make <expandable-area> work in print, add CSS transition.
    rename <collapsible-area> to <expandable-area>
    Add <collapsible-area> web component.
    Revert "More "primary" swap outs"
    
    This reverts commit e35565ca33ef57354eceb5c30508a9a5c43f38a7.
    More "primary" swap outs
    More "primary" swap outs
    consolidate focus ring styling in utils
    all the documentation
    Updates colors, and replaces instances where necc
    remove old focus styles
    More UI bugfixes (#1138)
    
    * add clearfix mixin and add to header row
    * truncate long filenames
    * fix homepage bullet alignment
    * cardify error pages
    * header bullet tweaks
    * Added canvas to 3 icons so all four match (#1144)
    * Recolored icons to #839EA8
    * Bullet sizing etc (#1154)
    * change a couple of ems to rems
    make dropper less wonky
    Show 'you have already uploaded boop.csv' above file input.
    Decouple upload widget from html.js / html.no-js.
    dynamically add ' or drag and drop here' text.
    Add <upload-widget> and <input is="upload-input">.
    add some styling for no js fallback
    change language to reflect single file
    change color and text of upload widget in draggable state
    move all hourglass_site/static into frontend
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    use WDS color variable names
    partials should have underscore prefix
    fix variable reference
    Repositions and begins restyling of proposed price tool
    Reduces space between download buttons on explorer
    move inline schedule selection code from #2051 to here
    Adjusts radio & checkbox spacing, woo
    Attempt at fixing radio/checkbox spacing issue
    fix radio/checkbox focus color
    all the documentation
    adjust padding on inputs
    remove the duplicate select arrows
    remove old uswds utilities classes
    fix up changelist button
    normalize input/select padding and fix padding on steps widget
    Increase esclation_rate input size to 9rem (#912)
    escalation rate tweaks (#908)
    remove default margin on labels and apply to sequential fieldsets instead
    fix padding on dropdowns
    uniform border radius
    bold labels
    labels shouldn't be ridiculously huge
    import uswds radio styles
    use fieldsets and legends for uniform look and behavior
    Fixes slider color
    experience slider
    Changes all blue "darker"s to "dark"
    Revert "More "primary" swap outs"
    
    This reverts commit e35565ca33ef57354eceb5c30508a9a5c43f38a7.
    More "primary" swap outs
    More "primary" swap outs
    all the documentation
    rm eyeglass; make slider width nicer
    customize experience slider styling
    Further (better!) message formatting
    Error message refining
    Message formatting
    add class to form we're targeting for validation, and fix tests
    smaller icons
    remove no-bg style
    Demotes alert bold messages from h3 to h4
    Removes error h3 color override
    Rounds off left-side corners
    make allowances for freaking django markup
    factor out no-bg class to be more universilly applicable
    remove styles to get close to USWDS
    Changes all blue "darkest"s to "darker"
    Info alert "blue" variables
    remove message-* classes
    add no-bg class
    replace instances of messages- classes with usa-alert
    Removes $color-red-lightest override
    Cleans up variables, adds comments
    Updates colors, and replaces instances where necc
    remove background from step 3 error alert
    hide images on alerts and make sure all classes that should extend alerts do
    extend info styles
    extend info styles
    fix alerts and inline form radii
    update alerts to refer to uswds
    add warning icon to header
    red p tags in error message; upload form in new card
    Revert colors to pre-WDS ones (#1145)
    
    * revert colors
    * tweak alt blues for wcag compat; use them for header text instead of doing opacity
    * bold current tab
    * divider color
    * add back the old color header bg image
    Modify price list details (#1077)
    Validate duplicate contract number in Step 1 (#985)
    
    * start duplicate contract substep
    
    * start fleshing out duplicate contract page
    
    * add simple interstitial page when contract num already exists
    
    * add path to modify view
    
    * add overflow so dl has a height
    
    * start filling out modify page
    
    * extract fields to shared place, start ModifyForm
    
    * more cleaning logic in ModifyForm
    
    * render form in template
    
    * move form to partial for ajax; instantiate instance in form
    
    * make ajaxform
    
    * update modal content
    
    * pass kwargs to reverse
    
    * add styling for .message-info
    
    * stub out more tests; make file not required; process POST
    
    * extract pl rows table to partial; add display of pl rows to modify page
    
    * [WIP] allow skip ahead on step 3 if already uploaded
    
    * show table on step 3 if data in session; add tests
    
    * simplify to just one submit button Step 3; adjust tests
    
    * skip directly to 4 if already uploaded; add anchor and header
    
    * previous goes to step 2 from step 3 errors
    
    * implement step_3_data interstitial page
    
    * fix for eslint
    
    * finish up step/3/data, including tests
    
    * doc is_file_required
    
    * better test names
    
    * docstring for get_deserialized_gleaned_data
    
    * rm modify form/page stuff
    
    * start outlining modify stuff
    
    * upload flow changes to validate dupe contract number
    
    * rm stubbed method, will implement separately
    
    * rm fields.py; amend data capture integration test
    
    * test Step1 duplicate validation
    
    * return HttpResponseBadRequest instead of raising error
    
    * address code review items
    normalize input/select padding and fix padding on steps widget
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    rename admin-overrides; style errors like error alerts
    style messagelist as alerts
    better error page styling
     move header back to original position; add constraint on fieldset width
    tiny top alignment tweak
    remove some redundancy and use slightly lighter shade of pink
    add bg to errors, restyle errorlists in alert tables
    move all hourglass_site/static into frontend
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    fix import
    make alerts at least parallel with other components
    move alerts to uswds
    add border radius to alerts and disabled button style
    fix alert color var
    other alert styles
    tweak alert styles
    use WDS color variable names
    simplified, abstracted price-list-alert -> alert-error; move to data_capture.scss
    revert to simple non-expand/collapse price list alert
    start adding collapse/expand classes
    Changes all blue "darkest"s to "darker"
    Revert "Balance of "primary" swaps"
    
    This reverts commit 1c4d3463a47fcbbf6fe8850b39b5b74a26c29eec.
    "primary-alt" swap-outs
    Balance of "primary" swaps
    Balance of "primary" swaps
    all the documentation
    Removes comment
    Re-committing (removed banner changes)
    Revert "Adjusts styles of user menu"
    
    This reverts commit 33c7a97796094225299ecd0723468601a6f46e52.
    Adds underscore to usermenu link
    
    for accessibility
    Adjusts styles of user menu
    swap hardcoded border radius for variable
    fix button styles and menu poisiton
    rm non-necessary svg specifier
    apply hover styling to icon-triangle too
    Applied spacing variables
    
    Not as much control here, but IT’S FINE :)
    Changed email hover to white, not underlined
    
    The triangle should also turn white, but that’s beyond my css ken.
    Adjusted padding and changed to rems
    
    Hopefully proper units and syntax!
    minor adjustment to allow caret to be clickable
    Reduces horizontal padding on menu
    
    Shifts the text leftward a bit, to visually match the padding above and
    below it
    change 'open' to 'is-open'
    
    as suggested in https://philipwalton.com/articles/decoupling-html-css-and-javascript/
    use class in selector
    use inline svg icon
    guard against elements missing
    use plain JS; make new admin bundle; include usermenu js
    most of the styling implementation complete
    [WIP] starting markup for user dropdown menu
    Fixes button spacing
    re-establishing padding on ghost buttons
    Icon size adj on buttons
    Merges buttons into a single row
    Renames style to ghost-button
    Creates ghost buttons for downloads
    Formats download buttons
    Adds small icon button
    Fixes blue dark / darker mapping
    Pads out buttons to 40px tall
    Changes all blue "darkest"s to "darker"
    Changes all blue "darker"s to "dark"
    tweak padding and border
    fix height and display issues on input buttons
    green active states
    Button tweaks
    fix button link active statuses
    Rebrands green button to "green"
    Makes "footer" btn "white," style fix
    Tweaks outlined-btn hover state
    Makes outline button color match primary (blue)
    Revert "Some "primary" color swap-outs"
    
    This reverts commit 3f0a316a6fad1af4f35a0435422d5375d1de223c.
    Some "primary" color swap-outs
    Some "primary" color swap-outs
    consolidate focus ring styling in utils
    Outline btn
    Applies `usa-button` class globally
    Deletes unused "usa-button-gray"
    Recolors disabled button
    Lowercases fonts, fixes secondary coloring
    all the documentation
    Cleans up variables, adds comments
    Updates colors, and replaces instances where necc
    override wds on visited link styles
    swap hardcoded border radius for variable
    Resolves conflicts
    remove old focus styles
    update gray button styles; re-add link button and secondary button styles
    update buttons to use uswds
    fix hover state on disabled button
    remove extraneous s from pluralize
    fix for a button color, just 'cause
    remove white bg on link buttons
    remove extra button cruft and standardize button sizes
    no longer need to override skeleton for buttons
    add button-outline styles; tweaks to all step pages
    fix inline forms + buttons
    Improve button focus styling.
    fixes to buttons; error message placement and wording
    fix button text sizing, change cancel to link
    add class for button-link (#661)
    standardize button sizing
    move all hourglass_site/static into frontend
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    remove top and bottom martin from buttons
    fix variable reference
    ERHMAHGERD BUTTERNS
    add border radius to alerts and disabled button style
    add more button states
    all the documentation
    Link to S70 PPL template. Fixes #753.
    Explain use of font-family setting in excel table css.
    Tweak CSS.
    Add excel table CSS styles.
    Region 3 Issue fixes
    Updates step styles from to match dev
    darken label
    tweak colors and spacing
    just the colors ma'am
    Changes all blue "darker"s to "dark"
    Revert "More "primary" swap outs"
    
    This reverts commit e35565ca33ef57354eceb5c30508a9a5c43f38a7.
    More "primary" swap outs
    More "primary" swap outs
    all the documentation
    Adds exception for <h3> when used as a card header
    
    This should fix the issue of extraneous top margin on the tute cards.
    NOTE: an exception already existed for <h2>s applied in that way (on `
    _page.scss ` ). I simply duped that code. I couldn’t get it to work by
    merely adding ` h3:first-child ` to that string. I likely just don’t
    know the syntax!
    fix width of steps
    add franklin
    wip steps mods
    normalize input/select padding and fix padding on steps widget
    don't make current labels so big
    tweak nav styles to allow for tab styles in the future
    move hed below steps
    standardize spacing
    fix flexbox and bold/blue current step
    shrink progress bar
    Eliminate flickering w/ step fade-in.
    Fade-in current step.
    visual tweakst to bulk upload
    move all hourglass_site/static into frontend
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    use WDS color variable names
    partials should have underscore prefix
    refactor CSS from main into component files
    move text-anchor to CSS.
    Add steps widget to styleguide.
    all the documentation
    Add Modal Dialog for Canceling (#918)
    
    * add modal dialogs with a11y-dialog library
    * use modal dialogs for all Cancel links in Price List Upload and Region 10 Bulk Upload flows
    * handle_cancel on step_3_errors view so modal can POST cancel
    all the documentation
    Cleans up variables, adds comments
    Set z-index of safe mode UI so it is always on top.
    use color var for bg color of safe mode disable ui.
    Rename enable_js to safe_mode.
    Don't make the 'disable safe mode' alert red.
    Implement safe mode.
    all the documentation
    add <uswds-date> custom element.
    add space between error fix buttons
    Fixes button spacing
    Globally reduces right margin on buttons
    
    From 2em down to 1em. 2 is 2 much.
    Slightly widens submit-label field
    
    Another hacky magic number!
    Merges buttons into a single row
    Removes right margin from last button in row
    all the documentation
    Cleans up variables, adds comments
    Updates colors, and replaces instances where necc
    update buttons to use uswds
    Stubs out add data "tutorial" based on announcement email
    fix the bulk upload styles
    more button row rejiggering
    modify formbuttonrow sass
    remove extra button cruft and standardize button sizes
    float label
    fix button text sizing, change cancel to link
    wip button restyling
    add more specific selector for submit-type buttons
    Canceling data_capture flows (#629)
    
    * add `handle_cancel` decorator for canceling data_capture flows via POST request
    * update formbuttonrow to work with buttons; replace button-cancel with button-secondary
    * handle_cancel on price_list_upload views; add tests
    * factor out ajax_redirect to a method in ajaxform (#641)
    move all hourglass_site/static into frontend
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    fix variable reference
    import variables
    create layout and markup for form button row (#472)
    
    - add it to existing step pages
    - add form-button-row to styleguide
    formatting changes
    Debugged woo
    remove merge conflict markers
    Conflict resolution
    fix graph overflowing dropdown menu
    all the documentation
    Darkens site bg to match design
    
    Also added a touch more saturation to `$color-gray-lightest`
    fix path SOMEONE copied from WINDOWS
    fix typo
    replace half-padding with smarter sibling selector rules
    get rid of card--half-padding; it's a title hack
    rename class to be more descriptive
    argh more conflix
    rearrange classes in a more sensical way
    fix incorrectly applied card classes
    Updates tutorial structure with new card classes
    fix last card styles
    missed a couple old classes
    update header so only nav is content-width
    fix card footer margin
    fix content width styles to apply more evenly
    wip migrating card rules to body classes
    update buttons to use uswds
    Adds exception for <h3> when used as a card header
    
    This should fix the issue of extraneous top margin on the tute cards.
    NOTE: an exception already existed for <h2>s applied in that way (on `
    _page.scss ` ). I simply duped that code. I couldn’t get it to work by
    merely adding ` h3:first-child ` to that string. I likely just don’t
    know the syntax!
    add flexbox wrapper to price list header
    remove header from first h2 on a card. Closes #1139
    on card--no-header pages, reduce the padding on subheads
    nest the sass so the right padding is applied on card--wide
    add class for less-padded card
    oops, add margin on the right element
    fix pages that didn't have card layouts
    stack the cards on the header bg
    update site admin and factor out footer
    fix card footer width on wide layout
    add wide and narrow card bodies
    get the final structure of the card and its footer link sorted
    add card styles
    standardize spacing
    Fix #535 (ie11 sticky footer).
    Move _page.scss to frontend dir.
    Fix #491 by making the footer sticky.
    Top-aligns footer logos with headers
    Fixes green medium mapping
    Applies $color-green-medium to footer
    
    For the divider
    Applies $color-green-light to footer
    Crops divider rule to match header style
    Comment nix
    Divider class rename
    Makes class name more BEM-esque
    Adds logged-in design
    Revert "Adds logged-in design"
    
    This reverts commit 3d7c108bac1597224e815d9b9618760b19fe8a6e.
    Adds logged-in design
    And another resolution
    Conflict resolution in footer
    Updates colors, and replaces instances where necc
    override wds on visited link styles
    Resolves conflicts
    Improved footer blocking
    Removes uswds buttons.scss
    Widened get in touch block and floated logos
    Tag and release v2.1.0 (#1303)
    add link to /updates/ in footer (#1271)
    move icon credits to About page
    Header/Button anti aliasing (#1167)
    
    Closes #1165
    Somethings afoot er (#1160)
    
    * Update footer styling and content to match new design
    Revert colors to pre-WDS ones (#1145)
    
    * revert colors
    * tweak alt blues for wcag compat; use them for header text instead of doing opacity
    * bold current tab
    * divider color
    * add back the old color header bg image
    move all hourglass_site/static into frontend
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    use WDS color variable names
    partials should have underscore prefix
    refactor CSS from main into component files
    import grid to generate sidenav
    smallen the sidebar
    add side nav layout
    Updates styleguide
    Rephrase and icon alignment adj
    Fixes green medium mapping
    Updates styleguide blue references
    No need for "rem" after 0!
    Tightens up colors css
    Code cleanup
    Updates swatch access style
    Indent
    Adds color combos for typography
    
    TODO: adjust vertical spacing
    Adjusts small icon positions
    Adds more colors and lightens 2 lightest grays
    Adds greens
    More colors section styling
    Color section styling
    Meaningless edit to force circle ci to run
    Fixes blue dark / darker mapping
    Creates $color-blue-dark
    Moves most blues into _uswds_variables
    use roboto
    revert font change
    define green-bright hex in uswds_vars
    experiment to break WDS variables and project variables apart
    Adds more colors and lightens 2 lightest grays
    More colors section styling
    Color section styling
    Darkens site bg to match design
    
    Also added a touch more saturation to `$color-gray-lightest`
    Trying Roboto Mono for monospace
    
    Giving this monospace type stack a test drive: 'Roboto Mono', 'Liberation Mono', 'Source Code Pro', Courier, monospace
    Renames variable to $color-green-medium
    
    Was `dark`, but it's more of a medium!
    Added a comment
    remove deprecated Neat outer-container mixin and bump up max container width
    add medium-large variable
    Cleans up variables, adds comments
    Updates colors, and replaces instances where necc
    Remove comments about colors used elsewhere
    sans sans
    Resolves conflicts
    fix merge conflict in header
    adjust border radii in a variety of places
    try overriding asset path
    remove old uswds utilities classes
    move forms to standard uswds
    update buttons to use uswds
    tweak colors according to Ronne's color scheme
    Tag and release v2.1.0 (#1303)
    new reds
    fix info alert colors
    Somethings afoot er (#1160)
    
    * Update footer styling and content to match new design
    Revert colors to pre-WDS ones (#1145)
    
    * revert colors
    * tweak alt blues for wcag compat; use them for header text instead of doing opacity
    * bold current tab
    * divider color
    * add back the old color header bg image
    add franklin
    add spacing units
    add neat and override grid variables
    redo typography
    better error page styling
    shrink progress bar
    wip button restyling
    fix rem import issue
    Price List table row templates and styling (#660)
    
    * add methods, styling, calls for rendering price list tables
    * add monotype font family variable
    define p font-size and line-height
    move all hourglass_site/static into frontend
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    ERHMAHGERD BUTTERNS
    support some mixins and vars required by forms
    add border radious and screen size variables
    move mixins to utils; add button and form reset to reset
    tweak alert styles
    use WDS color variable names
    partials should have underscore prefix
    update color variables
    refactor CSS from main into component files
    document what the base files are doing
    remove deprecated Neat outer-container mixin and bump up max container width
    use npm'd neat via eyeglass
    add neat and override grid variables
    Changes all blue "darker"s to "dark"
    Revert "Some "primary" color swap-outs"
    
    This reverts commit 3f0a316a6fad1af4f35a0435422d5375d1de223c.
    Some "primary" color swap-outs
    Some "primary" color swap-outs
    document what the base files are doing
    add card styles
    add button-outline styles; tweaks to all step pages
    add default rules for tables; fix spacing on proporosed price box headers
    redo typography
    move all hourglass_site/static into frontend
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    add border radious and screen size variables
    move mixins to utils; add button and form reset to reset
    use WDS color variable names
    partials should have underscore prefix
    remove skeleton's normalize file and copy relevant input/button styles
    refactor index.scss into its components
    refactor CSS from main into component files
    Fixes blue dark / darker mapping
    Updates two blues
    Changes primary var to darker blue
    Removes comments, regroups primaries
    Revert "Some "primary" color swap-outs"
    
    This reverts commit 3f0a316a6fad1af4f35a0435422d5375d1de223c.
    Adds $color-green-bright, missed b4
    Some "primary" color swap-outs
    Some "primary" color swap-outs
    Makes visited link color match un-visited
    Moves most blues into _uswds_variables
    define green-bright hex in uswds_vars
    experiment to break WDS variables and project variables apart
    make it two colors instead of three
    consolidate styles into white, light color, dark color
    add focus ring mixin
    remove sr-only class in favor of WDS built-in class; update Jest snapshots
    document what the base files are doing
    remove old uswds utilities classes
    Switch to react-based slider
    Header/Button anti aliasing (#1167)
    
    Closes #1165
    More UI bugfixes (#1138)
    
    * add clearfix mixin and add to header row
    * truncate long filenames
    * fix homepage bullet alignment
    * cardify error pages
    * header bullet tweaks
    * Added canvas to 3 icons so all four match (#1144)
    * Recolored icons to #839EA8
    * Bullet sizing etc (#1154)
    * change a couple of ems to rems
    fix the bulk upload styles
    Move :target CSS to _utils.scss.
    Add Modal Dialog for Canceling (#918)
    
    * add modal dialogs with a11y-dialog library
    * use modal dialogs for all Cancel links in Price List Upload and Region 10 Bulk Upload flows
    * handle_cancel on step_3_errors view so modal can POST cancel
    labels shouldn't be ridiculously huge
    move all hourglass_site/static into frontend
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    break utilities into CALC and USWDS
    ERHMAHGERD BUTTERNS
    add clearfix class
    support some mixins and vars required by forms
    move mixins to utils; add button and form reset to reset
    use WDS color variable names
    partials should have underscore prefix
    rename static_source/vendor to static_source/libs, fix references to skeleton import, remove css task from gulpfile
    refactor index.scss into its components
    refactor CSS from main into component files
    add styles to re-show the django debug checkboxes. closes #821
    document what the base files are doing
    re-add rem function
    fix rem import issue
    move all hourglass_site/static into frontend
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    break utilities into CALC and USWDS
    move all hourglass_site/static into frontend
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    partials should have underscore prefix
    refactor index.scss into its components
    Darken dev help text color
    Changes primary var to darker blue
    simplify indentation rules
    Increases indent for double nesters
    Stab at nested nesting indents
    Indents nested lists
    Cleans up variables, adds comments
    Updates colors, and replaces instances where necc
    override wds on visited link styles
    sans sans
    Resolves conflicts
    add styles for larger h2 and smaller h1
    set base typography on body
    redo typography
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    Move :target CSS to _utils.scss.
    Add Modal Dialog for Canceling (#918)
    
    * add modal dialogs with a11y-dialog library
    * use modal dialogs for all Cancel links in Price List Upload and Region 10 Bulk Upload flows
    * handle_cancel on step_3_errors view so modal can POST cancel
    Hyperlink 'try it again' to upload form. Fixes #880.
    remove outline from named anchors w/ IE workaround.
    shrink progress bar
    tighten up header
    fix h3 letterspacing
     move header back to original position; add constraint on fieldset width
    fix typo and add max-width for ps
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    add ul to styleguide
    remove heading size overrides and add bolding
    define p font-size and line-height
    move all hourglass_site/static into frontend
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    add h3 to typography
    use WDS color variable names
    partials should have underscore prefix
    fix sort tirangles
    fix padding under admin item
    Changes all blue "darker"s to "dark"
    Header-Admin "primary-alt" overrides
    document what the base files are doing
    commentary for admin
    Fixes $color-gray-medium-dark reference
    
    Removes in favor of `$color-gray-dark`
    put the underline on a diet
    some nav cleanup
    Cleans up variables, adds comments
    Updates colors, and replaces instances where necc
    swap hardcoded border radius for variable
    Adjs to site admin nav
    Site admin nav style now matches other sections
    position of add/change/delete bg icons
    fixes to user group buttons and input alignment
    Fix test_collectstatic.py.
    fixes to alignment of multiselect admin boxes
    fix inline forms in a few places
    button and form alignment fixes
    fixes to paginator
    Revert colors to pre-WDS ones (#1145)
    
    * revert colors
    * tweak alt blues for wcag compat; use them for header text instead of doing opacity
    * bold current tab
    * divider color
    * add back the old color header bg image
    add new font to admin base & adust nav padding
    accommodate janky admin nav
    remove unnecessary padding on nav ul
    update site admin and factor out footer
    un-round corners on admin tabs
    fix sortable table headers on admin
    fix width of checkbox focus
    sassify and variablize
    move admin css to sass source folder; update paths in templates
    additional table styling:
    create place for new admin styles
    Changes all blue "darker"s to "dark"
    Revert "Some "primary" color swap-outs"
    
    This reverts commit 3f0a316a6fad1af4f35a0435422d5375d1de223c.
    Some "primary" color swap-outs
    Some "primary" color swap-outs
    commentary for admin
    smallen the sidebar
    swap hardcoded border radius for variable
    fixes to alignment of multiselect admin boxes
    fix inline forms in a few places
    button and form alignment fixes
    use linear-gradient to do paginator instead
    style paginator so it's different from body text
    More UI bugfixes (#1138)
    
    * add clearfix mixin and add to header row
    * truncate long filenames
    * fix homepage bullet alignment
    * cardify error pages
    * header bullet tweaks
    * Added canvas to 3 icons so all four match (#1144)
    * Recolored icons to #839EA8
    * Bullet sizing etc (#1154)
    * change a couple of ems to rems
    allow selecting all in a table
    fix checkbox alignment
    fix up changelist button
    fix width on radio buttons
    sassify and variablize
    move admin css to sass source folder; update paths in templates
    create place for new admin styles
    Restyles tooltipster to match our design
    move all hourglass_site/static into frontend
    move qunit and selenium tests to frontend
    move static_source to top-level directory
    rename static_source/vendor to static_source/libs, fix references to skeleton import, remove css task from gulpfile
    refactor index.scss into its components
    js and sass/css pipeline with gulp (#367)
    
    * add gulp for building sass and js with sourcemaps
    * setup container for running gulp during development
    * rm built static files from the repo
    * update README with gulp information
    * modify travis to run gulp build
    * remove ruby sass stuff
    * specify and install node version in travis
    * add new static_source vendor paths to CodeClimate ignore list
    move tooltipster and no-ui rules out of main css
    Get rid of frontend.widgets.
    Add support for radio and checkbox inputs to ajax-form (#1001)
    
    * add support for radio and checkbox inputs, closes #570
    * add uswds-style checkbox widget
    * add note and throw error on select or textarea elements
    fix minor typo
    Support multiple submit buttons in ajaxform.
    Add an alert msg to ajaxform_example when form is invalid.
    move ajaxform, upload python files into frontend package.
    Add a .submit-in-progress class.
    allow response type to be chosen when submitting ajax form example
    Add ajax form examples to styleguide.
    Ensure styleguide docs contains specific text.
    Add styleguide docs.
    Allow fullpage examples to use template tags, optionally hide their HTML.
    oops
    Fix flake8 error.
    Add fullpage example tests.
    Fix flake8 probalos
    Add tests for new template tags.
    Add tests for styleguide email endpoints.
    Add support for radio and checkbox inputs to ajax-form (#1001)
    
    * add support for radio and checkbox inputs, closes #570
    * add uswds-style checkbox widget
    * add note and throw error on select or textarea elements
    Add a USWDS-style radio widget.
    Always expose /styleguide/.
    Make qunit tests, styleguide visible on DEBUG only.
    Add styleguide/date test.
    Add ajax form examples to styleguide.
    Ran 'autopep8 -i -r .' on code.
    
    These are only whitespace changes, and they don't even fix all the
    whitespace issues raised by flake8.
    Add super simple styleguide at /styleguide/.
    Allow fullpage examples to use template tags, optionally hide their HTML.
    Add fullpage example tests.
    Add fullpage_example template tag.
    Get rid of frontend.widgets.
    Add support for radio and checkbox inputs to ajax-form (#1001)
    
    * add support for radio and checkbox inputs, closes #570
    * add uswds-style checkbox widget
    * add note and throw error on select or textarea elements
    Add a USWDS-style radio widget.
    Run mypy on all files. Fixes #1803.
    move example email metadata into emails.py
    Add 'Emails' section to styleguide w/ links.
    Add super simple styleguide at /styleguide/.
    first pass at loader
    Improve docs for example areas.
    Document more template tags.
    Add styleguide docs.
    Oops, remove pdb.set_trace().
    update docker docs. Fix #1313.
    Run aXe on styleguide, fix violations.
    Make styleguide work on Django 1.10.
    Add 'Emails' section to styleguide w/ links.
    Tag and release v2.1.0 (#1303)
    Make styleguide reuse s70 error table template.
    Encapsulate steps widget HTML rendering in a StepsWidget class.
    Support fake filenames in upload widget.
    Add support for radio and checkbox inputs to ajax-form (#1001)
    
    * add support for radio and checkbox inputs, closes #570
    * add uswds-style checkbox widget
    * add note and throw error on select or textarea elements
    Add a USWDS-style radio widget.
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    Add date field/widget to style guide.
    Add ajax form examples to styleguide.
    Get rid of date.py, add tests for our template override.
    Add date field/widget to style guide.
    Add styleguide docs.
    Add fullpage_example template tag.
    Add 'Emails' section to styleguide w/ links.
    Add support for radio and checkbox inputs to ajax-form (#1001)
    
    * add support for radio and checkbox inputs, closes #570
    * add uswds-style checkbox widget
    * add note and throw error on select or textarea elements
    Add a USWDS-style radio widget.
    Get rid of django.conf.urls.patterns().
    Add date field/widget to style guide.
    Add ajax form examples to styleguide.
    Update prism to include django/jinja2 template highlighting.
    Add Prism JS + CSS.
    Update prism to include django/jinja2 template highlighting.
    Add Prism JS + CSS.
    Fix aXe fail.
    Improve docs for example areas.
    Make {% template_tag %} take two args and document it.
    Add docstrings to functions.
    Use non-breaking spaces in {% template_tag %} output.
    templatetag -> template_tag
    Keep traversing through wrappers.
    Add a {% templatetag %} tag.
    Add template_example template and use it.
    Add template_example tag.
    Allow fullpage examples to use template tags, optionally hide their HTML.
    appease flake8
    add GITHUB_BASE_URL to settings.py and use it
    make example title better
    add an ID to frames for aXe
    Add fullpage_example template tag.
    migrate to CircleCI
    
    - raise real Exception in test_selenium
    - remove debug print statement in styleguide tests
    - comment out WebDriver/Sauce test stuff because no time to get it working right now
    - upgrade to python 3.6.2
    Fix styleguide tests.
    Add more links to sources in styleguide.
    Fix broken tests.
    Link to email templates.
    Add docstring to {% webcomponent %} template tag.
    Mention, link to web components in style guide.
    Add a {% pyobjname %} tag for the styleguide.
    {% pathname %} links to github source file.
    add 'pathname' styleguide template tag.
    Ran 'autopep8 -i -r .' on code.
    
    These are only whitespace changes, and they don't even fix all the
    whitespace issues raised by flake8.
    Add TOC to style guide.
    add {% example %} template tag to styleguide.
    add {% example %} template tag to styleguide.
    first pass at loader
    Add docs on {% guide %}, {% guide_section %}.
    Allow fullpage examples to use template tags, optionally hide their HTML.
    make example title better
    add an ID to frames for aXe
    Move inline CSS to stylesheet.
    accessibility fixes to fullpage examples.
    Add fullpage_example template tag.
    add side nav layout
    update styleguide and remove old comments
    Use card layout on styleguide.
    Make link targets in styleguide accessible in IE.
    
    For more details, see:
    
    http://juicystudio.com/article/ie-keyboard-navigation.php
    Add TOC to style guide.
    Hopefully appease CodeClimate.
    add {% example %} template tag to styleguide.
    Demotes alert bold messages from h3 to h4
    Add styleguide docs.
    Updates styleguide
    Replaces upload prev btns with secondary style
    Fixes styleguide expandable reference
    Rebrands green button to "green"
    Makes visited link color match un-visited
    Rephrase and icon alignment adj
    Fixes green medium mapping
    Updates styleguide blue references
    add back the currency style
    Adds `usa-button` to buttons i missed
    Removes button-styled link from styleguide
    Applies `usa-button` class globally
    Deletes unused "usa-button-gray"
    Edit
    Accessibility text edits
    Tightens up colors css
    Code cleanup
    Updates swatch access style
    Adds a section on accessibility
    Applies more pathname tags to header section
    Applies pathname tag for base.html links
    Revert "Revert "Swaps in pathname template tag""
    
    This reverts commit 005c2f8eb48aecd5388f42516223121943976b54.
    Revert "Swaps in pathname template tag"
    
    This reverts commit 9fffcf182cf3e6d5d7e3e5b2a4cf1dea54614893.
    Swaps in pathname template tag
    Fixes swatch stacking issue
    add footer and tweak header
    add header
    fix rows
    Adds clearfix to rows
    Typofix
    Adds color combos for typography
    
    TODO: adjust vertical spacing
    Adds more colors and lightens 2 lightest grays
    Adds greens
    More colors section styling
    Color section styling
    Beginnings of html structure for colors
    Creates a place for Colors, with rough styles
    Adds a sentence to intro
    add side nav layout
    use new fullpage tags
    fix path SOMEONE copied from WINDOWS
    Add fullpage_example template tag.
    language tweaks to styleguide
    get rid of card--half-padding; it's a title hack
    add card--collapse-header usage to styleguide
    rearrange classes in a more sensical way
    remove reference to uswds/forms in styleguide
    update buttons to use uswds
    update alerts to refer to uswds
    Fix minor typo.
    Get rid of frontend.widgets.
    Run aXe on styleguide, fix violations.
    Add more links to sources in styleguide.
    Replace 'front-end' with 'front end'.
    Fix broken tests.
    Link to email templates.
    Add 'Emails' section to styleguide w/ links.
    Tag and release v2.1.0 (#1303)
    Make styleguide reuse s70 error table template.
    hardcode error table example
    remove success input from guide
    use fieldset for error form example
    tweak form-button-row example to match current
    remove mention of jquery tablesort and sortable table example
    fix table styling
    remove error table from alerts because we don't show it in an alert any longer
    remove reference to USWDS colors
    Use assertRegexpMatches, styleguide rewording.
    Encapsulate steps widget HTML rendering in a StepsWidget class.
    Remove mentions of Skeleton in buttons section.
    Replace mentions of Skeleton w/ Bourbon and Neat.
    Update steps widget section of styleguide.
    Use card layout on styleguide.
    Support fake filenames in upload widget.
    Add support for radio and checkbox inputs to ajax-form (#1001)
    
    * add support for radio and checkbox inputs, closes #570
    * add uswds-style checkbox widget
    * add note and throw error on select or textarea elements
    Document safe mode in style guide.
    Expand introduction to styleguide. Fixes #923.
    Add Modal Dialog for Canceling (#918)
    
    * add modal dialogs with a11y-dialog library
    * use modal dialogs for all Cancel links in Price List Upload and Region 10 Bulk Upload flows
    * handle_cancel on step_3_errors view so modal can POST cancel
    use <kbd> and style it.
    document <uswds-date> in style guide.
    Add popout action for radio styleguide example.
    don't disable critical JS in safe mode.
    Rename enable_js to safe_mode.
    Add a USWDS-style radio widget.
    add formnovalidate to cancel
    Add pop-out link to styleguide example forms.
    Update styleguide section on steps widget.
    Add styleguide entry for <alerts-widget>.
    move Form Button Row section to more logical place in styleguide
    add class for button-link (#661)
    rename <collapsible-area> to <expandable-area>
    Add <collapsible-area> web component.
    Implement safe mode.
    Add excel table CSS styles.
    Canceling data_capture flows (#629)
    
    * add `handle_cancel` decorator for canceling data_capture flows via POST request
    * update formbuttonrow to work with buttons; replace button-cancel with button-secondary
    * handle_cancel on price_list_upload views; add tests
    * factor out ajax_redirect to a method in ajaxform (#641)
    Link to source of form button row and alert components in styleguide.
    Mention, link to web components in style guide.
    Add a {% pyobjname %} tag for the styleguide.
    {% pathname %} links to github source file.
    Add date field/widget to style guide.
    Add comments, tweak docs a bit.
    Fix typo in css url on styleguide.
    add 'pathname' styleguide template tag.
    Add ajax form examples to styleguide.
    add ul to styleguide
    remove heading size overrides and add bolding
    keep styleguide up to date
    add bg to errors, restyle errorlists in alert tables
    add some styling for no js fallback
    move all hourglass_site/static into frontend
    remove inline js
    extract tablesort js to own file and es6ify it
    update paths
    ERHMAHGERD BUTTERNS
    create layout and markup for form button row (#472)
    
    - add it to existing step pages
    - add form-button-row to styleguide
    add dropdowns and errors to form styles
    oops, only act on passed float column var
    add instructions about numerical columns
    be smart about sorting columns with floats/ints
    add jquery-tablesort
    add new elements to styleguide
    simplified, abstracted price-list-alert -> alert-error; move to data_capture.scss
    rm unused class
    revert to simple non-expand/collapse price list alert
    instead of SVG, use CSS ordered list hack
    start adding collapse/expand classes
    start on markup and styling for price list alert
    just use require() to include polyfill
    include babel browser polyfill
    add note about accept attribute, clean up examples
    validate dropped file based on 'accept' attribute
    Move upload.js to data-capture and ES2015-ify it.
    Add TOC to style guide.
    add aria-hidden='true' to drag and drop span.
    Add $.fn.uploadify().
    Don't show HTML source for degraded upload widget.
    make upload widget form multipart.
    Consistently spell 'ajax'.
    Add note about HTML5 validation for uploads.
    Better docs, api for XHR form submission.
    Link to CSS-tricks article in style guide.
    attach upload object to file input instead of .upload
    Add an upload widget API.
    enforce unique IDs on styleguide.
    Add data-force-degradation option for upload widget.
    Implement more of upload widget.
    Partial implementation of file upload widget.
    move text-anchor to CSS.
    Add steps widget to styleguide.
    add ID to styleguide heading
    Move inline styleguide CSS to separate file.
    add {% example %} template tag to styleguide.
    Add super simple styleguide at /styleguide/.
    Use card layout on styleguide.
    Add support for radio and checkbox inputs to ajax-form (#1001)
    
    * add support for radio and checkbox inputs, closes #570
    * add uswds-style checkbox widget
    * add note and throw error on select or textarea elements
    Add a USWDS-style radio widget.
    Add ajax form examples to styleguide.
    Use card layout on styleguide.
    Add ajax form examples to styleguide.
    Applies `usa-button` class globally
    update buttons to use uswds
    Add date field/widget to style guide.
    Use card layout on styleguide.
    Add date field/widget to style guide.
    Add ajax form examples to styleguide.
    Adding OG and other meta tags to head (#2033)
    
    * Added OG and other meta tags to head
    * Added "capture" tag
    * Added new "striptext" simple tag
    move styleguide CSS to Sass and compile it
    add side nav layout
    update classes on a whole boatload of pages
    use webpack for all js bundles; rm browserify and pals
    Use card layout on styleguide.
    Applies `usa-button` class globally
    update buttons to use uswds
    Add support for radio and checkbox inputs to ajax-form (#1001)
    
    * add support for radio and checkbox inputs, closes #570
    * add uswds-style checkbox widget
    * add note and throw error on select or textarea elements
    add side nav layout
    Add TOC to style guide.
    Allow fullpage examples to use template tags, optionally hide their HTML.
    Disable DJDT for fullpage styleguide examples.
    accessibility fixes to fullpage examples.
    Add fullpage_example template tag.
    Explain distinction btwn {% example %} and {% template_example %} better.
    Provide {% template_example %} example.
    Tweak intro paragraph a bit.
    Improve docs for example areas.
    Document example snippet tags.
    Make {% template_tag %} take two args and document it.
    Rename sections to be nouns.
    Document pyobjname.
    Document {% template_url %}.
    Document {% template_tag_library %}.
    Document {% webcomponent %}.
    Add docs on {% guide %}, {% guide_section %}.
    Document more template tags.
    templatetag -> template_tag
    Add a {% templatetag %} tag.
    Add template_example template and use it.
    Add template_example tag.
    Add styleguide docs.
    Add template_example template and use it.
    Hopefully appease CodeClimate.
    add {% example %} template tag to styleguide.
    Applies `usa-button` class globally
    update buttons to use uswds
    Add support for radio and checkbox inputs to ajax-form (#1001)
    
    * add support for radio and checkbox inputs, closes #570
    * add uswds-style checkbox widget
    * add note and throw error on select or textarea elements
    Use {% fieldset %} in ajaxform example. Fixes #968.
    Support multiple submit buttons in ajaxform.
    Add an alert msg to ajaxform_example when form is invalid.
    Point out 'is=ajax-form' in styleguide example.
    Add <form is="ajax-form">.
    fix typo in styleguide ajax form example.
    allow response type to be chosen when submitting ajax form example
    Add ajax form examples to styleguide.
    add footer and tweak header
    add header
    Adds `usa-button` to buttons i missed
    Allow fullpage examples to use template tags, optionally hide their HTML.
    use new fullpage tags
    Add fullpage_example template tag.
    Add docs on {% guide %}, {% guide_section %}.
    Allow fullpage examples to use template tags, optionally hide their HTML.
    use new fullpage tags
    Add fullpage_example template tag.
    Allow fullpage examples to use template tags, optionally hide their HTML.
    use new fullpage tags
    Add fullpage_example template tag.
    Allow fullpage examples to use template tags, optionally hide their HTML.
    use new fullpage tags
    Add fullpage_example template tag.
    Document example snippet tags.
    add footer and tweak header
    add footer and tweak header
    Allow fullpage examples to use template tags, optionally hide their HTML.
    use new fullpage tags
    Add fullpage_example template tag.
    enable mypy disallow_untyped_calls, disallow_untyped_defs.
    Add experimental mypy integration.
    Add experimental mypy integration.
    add mypy annotations to sauce_connect.py.
    Add experimental mypy integration.
    Fix flake8 issues
    Factor out finders.py and mypy it up.
    start meta app and ultratest command
    first pass at loader
    Rename 'hourglass' to 'calc'. Fixes #93.
    Document release process and add associated tooling (#1215)
    Minor bulkcreateusers enhancements (#879)
    
    * skip empty emails
    * add dryrun message at start
    management command to bulk create users (#846)
    Document release process and add associated tooling (#1215)
    Document release process and add associated tooling (#1215)
    management command to bulk create users (#846)
    first pass at loader
    start meta app and ultratest command
    first pass at loader
    Rename 'hourglass' to 'calc'. Fixes #93.
    Document release process and add associated tooling (#1215)
    Minor bulkcreateusers enhancements (#879)
    
    * skip empty emails
    * add dryrun message at start
    management command to bulk create users (#846)
    Don't lint as part of JS compilation.
    Run mypy on all files. Fixes #1803.
    Make exclude dirs intrinsic to flake8. Fixes #1798.
    Use `yarn` instead of `npm run` everywhere
    
    We switched to `yarn` a while back but didn't update various docs and tooling to use it in place of `npm` or `npm run`.
    
    Closes #1541.
    Use TypeScript's checkJs functionality on whitelisted files.
    More mypy typings; make mypy defaults less strict.
    Upgrade python packages (#1324)
    Tag and release v2.1.0 (#1303)
    print fail and success message based on exit_code value (#1278)
    Install node modules in Docker container at /calc/node_modules; Implement airbnb react eslinting. (#1234)
    
    * Don't set NODE_PATH. Fixes #569.
    * Use airbnb-eslint-config and fix identified errors (#1235)
    Add mypy annotations to ultratest.
    Add experimental mypy integration.
    add large Fail and Success messages
    add ultratest command to run jest (#1170)
    Make ultratest's help more helpful (#852)
    change back to being explicit about adding the --cov flag
    
    reverts a43a49ac1807883560e4f5fe78923912a5e05519
    Actually run doctests during py.test (#708)
    
    * Actually run doctests during py.test.
    * add --cov to addopts, rm from elsewhere
    * Don't py.test anything in node_modules.
    Improve readability.
    Allow ultratest to take a list of testtypes.
    Show test coverage in Ultratest (#485)
    
    show coverage and change in coverage
    make ultratest fail on eslint warnings in docker too.
    add bandit scanning to ultratest and travis
    Exclude migrations during ultratest. Fix #443.
    Ultratest always fails verbosely. Fixes #420.
    Ignore unresolved imports from eslint only when running in Docker.
    Add rainbow ascii art to ultratest.
    add flag to run linters only
    return non-zero code when tests are failing
    run linters before py.test
    whoops, add back py.test
    use django management command verbosity level
    print cmd if running in verbose
    add docstring
    use .format instead of string interpolation
    improve output, add verbose mode
    run py.test and eslint via ultratest
    call py.test
    use django-click
    start meta app and ultratest command
    Rename 'hourglass' to 'calc'. Fixes #93.
    Tweak flake8 config. Fixes #1818.
    unwhackify github release heading. fixes #1306.
    Document release process and add associated tooling (#1215)
    start meta app and ultratest command
    first pass at loader
    Move RELEASE.md to docs/release.md.
    Document release process and add associated tooling (#1215)
    PSHCDT-87: UAA logout update
    PSHCDT-87:CALC's Session Timeout updated
    PSHCDT-87: UAA logout update
    PSHCDT-87:CALC's Session Timeout updated
    Adding OG and other meta tags to head (#2033)
    
    * Added OG and other meta tags to head
    * Added "capture" tag
    * Added new "striptext" simple tag
    Don't include DAP on authenticated pages. Fixes #903.
    Use cg-django-uaa for cloud.gov UAA auth.
    rename hourglass_site to data_explorer
    startapp hourglass_site
    first pass at loader
    PSHCDT-87: UAA logout update
    PSHCDT-87:CALC's Session Timeout updated
    PSHCDT-87:CALC's Session Timeout updated
    PSHCDT-87: UAA logout update
    PSHCDT-87:CALC's Session Timeout updated
    PSHCDT-87:CALC's Session Timeout updated
    Add ScheduleMetadata model.
    Use cg-django-uaa for cloud.gov UAA auth.
    Fix dangling comma in labor category description (#1237)
    Disable CSP because New Relic sucks.
    Add ethn.io to script-src whitelist.
    Add comments.
    whitelist script-src
    Add nonce-based CSP to index page only.
    Add current_selected_tab to contexts of some templates.
    Adding OG and other meta tags to head (#2033)
    
    * Added OG and other meta tags to head
    * Added "capture" tag
    * Added new "striptext" simple tag
    Adding OG and other meta tags to head (#2033)
    
    * Added OG and other meta tags to head
    * Added "capture" tag
    * Added new "striptext" simple tag
    first pass at loader
    Adding OG and other meta tags to head (#2033)
    
    * Added OG and other meta tags to head
    * Added "capture" tag
    * Added new "striptext" simple tag
    update classes on a whole boatload of pages
    More UI bugfixes (#1138)
    
    * add clearfix mixin and add to header row
    * truncate long filenames
    * fix homepage bullet alignment
    * cardify error pages
    * header bullet tweaks
    * Added canvas to 3 icons so all four match (#1144)
    * Recolored icons to #839EA8
    * Bullet sizing etc (#1154)
    * change a couple of ems to rems
    Custom 403 template (#669)
    
    * add 403 error page template, closes #664
    rename hourglass_site to data_explorer
    added 404 and 500 pages
    PSHCDT-87: UAA logout update
    PSHCDT-87: UAA logout update
    Adds admin link to user menu
    fixes focus on logo
    More for hero + prelim home card work
    Swaps in new logo
    minor adjustment to allow caret to be clickable
    use inline svg icon
    use plain JS; make new admin bundle; include usermenu js
    most of the styling implementation complete
    [WIP] starting markup for user dropdown menu
    rm header log out link
    wip nav
    fix inline forms + buttons
    add neat and override grid variables
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    remove test statement
    factor out header for use in admin templates
    Removed Beta Tag.
    urlencode 'next' param.
    Add sample users.
    Revert "Adjusts styles of user menu"
    
    This reverts commit 33c7a97796094225299ecd0723468601a6f46e52.
    Adjusts styles of user menu
    Restores full banner.html code
    
    Had trimmed it down in order to remove the gold banner from my local view
    Enlarges nav to base font size (16px)
    remove help-wanted link
    Advise devs to change site config if domain is weird
    Show dev banner in DEBUG, link to styleguide/docs.
    Adding OG and other meta tags to head (#2033)
    
    * Added OG and other meta tags to head
    * Added "capture" tag
    * Added new "striptext" simple tag
    remove card styles and replace with custom
    rejigger classes in templates
    More for hero + prelim home card work
    Misc style, structure for home hero
    Minor adjs
    fix merge conflict in header
    vendor bundles to match js bundles
    use webpack for all js bundles; rm browserify and pals
    load scripts in <head>
    move scripts to before_body_close block
    show card div before react app loads
    Add default <noscript> content for data explorer.
    More UI bugfixes (#1138)
    
    * add clearfix mixin and add to header row
    * truncate long filenames
    * fix homepage bullet alignment
    * cardify error pages
    * header bullet tweaks
    * Added canvas to 3 icons so all four match (#1144)
    * Recolored icons to #839EA8
    * Bullet sizing etc (#1154)
    * change a couple of ems to rems
    Changes to Schedule filter (#1159)
    Factor out <App> component.
    move the items to the right
    Add <LoadingIndicator> component.
    smallify banner text and remove descriptions
    add class for less-padded card
    Add <LaborCategory> component.
    Add <BusinessSize> JSX component.
    Add <Site> JSX component.
    Add <QueryType> JSX component.
    Add <ContractYear> JSX component.
    Get rid of redundant get_schedules template tag.
    Add a <Schedule> JSX component.
    Remove unneeded <input type=hidden>.
    fix reset button styles
    fix pages that didn't have card layouts
    Add vendor, schedule columns; remove unneeded code.
    WIP (broken build) - Begin <ResultsTable> JSX component.
    Add <ExportData> JSX component.
    Embed JSX components via data-embed-jsx attribute.
    Create an <Experience> JSX component.
    Add <EducationLevel> JSX component.
    (Mostly) Reactify 'proposed price' widget.
    Move histogram into a <Histogram> component.
    Migrate price highlights to <Highlights> component.
    Factor out a <Description> JSX component.
    Factor out a RestoreExcluded JSX component.
    fix inline forms + buttons
    fix divs to follow grid pattern
    Add nonce-based CSP to index page only.
    Use browserify for data-explorer. Fixes #917.
    fixes to buttons; error message placement and wording
    flexbox for pricing
    changing headings, titles, and form-field descriptions to sentence case
    copy edits from CALC home section of writing lab review
    fix selenium tests and radios in data explorer.
    resize icons and make structure hold up to resizing better
    don't disable critical JS in safe mode.
    Rename enable_js to safe_mode.
    Revert index to search by schedule rather than sin.
    Add filter support of SIN to the API.
    Add SIN prefix to schedule filter form.
    Implement safe mode.
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    fix up proposed price input and education dropdown
    rename hourglass_site to data_explorer
    move all hourglass_site/static into frontend
    fix experience range dropdowns
    include tooltipster and no-ui in their relevant scss files
    refactor index.scss into its components
    modernize gulpfile code; reorganize legacy js
    js and sass/css pipeline with gulp (#367)
    
    * add gulp for building sass and js with sourcemaps
    * setup container for running gulp during development
    * rm built static files from the repo
    * update README with gulp information
    * modify travis to run gulp build
    * remove ruby sass stuff
    * specify and install node version in travis
    * add new static_source vendor paths to CodeClimate ignore list
    basic color updates for wds
    Add frontend bits and documentation around s70 data
    don't show experience range if no other filters have been selected
    Add writing lab suggestions
    Edit search help text
    Update bottom margin of help text
    Update help text class
    Add search help text
    clean up autocomplete onSelect callback function, use minified version in template
    autocomplete edits
    
    - removed input delay for faster response
    - edited autocomplete library to have better handling of keyboard
    selections
    updating query param values
    Add tooltip info to Contract year and update more info class
    Add screen reader text
    Update id, label, value
    Remove sr class on legend
    Revert "Update name, id, etc"
    
    This reverts commit e9ae310c14b14bf8877206aa0175ca02a1889311.
    Update name, id, etc
    Revert "Update name, id, etc"
    
    This reverts commit bb635190456d0ea4c546940edf8a4926a4c20f41.
    Update name, id, etc
    Add filter and style
    Add alternate design for year out
    update dynamic sentence (description) generation
    
    #196
    Update to accessible grays
    Add light styling
    Add radio buttons for year out
    proposed price with decimal support in histogram
    hiding proposed price field
    unhiding proposed price for testing
    testing auto deploys
    adding html comment to test continuous deploy
    hide proposed price field so that we may deploy to production everything but this feature
    start of update description rewrite
    black label box for proposed price
    Add antialiasing for label
    label color for average price
    proposed price line
    Add accessible colors
    standard deviation label styling and rectangle height
    Add std deviation bar
    adding ability to use decimal in proposed price
    clear search to reset education multiselect and experience slider
    hiding proposed price
    fix education level field disappearing
    
    was an issue with conflicting class.
    formatting
    Remove price callouts from below graph
    show education levels selected on load with passed url parameters
    merge in education endpoint api
    education multi-select api integration
    proposed price input
    Style price callouts
    Add style updates
    Move button below and style callout
    Style price callouts
    set larger initial range, focus state with fields labels
    
    also update test
    include up to 45 years in experience
    
    also clean up comments
    adding std deviation calculation callouts
    first pass at adding standard deviation to the API
    add select inputs for years of experience
    hook up experience slider to api
    range slider on years of experience filter
    
    (not hooked up to api yet)
    Add sr-only content to select and update sr-only class
    Add legend to fieldset and screen reader offscreen class
    Add legend to fieldset
    adding href back in anchor tag for focus #173
    Add ceiling text to price tooltip/aria-label in table
    Remove ceiling from price label in table
    Update dropdown label by removing Min
    I added a preventDefault function on both of the dropdown anchor click
    functions so they won’t jump to the top of the page.
    
    Also removed href in the anchor tag in the html since it actually isn’t
    going anywhere.
    
    #173
    Add callouts below graph
    Add ceiling before price
    Style dropdown and make accessible
    Add multiselect html and css
    first pass at implementing more flexible education endpoint
    removing hidden class
    Use aria-label and use tooltipster
    Style download button
    Move download button below graph
    Add download button below histogram
    Add down arrow to button text
    Update graph button text
    Remove extra space in aria description
    Add tooltipster plugin
    adding IE9 modal fallback
    Experiment w tooltips
    first pass at histogram download
    Add aria-label to one table heading
    Change tooltip
    Add tooltip css and class
    Add div around table and set width + overflow
    Move loading indicator below title
    Add closing element div to row
    use existing way of updating export link
    adding api host into export link
    Move export button below filter
    Add rates explainer text
    Center avg price highlight
    Add average price highlight
    undo move loading indicator bc Firefox bug
    Remove extra padding
    move loading indicator to inside graph div
    Fix info link and style filter heading
    Style filter layout
    remove rows around filters
    remove columns from filters
    couple more tweaks
    Add schedule test
    content tweaks
    Add back deleted row
    Remove price filter
    Remove old commented out code
    Add vendor sortability back
    Alphabetize dropdown
    renaming experience filter to experience_range
    adding ability to see zero years experience results
    adding drop down to filter by experience range and creating supporting API functionality
    adding in link to get to schedule definitions
    adding schedule definitions to about page and rearranging filters
    uncomment schedule filter and show schedule column by default
    header tweaks, add descriptive sentence
    Update header styling
    Update description class name
    Add secondary description text
    Add search help text
    logo and header tweaks
    add titles to sortable headers
    Hide form for ie8 and change error title to h2
    Update alert message text
    Move script to footer on index.html
    Remove section tag from conditional comment
    Simplify downlevel-revealed conditional comments
    Fix conditional comments - take 2
    Fix conditional comments
    Add alert for people using IE8 or older
    Add conditional statement for JS in index.html
    add scope="col" to table headers, fix #98
    add scope to th elements
    fixes #99
    fixes #100
    fixes #101
    fixes #103
    rename .error to .error-message
    re-add #results-count, disable tick count test
    
    - I thought I added the "results-count" id back in, but maybe not.
    - The test for the number of tick counts is too brittle because it
      assumes a fixed number of histogram bins. This test isn't critical.
    move the query description and export button up, per #90
    enable label variations for some options
    moving stuff around, h5 -> h4
    restructure html, basic index element styles
    add graph class to histogram, top link to table
    shuffle shuffle
    bring back "results-count" id for (brittle) frontend tests
    new markup for query description
    add exclude link and hidden form input
    rename submit and reset buttons
    label it: "contains words" instead
    update query_type inputs to match the API
    add query type radio buttons
    add dollars prefix around price inputs
    experience number -> input, horizontal margin
    price__gt -> price__gte, as with lt
    Test that price filter is the last
    
    - Also fixed a regression in the filter input names
    move index styles to index.css, from inline scoped
    make form reset-able
    Front-end changes for price filter going from > to >=, etc.
    
    - Changed form field names so everything matches
    - Updated Selenium tests
    add filter_active class to any input with a value
    ui tweaks
    use 'Experience (years)' column heading
    change language of price range label per Trello
    add 'year(s)' suffix in min_years_experience cells
    make schedule column collapsible
    
    Now any column can be made collapsible by adding the "collapsible" class
    to its header. The state of collapsed headers isn't saved in the URL
    yet, but could be.
    make schedule column collapsible
    
    Now any column can be made collapsible by adding the "collapsible" class
    to its header. The state of collapsed headers isn't saved in the URL
    yet, but could be.
    add missing =
    sortable table headers
    move main script to index.js
    add submit button id, fix error form class
    no placeholders
    remove permalink
    add wage histogram
    
    We have a wage histogram, and I think it looks pretty nice.
    add loading indicator
    add loading state to price chart and table
    switch business size to a <select> input
    query string -> checkbox input
    add small business checkbox
    fix #26
    fix #23
    don't add ?format=csv to export link href, per #21
    added backend guts for csv export;
    change CSV export URI to /api/rates
    use HS and AA for edu values
    switch Associates and High School edu options
    Associates before High School, right?
    add HS and Assoc. education options
    add section titles
    don't show the results table until results are loaded
    style refactor with Skeleton
    add export CSV link
    add basic autocomplete UI for labor category
    update results table columns, size them better
    adjust column widths, fix td classes
    move row count to table caption, clean up
    hide hourly wage graph, don't sort results
    add outer div.container, spec in sass
    always use 2-decimal precision
    fix vendor and price columns
    use the columns from the wireframe
    add results table
    add hourly wage stats / min. experience chart
    add a plaecholder for hourly wage stats
    add site field options, comment out schedule
    use a better name for the graph selection
    clean up before bailing on errors
    hush
    add setFormData(), report errors
    s/worksite/site
    first stab prototype
    basic templates
    PSHCDT-87: UAA logout update
    PSHCDT-87: UAA logout update
    PSHCDT-87: UAA logout update
    PSHCDT-87: UAA logout update
    PSHCDT-87: UAA logout update
    PSHCDT-87: UAA logout update
    PSHCDT-87: UAA logout update
    PSHCDT-87: UAA logout update
    Moved main.css into head_meta so it's easier to remember to use it everywhere
    Adding OG and other meta tags to head (#2033)
    
    * Added OG and other meta tags to head
    * Added "capture" tag
    * Added new "striptext" simple tag
    Drops monospace font link into new _head.html
    Move GA and DAP HTML snippets into separate dir.
    make nav optional
    Get rid of dap-hacks.js and just autotrack ourselves.
    Don't include DAP on authenticated pages. Fixes #903.
    rename block tag for accuracy and apply it + new class name to steps
    rm API_HOST, WHITELISTED_IPS, and assoc code
    missed a couple old classes
    fix content width styles to apply more evenly
    reporpoise body_class tag to actually be a body class
    move jquery to package.json; webpack common
    vendor bundles to match js bundles
    use webpack for all js bundles; rm browserify and pals
    use npm modules for d3
    create new common js bundle and put usermenu there
    Show dev banner in DEBUG, link to styleguide/docs.
    Add <link rel='canonical'> to all pages.
    remove ethnio stuff (#1316)
    Add banner to show non-prod message (#1302)
    add franklin
    update site admin and factor out footer
    wip nav
    Add nonce-based CSP to index page only.
    make ethnio id configurable by env var (#1047)
    Add new ethnio script. Fixes #1009.
    factor out header for use in admin templates
    Additional improvements to Google Analytics (#869)
    
    * set custom dimensions to empty string if needed.
    * Move GA dimension-setting after ga('create').
    * Trigger GA pageview on ajaxform html injection.
    * Get rid of the user ID GA custom dimension.
    Add Modal Dialog for Canceling (#918)
    
    * add modal dialogs with a11y-dialog library
    * use modal dialogs for all Cancel links in Price List Upload and Region 10 Bulk Upload flows
    * handle_cancel on step_3_errors view so modal can POST cancel
    Use browserify for data-explorer. Fixes #917.
    add nav content wrapper and tab styles
    restructure nav to use flexbox and allow for more robust nav
    tabby things
    Remove ethnio script. Fixes #890. (#898)
    Load DAP asynchronously. Fixes #887, #282.
    get GA_TRACKING_ID from env, add context_processor for it (#855)
    Run GA even in safe mode, at top of HTML.
    Set GA custom dimension 1 to user ID.
    copy edits from CALC home section of writing lab review
    lowercasing G in government
    surround Add Price Data link with perm check
    Get rid of html.js / html.no-js classes.
    don't disable critical JS in safe mode.
    Rename enable_js to safe_mode.
    Implement safe mode.
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    rename hourglass_site to data_explorer
    move all hourglass_site/static into frontend
    Add indentation to HTML source.
    Use slim header for data capture. Fix #383.
    Add a basic outline of the 4 steps of data capture.
    JavaScript pipeline for new data-capture scripts (#391)
    
    * change to airbnb-base config, eslintignore all vendor folders
    * add gulp task for building babel+browserify'd data-capture script
    * add `gulp clean` task for cleaning built folders
    * some relatively small gulpfile modifications/cleanups
    Partial implementation of file upload widget.
    modernize gulpfile code; reorganize legacy js
    js and sass/css pipeline with gulp (#367)
    
    * add gulp for building sass and js with sourcemaps
    * setup container for running gulp during development
    * rm built static files from the repo
    * update README with gulp information
    * modify travis to run gulp build
    * remove ruby sass stuff
    * specify and install node version in travis
    * add new static_source vendor paths to CodeClimate ignore list
    Simple explainers for header icons (#296)
    
    * simple explainers for header icons
    * merge develop branch and fix overwritten SASS
    Add support for cloud.gov UAA authentication. (#317)
    
    * Add fake_uaa_provider app.
    * Add uaa_client app.
    * Add login link in footer, admin and logout links in header.
    * replace admin login w/ UAA login.
    * Document how to create staff users.
    Replace old 18F logo. Fixes #264.
    update email address
    updates DAP location, tightens GA settings
    set ethnio to use https
    fix
    add ethnio js
    moved to a separate CF space for dev env, updating travis deploy config
    testing auto deploys
    add IDIQ
    Add icon attribution
    wording tweaks
    Add vertical centering
    Add all icons to callout
    Add ceiling price icon and adjust size
    range slider on years of experience filter
    
    (not hooked up to api yet)
    Fix text in callouts
    Add callouts to header
    Add ceiling before price
    skip nav tweaks #153
    Add tooltipster plugin
    first pass at histogram download
    Update FAQ button label
    couple more tweaks
    remove extra br
    x-axis label tweak
    content tweaks
    fix conflict
    Remove last sentence from description
    Update fonts to Lato
    Add description text
    header tweaks, add descriptive sentence
    Update About button to be more descriptive
    Update header styling
    Update google fonts
    Remove home link
    Add new logo
    fix whitespace, busted comment
    fix #108
    logo and header tweaks
    fix whitespace, busted comment
    fix #108
    Fix typo in conditional comment
    Simplify downlevel-revealed conditional comments
    Fix conditional comments - take 2
    Fix conditional comments
    Add conditional statement to JS
    upped from alpha to beta
    use API_HOST in JS, too
    added analytics and dap
    dangling Hourglass refs, update manifest, README hourglass refs
    for x-domain requests in IE9
    add viewport meta tag per #86
    logo, header & footer tweaks
    new logo, header tweaks
    add USA flag, tweaks
    wrap some HTML
    add tabindex to skip-nav link
    add basic page wrapping markup
    switch to api.data.gov
    add formdb.js
    add history API polyfill, ditch type="text/javascript"
    make it work in IE9
    style refactor with Skeleton
    add 'head' block to base template
    add jquery, hourglass.js
    basic templates
    Adding OG and other meta tags to head (#2033)
    
    * Added OG and other meta tags to head
    * Added "capture" tag
    * Added new "striptext" simple tag
    update classes on a whole boatload of pages
    More UI bugfixes (#1138)
    
    * add clearfix mixin and add to header row
    * truncate long filenames
    * fix homepage bullet alignment
    * cardify error pages
    * header bullet tweaks
    * Added canvas to 3 icons so all four match (#1144)
    * Recolored icons to #839EA8
    * Bullet sizing etc (#1154)
    * change a couple of ems to rems
    Custom 403 template (#669)
    
    * add 403 error page template, closes #664
    rename hourglass_site to data_explorer
    added 404 and 500 pages
    Adding OG and other meta tags to head (#2033)
    
    * Added OG and other meta tags to head
    * Added "capture" tag
    * Added new "striptext" simple tag
    update classes on a whole boatload of pages
    More UI bugfixes (#1138)
    
    * add clearfix mixin and add to header row
    * truncate long filenames
    * fix homepage bullet alignment
    * cardify error pages
    * header bullet tweaks
    * Added canvas to 3 icons so all four match (#1144)
    * Recolored icons to #839EA8
    * Bullet sizing etc (#1154)
    * change a couple of ems to rems
    Custom 403 template (#669)
    
    * add 403 error page template, closes #664
    update classes on a whole boatload of pages
    Use cg-django-uaa for cloud.gov UAA auth.
    adjust header nav padding and add card to logged-out page
    spruce up the Logged Out page
    Add support for cloud.gov UAA authentication. (#317)
    
    * Add fake_uaa_provider app.
    * Add uaa_client app.
    * Add login link in footer, admin and logout links in header.
    * replace admin login w/ UAA login.
    * Document how to create staff users.
    Remove add price data tutorial link.
    Remove extraneous conditional clause from nav header.
    Move “Analyze prices” functionality behind authorization.
    RE-fixes merge conflict
    Removes admin tab from nav
    Shortens two nav tab labels
    Adds "Add price data" tab to non-logged-in site
    
    ... which links to the tutorial
    remove row from nav
    Roughs in nav that sticks to card edge
    Minor adjs
    fix merge conflict in header
    Add tutorial page.
    Add 'Analyze a price list' tab in nav.
    More UI bugfixes (#1138)
    
    * add clearfix mixin and add to header row
    * truncate long filenames
    * fix homepage bullet alignment
    * cardify error pages
    * header bullet tweaks
    * Added canvas to 3 icons so all four match (#1144)
    * Recolored icons to #839EA8
    * Bullet sizing etc (#1154)
    * change a couple of ems to rems
    get nav structure working
    wip nav
    PSHCDT-87: UAA logout update
    PSHCDT-87: UAA logout update
    PSHCDT-87: UAA logout update
    PSHCDT-87: UAA logout update
    Revert "Dev Deployment"
    
    This reverts commit 7273c25eb2d02fc4380a057f8252e877a9a050bd.
    Dev Deployment
    Makes "footer" btn "white," style fix
    Divider class rename
    Makes class name more BEM-esque
    Adds logged-in design
    Revert "Adds logged-in design"
    
    This reverts commit 3d7c108bac1597224e815d9b9618760b19fe8a6e.
    Adds logged-in design
    Improved footer blocking
    update buttons to use uswds
    Widened get in touch block and floated logos
    Use cg-django-uaa for cloud.gov UAA auth.
    Tag and release v2.1.0 (#1303)
    add link to /updates/ in footer (#1271)
    move icon credits to About page
    Add HELP_EMAIL setting; Use it in reply-to for emails (#1264)
    Somethings afoot er (#1160)
    
    * Update footer styling and content to match new design
    add info about being logged in to footer
    unbold email address, adjust padding in bullets, uncaps nav
    only show icon credits on home page
    update site admin and factor out footer
    formatting changes
    Updated about page and calc log
    UI Changes
    Adding OG and other meta tags to head (#2033)
    
    * Added OG and other meta tags to head
    * Added "capture" tag
    * Added new "striptext" simple tag
    Add ScheduleMetadata model.
    fix incorrectly applied card classes
    update styleguide and remove old comments
    fix about page
    Removes the (now) superfluous icon credits card from About
    Tag and release v2.1.0 (#1303)
    Linked image titles instead of names, added curly quotes
    move icon credits to About page
    cardify about
    minor grammar, capitalization, punctuation changes to about page
    Update schedule help text to include SIN.
    rename hourglass_site to data_explorer
    Add frontend bits and documentation around s70 data
    Update schedule markup
    Add back arrow to back button on About
    add back to home link
    bunch of revisions to about page content
    adding schedule definitions to about page and rearranging filters
    bye bye about.css
    about page edits
    about page edits
    about page
    basic about page
    PSHCDT-87:CALC's Session Timeout updated
    PSHCDT-87:CALC's Session Timeout updated
    Moved main.css into head_meta so it's easier to remember to use it everywhere
    Adding OG and other meta tags to head (#2033)
    
    * Added OG and other meta tags to head
    * Added "capture" tag
    * Added new "striptext" simple tag
    Move GA and DAP HTML snippets into separate dir.
    Move GA and DAP HTML snippets into separate dir.
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    first pass at loader
    Change "NEW" to "UNREVIEWED" and "UNAPPROVED" to "RETIRED" (#1083)
    
    closes #1082
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    Rename 'hourglass' to 'calc'. Fixes #93.
    Change "NEW" to "UNREVIEWED" and "UNAPPROVED" to "RETIRED" (#1083)
    
    closes #1082
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    first pass at loader
    PSHCDT-87: UAA logout update
    PSHCDT-87:CALC's Session Timeout update for account
    PSHCDT-87: UAA logout update
    PSHCDT-87:CALC's Session Timeout update for account
    rm empty card footer div on account page
    
    fixes #1805
    update classes on a whole boatload of pages
    missed a button prefix
    use tz_timestamp for price list and account views (#1223)
    fix to show total_unreviewed instead of total_new (#1137)
    Change "NEW" to "UNREVIEWED" and "UNAPPROVED" to "RETIRED" (#1083)
    
    closes #1082
    fix pages that didn't have card layouts
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    build failure updated
    additional fields in serializers
    Add an /api/schedules/ endpoint.
    Update search indices in bulk methods.
    Update search indexes in ContractListSerializer. Fixes #1974.
    Run mypy on all files. Fixes #1803.
    Remove TODO.
    Add serializer tests, fix bug.
    Add a load_api_data management cmd (see #1028).
    Revert "Add normalized labor category field."
    
    This reverts commit bf9013b75a9e40916366a270c0232c18ee7f3321.
    
    Ugh, I don't like the renaming of labor_category to _labor_category
    because ORM db queries require us to query on _labor_category which
    makes things confusing. Would rather just implement a save() hook
    and make sure that we remember to re-index on bulk uploads or whatever.
    Add normalized labor category field.
    Add filter support of SIN to the API.
    Fix all remaining PEP8 violations involving line length.
    Ran 'autopep8 -i -r .' on code.
    
    These are only whitespace changes, and they don't even fix all the
    whitespace issues raised by flake8.
    Upgrade to Django REST Framework 3.1.
    adding unit test for next and second year price
    rendering relevant rate in table
    first pass at adding standard deviation to the API
    added exclude functionality
    add wage histogram to /api/rates/ endpoint
    added current_price field to serializer
    updated DRF to v3, fixes #13
    added new parameters to readme
    added basic api endpoint, updated loader to work with new sheet from Kelly
    first pass at loader
    removed script tags
    netsparker issue fix
    netsparker issue fix
    Remove extraneous multi_phrase_search method per Joe's suggestion.
    Corrected unintentional reverts
    WIP: Hypothetical vendor name and id search
    Final view refactoring
    reverted method move
    Working on test problem
    WIP: de-voodoo search API
    Link to /api/rates/ and /api/schedules/ in API docs.
    Add an /api/schedules/ endpoint.
    Document API 'sort' field better. Fixes #1889.
    Add more docs for API return values.
    Document histogram API results and list result schema. Fixes #69.
    Validate 'sort' field in API requests. Fixes #257.
    Bring back the intro from api.md to the DRF docs.
    Document API schema better.
    Attempt to document API via DRF.
    add + to excel chars and amend tests
    
    The plus '+' character is another character that can be used to start
    an Excel formula, so I added it to the list of characters to look for
    when prepending an apostrophe to the query. I also amended the
    associated test to urlencode the query string when making the test
    requests. Also, added a link to information about the vulnerability and
    solution.
    prefix excel formula chars with apostrophe in query csv export text
    
    The raw query string is written to the CSV export of price search results.
    If the query starts with excel formula characters, then when the CSV
    is opened in Excel, lots of (potentially bad) stuff can happen as Excel
    processes the formula. This PR mitigates this issue by prefixing the query
    string with an apostrophe if it starts with an Excel formular character.
    That way, Excel will treat the cell content as plain text rather than a formula.
    Limit autocomplete results on server-side
    add support for quote-delimited query strings
    show normalized labor categories in autocomplete field
    Revert "Add normalized labor category field."
    
    This reverts commit bf9013b75a9e40916366a270c0232c18ee7f3321.
    
    Ugh, I don't like the renaming of labor_category to _labor_category
    because ORM db queries require us to query on _labor_category which
    makes things confusing. Would rather just implement a save() hook
    and make sure that we remember to re-index on bulk uploads or whatever.
    Fix autocomplete.
    Add normalized labor category field.
    Tag and release v2.1.0 (#1303)
    Don't allow 'contains phrase' searches w/ empty string terms
    Make filters w/ 0 experience work. Fixes #1206. (#1209)
    Revert index to search by schedule rather than sin.
    Add test for API sin=Consolidated case.
    Add filter support of SIN to the API.
    Factor out ContractsQuerySet.multi_phrase_search().
    Move convert_to_tsquery to contracts.models.
    rm unused stddev util and tests
    use single call to aggregate
    use StdDev from db instead of statistics.py
    Add doctest for convert_to_tsquery().
    Get rid of unused imports, files, variables.
    Fix all remaining PEP8 violations involving line length.
    Ran 'autopep8 -i -r .' on code.
    
    These are only whitespace changes, and they don't even fix all the
    whitespace issues raised by flake8.
    Replace numpy (#337)
    
    - replace `numpy.std` with value calculated from `statistics.pvariance`
    - replace `numpy.histogram` with simple local implementation
    - remove numpy from requirements.txt
    Set first_standard_deviation to null instead of NaN.
    Fix numpy warning. Fixes #250.
    Upgrade to Django REST framework 3.2.5.
    Upgrade to Django REST Framework 3.1.
    merge master
    add next and second year prices to the CSV
    updating query param values
    filtering empty list items out of query building
    removing unneeded lines
    cleanup and documentation
    cleanup and documentation
    exclude records w/o rates for the selected contract period regardless of year filter
    first pass at adding contract year filter
    reverting autocomplete endpoint
    rewriting autocomplete endpoint to give a list of all labor categories
    fix oversight wrt splitting on commas
    refactoring query section of API view based on feedback from @khandelwal
    strip's default functionality works better for us
    adding inline documentation for character stripping in queries
    fixing bugs with double spaces turning into double ampersands in search queries
    fix for app erroring when getting parens in the search string
    first pass at back end for searching multiple labor categories
    cleaning up and renaming
    first pass at adding standard deviation to the API
    first pass at implementing more flexible education endpoint
    Updating doc string
    renaming experience filter to experience_range
    adding drop down to filter by experience range and creating supporting API functionality
    adding search and filter values into export CSV
    remove python2-specific imports
    Updated check on exclude param per @arowla comments
    added exclude functionality
    added feature for exclusions in api
    add a docstring to GetAutocomplete.get(), whitespace
    preliminary support for /api/search?query_type
    Improved Returns line of docstring
    Added docstring for queryset and its filter params
    Change price filters from < > to <= >=
    Allow API users to choose the precision of their text match
    
    - Adding query_type param
    using paginator count attribute instead of queryset count method
    added migration for updating search index, fixed pagination query
    Added sorting to API
    
    - Added sorting, supports descending order with '-', and multiple sort
      columns can be comma-separated.
    - Added tests.
    Test improvements and business_size bug fix
    
    - Added site filter test
    - Added business size filter tests
    - Fixed business size filter bug
    - Separated out test data creation to be per-test
    quantize the average to 2 decimal places
    add back minimum, maximum and average wage stats
    Improved API test coverage
    
    - Added tests for multi-word queries
    - Added tests for education level
    - Added tests for min and max experience
    Allowed filtering by both price__gt and price__lt
    Added greater than and less than price filtering to API
    
    - Added the filters
    - Wrote tests for each filter
    - Replaced fixture with object factory to speed up tests
    add wage histogram to /api/rates/ endpoint
    actual updated business size filter
    fixes #24, closes #22
    added py2 support for csv export
    made indent uniform, updated empty results
    use unicodecsv instead of built-in csv module
    added backend guts for csv export;
    added csv export
    added autocomplete search endpoint
    updated DRF to v3, fixes #13
    adds price filter, closes #7
    fixes #6, adds test for it, and testing fixture
    add number of contracts to hourly_wage_stats aggregations
    fix incorrect grouping of hourly_wage_stats in /api/rates
    added price sorting
    added new parameters to readme
    converted avg stats to fixed point numbers
    added stats by min level experience to api
    added pagination and q search parameter
    added basic api endpoint, updated loader to work with new sheet from Kelly
    first pass at loader
    Annotate return values.
    Type annotate api/utils.py.
    rm unused stddev util and tests
    fix get_histogram to work with Decimals (#341)
    Replace numpy (#337)
    
    - replace `numpy.std` with value calculated from `statistics.pvariance`
    - replace `numpy.histogram` with simple local implementation
    - remove numpy from requirements.txt
    Add an /api/schedules/ endpoint.
    Redirect /api/ to /api/docs/.
    Bring back the intro from api.md to the DRF docs.
    Link back to /docs/ from /api/docs/.
    Attempt to document API via DRF.
    Get rid of django.conf.urls.patterns().
    use preferred url import syntax, fixes #318; pep8 (#323)
    fixing typo
    resetting the autocomplete endpoint location now that we're sticking with the original
    rewriting autocomplete endpoint to give a list of all labor categories
    adding search and filter values into export CSV
    added backend guts for csv export;
    added fixes to data load and current_price field
    added basic api endpoint, updated loader to work with new sheet from Kelly
    Attempt to document API via DRF.
    Ran 'autopep8 -i -r .' on code.
    
    These are only whitespace changes, and they don't even fix all the
    whitespace issues raised by flake8.
    Add tests for pagination of /api/rates/.
    Upgrade to Django REST Framework 3.1.
    first pass at loader
    Remove extraneous multi_phrase_search method per Joe's suggestion.
    Update search indexes in ContractListSerializer. Fixes #1974.
    Add serializer tests, fix bug.
    Move load_api_data to api package.
    Add more test.
    Add another test.
    Add another test.
    Simplify test
    Add more tests.
    Add more tests.
    Add one basic live server test case.
    Redirect /api/ to /api/docs/.
    Attempt to document API via DRF.
    Add doctest for convert_to_tsquery().
    first pass at loader
    Add working basic search by vendor_id or idv_piid, plus simple tests.
    WIP: Hypothetical vendor name and id search
    Final view refactoring
    Remove Contract.piid field. Fixes #1873.
    Tweak flake8 config. Fixes #1818.
    Limit autocomplete results on server-side
    fix convert_to_tsquery regex to accept numeric chars
    
    fixes #1475
    add support for quote-delimited query strings
    Tag and release v2.1.0 (#1303)
    Don't allow 'contains phrase' searches w/ empty string terms
    Make filters w/ 0 experience work. Fixes #1206. (#1209)
    Revert index to search by schedule rather than sin.
    Fix finicky year_out test case.
    Add test for API sin=Consolidated case.
    Add filter support of SIN to the API.
    Move convert_to_tsquery to contracts.models.
    Fix all remaining PEP8 violations involving line length.
    Ran 'autopep8 -i -r .' on code.
    
    These are only whitespace changes, and they don't even fix all the
    whitespace issues raised by flake8.
    Replace numpy (#337)
    
    - replace `numpy.std` with value calculated from `statistics.pvariance`
    - replace `numpy.histogram` with simple local implementation
    - remove numpy from requirements.txt
    Remove spurious pretty-print in test.
    Set first_standard_deviation to null instead of NaN.
    Fix numpy warning. Fixes #250.
    Add tests for pagination of /api/rates/.
    Switch to py.test (#278)
    
    * use `py.test` for running tests
    * remove `nose` since it is no longer used
    merge master
    adding unit test for next and second year price
    adding back in empty results check on nonalphanumeric test
    adds test for multiple labor category searches
    adding tests for convert_to_tsquery
    fix for app erroring when getting parens in the search string
    fixing spacing
    adding tests for education endpoint
    adding unit test for first std deviation
    renaming experience filter to experience_range
    improving test
    tests for experience filter
    adding drop down to filter by experience range and creating supporting API functionality
    removed _quantity param from model mommy calls
    added exclude functionality
    added feature for exclusions in api
    Fleshed out min_education filtering test
    
    - Made certain it is performing categorical filtering, not alphabetical
    Preserved order_by precedence when there are multiple params
    
    - Refactored all order_by()s into a single extra(), since Django deliberately
    discards all but the last order_by
    - Tests now allow checking just a subset of expected keys against results-- more concise tests!
    Enabled categorical sorting by education_level
    
    - Tests:
      - single column ascending,
      - single column descending
    - Improved assertResultsEqual to get better sorting feedback
    Added a failing test for education level sorting
    Change price filters from < > to <= >=
    Allow API users to choose the precision of their text match
    
    - Adding query_type param
    Fix model_mommy object generation, add Nose
    
    - Ensure tests are independent by generating a new recipe for each test
    - Add nose as django test runner to allow more fine-grained test runs
    Added Contract model tests
    
    - contracts/models.py coverage at 100%
    - moved mommy_recipes to contracts module to reflect association
      with that model
    Added sorting to API
    
    - Added sorting, supports descending order with '-', and multiple sort
      columns can be comma-separated.
    - Added tests.
    Test improvements and business_size bug fix
    
    - Added site filter test
    - Added business size filter tests
    - Fixed business size filter bug
    - Separated out test data creation to be per-test
    Add test for schedule API param
    
    - Add model_mommy recipe for contract object generation
    add another histogram bins test
    add histogram length tests
    add basic tests for minimum, maximum and average
    Improved API test coverage
    
    - Added tests for multi-word queries
    - Added tests for education level
    - Added tests for min and max experience
    Allowed filtering by both price__gt and price__lt
    Improving test output and fixing broken test
    Added greater than and less than price filtering to API
    
    - Added the filters
    - Wrote tests for each filter
    - Replaced fixture with object factory to speed up tests
    fixes #6, adds test for it, and testing fixture
    first pass at loader
    rm unused stddev util and tests
    Ran 'autopep8 -i -r .' on code.
    
    These are only whitespace changes, and they don't even fix all the
    whitespace issues raised by flake8.
    fix get_histogram to work with Decimals (#341)
    Replace numpy (#337)
    
    - replace `numpy.std` with value calculated from `statistics.pvariance`
    - replace `numpy.histogram` with simple local implementation
    - remove numpy from requirements.txt
    Validate 'sort' field in API requests. Fixes #257.
    add + to excel chars and amend tests
    
    The plus '+' character is another character that can be used to start
    an Excel formula, so I added it to the list of characters to look for
    when prepending an apostrophe to the query. I also amended the
    associated test to urlencode the query string when making the test
    requests. Also, added a link to information about the vulnerability and
    solution.
    fix flake8 errors
    prefix excel formula chars with apostrophe in query csv export text
    
    The raw query string is written to the CSV export of price search results.
    If the query starts with excel formula characters, then when the CSV
    is opened in Excel, lots of (potentially bad) stuff can happen as Excel
    processes the formula. This PR mitigates this issue by prefixing the query
    string with an apostrophe if it starts with an Excel formular character.
    That way, Excel will treat the cell content as plain text rather than a formula.
    Limit autocomplete results on server-side
    Move load_api_data to api package.
    first pass at loader
    Move load_api_data to api package.
    Rename pbar to progress_bar.
    Add more test.
    Factor out process_pages().
    Add another test.
    Remove extraneous code.
    Add more tests.
    Add progress bar via tqdm.
    Add a load_api_data management cmd (see #1028).
    Move load_api_data to api package.
    first pass at loader
    Add temporary cloudgov-proxy directory.
    Add temporary cloudgov-proxy directory.
    Add temporary cloudgov-proxy directory.
    Update cloud.gov deploy instructions
    Add notes on cleaning up aws30 the following week.
    Add prereqs section to cloudgov-proxy/README.md
    Add temporary cloudgov-proxy directory.
    Add temporary cloudgov-proxy directory.
    Add temporary cloudgov-proxy directory.
    Update cloud.gov deploy instructions
    Add temporary cloudgov-proxy directory.
    Update cloud.gov deploy instructions
    Add temporary cloudgov-proxy directory.
    Add temporary cloudgov-proxy directory.
    Update cloud.gov deploy instructions
    Add temporary cloudgov-proxy directory.
    Add NLTK's Averaged Perceptron Tagger .pickle file to repository instead of downloading it on every build, and make changes to build files and to price analysis reflecting those changes.
    upgraded to stack cflinuxfs3
    upgraded to stack cflinuxfs3
    Removed new Relic From Application
    Removed new Relic From Application
    extract more manifest defaults; rm toplevel services key
    add app-level service bindings
    upgrade to redis 3.2 service
    Remove DISABLE_COLLECTSTATIC from calc-rqscheduler too.
    Remove DISABLE_COLLECTSTATIC for calc-rqworker. Fixes #1599.
    Specify prod domain via routes property (#1204)
    GovCloud deployment migration (#1091)
    
    * Migrate cloud.gov deployments to the GovCloud environment.
    * Setup a staging deployment (closes #950, closes #904)
    * Add CI deploys to calc-dev (closes #1037)
    Production deployment stuff (#819)
    
    * add production manifests
    * rename db-calc-x to calc-db
    * fill in deploy.md; DISABLE_COLLECTSTATIC on non-web instances
    * update deploy.md
    * add note about initial superuser, closes #348
    Add support for periodic tasks and send admin approval reminder email (#655)
    
    * install rq-scheduler
    * setup docker and CF apps for rqworker container
    * add email template and method for sending approval reminder
    * use custom AppConfig that adds scheduled admin reminder email job
    * send approval reminders to all superusers who have email addresses
    * add DefaultDataCaptureApp; load app based on IS_RQ_SCHEDULER
    * Add a ScheduledJobsPanel to DjDT.
    need to set EMAIL_URL in both apps
    add separate app for launching rqworker
    add calc-redis to services; sandbox use console for EMAIL_URL
    create manifests/ folder; target specific manifest for auto-deploy;
    upgraded to stack cflinuxfs3
    upgraded to stack cflinuxfs3
    Removed new Relic From Application
    Removed new Relic From Application
    extract more manifest defaults; rm toplevel services key
    add app-level service bindings
    upgrade to redis 3.2 service
    Remove DISABLE_COLLECTSTATIC from calc-rqscheduler too.
    Remove DISABLE_COLLECTSTATIC for calc-rqworker. Fixes #1599.
    Specify prod domain via routes property (#1204)
    GovCloud deployment migration (#1091)
    
    * Migrate cloud.gov deployments to the GovCloud environment.
    * Setup a staging deployment (closes #950, closes #904)
    * Add CI deploys to calc-dev (closes #1037)
    Switch to autopilot plugin for zero-downtime deploys (#885)
    
    * use custom deploy script that uses zero-downtime-push
    * update deploy with autopilot instructions
    * rm prod-a and -b references and manifests
    * increase rqworker memory, ref #888
    Production deployment stuff (#819)
    
    * add production manifests
    * rename db-calc-x to calc-db
    * fill in deploy.md; DISABLE_COLLECTSTATIC on non-web instances
    * update deploy.md
    * add note about initial superuser, closes #348
    Add support for periodic tasks and send admin approval reminder email (#655)
    
    * install rq-scheduler
    * setup docker and CF apps for rqworker container
    * add email template and method for sending approval reminder
    * use custom AppConfig that adds scheduled admin reminder email job
    * send approval reminders to all superusers who have email addresses
    * add DefaultDataCaptureApp; load app based on IS_RQ_SCHEDULER
    * Add a ScheduledJobsPanel to DjDT.
    add separate app for launching rqworker
    add calc-redis to services; sandbox use console for EMAIL_URL
    add new relic documentation and settings
    create manifests/ folder; target specific manifest for auto-deploy;
    upgraded to stack cflinuxfs3
    upgraded to stack cflinuxfs3
    Removed new Relic From Application
    Removed new Relic From Application
    extract more manifest defaults; rm toplevel services key
    add app-level service bindings
    upgrade to redis 3.2 service
    Remove DISABLE_COLLECTSTATIC from calc-rqscheduler too.
    Remove DISABLE_COLLECTSTATIC for calc-rqworker. Fixes #1599.
    Specify prod domain via routes property (#1204)
    GovCloud deployment migration (#1091)
    
    * Migrate cloud.gov deployments to the GovCloud environment.
    * Setup a staging deployment (closes #950, closes #904)
    * Add CI deploys to calc-dev (closes #1037)
    increase memory on staging app and rqworker
    Production deployment stuff (#819)
    
    * add production manifests
    * rename db-calc-x to calc-db
    * fill in deploy.md; DISABLE_COLLECTSTATIC on non-web instances
    * update deploy.md
    * add note about initial superuser, closes #348
    Add support for periodic tasks and send admin approval reminder email (#655)
    
    * install rq-scheduler
    * setup docker and CF apps for rqworker container
    * add email template and method for sending approval reminder
    * use custom AppConfig that adds scheduled admin reminder email job
    * send approval reminders to all superusers who have email addresses
    * add DefaultDataCaptureApp; load app based on IS_RQ_SCHEDULER
    * Add a ScheduledJobsPanel to DjDT.
    add separate app for launching rqworker
    add calc-redis to services; sandbox use console for EMAIL_URL
    add new relic documentation and settings
    create manifests/ folder; target specific manifest for auto-deploy;
    link to linting.md from editors.md.
    Copy edits.
    Add docs for linting, type-checking, and editor integration.
    Removed New Relic From Documentation
    Removed New Relic From Documentation
    Unhyphenate server-side
    Add more docs about new relic.
    Rename 'hourglass' to 'calc'. Fixes #93.
    clear our some old TODO comments
    migrate to CircleCI
    
    - raise real Exception in test_selenium
    - remove debug print statement in styleguide tests
    - comment out WebDriver/Sauce test stuff because no time to get it working right now
    - upgrade to python 3.6.2
    add info about production_tests to monitoring.md
    Add docs/monitoring.md. Fixes #1518.
    Use the cool admonition tip class. pdb -> ipdb.
    update docker docs. Fix #1313.
    update link to 18f docker dev guide
    default to dockerized project setup
    Remove load_data and load_s70 commands. Fixes #1028.
    update docs with yarn info
    switch to using yarn for node packages
    Add docs/email.md
    Add create-aws-instance.sh script.
    Fix docker cloud setup, hopefully.
    Update docs, add docker-update.sh.
    Make cloud docker-compose.override.yml more DRY. Fixes #1364.
    Remove weird unicode character from docker.md.
    Add Sphinx docs/ dir.
    up no_output_timeout for circle
    bump changelog version
    correct schedule number in changelog
    Updated changelog.
    Release v3.0.1.
    updated changelog
    Release v3.0.0.
    Updated changelog.
    Release v2.10.0.
    updated changelog
    Updated changelog
    Release v2.9.1.
    update changelog
    Release v2.9.0.
    Update CHANGELOG.md.
    Update 'unreleased' section of changelog.
    Release v2.8.6.
    Add to changelog.
    Release v2.8.5
    update changelog for 2.8.5 release
    Release v2.8.4
    Update changelog for v2.8.4 release
    Release v2.8.3.
    Add changelog info about #1594.
    Release v2.8.2.
    
    - update changelog and bump version to 2.8.2
    Release v2.8.1.
    Add more to changelog.
    Update changelog.
    Release v2.8.0
    update changelog for 2.8.0 release candidate
    Release v2.7.2.
    udate changelog for v2.7.2 release
    Release v2.7.1
    update unreleased section for release
    Release v2.7.0
    Add to changelog.
    update changelog for 2.7.0 release
    Release v2.7.0
    Add to changelog.
    update changelog for 2.7.0 release
    Release v2.6.0
    update in preparation of v2.6.0 release
    Release v2.5.1.
    update changelog for 2.5.1 release
    Release v2.5.0
    include admin styling bugfixes
    update changelog in prep of v2.5.0 release
    Release v2.4.0
    Mention synonyms in changelog.
    update changelog for v2.4.0 release
    Release v2.3.0.
    update unreleased section in preparation of v2.3.0 deploy
    Show changelog in Sphinx docs.
    Release v2.2.0
    update changelog in anticipation of 2.2.0 release (#1332)
    Tag and release v2.1.0 (#1303)
    Release v2.1.0.
    Add release notes to changelog.
    Release v2.0.0.
    Changelog mentions schedule 70 and region 10.
    Provide context around PSS change.
    Update 'unreleased' section of changelog.
    Add CHANGELOG.md.
    fix markdown oopses
    Minor updates to frontend docs.
    reference links are a thing
    fix paths and update to mention 2 var files
    add note about where the base template is
    add styleguide link again
    document Sass conventions and comment main.scss
    update links and add section about sass
    Rename 'hourglass' to 'calc'. Fixes #93.
    use docker-compose for all referenced commands
    fix some docs about qunit tests
    assume docker is being used
    modify docker analyze-webpack instructions/port bindings
    
    also removes somme duplicated content from a funky merge
    added "of" :)
    really fix those stash conflicts
    rearrange classes in a more sensical way
    finish LoadableWrapper and add tests
    
    Also document the webpack-bundle-analyzer workflow for visualizing the data explorer bundles.
    Use `yarn` instead of `npm run` everywhere
    
    We switched to `yarn` a while back but didn't update various docs and tooling to use it in place of `npm` or `npm run`.
    
    Closes #1541.
    update docs with yarn info
    Explain how to use jest directly.
    Add section on django admin UI templates.
    Replace 'front-end' with 'front end'.
    Add a basic front-end guide. Fixes #1360.
    Remove link to unused staging instance
    update deployment docs
    Tag separately, wait for CircleCI less often.
    Swap steps 1 and 2.
    Merge master (not the rc) into develop at the end.
    Remove 'sh' after triple backtick.
    Rename 'hourglass' to 'calc'. Fixes #93.
    rm staging tier of deployments
    use docker-compose for all referenced commands
    Add notes to release.md about waiting for CircleCI to finish.
    Add a PR link from staging to master in release.md.
    Fix PR link in docs/release.md.
    minor release.md tweeks and test fix
    
    - add more descriptive PR names for releases to staging and production
    - fix changelog release test to allow release dates that are also on the same
      day as the previous one
    use 3-branch deploy system
    migrate to CircleCI
    
    - raise real Exception in test_selenium
    - remove debug print statement in styleguide tests
    - comment out WebDriver/Sauce test stuff because no time to get it working right now
    - upgrade to python 3.6.2
    Move RELEASE.md to docs/release.md.
    Mention not to squash or rebase in RELEASE.md.
    Tag and release v2.1.0 (#1303)
    update instructions to include staging deployment (#1254)
    Document release process and add associated tooling (#1215)
    Rename 'hourglass' to 'calc'. Fixes #93.
    Raise exception if relative URL in markdown docs doesn't exist
    OMG BANDIT
    BELAY THAT ORDER
    get sphinx docs version from hourglass/version.py.
    Auto-generate sphinx docs in gulp, mount at /docs/.
    fix flake8 errors introduced by sphinx-quickstart.
    Add Sphinx docs/ dir.
    Copy edits.
    Add docs for linting, type-checking, and editor integration.
    Removed New Relic From Documentation
    Removed New Relic From Documentation
    Add more docs about new relic.
    Move GA and DAP HTML snippets into separate dir.
    Add docs for analytics. Fixes #847.
    Add docs for linting, type-checking, and editor integration.
    Add docs/ci.md. Fixes #1839.
    Add /data-quality-report/ view.
    'changelog' -> 'change log'
    Link to /updates/ instead of putting changelog in /docs/.
    Add docs for analytics. Fixes #847.
    Replace api.md w/ link to /api/docs/.
    update circle script and deploy docs
    remove updating_data.md.
    Get rid of selenium.md and most selenium env vars.
    Add docs/monitoring.md. Fixes #1518.
    Add a basic front-end guide. Fixes #1360.
    Get rid of contributing-internal.md. Fixes #1359.
    Add docs/email.md
    Link back to CALC home, GitHub from docs sidebar.
    Link to style guide in docs.
    Move CONTRIBUTING-internal.md to docs/, link to it in TOC.
    Show changelog in Sphinx docs.
    Split TOC into subsections.
    Move RELEASE.md to docs/release.md.
    Add Sphinx docs/ dir.
    use docker-compose for all referenced commands
    Keep a long-lived WebDriver instance through the whole test run.
    Get rid of selenium.md and most selenium env vars.
    Obliterate all references to phantomjs.
    Replace 'front-end' with 'front end'.
    Add a basic front-end guide. Fixes #1360.
    Add Sphinx docs/ dir.
    Removed New Relic From Documentation
    Removed New Relic From Documentation
    Add docs for analytics. Fixes #847.
    update circle script and deploy docs
    rm staging tier of deployments
    rm API_HOST, WHITELISTED_IPS, and assoc code
    upgrade to redis 3.2 service
    add docs on use of identity provider service
    migrate to CircleCI
    
    - raise real Exception in test_selenium
    - remove debug print statement in styleguide tests
    - comment out WebDriver/Sauce test stuff because no time to get it working right now
    - upgrade to python 3.6.2
    Remove out-of-date cloud.gov sandbox instructions. Fixes #1361.
    Maybe make API docs less confusing
    fix minor typo in docs
    Add Sphinx docs/ dir.
    Document production_tests in deploy.md.
    specify calc-prod.app.cloud.gov as backend host (#1311)
    add note about scaling down for memory (#1214)
    GovCloud deployment migration (#1091)
    
    * Migrate cloud.gov deployments to the GovCloud environment.
    * Setup a staging deployment (closes #950, closes #904)
    * Add CI deploys to calc-dev (closes #1037)
    Init New Relic agent in wsgi.py (#906)
    
    * update newrelic
    * use new attributes.exclude instead of deprecated capture_params
    * init New Relic agent in wsgi.py instead of using run-command
    * default `load_cups_from_vcap_services` to `'calc-dev'`
    Switch to autopilot plugin for zero-downtime deploys (#885)
    
    * use custom deploy script that uses zero-downtime-push
    * update deploy with autopilot instructions
    * rm prod-a and -b references and manifests
    * increase rqworker memory, ref #888
    Fix link to internal CF cli docs
    add note about cf-cli version
    
    also remove outdated text about asking for a a CF account in #devops.
    Production deployment stuff (#819)
    
    * add production manifests
    * rename db-calc-x to calc-db
    * fill in deploy.md; DISABLE_COLLECTSTATIC on non-web instances
    * update deploy.md
    * add note about initial superuser, closes #348
    add requirements-dev.txt for specifying separate dev dependencies (#681)
    add minor section on logs; update headings to be consistent
    add new relic documentation and settings
    Document API_HOST and WHITELISTED_IPS. (#362)
    
    Fixes #301.
    update deploy.md with current situation
    Add support for cloudfoundry CUPS. Fixes #306.
    Link to sandbox deploy wiki page in deploy.md (#276)
    format "CF Structure" section
    Update deploy.md
    Updated CF manifest, forcing https, deploy instructions
    Much better indication of when dev CALC is ready.
    Update setup.md a bit.
    update link to 18f docker dev guide
    default to dockerized project setup
    Remove load_data and load_s70 commands. Fixes #1028.
    use node >= 6.13
    Use `yarn` instead of `npm run` everywhere
    
    We switched to `yarn` a while back but didn't update various docs and tooling to use it in place of `npm` or `npm run`.
    
    Closes #1541.
    add note about `python` running Python 3
    Specify Python at minor version instead of patch
    upgrade to python 3.6.4
    
    3.6.2 is no longer supported on cloud.gov
    migrate to CircleCI
    
    - raise real Exception in test_selenium
    - remove debug print statement in styleguide tests
    - comment out WebDriver/Sauce test stuff because no time to get it working right now
    - upgrade to python 3.6.2
    upgrade to postgres 9.5.4
    Mention postgres version in setup.md, test against it.
    update docs with yarn info
    Add a basic front-end guide. Fixes #1360.
    Update setup.md to mention Python 3.6.0.
    Improve setup.md.
    Update docs, add docker-update.sh.
    Add Sphinx docs/ dir.
    Update docs on initial user creation.
    use docker-compose for all referenced commands
    Revise and update auth documentation
    
    part of #1698
    Add 'Technical Support Specialists' group.
    Improve setup.md.
    Add Sphinx docs/ dir.
    Copy changes in ci.md
    Add docs/ci.md. Fixes #1839.
    Link to /updates/ instead of putting changelog in /docs/.
    Ensure sphinx docs build on Windows without errors.
    Fix docker cloud setup, hopefully.
    Link to style guide in docs.
    wipe out docs/_build between rebuilds.
    Don't wipe BUILDDIR between sphinx builds.
    Better workaround for snide/sphinx_rtd_theme#359.
    Fix broken collectstatic test.
    Add Sphinx docs/ dir.
    Removed New Relic From Documentation
    Removed New Relic From Documentation
    Rename sections in environment.md.
    Split up environment.md into 'dev' and 'general' sections.
    Don't lint as part of JS compilation.
    Get rid of selenium.md and most selenium env vars.
    rm API_HOST, WHITELISTED_IPS, and assoc code
    Add USE_POLLING env var. Fixes #1671.
    Document DEBUG_LOG_SQL.
    Document ESLINT_CHILL_OUT.
    Add DEBUG_HTTPS setting.
    Add DEBUG_HTTPS setting.
    Add Slack integration.
    Allow NON_PROD_INSTANCE_NAME to contain HTML.
    Link to API docs for more details on API_HOST
    Improve setup.md.
    Add Sphinx docs/ dir.
    use docker-compose for all referenced commands
    Add docs/email.md
    new fields DB storage
    Remove extraneous multi_phrase_search method per Joe's suggestion.
    Add working basic search by vendor_id or idv_piid, plus simple tests.
    Fix silly oversight of twice-defined method.
    remove sin/name concatenation from model
    Add multi_phrase_search and get_queryset to ContractQuerySet to make tests pass.
    Tighten up readable business size method
    Tighten up method
    WIP: Hypothetical vendor name and id search
    Final view refactoring
    reverted method move
    WIP: de-voodoo search API
    Use bleach for HTML sanitization.
    Add ModelAdmin for ScheduleMetadata.
    Add ScheduleMetadata model.
    Remove extraneous .all().
    Update search indices in bulk methods.
    Remove Contract.piid field. Fixes #1873.
    Set 'verbose_name' of idv_piid to 'contract number'.
    Minor typo fix.
    Add reports/outliers.py.
    Validate 'sort' field in API requests. Fixes #257.
    Add docs to contract model. Fixes #1824.
    Tweak flake8 config. Fixes #1818.
    Run mypy on all files. Fixes #1803.
    Change search_index to not be nullable, and set default to empty string.
    Update search index on model save.
    Add search() method to CurrentContractManager.
    Make search_index non-editable.
    Mostly migrate off djorm_ext_pgfulltext.
    update call to update_search_field to include model name
    fix convert_to_tsquery regex to accept numeric chars
    
    fixes #1475
    Subclass DecimalField -> CashField.
    Cooperate w/ Django 1.9's new DecimalField validation.
    Add/change docstrings.
    much faster bulk update of normalized labor categories
    Support synonyms/abbrs in labor category search. Fixes #1375.
    Revert "Add normalized labor category field."
    
    This reverts commit bf9013b75a9e40916366a270c0232c18ee7f3321.
    
    Ugh, I don't like the renaming of labor_category to _labor_category
    because ORM db queries require us to query on _labor_category which
    makes things confusing. Would rather just implement a save() hook
    and make sure that we remember to re-index on bulk uploads or whatever.
    Add normalized labor category field.
    In 'load_s70' cmd, associate contracts w/ bulk upload source. (#1196)
    Capture and use Escalation Rate for out-year pricing (#801)
    
    Closes #770
    add file_mime_type to BulkUploadContractSource (#619)
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    Factor out ContractsQuerySet.multi_phrase_search().
    Move convert_to_tsquery to contracts.models.
    Fix all remaining PEP8 violations involving line length.
    Ran 'autopep8 -i -r .' on code.
    
    These are only whitespace changes, and they don't even fix all the
    whitespace issues raised by flake8.
    Add schedule 70 loader management command
    first pass at adding contract year filter
    adding index to current price
    adding indexes to fields we filter on
    change to integerfield
    changing field type for contract_year
    updating contract data and adding contract_year field
    Preserved order_by precedence when there are multiple params
    
    - Refactored all order_by()s into a single extra(), since Django deliberately
    discards all but the last order_by
    - Tests now allow checking just a subset of expected keys against results-- more concise tests!
    Enabled categorical sorting by education_level
    
    - Tests:
      - single column ascending,
      - single column descending
    - Improved assertResultsEqual to get better sorting feedback
    added backend guts for csv export;
    added fixes to data load and current_price field
    updated data loader
    added stats by min level experience to api
    added basic api endpoint, updated loader to work with new sheet from Kelly
    first pass at loader
    Remove Contract.piid field. Fixes #1873.
    Add filter support of SIN to the API.
    Ran 'autopep8 -i -r .' on code.
    
    These are only whitespace changes, and they don't even fix all the
    whitespace issues raised by flake8.
    unit tests for new load_s70 management command
    adding unit test for next and second year price
    Fix model_mommy object generation, add Nose
    
    - Ensure tests are independent by generating a new recipe for each test
    - Add nose as django test runner to allow more fine-grained test runs
    Added Contract model tests
    
    - contracts/models.py coverage at 100%
    - moved mommy_recipes to contracts module to reflect association
      with that model
    Test improvements and business_size bug fix
    
    - Added site filter test
    - Added business size filter tests
    - Fixed business size filter bug
    - Separated out test data creation to be per-test
    Add test for schedule API param
    
    - Add model_mommy recipe for contract object generation
    Update search index on model save.
    Add ModelAdmin for ScheduleMetadata.
    Get rid of unused imports, files, variables.
    first pass at loader
    Update search index on model save.
    first pass at loader
    Factor out _get_example_row().
    Show dupe examples.
    Explicitly list Contract fields.
    Add detail pages for data quality report metrics.
    Generate custom HTML for data report view.
    Add /data-quality-report/ view.
    Coverage cleanup (#340)
    
    * rm unused view files
    * rm unused docker_settings
    first pass at loader
    added basic api endpoint, updated loader to work with new sheet from Kelly
    added migration files
    Get rid of unused imports, files, variables.
    Fix all remaining PEP8 violations involving line length.
    Ran 'autopep8 -i -r .' on code.
    
    These are only whitespace changes, and they don't even fix all the
    whitespace issues raised by flake8.
    added migration for updating search index, fixed pagination query
    Set 'verbose_name' of idv_piid to 'contract number'.
    Validate 'sort' field in API requests. Fixes #257.
    Change search_index to not be nullable, and set default to empty string.
    Make search_index non-editable.
    Mostly migrate off djorm_ext_pgfulltext.
    Fix all remaining PEP8 violations involving line length.
    Ran 'autopep8 -i -r .' on code.
    
    These are only whitespace changes, and they don't even fix all the
    whitespace issues raised by flake8.
    first pass at loader
    In 'load_s70' cmd, associate contracts w/ bulk upload source. (#1196)
    add file_mime_type to BulkUploadContractSource (#619)
    Support synonyms/abbrs in labor category search. Fixes #1375.
    add file_mime_type to BulkUploadContractSource (#619)
    first pass at loader
    added basic api endpoint, updated loader to work with new sheet from Kelly
    Validate 'sort' field in API requests. Fixes #257.
    adding migration
    changing field type for contract_year
    first pass at loader
    Fix all remaining PEP8 violations involving line length.
    Ran 'autopep8 -i -r .' on code.
    
    These are only whitespace changes, and they don't even fix all the
    whitespace issues raised by flake8.
    updated data loader
    Ran 'autopep8 -i -r .' on code.
    
    These are only whitespace changes, and they don't even fix all the
    whitespace issues raised by flake8.
    first pass at loader
    Add migrations.
    Add ScheduleMetadata model.
    updated data loader
    first pass at loader
    Mostly migrate off djorm_ext_pgfulltext.
    Ran 'autopep8 -i -r .' on code.
    
    These are only whitespace changes, and they don't even fix all the
    whitespace issues raised by flake8.
    updating contract data and adding contract_year field
    added basic api endpoint, updated loader to work with new sheet from Kelly
    Ran 'autopep8 -i -r .' on code.
    
    These are only whitespace changes, and they don't even fix all the
    whitespace issues raised by flake8.
    added fixes to data load and current_price field
    updated data loader
    first pass at loader
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    Fix all remaining PEP8 violations involving line length.
    Ran 'autopep8 -i -r .' on code.
    
    These are only whitespace changes, and they don't even fix all the
    whitespace issues raised by flake8.
    first pass at adding contract year filter
    updating contract data and adding contract_year field
    added basic api endpoint, updated loader to work with new sheet from Kelly
    Fix all remaining PEP8 violations involving line length.
    Ran 'autopep8 -i -r .' on code.
    
    These are only whitespace changes, and they don't even fix all the
    whitespace issues raised by flake8.
    add migration for indexes
    changing field type for contract_year
    first pass at loader
    first pass at loader
    add file_mime_type to BulkUploadContractSource (#619)
    Add ScheduleMetadata model.
    Remove Contract.piid field. Fixes #1873.
    Capture and use Escalation Rate for out-year pricing (#801)
    
    Closes #770
    add migration to remove contract_year field
    Region10Loader.make_contract() never returns None. Fixes #1594.
    Remove extraneous multi_phrase_search method per Joe's suggestion.
    Uncommented test
    Final view refactoring
    reverted method move
    WIP: de-voodoo search API
    Update search indices in bulk methods.
    Add reports/outliers.py.
    Change search_index to not be nullable, and set default to empty string.
    Add SearchIndexTests.
    Add UnicodeContractSearchTestCase.
    Subclass DecimalField -> CashField.
    much faster bulk update of normalized labor categories
    Support synonyms/abbrs in labor category search. Fixes #1375.
    Revert "Add normalized labor category field."
    
    This reverts commit bf9013b75a9e40916366a270c0232c18ee7f3321.
    
    Ugh, I don't like the renaming of labor_category to _labor_category
    because ORM db queries require us to query on _labor_category which
    makes things confusing. Would rather just implement a save() hook
    and make sure that we remember to re-index on bulk uploads or whatever.
    Add normalized labor category field.
    Add normalized labor category search test (skipped).
    Capture and use Escalation Rate for out-year pricing (#801)
    
    Closes #770
    Factor out ContractsQuerySet.multi_phrase_search().
    Move convert_to_tsquery to contracts.models.
    add ContractSearchTestCase.
    Ran 'autopep8 -i -r .' on code.
    
    These are only whitespace changes, and they don't even fix all the
    whitespace issues raised by flake8.
    unit tests for new load_s70 management command
    Fix model_mommy object generation, add Nose
    
    - Ensure tests are independent by generating a new recipe for each test
    - Add nose as django test runner to allow more fine-grained test runs
    Added Contract model tests
    
    - contracts/models.py coverage at 100%
    - moved mommy_recipes to contracts module to reflect association
      with that model
    first pass at loader
    remove py.test tests we no longer use
    Add ModelAdmin for ScheduleMetadata.
    Add ScheduleMetadata model.
    unit tests for new load_s70 management command
    first pass at loader
    Make dupe count accurate. Fixes #1939.
    Show dupe examples.
    Add 404 test.
    Add test for detail page.
    Add /data-quality-report/ view.
    Add test_reports.py.
    unit tests for new load_s70 management command
    unit tests for new load_s70 management command
    unit tests for new load_s70 management command
    Vertically scroll example table if needed.
    Add detail pages for data quality report metrics.
    Add detail pages for data quality report metrics.
    Add footnotes to report metrics.
    Generate custom HTML for data report view.
    Add /data-quality-report/ view.
    Rename 'hourglass' to 'calc'. Fixes #93.
    update classes on a whole boatload of pages
    copy change in changelog.html
    Make /updates/ friendlier to non-developers.
    Expose changelog view at /updates/.
    Add detail pages for data quality report metrics.
    Add footnotes to report metrics.
    Convert describe() to a property called 'desc'.
    Minor formatting fix.
    Factor out a BaseMetric class.
    Add reports/outliers.py.
    Show dupe examples.
    Add detail pages for data quality report metrics.
    Add footnotes to report metrics.
    Generate custom HTML for data report view.
    Convert describe() to a property called 'desc'.
    Factor out a BaseMetric class.
    Document _get_dupe_info(). Fixes #1949.
    Make dupes code more readable and documented.
    Minor code readability improvements.
    Make dupe count accurate. Fixes #1939.
    Show dupe examples.
    Adjust wording of 'dupes' metric.
    Show verbose field names in data report.
    Add footnotes to report metrics.
    Convert describe() to a property called 'desc'.
    More efficient counting of duplicates.
    Factor out a BaseMetric class.
    Rename 'finddupes.py' to 'dupes.py'.
    Add data_quality_report management command.
    Move ALL_METRICS to reports/__init__.py.
    Add data_quality_report management command.
    first pass at loader
    Add detail pages for data quality report metrics.
    Convert describe() to a property called 'desc'.
    Add reports/incomplete.py.
    Add detail pages for data quality report metrics.
    Convert describe() to a property called 'desc'.
    Add reports/expired.py.
    Add reports/incomplete.py.
    Remove unused region 10 loader methods
    Region10Loader.make_contract() never returns None. Fixes #1594.
    use configured logger names
    Tag and release v2.1.0 (#1303)
    update fed min contract rate to 10.20, closes #1292 (#1293)
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    first pass at loader
    Ran 'autopep8 -i -r .' on code.
    
    These are only whitespace changes, and they don't even fix all the
    whitespace issues raised by flake8.
    added __init__ files for py2.x
    Ran 'autopep8 -i -r .' on code.
    
    These are only whitespace changes, and they don't even fix all the
    whitespace issues raised by flake8.
    added __init__ files for py2.x
    Update search indices in bulk methods.
    Update search index on model save.
    Mostly migrate off djorm_ext_pgfulltext.
    Add/change docstrings.
    much faster bulk update of normalized labor categories
    Support synonyms/abbrs in labor category search. Fixes #1375.
    Add footnotes to report metrics.
    Move ALL_METRICS to reports/__init__.py.
    Convert describe() to a property called 'desc'.
    Add reports/expired.py.
    Add reports/incomplete.py.
    Factor out a BaseMetric class.
    Add reports/outliers.py.
    Rename 'finddupes.py' to 'dupes.py'.
    Add data_quality_report management command.
    new fields DB storage
    clear our some old TODO comments
    improve pricelist status logging and add tests
    
    - fix #1578
    - show status text instead of code
    - add tests to check that logging is happening when pl status changes
    log submitted price list status changes
    Use postgres JSONField for storing session state.
    Rename UploadedFile to HashedUploadedFile, rebuild migrations.
    Make it possible to replay attempted submissions.
    Add SlowpokeStorage backend.
    Add AttemptedPriceListSubmission model.
    Add UploadedFile class.
    Subclass DecimalField -> CashField.
    add escalation_rate to admin price list views (#1299)
    Change "NEW" to "UNREVIEWED" and "UNAPPROVED" to "RETIRED" (#1083)
    
    closes #1082
    Remember uploaded filename in session and store it in db.
    validate contract_number, spruce up some tests (#1086)
    Validate duplicate contract number in Step 1 (#985)
    
    * start duplicate contract substep
    
    * start fleshing out duplicate contract page
    
    * add simple interstitial page when contract num already exists
    
    * add path to modify view
    
    * add overflow so dl has a height
    
    * start filling out modify page
    
    * extract fields to shared place, start ModifyForm
    
    * more cleaning logic in ModifyForm
    
    * render form in template
    
    * move form to partial for ajax; instantiate instance in form
    
    * make ajaxform
    
    * update modal content
    
    * pass kwargs to reverse
    
    * add styling for .message-info
    
    * stub out more tests; make file not required; process POST
    
    * extract pl rows table to partial; add display of pl rows to modify page
    
    * [WIP] allow skip ahead on step 3 if already uploaded
    
    * show table on step 3 if data in session; add tests
    
    * simplify to just one submit button Step 3; adjust tests
    
    * skip directly to 4 if already uploaded; add anchor and header
    
    * previous goes to step 2 from step 3 errors
    
    * implement step_3_data interstitial page
    
    * fix for eslint
    
    * finish up step/3/data, including tests
    
    * doc is_file_required
    
    * better test names
    
    * docstring for get_deserialized_gleaned_data
    
    * rm modify form/page stuff
    
    * start outlining modify stuff
    
    * upload flow changes to validate dupe contract number
    
    * rm stubbed method, will implement separately
    
    * rm fields.py; amend data capture integration test
    
    * test Step1 duplicate validation
    
    * return HttpResponseBadRequest instead of raising error
    
    * address code review items
    make status_changed_by and status_changed_at non-null (#1007)
    add __str__ method to SubmittedPriceList (#977)
    Add ability to Reject price lists (#953)
    
    * remove boolean `is_approved` field
    * add new `status` field
    * update language about status on admin page
    * add reject methods, rejection email, and tests
    * add reject to list of SubmittedPriceListAdmin actions
    * Price list admin status segmentation (#954)
    Refactor SubmittedPriceList "is_approved" to new "status" field (#951)
    Capture and use Escalation Rate for out-year pricing (#801)
    
    Closes #770
    remove contract_year from s70 data capture
    Factor out SubmittedPriceList.CONTRACTOR_SITE_CHOICES.
    change contractor asite and contract year to radios
    move help text back to model
    Add created at/updated at fields to price list model.
    bring files in line with new structure
    Add is_muted to SubmittedPriceListRow and admin views.
    don't use model for step1 form
    pass step 1 details to step 2 and save model
    convert step 3 form to use split date widget.
    Change the way price list rows are added.
    
    This fixes the following error raised by Django 1.9:
    
      ValueError: <SubmittedPriceListRow: Submitted price list row>
      instance isn't saved. Use bulk=False or save the object first.
    Rename SubmittedPriceListRow.contract_model_id to .contract_model.
    Add data_capture.tests.test_models.
    Allow admins to approve/unapprove submitted price lists.
    more admin tweaks.
    Pull schedule choices from registry dynamically.
    Implement step 3.
    Ran 'manage.py startapp data_capture'.
    Run mypy on all files. Fixes #1803.
    upgrade flake8/pyflakes; fix bare exceptions
    Cache XLSX workbook in Region10SpreadsheetConverter.
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    Show dev banner in DEBUG, link to styleguide/docs.
    Add a Documentation DjDT panel.
    Add support for periodic tasks and send admin approval reminder email (#655)
    
    * install rq-scheduler
    * setup docker and CF apps for rqworker container
    * add email template and method for sending approval reminder
    * use custom AppConfig that adds scheduled admin reminder email job
    * send approval reminders to all superusers who have email addresses
    * add DefaultDataCaptureApp; load app based on IS_RQ_SCHEDULER
    * Add a ScheduledJobsPanel to DjDT.
    reverting changes
    commented sending email
    commented sending email
    Log SubmittedPriceList creation.
    change name of app to be clearer in admin interface
    Add support for periodic tasks and send admin approval reminder email (#655)
    
    * install rq-scheduler
    * setup docker and CF apps for rqworker container
    * add email template and method for sending approval reminder
    * use custom AppConfig that adds scheduled admin reminder email job
    * send approval reminders to all superusers who have email addresses
    * add DefaultDataCaptureApp; load app based on IS_RQ_SCHEDULER
    * Add a ScheduledJobsPanel to DjDT.
    Run mypy on all files. Fixes #1803.
    move list_display to class instead of constructor
    Add 'Technical Support Specialists' group.
    Sanitize filename on downloads.
    Add tests for attempted price list submissions. fix security boog.
    Make it possible to replay attempted submissions.
    Actually show email address.
    Add link to download uploaded file.
    Better admin view.
    Add AttemptedPriceListSubmission model.
    Use doggone sites framework when sending emails, yo.
    add escalation_rate to admin price list views (#1299)
    Tag and release v2.1.0 (#1303)
    Send html versions of admin emails and include relevant links (#1263)
    Send HTML email notifications with link to Price List details page (#1255)
    Only display email and is_staff in user admin list (#1261)
    Fix dangling comma in labor category description (#1237)
    use tz_timestamp to display datetimes in admin views (#1221)
    Change "NEW" to "UNREVIEWED" and "UNAPPROVED" to "RETIRED" (#1083)
    
    closes #1082
    enforce case-insensitive user email addresses (#1041)
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    make submitter read-only, closes #988 (#989)
    Combine status and current status (#976)
    Add ability to Reject price lists (#953)
    
    * remove boolean `is_approved` field
    * add new `status` field
    * update language about status on admin page
    * add reject methods, rejection email, and tests
    * add reject to list of SubmittedPriceListAdmin actions
    * Price list admin status segmentation (#954)
    Refactor SubmittedPriceList "is_approved" to new "status" field (#951)
    Mark functions that modify database as atomic (#853)
    Capture and use Escalation Rate for out-year pricing (#801)
    
    Closes #770
    Add docstring for generate_username.
    Rename find_username to generate_username.
    Add CustomUserCreationForm tests.
    Enforce uniqueness of user email, simplify user add form.
    remove contract_year from s70 data capture
    Add support for periodic tasks and send admin approval reminder email (#655)
    
    * install rq-scheduler
    * setup docker and CF apps for rqworker container
    * add email template and method for sending approval reminder
    * use custom AppConfig that adds scheduled admin reminder email job
    * send approval reminders to all superusers who have email addresses
    * add DefaultDataCaptureApp; load app based on IS_RQ_SCHEDULER
    * Add a ScheduledJobsPanel to DjDT.
    Add comment about password field.
    Don't allow non-superusers to view/change superusers.
    Add CustomUserAdmin.
    Send email to submitter when Price List is un/approved by admin (#640)
    
    * create email template subdirectory
    * add email module for holding all email-sending logic; separate bulk upload emails
    * add EmailResult class
    * add SYSTEM_EMAIL_ADDRESS setting
    Factor out an UndeletableModelAdmin class.
    Add created at/updated at fields to price list model.
    Show admin message when price lists are approved/unapproved.
    Don't show 'delete selected rows' in price list admin.
    Fix PEP8 issue.
    Tell users to unapprove price lists before editing them.
    Add is_approved filter to SubmittedPriceListAdmin.
    Make approve/unapprove bulk actions in admin.
    Add is_muted to SubmittedPriceListRow and admin views.
    Rename SubmittedPriceListRow.contract_model_id to .contract_model.
    Don't allow submitted price lists to be deleted for now.
    Allow admins to approve/unapprove submitted price lists.
    more admin tweaks.
    prohibit add/delete on submitted price list rows in admin.
    Make schedule field in admin read-only.
    Pull schedule choices from registry dynamically.
    Implement step 3.
    Ran 'manage.py startapp data_capture'.
    Repopulate schedule registry via setting_changed signal.
    Log LogEntry and M2M changes.
    
    These were adapted from:
    
    https://github.com/18F/omb-eregs/blob/master/api/ereqs_admin/apps.py
    https://github.com/18F/omb-eregs/blob/master/api/ereqs_admin/tests/apps_tests.py
    Log SubmittedPriceList creation.
    Fix weird flake8 error.
    Use defusedxml and ensure xlrd is using it.
    Ran 'manage.py startapp data_capture'.
    first pass at loader
    Update search indices in bulk methods.
    upgrade flake8/pyflakes; fix bare exceptions
    Add more tests for bulk upload. Fixes #1718.
    Process bulk uploads in batches of 5000 contracts. Possibly fixes #1712.
    Process bulk uploads in batches of 5000 contracts. Possibly fixes #1712.
    Update search index on model save.
    Add support for periodic tasks and send admin approval reminder email (#655)
    
    * install rq-scheduler
    * setup docker and CF apps for rqworker container
    * add email template and method for sending approval reminder
    * use custom AppConfig that adds scheduled admin reminder email job
    * send approval reminders to all superusers who have email addresses
    * add DefaultDataCaptureApp; load app based on IS_RQ_SCHEDULER
    * Add a ScheduledJobsPanel to DjDT.
    Send email to submitter when Price List is un/approved by admin (#640)
    
    * create email template subdirectory
    * add email module for holding all email-sending logic; separate bulk upload emails
    * add EmailResult class
    * add SYSTEM_EMAIL_ADDRESS setting
    Factor out new data_capture.jobs module.
    Change "NEW" to "UNREVIEWED" and "UNAPPROVED" to "RETIRED" (#1083)
    
    closes #1082
    Refactor SubmittedPriceList "is_approved" to new "status" field (#951)
    Add support for periodic tasks and send admin approval reminder email (#655)
    
    * install rq-scheduler
    * setup docker and CF apps for rqworker container
    * add email template and method for sending approval reminder
    * use custom AppConfig that adds scheduled admin reminder email job
    * send approval reminders to all superusers who have email addresses
    * add DefaultDataCaptureApp; load app based on IS_RQ_SCHEDULER
    * Add a ScheduledJobsPanel to DjDT.
    Rename 'hourglass' to 'calc'. Fixes #93.
    Run mypy on all files. Fixes #1803.
    Fix urls and make misc copy changes, modify python file
    move example email metadata into emails.py
    Drop premailer for now.
    docstring typo fix
    Add email.scss.
    Move absolute URL utils to hourglass.site_utils.
    Use doggone sites framework when sending emails, yo.
    Factor out an email.render_mail() function.
    Add HTMLemail template, use premailer to inline CSS.
    Make email.send_mail() render the template.
    Tag and release v2.1.0 (#1303)
    Update emails with Writing Lab changes (#1291)
    Send html versions of admin emails and include relevant links (#1263)
    Add HELP_EMAIL setting; Use it in reply-to for emails (#1264)
    Send HTML email notifications with link to Price List details page (#1255)
    Display datetimes in emails localized to US/Eastern time (#1217)
    
    * Display datetimes in emails localized to Eastern time using new `tz_timestamp` template filter
    use django's built-in settings for email from addresses (#1211)
    Change "NEW" to "UNREVIEWED" and "UNAPPROVED" to "RETIRED" (#1083)
    
    closes #1082
    Add ability to Reject price lists (#953)
    
    * remove boolean `is_approved` field
    * add new `status` field
    * update language about status on admin page
    * add reject methods, rejection email, and tests
    * add reject to list of SubmittedPriceListAdmin actions
    * Price list admin status segmentation (#954)
    Refactor SubmittedPriceList "is_approved" to new "status" field (#951)
    Implement Contract Officers role and protect Price List Upload views (#694)
    
    closes #686
    
    * create reusable contract_officer_perms_required decorator
    * add CO perms to Data Admin role
    * use lists for roles instead of tuples
    * use set()s for roles definitions
    * update existing tests to setup user in Contract Officers group
    * Use namespaced permissions for initgroups cmd. (#726)
    Add support for periodic tasks and send admin approval reminder email (#655)
    
    * install rq-scheduler
    * setup docker and CF apps for rqworker container
    * add email template and method for sending approval reminder
    * use custom AppConfig that adds scheduled admin reminder email job
    * send approval reminders to all superusers who have email addresses
    * add DefaultDataCaptureApp; load app based on IS_RQ_SCHEDULER
    * Add a ScheduledJobsPanel to DjDT.
    Send email to submitter when Price List is un/approved by admin (#640)
    
    * create email template subdirectory
    * add email module for holding all email-sending logic; separate bulk upload emails
    * add EmailResult class
    * add SYSTEM_EMAIL_ADDRESS setting
    break errors out to separate page
    Add tutorial page.
    Add export links to download analysis.
    Add (incomplete) price list analysis flow.
    CSV and XLSX export of R10 price list analysis results (#1310)
    Upload new price list for existing SubmittedPriceList (#1089)
    Pre-fill step 3 w/ fake filename if gleaned data exists.
    Allow skip ahead on Step 3 if price list already uploaded (#1027)
    
    * also implement step_3_data interstitial page
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    add separate step for displaying rows with errors (#792)
    
    * add separate step for displaying rows with errors
    * add periods to submit-label text for consistency
    * use mixin classes for handle_cancel and gleaned_data tests
    Use URL config from bulk upload Steps.
    Make 'steps.step' decorator, expose steps.urls.
    add url for step 5
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    Get rid of django.conf.urls.patterns().
    Add a basic outline of the 4 steps of data capture.
    Restrict R10 Bulk Upload views and Price List Upload views based on permissions (#738)
    
    * add add_bulkuploadcontractsource to Data Administrators
    * rm custom decorator, use permission_required instead
    * move staff_login_required and associated tests to hourglass
    * extract and reuse get_permissions_from_ns_codenames
    Implement Contract Officers role and protect Price List Upload views (#694)
    
    closes #686
    
    * create reusable contract_officer_perms_required decorator
    * add CO perms to Data Admin role
    * use lists for roles instead of tuples
    * use set()s for roles definitions
    * update existing tests to setup user in Contract Officers group
    * Use namespaced permissions for initgroups cmd. (#726)
    staff_login_required decorator (#662)
    
    * add, use, and test staff_login_required decorator
    Remove unused imports.
    Canceling data_capture flows (#629)
    
    * add `handle_cancel` decorator for canceling data_capture flows via POST request
    * update formbuttonrow to work with buttons; replace button-cancel with button-secondary
    * handle_cancel on price_list_upload views; add tests
    * factor out ajax_redirect to a method in ajaxform (#641)
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    Add module docstrings.
    Repopulate schedule registry via setting_changed signal.
    Document data_capture.schedules.registry.
    Run mypy on all files. Fixes #1803.
    Fix #504 by seeking to 0 before reading from file. (#525)
    Fix bandit errors.
    Pull schedule choices from registry dynamically.
    Implement step 3.
    Attempt to guess schedule of price list if initial load fails.
    add settings.DATA_CAPTURE_SCHEDULES.
    Add step 2, 'Fake Schedule' implementation.
    use configured logger names
    validate price_including_iff is above FEDERAL_MIN_CONTRACT_RATE (#829)
    Capture and use Escalation Rate for out-year pricing (#801)
    
    Closes #770
    Allow schedules to provide upload examples and help text.
    Price List table row templates and styling (#660)
    
    * add methods, styling, calls for rendering price list tables
    * add monotype font family variable
    Add logging to fake_schedule.py.
    Fix a TODO in fake_schedule.py.
    Add a few more tests.
    Implement step 3.
    Add BasePriceList class.
    add settings.DATA_CAPTURE_SCHEDULES.
    Add step 2, 'Fake Schedule' implementation.
    Added Region 3 headings
    Changed Schedule names
    Fix typo in to_error_table
    fix up tests and implementation
    fill out the rest of Region10PriceList
    start tests for r10 gleaner
    more r10 gleaning code
    fill out Region10PriceListRow fields
    [WIP] Region 10 Price List gleaner
    Tweak flake8 config. Fixes #1818.
    call strip on text in extract_hour_unit_of_issue
    finish up new gleaner and tests for min experience
    Validate Unit of Issue in S70 Price List uploads (#892)
    
    * add unit_of_issue and validator to Schedule70Row
    * only validate that necessary columns exist (#893)
    * coerce unit_of_issue to 'Hour'
    Coerce education take 2 (#764)
    
    * add simple coercer for education level
    
    * add doctest about level bias
    
    * fix minor typo
    
    * tokenize on whitespace
    
    * move test spreadsheets to fixtures directory
    
    * add more code comments
    
    * add actual docstring, fix broken doctest
    
    * Use FakeWorkbook/FakeSheet for testing.
    
    * Fix tests.
    
    * Remove price_list_with_min_education_text.xlsx.
    71_IIk validation unit of issue
    Changed title to 71_IIK
    Changed Schedule names
    Updated Template
    Unit of Issue is not Mandatory Field
    Formatting
    Added Blank Lines
    Region 3 Implementation
    Added Region 3 files
    Add test for Schedule 03FAC, make minor tweaks.
    fixes flake8 error of not having at least two spaces before inline comment
    allows for upload of 03FAC price lists
    Convert type comments to py3.6 variable annotations.
    Add module docstrings.
    Document data_capture.schedules.registry.
    More mypy typings; make mypy defaults less strict.
    Upgrade to mypy 0.501.
    Support fuzzy column titles.
    Tag and release v2.1.0 (#1303)
    [WIP] Region 10 Price List gleaner
    add '# nosec'
    Add mypy annotations for schedules/base.py.
    Make BasePriceList an abc.ABCMeta.
    raise exception instead of returning it
    Validate Unit of Issue in S70 Price List uploads (#892)
    
    * add unit_of_issue and validator to Schedule70Row
    * only validate that necessary columns exist (#893)
    * coerce unit_of_issue to 'Hour'
    Fix price cell error styling, improve minimum price message (#870)
    validate price_including_iff is above FEDERAL_MIN_CONTRACT_RATE (#829)
    Add schedule 70 upload example table. Fixes #727.
    Allow schedules to provide upload examples and help text.
    Price List table row templates and styling (#660)
    
    * add methods, styling, calls for rendering price list tables
    * add monotype font family variable
    Implement step 3.
    Add BasePriceList class.
    Build failure rectified
    Changes made on validation
    Indentation_build
    Validation changes_mas
    doh, rm debug junk
    call strip on text in extract_hour_unit_of_issue
    Support fuzzy column titles.
    backport refactorings from #1284
    more r10 gleaning code
    [WIP] Region 10 Price List gleaner
    Add test for Schedule 736, plus code tweaks to make tests pass.
    fixes two flake8 formatting errors
    allows for schedule 736 price list upload
    Add step 2, 'Fake Schedule' implementation.
    first pass at loader
    fixed Build failure
    new fields DB storage
    Validation_unit of issue
    Changes made on validation
    Build updated
    Build failure updated
    Validation changes_mas
    Added desc for new-region
    Added sample data for MAS consolidated
    Fixed build failure- added line break
    Added new_region MAS consolidated
    Changed title to 71_IIK
    Changed Schedule names
    Updated Template
    Unit of Issue is not Mandatory Field
    Formatting
    Added Blank Lines
    Region 3 Implementation
    Added Region 3 files
    use configured logger names
    Support fuzzy column titles.
    remove duplicate import statement.
    backport refactorings from #1284
    finish up new gleaner and tests for min experience
    fix broken flake8 and tests
    tweaks to header formatting for schedules
    Stop parsing S70 Price List when 'Most favored customer' is encountered (#1320)
    Tag and release v2.1.0 (#1303)
    more r10 gleaning code
    [WIP] Region 10 Price List gleaner
    Generate <th> by iterating through form fields
    Validate Unit of Issue in S70 Price List uploads (#892)
    
    * add unit_of_issue and validator to Schedule70Row
    * only validate that necessary columns exist (#893)
    * coerce unit_of_issue to 'Hour'
    validate price_including_iff is above FEDERAL_MIN_CONTRACT_RATE (#829)
    Capture and use Escalation Rate for out-year pricing (#801)
    
    Closes #770
    Find S70 price list field columns by heading instead of by index  (#767)
    
    * use column headings instead of hard-coded column indices
    Coerce education take 2 (#764)
    
    * add simple coercer for education level
    
    * add doctest about level bias
    
    * fix minor typo
    
    * tokenize on whitespace
    
    * move test spreadsheets to fixtures directory
    
    * add more code comments
    
    * add actual docstring, fix broken doctest
    
    * Use FakeWorkbook/FakeSheet for testing.
    
    * Fix tests.
    
    * Remove price_list_with_min_education_text.xlsx.
    make threshold an arg for easier testing
    find start row instead of hardcoding row 3
    Strip non-numeric chars from S70 price cells during gleaning (#750)
    Add schedule 70 upload example table. Fixes #727.
    Allow schedules to provide upload examples and help text.
    Price List table row templates and styling (#660)
    
    * add methods, styling, calls for rendering price list tables
    * add monotype font family variable
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    Also check price_including_iff to determine when s70 price lists end.
    Be more resilient about scraping SINs.
    Make education level cleaner instead of validator.
    use EDUCATION_CHOICES from contracts.models
    Implement rest of s70.
    Safely convert cell values.
    Glean data from Excel files for s70.
    Add BasePriceList class.
    add settings.DATA_CAPTURE_SCHEDULES.
    Add step 2, 'Fake Schedule' implementation.
    Validation changes_mas
    Added sample data for MAS consolidated
    Fix broken tests.
    Add example row that triggers GteEduAndExpFinder.
    Add step 2, 'Fake Schedule' implementation.
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    allows for upload of 03FAC price lists
    cherrypick files from original branch
    edit excel files
    re-add excel files
    allows for schedule 736 price list upload
    fix up tests and implementation
    [WIP] Region 10 Price List gleaner
    Link to S70 PPL template. Fixes #753.
    Changes made on validation
    Validation changes_mas
    Added new_region MAS consolidated
    Glean data from Excel files for s70.
    see if explicitly classifying xls/xlsx as binary files helps
    cherrypick files from original branch
    edit excel files
    re-add excel files
    Try again to fix whatever's wrong with the binary Excel file so that it works on Circle CI.
    Try to fix whatever's wrong with the binary Excel file so that it works on Circle CI.
    Add test for Schedule 736, plus code tweaks to make tests pass.
    allows for schedule 736 price list upload
    Changes made on validation
    Updated Template
    Added Service Pricing Column
    Added Region 3 files
    allows for upload of 03FAC price lists
    Minor text change in R10 upload widget (#1169)
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    Upload new price list for existing SubmittedPriceList (#1089)
    Modify price list details (#1077)
    Add a Step4Form.
    Fix #705, #711, simplify price list form logic.
    aaaaargh line length
    fix tests
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    Run mypy on all files. Fixes #1803.
    Get rid of date.py, add tests for our template override.
    Get rid of frontend.widgets.
    Upload new price list for existing SubmittedPriceList (#1089)
    Remember uploaded filename in session and store it in db.
    Pre-fill step 3 w/ fake filename if gleaned data exists.
    don't return from __init__ (#1103)
    Modify price list details (#1077)
    Validate duplicate contract number in Step 1 (#985)
    
    * start duplicate contract substep
    
    * start fleshing out duplicate contract page
    
    * add simple interstitial page when contract num already exists
    
    * add path to modify view
    
    * add overflow so dl has a height
    
    * start filling out modify page
    
    * extract fields to shared place, start ModifyForm
    
    * more cleaning logic in ModifyForm
    
    * render form in template
    
    * move form to partial for ajax; instantiate instance in form
    
    * make ajaxform
    
    * update modal content
    
    * pass kwargs to reverse
    
    * add styling for .message-info
    
    * stub out more tests; make file not required; process POST
    
    * extract pl rows table to partial; add display of pl rows to modify page
    
    * [WIP] allow skip ahead on step 3 if already uploaded
    
    * show table on step 3 if data in session; add tests
    
    * simplify to just one submit button Step 3; adjust tests
    
    * skip directly to 4 if already uploaded; add anchor and header
    
    * previous goes to step 2 from step 3 errors
    
    * implement step_3_data interstitial page
    
    * fix for eslint
    
    * finish up step/3/data, including tests
    
    * doc is_file_required
    
    * better test names
    
    * docstring for get_deserialized_gleaned_data
    
    * rm modify form/page stuff
    
    * start outlining modify stuff
    
    * upload flow changes to validate dupe contract number
    
    * rm stubbed method, will implement separately
    
    * rm fields.py; amend data capture integration test
    
    * test Step1 duplicate validation
    
    * return HttpResponseBadRequest instead of raising error
    
    * address code review items
    Document from_post_data_subsets().
    Factor out ensure_contract_start_is_before_end().
    Factor out a EscalationRateField.
    Add a Step4Form.
    Allow skip ahead on Step 3 if price list already uploaded (#1027)
    
    * also implement step_3_data interstitial page
    Add support for radio and checkbox inputs to ajax-form (#1001)
    
    * add support for radio and checkbox inputs, closes #570
    * add uswds-style checkbox widget
    * add note and throw error on select or textarea elements
    escalation rate tweaks (#908)
    improve clean method logic, rm print
    validate contract_start is before contract_end
    Capture and use Escalation Rate for out-year pricing (#801)
    
    Closes #770
    Add {% fieldset %] template tag. Fixes #808.
    change contract start and end labels
    remove contract_year from s70 data capture
    make start and end dates required, closes #498
    Factor out SubmittedPriceList.CONTRACTOR_SITE_CHOICES.
    import uswds radio styles
    remove unused import
    less space to appease the code climate gods
    Allow schedules to provide upload examples and help text.
    change contractor asite and contract year to radios
    Add docstring for Step3Form constructor.
    Display preferred schedule during fallback.
    Pass schedule into price_list.Step3Form constructor.
    Fix #705, #711, simplify price list form logic.
    Use a ModelForm in step 1 of price list upload.
    Add some TODOs.
    add help text back to contract number in step 1
    move help text back to model
    rearrange steps so that model posting happens in step 4
    fix pep8 errors
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    move or remove old steps; stub out new steps
    messing with forms
    Fix #499 by making 'is small business' radios.
    convert step 3 form to use split date widget.
    move ajaxform, upload python files into frontend package.
    Add ajax form examples to styleguide.
    Add a django forms UploadWidget.
    Pull schedule choices from registry dynamically.
    Implement step 3.
    Attempt to guess schedule of price list if initial load fails.
    add settings.DATA_CAPTURE_SCHEDULES.
    Add step 2, 'Fake Schedule' implementation.
    Implement most of step 1.
    Change "NEW" to "UNREVIEWED" and "UNAPPROVED" to "RETIRED" (#1083)
    
    closes #1082
    Add ability to Reject price lists (#953)
    
    * remove boolean `is_approved` field
    * add new `status` field
    * update language about status on admin page
    * add reject methods, rejection email, and tests
    * add reject to list of SubmittedPriceListAdmin actions
    * Price list admin status segmentation (#954)
    validate contract_number, spruce up some tests (#1086)
    add migration to remove contract_year field
    Add migration for is_muted, created_at, updated_at.
    Capture and use Escalation Rate for out-year pricing (#801)
    
    Closes #770
    Use postgres JSONField for storing session state.
    Rename UploadedFile to HashedUploadedFile, rebuild migrations.
    Capture and use Escalation Rate for out-year pricing (#801)
    
    Closes #770
    add migration to remove contract_year field
    Refactor SubmittedPriceList "is_approved" to new "status" field (#951)
    Make migration work atop ones added recently.
    Add migration.
    Add initial migration.
    Add ability to Reject price lists (#953)
    
    * remove boolean `is_approved` field
    * add new `status` field
    * update language about status on admin page
    * add reject methods, rejection email, and tests
    * add reject to list of SubmittedPriceListAdmin actions
    * Price list admin status segmentation (#954)
    add migration to remove contract_year field
    add separate step for displaying rows with errors (#792)
    
    * add separate step for displaying rows with errors
    * add periods to submit-label text for consistency
    * use mixin classes for handle_cancel and gleaned_data tests
    Add ability to Reject price lists (#953)
    
    * remove boolean `is_approved` field
    * add new `status` field
    * update language about status on admin page
    * add reject methods, rejection email, and tests
    * add reject to list of SubmittedPriceListAdmin actions
    * Price list admin status segmentation (#954)
    add escalation_rate to admin price list views (#1299)
    Capture and use Escalation Rate for out-year pricing (#801)
    
    Closes #770
    Add migrations.
    make status_changed_by and status_changed_at non-null (#1007)
    added migration files
    Ran 'manage.py startapp data_capture'.
    first pass at loader
    Fix staging deploy (#598)
    
    * change the way we set email config vars to prevent KeyError
    * update runtime to latest 3.4.x on cloud.gov
    * auto-generated migration for date fields in SubmittedPriceList
    * add cf-ssh.yml to ignore files
    added basic api endpoint, updated loader to work with new sheet from Kelly
    Appease mypy and flake8.
    Remove references to now-defunct editorial commentary on price analysis.
    fix std dev and add percentage distance from avg
    add/show logic as per mocks
    Removes SIN from results
    Fix price list analysis.
    
    The logger that logged when price lists were submitted
    was crashing because it was trying to display
    the user who submitted the price list, but
    no user info was set (and the model field was non-nullable),
    which made everything explode. This creates a temporary
    user during the rolled-back transaction so that the
    logger is happy.
    Fix flake8 and mypy errors.
    List finders in settings.py. Fixes #1452.
    Populate most common edu column in export.
    Populate avg exp column in csv/xlsx export.
    Add exp/edu search criteria info to csv/xlsx export
    Add some AnalysisExport tests.
    Only look for 2 comparables, not 4.
    Fix flake8 issues
    Factor out finders.py and mypy it up.
    Use better broadening algorithm for min exp and edu level.
    Factor out data_capture.analysis.vocabulary module.
    Rename/move analysis-related modules to make more sense.
    Excise unused analyze_r10_row template filter.
    fix naive datetime warning.
    Factor out an analyze_gleaned_data function.
    Excise unused analyze_contract_row template filter.
    make a {% analyze_r10_row %} assignment tag.
    Show analysis column for region 10
    fix flake8 warning
    use less statistical jargon in price analysis.
    Optionally ignore search queries w/o nouns via nltk.pos_tag().
    Use a co-occurrence matrix to rank, cull permutations.
    Make Vocabulary.create() return a Vocabulary instance.
    Factor out Vocabulary class.
    Cache word -> lexeme mapping
    Include sample size in 'manage.py analyzecontracts' output.
    Improve speed of find_comparable_contracts() via caching.
    'manage.py analyzecontracts' reports outliers within 3 stddevs of mean.
    Add min_length, max_permutations to get_best_permutations().
    Change get_best_permutations a bit.
    Add 'manage.py analyzecontracts' command.
    Make describe() take a cursor and vocab.
    permutate words instead of just shortening query
    Add experimental price list analysis for fake schedules.
    Remove SIN from tests, make minor tweaks to data_capture/analysis/export.py to no longer use SIN in rows.
    Fix flake8 and mypy errors.
    Remove 'site' column from PL analysis export
    Populate most common edu column in export.
    Populate avg exp column in csv/xlsx export.
    Add exp/edu search criteria info to csv/xlsx export
    refactorings, tests for analysis.export
    Add some AnalysisExport tests.
    output mostly blank row when analysis not available
    Rename/move analysis-related modules to make more sense.
    Add export links to download analysis.
    adjust r10 export to match most recent template
    CSV and XLSX export of R10 price list analysis results (#1310)
    Remove stray debug lines.
    Add NLTK's Averaged Perceptron Tagger .pickle file to repository instead of downloading it on every build, and make changes to build files and to price analysis reflecting those changes.
    Increase max lexemes to eight per Joe's recommendation.
    Restrict the number of lexemes that can be passed to the powerset function in analysis/vocabulary.py.
    Fix flake8 and mypy errors.
    Ignore roman numerals in PL analysis. Fixes #1438.
    Always yield verbatim labor category.
    Use better broadening algorithm for min exp and edu level.
    Add tests for find_comparable_contracts.
    Factor out data_capture.analysis.vocabulary module.
    Rename/move analysis-related modules to make more sense.
    Excise unused analyze_r10_row template filter.
    fix naive datetime warning.
    Factor out an analyze_gleaned_data function.
    Excise unused analyze_contract_row template filter.
    make a {% analyze_r10_row %} assignment tag.
    Show analysis column for region 10
    fix flake8 warning
    use less statistical jargon in price analysis.
    Optionally ignore search queries w/o nouns via nltk.pos_tag().
    Use a co-occurrence matrix to rank, cull permutations.
    Make Vocabulary.create() return a Vocabulary instance.
    Factor out Vocabulary class.
    Cache word -> lexeme mapping
    Include sample size in 'manage.py analyzecontracts' output.
    Improve speed of find_comparable_contracts() via caching.
    'manage.py analyzecontracts' reports outliers within 3 stddevs of mean.
    Add min_length, max_permutations to get_best_permutations().
    Change get_best_permutations a bit.
    Add 'manage.py analyzecontracts' command.
    Make describe() take a cursor and vocab.
    permutate words instead of just shortening query
    Add experimental price list analysis for fake schedules.
    Fix flake8 and mypy errors.
    lol whatever mypy
    appease mypy
    List finders in settings.py. Fixes #1452.
    Add exp/edu search criteria info to csv/xlsx export
    Fix flake8 errors.
    ExactEduAndExpFinder now searches for up to min xp + 4 years.
    Fix flake8 issues
    Factor out finders.py and mypy it up.
    Rename/move analysis-related modules to make more sense.
    first pass at loader
    use format utils for tz_timestamp
    Fix urls and make misc copy changes, modify python file
    adjust tz_timestamp format to be more humane
    Include UaaBackend in tests.
    revert premailer test tweak
    Move absolute URL utils to hourglass.site_utils.
    Use doggone sites framework when sending emails, yo.
    Add HTMLemail template, use premailer to inline CSS.
    Make email.send_mail() render the template.
    Tag and release v2.1.0 (#1303)
    Update emails with Writing Lab changes (#1291)
    Send html versions of admin emails and include relevant links (#1263)
    Add HELP_EMAIL setting; Use it in reply-to for emails (#1264)
    Send HTML email notifications with link to Price List details page (#1255)
    Display datetimes in emails localized to US/Eastern time (#1217)
    
    * Display datetimes in emails localized to Eastern time using new `tz_timestamp` template filter
    use django's built-in settings for email from addresses (#1211)
    Change "NEW" to "UNREVIEWED" and "UNAPPROVED" to "RETIRED" (#1083)
    
    closes #1082
    Add ability to Reject price lists (#953)
    
    * remove boolean `is_approved` field
    * add new `status` field
    * update language about status on admin page
    * add reject methods, rejection email, and tests
    * add reject to list of SubmittedPriceListAdmin actions
    * Price list admin status segmentation (#954)
    Refactor SubmittedPriceList "is_approved" to new "status" field (#951)
    Add support for periodic tasks and send admin approval reminder email (#655)
    
    * install rq-scheduler
    * setup docker and CF apps for rqworker container
    * add email template and method for sending approval reminder
    * use custom AppConfig that adds scheduled admin reminder email job
    * send approval reminders to all superusers who have email addresses
    * add DefaultDataCaptureApp; load app based on IS_RQ_SCHEDULER
    * Add a ScheduledJobsPanel to DjDT.
    Send email to submitter when Price List is un/approved by admin (#640)
    
    * create email template subdirectory
    * add email module for holding all email-sending logic; separate bulk upload emails
    * add EmailResult class
    * add SYSTEM_EMAIL_ADDRESS setting
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    Fix flake8 and mypy errors.
    fix up tests and implementation
    start tests for r10 gleaner
    [WIP] Region 10 Price List gleaner
    Rename 'hourglass' to 'calc'. Fixes #93.
    backport refactorings from #1284
    [WIP] Region 10 Price List gleaner
    Display datetimes in emails localized to US/Eastern time (#1217)
    
    * Display datetimes in emails localized to Eastern time using new `tz_timestamp` template filter
    Modify price list details (#1077)
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    add separate step for displaying rows with errors (#792)
    
    * add separate step for displaying rows with errors
    * add periods to submit-label text for consistency
    * use mixin classes for handle_cancel and gleaned_data tests
    Restrict R10 Bulk Upload views and Price List Upload views based on permissions (#738)
    
    * add add_bulkuploadcontractsource to Data Administrators
    * rm custom decorator, use permission_required instead
    * move staff_login_required and associated tests to hourglass
    * extract and reuse get_permissions_from_ns_codenames
    Run admin tests as Data Administrator.
    Send email to submitter when Price List is un/approved by admin (#640)
    
    * create email template subdirectory
    * add email module for holding all email-sending logic; separate bulk upload emails
    * add EmailResult class
    * add SYSTEM_EMAIL_ADDRESS setting
    rearrange steps so that model posting happens in step 4
    check to see if user exists before creating
    Factor out new data_capture.jobs module.
    Add some admin tests for data_capture.
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    Add data_capture.tests.test_schedules_registry.
    Add data_capture.tests.test_forms.
    Add data_capture.tests.test_models.
    Rename 'hourglass' to 'calc'. Fixes #93.
    Repopulate schedule registry via setting_changed signal.
    improve pricelist status logging and add tests
    
    - fix #1578
    - show status text instead of code
    - add tests to check that logging is happening when pl status changes
    Rename UploadedFile to HashedUploadedFile, rebuild migrations.
    Add SlowpokeStorage backend.
    Add UploadedFile class.
    Use freezegun to freeze time in tests (#1231)
    Change "NEW" to "UNREVIEWED" and "UNAPPROVED" to "RETIRED" (#1083)
    
    closes #1082
    validate contract_number, spruce up some tests (#1086)
    Validate duplicate contract number in Step 1 (#985)
    
    * start duplicate contract substep
    
    * start fleshing out duplicate contract page
    
    * add simple interstitial page when contract num already exists
    
    * add path to modify view
    
    * add overflow so dl has a height
    
    * start filling out modify page
    
    * extract fields to shared place, start ModifyForm
    
    * more cleaning logic in ModifyForm
    
    * render form in template
    
    * move form to partial for ajax; instantiate instance in form
    
    * make ajaxform
    
    * update modal content
    
    * pass kwargs to reverse
    
    * add styling for .message-info
    
    * stub out more tests; make file not required; process POST
    
    * extract pl rows table to partial; add display of pl rows to modify page
    
    * [WIP] allow skip ahead on step 3 if already uploaded
    
    * show table on step 3 if data in session; add tests
    
    * simplify to just one submit button Step 3; adjust tests
    
    * skip directly to 4 if already uploaded; add anchor and header
    
    * previous goes to step 2 from step 3 errors
    
    * implement step_3_data interstitial page
    
    * fix for eslint
    
    * finish up step/3/data, including tests
    
    * doc is_file_required
    
    * better test names
    
    * docstring for get_deserialized_gleaned_data
    
    * rm modify form/page stuff
    
    * start outlining modify stuff
    
    * upload flow changes to validate dupe contract number
    
    * rm stubbed method, will implement separately
    
    * rm fields.py; amend data capture integration test
    
    * test Step1 duplicate validation
    
    * return HttpResponseBadRequest instead of raising error
    
    * address code review items
    make status_changed_by and status_changed_at non-null (#1007)
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    Add ability to Reject price lists (#953)
    
    * remove boolean `is_approved` field
    * add new `status` field
    * update language about status on admin page
    * add reject methods, rejection email, and tests
    * add reject to list of SubmittedPriceListAdmin actions
    * Price list admin status segmentation (#954)
    Refactor SubmittedPriceList "is_approved" to new "status" field (#951)
    Capture and use Escalation Rate for out-year pricing (#801)
    
    Closes #770
    Send email to submitter when Price List is un/approved by admin (#640)
    
    * create email template subdirectory
    * add email module for holding all email-sending logic; separate bulk upload emails
    * add EmailResult class
    * add SYSTEM_EMAIL_ADDRESS setting
    Add some admin tests for data_capture.
    Test is_muted functionality.
    Change the way price list rows are added.
    
    This fixes the following error raised by Django 1.9:
    
      ValueError: <SubmittedPriceListRow: Submitted price list row>
      instance isn't saved. Use bulk=False or save the object first.
    Implement rest of s70.
    Rename SubmittedPriceListRow.contract_model_id to .contract_model.
    Add data_capture.tests.test_models.
    Conflict rez-lution
    Tests passing
    Repopulate schedule registry via setting_changed signal.
    Tweak flake8 config. Fixes #1818.
    Add 'exit this replay' button.
    Add 'Technical Support Specialists' group.
    Use postgres JSONField for storing session state.
    Add tests for replay.
    Account for Location header changes in Django 1.9.
    Add tutorial page.
    remove gleaned_data only if its class differs from selection
    clear gleaned_data from session on sched selection change
    Use freezegun to freeze time in tests (#1231)
    Change "NEW" to "UNREVIEWED" and "UNAPPROVED" to "RETIRED" (#1083)
    
    closes #1082
    Remember uploaded filename in session and store it in db.
    Pre-fill step 3 w/ fake filename if gleaned data exists.
    change step_1 to not overwrite other step session data (#1085)
    Validate duplicate contract number in Step 1 (#985)
    
    * start duplicate contract substep
    
    * start fleshing out duplicate contract page
    
    * add simple interstitial page when contract num already exists
    
    * add path to modify view
    
    * add overflow so dl has a height
    
    * start filling out modify page
    
    * extract fields to shared place, start ModifyForm
    
    * more cleaning logic in ModifyForm
    
    * render form in template
    
    * move form to partial for ajax; instantiate instance in form
    
    * make ajaxform
    
    * update modal content
    
    * pass kwargs to reverse
    
    * add styling for .message-info
    
    * stub out more tests; make file not required; process POST
    
    * extract pl rows table to partial; add display of pl rows to modify page
    
    * [WIP] allow skip ahead on step 3 if already uploaded
    
    * show table on step 3 if data in session; add tests
    
    * simplify to just one submit button Step 3; adjust tests
    
    * skip directly to 4 if already uploaded; add anchor and header
    
    * previous goes to step 2 from step 3 errors
    
    * implement step_3_data interstitial page
    
    * fix for eslint
    
    * finish up step/3/data, including tests
    
    * doc is_file_required
    
    * better test names
    
    * docstring for get_deserialized_gleaned_data
    
    * rm modify form/page stuff
    
    * start outlining modify stuff
    
    * upload flow changes to validate dupe contract number
    
    * rm stubbed method, will implement separately
    
    * rm fields.py; amend data capture integration test
    
    * test Step1 duplicate validation
    
    * return HttpResponseBadRequest instead of raising error
    
    * address code review items
    Only force show when force==on (#1062)
    Test value of show_edit_form in context.
    Add step 4 form tests.
    Properly pluralize generic form error message. (#1046)
    Fix broken tests.
    Allow skip ahead on Step 3 if price list already uploaded (#1027)
    
    * also implement step_3_data interstitial page
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    Refactor SubmittedPriceList "is_approved" to new "status" field (#951)
    Add Modal Dialog for Canceling (#918)
    
    * add modal dialogs with a11y-dialog library
    * use modal dialogs for all Cancel links in Price List Upload and Region 10 Bulk Upload flows
    * handle_cancel on step_3_errors view so modal can POST cancel
    Embed upload form in /data-capture/step/3/errors.
    copy edits from data upload section of writing lab review
    add separate step for displaying rows with errors (#792)
    
    * add separate step for displaying rows with errors
    * add periods to submit-label text for consistency
    * use mixin classes for handle_cancel and gleaned_data tests
    remove contract_year from s70 data capture
    Restrict R10 Bulk Upload views and Price List Upload views based on permissions (#738)
    
    * add add_bulkuploadcontractsource to Data Administrators
    * rm custom decorator, use permission_required instead
    * move staff_login_required and associated tests to hourglass
    * extract and reuse get_permissions_from_ns_codenames
    Better prefill-form tests.
    Implement Contract Officers role and protect Price List Upload views (#694)
    
    closes #686
    
    * create reusable contract_officer_perms_required decorator
    * add CO perms to Data Admin role
    * use lists for roles instead of tuples
    * use set()s for roles definitions
    * update existing tests to setup user in Contract Officers group
    * Use namespaced permissions for initgroups cmd. (#726)
    Add tests.
    Simplify step 5.
    Add redirect tests for steps 2 and 3.
    Fix #705, #711, simplify price list form logic.
    Add a TODO to test_price_list_views.py, h/t @hbillings
    add missing tests
    shut up pep8
    update data_capture key
    fix tests
    step 5 tests
    step 4 tests
    step 2 tests, redeux
    Canceling data_capture flows (#629)
    
    * add `handle_cancel` decorator for canceling data_capture flows via POST request
    * update formbuttonrow to work with buttons; replace button-cancel with button-secondary
    * handle_cancel on price_list_upload views; add tests
    * factor out ajax_redirect to a method in ajaxform (#641)
    rearrange steps so that model posting happens in step 4
    check to see if user exists before creating
    stub out final tests
    tests for step 3
    test session data created in step 1
    step 2 tests
    wip price list tests; step 1 tests
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    Fix broken tests.
    use generic error message in step 1; friendlier language
    add assertions for messages
    Remove gleaned data from user session after submission.
    Add data_capture.tests.test_forms.
    Add data_capture.tests.test_models.
    Convert data_capture.tests into a package.
    Add more tests.
    More tests.
    Add a few more tests.
    add a few basic tests.
    Ran 'manage.py startapp data_capture'.
    Add test for Schedule 03FAC, make minor tweaks.
    Add test for Schedule 736, plus code tweaks to make tests pass.
    backport refactorings from #1284
    Fix broken test from merge.
    finish up new gleaner and tests for min experience
    fix broken flake8 and tests
    Stop parsing S70 Price List when 'Most favored customer' is encountered (#1320)
    Tag and release v2.1.0 (#1303)
    Apply floatformat to price column (#1289)
    start tests for r10 gleaner
    [WIP] Region 10 Price List gleaner
    Validate Unit of Issue in S70 Price List uploads (#892)
    
    * add unit_of_issue and validator to Schedule70Row
    * only validate that necessary columns exist (#893)
    * coerce unit_of_issue to 'Hour'
    validate price_including_iff is above FEDERAL_MIN_CONTRACT_RATE (#829)
    Capture and use Escalation Rate for out-year pricing (#801)
    
    Closes #770
    Find S70 price list field columns by heading instead of by index  (#767)
    
    * use column headings instead of hard-coded column indices
    use FakeWorkbook for test_text_formatted_prices_are_gleaned; rm fixture
    Coerce education take 2 (#764)
    
    * add simple coercer for education level
    
    * add doctest about level bias
    
    * fix minor typo
    
    * tokenize on whitespace
    
    * move test spreadsheets to fixtures directory
    
    * add more code comments
    
    * add actual docstring, fix broken doctest
    
    * Use FakeWorkbook/FakeSheet for testing.
    
    * Fix tests.
    
    * Remove price_list_with_min_education_text.xlsx.
    use mocks to test find_header_row
    Strip non-numeric chars from S70 price cells during gleaning (#750)
    tweak copy in s70 upload example.
    Add schedule 70 upload example table. Fixes #727.
    Price List table row templates and styling (#660)
    
    * add methods, styling, calls for rendering price list tables
    * add monotype font family variable
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    argggg quantified code pythonic name again
    more pythonic name
    add test for price below FEDERAL_MIN_CONTRACT_RATE
    Implement rest of s70.
    Safely convert cell values.
    Glean data from Excel files for s70.
    Add test for Schedule 736, plus code tweaks to make tests pass.
    backport refactorings from #1284
    Fix broken test from merge.
    finish up new gleaner and tests for min experience
    fix broken flake8 and tests
    Stop parsing S70 Price List when 'Most favored customer' is encountered (#1320)
    Tag and release v2.1.0 (#1303)
    Apply floatformat to price column (#1289)
    start tests for r10 gleaner
    [WIP] Region 10 Price List gleaner
    Validate Unit of Issue in S70 Price List uploads (#892)
    
    * add unit_of_issue and validator to Schedule70Row
    * only validate that necessary columns exist (#893)
    * coerce unit_of_issue to 'Hour'
    validate price_including_iff is above FEDERAL_MIN_CONTRACT_RATE (#829)
    Capture and use Escalation Rate for out-year pricing (#801)
    
    Closes #770
    Find S70 price list field columns by heading instead of by index  (#767)
    
    * use column headings instead of hard-coded column indices
    use FakeWorkbook for test_text_formatted_prices_are_gleaned; rm fixture
    Coerce education take 2 (#764)
    
    * add simple coercer for education level
    
    * add doctest about level bias
    
    * fix minor typo
    
    * tokenize on whitespace
    
    * move test spreadsheets to fixtures directory
    
    * add more code comments
    
    * add actual docstring, fix broken doctest
    
    * Use FakeWorkbook/FakeSheet for testing.
    
    * Fix tests.
    
    * Remove price_list_with_min_education_text.xlsx.
    use mocks to test find_header_row
    Strip non-numeric chars from S70 price cells during gleaning (#750)
    tweak copy in s70 upload example.
    Add schedule 70 upload example table. Fixes #727.
    Price List table row templates and styling (#660)
    
    * add methods, styling, calls for rendering price list tables
    * add monotype font family variable
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    argggg quantified code pythonic name again
    more pythonic name
    add test for price below FEDERAL_MIN_CONTRACT_RATE
    Implement rest of s70.
    Safely convert cell values.
    Glean data from Excel files for s70.
    Rename 'hourglass' to 'calc'. Fixes #93.
    Account for Location header changes in Django 1.9.
    Upgrade python packages (#1324)
    Restrict R10 Bulk Upload views and Price List Upload views based on permissions (#738)
    
    * add add_bulkuploadcontractsource to Data Administrators
    * rm custom decorator, use permission_required instead
    * move staff_login_required and associated tests to hourglass
    * extract and reuse get_permissions_from_ns_codenames
    Implement Contract Officers role and protect Price List Upload views (#694)
    
    closes #686
    
    * create reusable contract_officer_perms_required decorator
    * add CO perms to Data Admin role
    * use lists for roles instead of tuples
    * use set()s for roles definitions
    * update existing tests to setup user in Contract Officers group
    * Use namespaced permissions for initgroups cmd. (#726)
    Custom 403 template (#669)
    
    * add 403 error page template, closes #664
    staff_login_required decorator (#662)
    
    * add, use, and test staff_login_required decorator
    Canceling data_capture flows (#629)
    
    * add `handle_cancel` decorator for canceling data_capture flows via POST request
    * update formbuttonrow to work with buttons; replace button-cancel with button-secondary
    * handle_cancel on price_list_upload views; add tests
    * factor out ajax_redirect to a method in ajaxform (#641)
    version upgrade patch
    reverting changes
    commenting test
    updated test
    uncommented test
    updated test
    uncommented test
    Temporarily Commenting
    Revert "Uncommeting Test"
    
    This reverts commit af642bc02f2fc3a803685328eb03a7e20e3aacfb.
    Uncommeting Test
    Temporary commenting existing failed tests
    Add support for periodic tasks and send admin approval reminder email (#655)
    
    * install rq-scheduler
    * setup docker and CF apps for rqworker container
    * add email template and method for sending approval reminder
    * use custom AppConfig that adds scheduled admin reminder email job
    * send approval reminders to all superusers who have email addresses
    * add DefaultDataCaptureApp; load app based on IS_RQ_SCHEDULER
    * Add a ScheduledJobsPanel to DjDT.
    Repopulate schedule registry via setting_changed signal.
    Running test_forms by itself works. Fixes #1522.
    Upload new price list for existing SubmittedPriceList (#1089)
    Modify price list details (#1077)
    validate contract_number, spruce up some tests (#1086)
    Validate duplicate contract number in Step 1 (#985)
    
    * start duplicate contract substep
    
    * start fleshing out duplicate contract page
    
    * add simple interstitial page when contract num already exists
    
    * add path to modify view
    
    * add overflow so dl has a height
    
    * start filling out modify page
    
    * extract fields to shared place, start ModifyForm
    
    * more cleaning logic in ModifyForm
    
    * render form in template
    
    * move form to partial for ajax; instantiate instance in form
    
    * make ajaxform
    
    * update modal content
    
    * pass kwargs to reverse
    
    * add styling for .message-info
    
    * stub out more tests; make file not required; process POST
    
    * extract pl rows table to partial; add display of pl rows to modify page
    
    * [WIP] allow skip ahead on step 3 if already uploaded
    
    * show table on step 3 if data in session; add tests
    
    * simplify to just one submit button Step 3; adjust tests
    
    * skip directly to 4 if already uploaded; add anchor and header
    
    * previous goes to step 2 from step 3 errors
    
    * implement step_3_data interstitial page
    
    * fix for eslint
    
    * finish up step/3/data, including tests
    
    * doc is_file_required
    
    * better test names
    
    * docstring for get_deserialized_gleaned_data
    
    * rm modify form/page stuff
    
    * start outlining modify stuff
    
    * upload flow changes to validate dupe contract number
    
    * rm stubbed method, will implement separately
    
    * rm fields.py; amend data capture integration test
    
    * test Step1 duplicate validation
    
    * return HttpResponseBadRequest instead of raising error
    
    * address code review items
    Add step 4 form tests.
    Allow skip ahead on Step 3 if price list already uploaded (#1027)
    
    * also implement step_3_data interstitial page
    fix contract start-end validation test
    improve clean method logic, rm print
    validate contract_start is before contract_end
    Capture and use Escalation Rate for out-year pricing (#801)
    
    Closes #770
    Pass schedule into price_list.Step3Form constructor.
    modify tests for forms
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    Add data_capture.tests.test_schedules_registry.
    Add data_capture.tests.test_forms.
    add xlrd.open_workbook() defusedxml test.
    Use defusedxml and ensure xlrd is using it.
    Increase max lexemes to eight per Joe's recommendation.
    Restrict the number of lexemes that can be passed to the powerset function in analysis/vocabulary.py.
    Remove references to now-defunct editorial commentary on price analysis.
    Upgrade Django and NLTK versions; also change a test to rely on an ordering that isn't guaranteed.
    Move “Analyze prices” functionality behind authorization.
    flak8
    Change tests to reflect current JSON output.
    Remove SIN from tests, make minor tweaks to data_capture/analysis/export.py to no longer use SIN in rows.
    Ignore roman numerals in PL analysis. Fixes #1438.
    replace 'ii' w/ 'zz' in tests so we don't break them.
    List finders in settings.py. Fixes #1452.
    Populate most common edu column in export.
    Populate avg exp column in csv/xlsx export.
    Add exp/edu search criteria info to csv/xlsx export
    refactorings, tests for analysis.export
    Add some AnalysisExport tests.
    Always yield verbatim labor category.
    ExactEduAndExpFinder now searches for up to min xp + 4 years.
    Factor out finders.py and mypy it up.
    Use better broadening algorithm for min exp and edu level.
    Add tests for find_comparable_contracts.
    Factor out data_capture.analysis.vocabulary module.
    Rename/move analysis-related modules to make more sense.
    Use a co-occurrence matrix to rank, cull permutations.
    Add min_length, max_permutations to get_best_permutations().
    Change get_best_permutations a bit.
    Add test_analyze_contract.py.
    use format utils for tz_timestamp
    adjust tz_timestamp format to be more humane
    Add an {% absolute_static %} template tag for emails.
    no need to explicitly make times tz-aware
    
    ref: https://www.python.org/dev/peps/pep-0495/#conversion-from-naive-to-aware
    Display datetimes in emails localized to US/Eastern time (#1217)
    
    * Display datetimes in emails localized to Eastern time using new `tz_timestamp` template filter
    Rename 'hourglass' to 'calc'. Fixes #93.
    Add 'Technical Support Specialists' group.
    Add tests for attempted price list submissions. fix security boog.
    Fix test_admin.py.
    Use doggone sites framework when sending emails, yo.
    Tag and release v2.1.0 (#1303)
    Send html versions of admin emails and include relevant links (#1263)
    Send HTML email notifications with link to Price List details page (#1255)
    Only display email and is_staff in user admin list (#1261)
    Change "NEW" to "UNREVIEWED" and "UNAPPROVED" to "RETIRED" (#1083)
    
    closes #1082
    enforce case-insensitive user email addresses (#1041)
    Add ability to Reject price lists (#953)
    
    * remove boolean `is_approved` field
    * add new `status` field
    * update language about status on admin page
    * add reject methods, rejection email, and tests
    * add reject to list of SubmittedPriceListAdmin actions
    * Price list admin status segmentation (#954)
    Refactor SubmittedPriceList "is_approved" to new "status" field (#951)
    Rename find_username to generate_username.
    Add CustomUserCreationForm tests.
    Add SuperuserViewTests to admin tests.
    Add /admin/auth/user/ tests.
    Disable debug toolbar in admin tests. Fixes #676.
    Run admin tests as Data Administrator.
    Send email to submitter when Price List is un/approved by admin (#640)
    
    * create email template subdirectory
    * add email module for holding all email-sending logic; separate bulk upload emails
    * add EmailResult class
    * add SYSTEM_EMAIL_ADDRESS setting
    Add tests for approve/unapprove admin actions.
    Add some admin tests for data_capture.
    Better test naming.
    Add more tests for bulk upload. Fixes #1718.
    migrate to CircleCI
    
    - raise real Exception in test_selenium
    - remove debug print statement in styleguide tests
    - comment out WebDriver/Sauce test stuff because no time to get it working right now
    - upgrade to python 3.6.2
    Display datetimes in emails localized to US/Eastern time (#1217)
    
    * Display datetimes in emails localized to Eastern time using new `tz_timestamp` template filter
    Send email to submitter when Price List is un/approved by admin (#640)
    
    * create email template subdirectory
    * add email module for holding all email-sending logic; separate bulk upload emails
    * add EmailResult class
    * add SYSTEM_EMAIL_ADDRESS setting
    Factor out new data_capture.jobs module.
    Repopulate schedule registry via setting_changed signal.
    Tag and release v2.1.0 (#1303)
    Apply floatformat to price column (#1289)
    Price List table row templates and styling (#660)
    
    * add methods, styling, calls for rendering price list tables
    * add monotype font family variable
    Fix #504 by seeking to 0 before reading from file. (#525)
    Add data_capture.tests.test_schedules_registry.
    Make BasePriceList an abc.ABCMeta.
    Add schedule 70 upload example table. Fixes #727.
    Allow schedules to provide upload examples and help text.
    Rename 'hourglass' to 'calc'. Fixes #93.
    Use freezegun to freeze time in tests (#1231)
    Fix tests that broke due to https://bugs.python.org/issue21238.
    Change "NEW" to "UNREVIEWED" and "UNAPPROVED" to "RETIRED" (#1083)
    
    closes #1082
    Modify price list details (#1077)
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    Refactor SubmittedPriceList "is_approved" to new "status" field (#951)
    Add Modal Dialog for Canceling (#918)
    
    * add modal dialogs with a11y-dialog library
    * use modal dialogs for all Cancel links in Price List Upload and Region 10 Bulk Upload flows
    * handle_cancel on step_3_errors view so modal can POST cancel
    Embed upload form in /data-capture/step/3/errors.
    copy edits from data upload section of writing lab review
    add separate step for displaying rows with errors (#792)
    
    * add separate step for displaying rows with errors
    * add periods to submit-label text for consistency
    * use mixin classes for handle_cancel and gleaned_data tests
    remove contract_year from s70 data capture
    Restrict R10 Bulk Upload views and Price List Upload views based on permissions (#738)
    
    * add add_bulkuploadcontractsource to Data Administrators
    * rm custom decorator, use permission_required instead
    * move staff_login_required and associated tests to hourglass
    * extract and reuse get_permissions_from_ns_codenames
    Better prefill-form tests.
    Implement Contract Officers role and protect Price List Upload views (#694)
    
    closes #686
    
    * create reusable contract_officer_perms_required decorator
    * add CO perms to Data Admin role
    * use lists for roles instead of tuples
    * use set()s for roles definitions
    * update existing tests to setup user in Contract Officers group
    * Use namespaced permissions for initgroups cmd. (#726)
    Add tests.
    Simplify step 5.
    Add redirect tests for steps 2 and 3.
    Fix #705, #711, simplify price list form logic.
    Add a TODO to test_price_list_views.py, h/t @hbillings
    add missing tests
    shut up pep8
    update data_capture key
    fix tests
    step 5 tests
    step 4 tests
    step 2 tests, redeux
    Canceling data_capture flows (#629)
    
    * add `handle_cancel` decorator for canceling data_capture flows via POST request
    * update formbuttonrow to work with buttons; replace button-cancel with button-secondary
    * handle_cancel on price_list_upload views; add tests
    * factor out ajax_redirect to a method in ajaxform (#641)
    rearrange steps so that model posting happens in step 4
    check to see if user exists before creating
    stub out final tests
    tests for step 3
    test session data created in step 1
    step 2 tests
    wip price list tests; step 1 tests
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    Fix broken tests.
    use generic error message in step 1; friendlier language
    add assertions for messages
    Remove gleaned data from user session after submission.
    Add data_capture.tests.test_forms.
    Add data_capture.tests.test_models.
    Convert data_capture.tests into a package.
    Add more tests.
    More tests.
    Add a few more tests.
    add a few basic tests.
    Ran 'manage.py startapp data_capture'.
    Adding OG and other meta tags to head (#2033)
    
    * Added OG and other meta tags to head
    * Added "capture" tag
    * Added new "striptext" simple tag
    Rename 'hourglass' to 'calc'. Fixes #93.
    Repopulate schedule registry via setting_changed signal.
    Fix data capture integration tests on selenium.
    Validate duplicate contract number in Step 1 (#985)
    
    * start duplicate contract substep
    
    * start fleshing out duplicate contract page
    
    * add simple interstitial page when contract num already exists
    
    * add path to modify view
    
    * add overflow so dl has a height
    
    * start filling out modify page
    
    * extract fields to shared place, start ModifyForm
    
    * more cleaning logic in ModifyForm
    
    * render form in template
    
    * move form to partial for ajax; instantiate instance in form
    
    * make ajaxform
    
    * update modal content
    
    * pass kwargs to reverse
    
    * add styling for .message-info
    
    * stub out more tests; make file not required; process POST
    
    * extract pl rows table to partial; add display of pl rows to modify page
    
    * [WIP] allow skip ahead on step 3 if already uploaded
    
    * show table on step 3 if data in session; add tests
    
    * simplify to just one submit button Step 3; adjust tests
    
    * skip directly to 4 if already uploaded; add anchor and header
    
    * previous goes to step 2 from step 3 errors
    
    * implement step_3_data interstitial page
    
    * fix for eslint
    
    * finish up step/3/data, including tests
    
    * doc is_file_required
    
    * better test names
    
    * docstring for get_deserialized_gleaned_data
    
    * rm modify form/page stuff
    
    * start outlining modify stuff
    
    * upload flow changes to validate dupe contract number
    
    * rm stubbed method, will implement separately
    
    * rm fields.py; amend data capture integration test
    
    * test Step1 duplicate validation
    
    * return HttpResponseBadRequest instead of raising error
    
    * address code review items
    Add data capture integration tests using selenium OR robobrowser.
    Log LogEntry and M2M changes.
    
    These were adapted from:
    
    https://github.com/18F/omb-eregs/blob/master/api/ereqs_admin/apps.py
    https://github.com/18F/omb-eregs/blob/master/api/ereqs_admin/tests/apps_tests.py
    Log SubmittedPriceList creation.
    Convert data_capture.tests into a package.
    first pass at loader
    version upgrade patch
    removed unused import
    removed unused import
    Temporarily Commenting
    Commenting Temporarily
    Checking Tests
    Removed Imports
    Commenting Temporarily
    Account for Location header changes in Django 1.9.
    Display datetimes in emails localized to US/Eastern time (#1217)
    
    * Display datetimes in emails localized to Eastern time using new `tz_timestamp` template filter
    Upload new price list for existing SubmittedPriceList (#1089)
    R10 Upload changes/fixes (#850)
    
    * add page_heading block; minor R10 template rearrangements
    * add success heading to r10 step 3
    * add R10 spreadsheet example to step 1
    * add simple test for r10 example render method
    * rm outated dev note about djdt
    * modify R10 upload intro text
    copy edits from data upload section of writing lab review
    Restrict R10 Bulk Upload views and Price List Upload views based on permissions (#738)
    
    * add add_bulkuploadcontractsource to Data Administrators
    * rm custom decorator, use permission_required instead
    * move staff_login_required and associated tests to hourglass
    * extract and reuse get_permissions_from_ns_codenames
    Move final Bulk Upload POST and processing to step 2 view handler (#730)
    
    * move POST and processing to step 2
    Hide template content about emails when EMAIL_URL is dummy (#684)
    
    * add SEND_TRANSACTIONAL_EMAILS setting
    * use SEND_TRANSACTIONAL_EMAILS as flag to hide content about emails
    staff_login_required decorator (#662)
    
    * add, use, and test staff_login_required decorator
    Canceling data_capture flows (#629)
    
    * add `handle_cancel` decorator for canceling data_capture flows via POST request
    * update formbuttonrow to work with buttons; replace button-cancel with button-secondary
    * handle_cancel on price_list_upload views; add tests
    * factor out ajax_redirect to a method in ajaxform (#641)
    add file_mime_type to BulkUploadContractSource (#619)
    R10 POST to Step 3 (#621)
    
    only allow POST to step 3 of R10 bulk upload
    Factor out new data_capture.jobs module.
    Attempt to fix tests on travis.
    Fix tests for bulk upload, add a few.
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    Modified unit tests with new fields
    Fixed validation error
    Removed space
    flake8 error
    flake8 error
    changes based on build
    updated code_build
    Updated build failures
    Mas consolidated_Unit test cases
    Process bulk uploads in batches of 5000 contracts. Possibly fixes #1712.
    Process bulk uploads in batches of 5000 contracts. Possibly fixes #1712.
    Add smoke test for send_test_html_email.
    Tag and release v2.1.0 (#1303)
    Send html versions of admin emails and include relevant links (#1263)
    Implement Contract Officers role and protect Price List Upload views (#694)
    
    closes #686
    
    * create reusable contract_officer_perms_required decorator
    * add CO perms to Data Admin role
    * use lists for roles instead of tuples
    * use set()s for roles definitions
    * update existing tests to setup user in Contract Officers group
    * Use namespaced permissions for initgroups cmd. (#726)
    Add a test for initgroups command.
    backport refactorings from #1284
    Fix broken test from merge.
    finish up new gleaner and tests for min experience
    fix broken flake8 and tests
    Stop parsing S70 Price List when 'Most favored customer' is encountered (#1320)
    Tag and release v2.1.0 (#1303)
    Apply floatformat to price column (#1289)
    start tests for r10 gleaner
    [WIP] Region 10 Price List gleaner
    Validate Unit of Issue in S70 Price List uploads (#892)
    
    * add unit_of_issue and validator to Schedule70Row
    * only validate that necessary columns exist (#893)
    * coerce unit_of_issue to 'Hour'
    validate price_including_iff is above FEDERAL_MIN_CONTRACT_RATE (#829)
    Capture and use Escalation Rate for out-year pricing (#801)
    
    Closes #770
    Find S70 price list field columns by heading instead of by index  (#767)
    
    * use column headings instead of hard-coded column indices
    use FakeWorkbook for test_text_formatted_prices_are_gleaned; rm fixture
    Coerce education take 2 (#764)
    
    * add simple coercer for education level
    
    * add doctest about level bias
    
    * fix minor typo
    
    * tokenize on whitespace
    
    * move test spreadsheets to fixtures directory
    
    * add more code comments
    
    * add actual docstring, fix broken doctest
    
    * Use FakeWorkbook/FakeSheet for testing.
    
    * Fix tests.
    
    * Remove price_list_with_min_education_text.xlsx.
    use mocks to test find_header_row
    Strip non-numeric chars from S70 price cells during gleaning (#750)
    tweak copy in s70 upload example.
    Add schedule 70 upload example table. Fixes #727.
    Price List table row templates and styling (#660)
    
    * add methods, styling, calls for rendering price list tables
    * add monotype font family variable
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    argggg quantified code pythonic name again
    more pythonic name
    add test for price below FEDERAL_MIN_CONTRACT_RATE
    Implement rest of s70.
    Safely convert cell values.
    Glean data from Excel files for s70.
    Support fuzzy column titles.
    backport refactorings from #1284
    start tests for r10 gleaner
    [WIP] Region 10 Price List gleaner
    Tweak flake8 config. Fixes #1818.
    Use freezegun to freeze time in tests (#1231)
    Upload new price list for existing SubmittedPriceList (#1089)
    Use StaticLiveServerTestCase (#1148)
    
    Fixes #1147
    Use 'abc' module for abstract base classes.
    Add data capture integration tests using selenium OR robobrowser.
    Get rid of date.py, add tests for our template override.
    Docstring typo fix
    Document abstract base classes.
    Use 'abc' module for abstract base classes.
    Add data capture integration tests using selenium OR robobrowser.
    Fix data capture integration tests on selenium.
    Use 'abc' module for abstract base classes.
    Add data capture integration tests using selenium OR robobrowser.
    Add TEST_WITH_ROBOBROWSER env var.
    Add data capture integration tests using selenium OR robobrowser.
    Move Steps, StepRenderer to steps.py. Fixes #1173.
    Define step labels via @step decorator.
    Make StepRenderer.widget throw if no labels are defined.
    Upload new price list for existing SubmittedPriceList (#1089)
    Use StepWidget in PL upload, bulk upload.
    Modify price list details (#1077)
    Properly pluralize generic form error message. (#1046)
    Add current_selected_tab to contexts of some templates.
    copy edits from data upload section of writing lab review
    docstring tweak
    Revise docstring for Steps a bit.
    Add doctests for Steps/StepRenderer.
    Rename StepBuilder to Steps.
    Add StepRenderer, pass it into @steps.step views.
    Make 'steps.step' decorator, expose steps.urls.
    Add StepBuilder class.
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    Add more docs to replay.py, a bit more refactoring.
    Factor out replay/record functionality into replay.py.
    fix up tests and implementation
    Move Steps, StepRenderer to steps.py. Fixes #1173.
    Define step labels via @step decorator.
    Use StepWidget in PL upload, bulk upload.
    R10 Upload changes/fixes (#850)
    
    * add page_heading block; minor R10 template rearrangements
    * add success heading to r10 step 3
    * add R10 spreadsheet example to step 1
    * add simple test for r10 example render method
    * rm outated dev note about djdt
    * modify R10 upload intro text
    Restrict R10 Bulk Upload views and Price List Upload views based on permissions (#738)
    
    * add add_bulkuploadcontractsource to Data Administrators
    * rm custom decorator, use permission_required instead
    * move staff_login_required and associated tests to hourglass
    * extract and reuse get_permissions_from_ns_codenames
    Use URL config from bulk upload Steps.
    Make region 10 bulk upload use Steps/StepRenderer.
    Move final Bulk Upload POST and processing to step 2 view handler (#730)
    
    * move POST and processing to step 2
    Hide template content about emails when EMAIL_URL is dummy (#684)
    
    * add SEND_TRANSACTIONAL_EMAILS setting
    * use SEND_TRANSACTIONAL_EMAILS as flag to hide content about emails
    staff_login_required decorator (#662)
    
    * add, use, and test staff_login_required decorator
    Canceling data_capture flows (#629)
    
    * add `handle_cancel` decorator for canceling data_capture flows via POST request
    * update formbuttonrow to work with buttons; replace button-cancel with button-secondary
    * handle_cancel on price_list_upload views; add tests
    * factor out ajax_redirect to a method in ajaxform (#641)
    add file_mime_type to BulkUploadContractSource (#619)
    R10 POST to Step 3 (#621)
    
    only allow POST to step 3 of R10 bulk upload
    Factor out new data_capture.jobs module.
    add logging msg about queuing bulk upload
    Fix tests for bulk upload, add a few.
    Use redis + rq/django-rq for jobs.
    Oops, remove debugging code.
    Process bulk uploads in a separate thread.
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    Upload new price list for existing SubmittedPriceList (#1089)
    Change "NEW" to "UNREVIEWED" and "UNAPPROVED" to "RETIRED" (#1083)
    
    closes #1082
    Modify price list details (#1077)
    Use SubmittedPriceListRows for table; wrap error table in expandable-area (#996)
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    Move “Analyze prices” functionality behind authorization.
    Make flake8 corrections.
    Fix “no attribute ‘cleaned_data’ error”.
    wip adding form to error page
    break errors out to separate page
    Step label edits
    Rename/move analysis-related modules to make more sense.
    Add export links to download analysis.
    Factor out an analyze_gleaned_data function.
    Add 'Analyze a price list' tab in nav.
    Show PL analysis on step 3.
    Add (incomplete) price list analysis flow.
    Tweak flake8 config. Fixes #1818.
    Move Steps, StepRenderer to steps.py. Fixes #1173.
    Upload new price list for existing SubmittedPriceList (#1089)
    eslint and flake8
    reformat duplicate price list upload message so we don't need funky logic
    Fixes an error-message text format
    
    Thanks @toolness!
    Tweak flake8 config. Fixes #1818.
    Add comment, use filesizeformat filter.
    Factor out replay/record functionality into replay.py.
    Add 'exit this replay' button.
    show alert if user is in replay mode.
    Add 'Technical Support Specialists' group.
    Use postgres JSONField for storing session state.
    Add tests for replay.
    Set valid/invalid row count to 0 if no rows were found.
    Make it possible to replay attempted submissions.
    Add AttemptedPriceListSubmission model.
    add upload example to tutorial.html.
    Add tutorial page.
    add additional blank line, pep8
    remove gleaned_data only if its class differs from selection
    clear gleaned_data from session on sched selection change
    Add export links to download analysis.
    CSV and XLSX export of R10 price list analysis results (#1310)
    Fix dangling comma in labor category description (#1237)
    Move Steps, StepRenderer to steps.py. Fixes #1173.
    Define step labels via @step decorator.
    Upload new price list for existing SubmittedPriceList (#1089)
    Use StepWidget in PL upload, bulk upload.
    Change "NEW" to "UNREVIEWED" and "UNAPPROVED" to "RETIRED" (#1083)
    
    closes #1082
    Remember uploaded filename in session and store it in db.
    Pre-fill step 3 w/ fake filename if gleaned data exists.
    appease the pep8 gods
    standardize sched name and fix cancel buttons
    actually show the schedule title
    Modify price list details (#1077)
    remove print statement
    attempt to show schedule name
    change step_1 to not overwrite other step session data (#1085)
    Validate duplicate contract number in Step 1 (#985)
    
    * start duplicate contract substep
    
    * start fleshing out duplicate contract page
    
    * add simple interstitial page when contract num already exists
    
    * add path to modify view
    
    * add overflow so dl has a height
    
    * start filling out modify page
    
    * extract fields to shared place, start ModifyForm
    
    * more cleaning logic in ModifyForm
    
    * render form in template
    
    * move form to partial for ajax; instantiate instance in form
    
    * make ajaxform
    
    * update modal content
    
    * pass kwargs to reverse
    
    * add styling for .message-info
    
    * stub out more tests; make file not required; process POST
    
    * extract pl rows table to partial; add display of pl rows to modify page
    
    * [WIP] allow skip ahead on step 3 if already uploaded
    
    * show table on step 3 if data in session; add tests
    
    * simplify to just one submit button Step 3; adjust tests
    
    * skip directly to 4 if already uploaded; add anchor and header
    
    * previous goes to step 2 from step 3 errors
    
    * implement step_3_data interstitial page
    
    * fix for eslint
    
    * finish up step/3/data, including tests
    
    * doc is_file_required
    
    * better test names
    
    * docstring for get_deserialized_gleaned_data
    
    * rm modify form/page stuff
    
    * start outlining modify stuff
    
    * upload flow changes to validate dupe contract number
    
    * rm stubbed method, will implement separately
    
    * rm fields.py; amend data capture integration test
    
    * test Step1 duplicate validation
    
    * return HttpResponseBadRequest instead of raising error
    
    * address code review items
    Only force show when force==on (#1062)
    Pass along 'prev' querystring arg.
    Add explanatory comment.
    Add a Step4Form.
    add save/discard changes button below edit form in step 4.
    Add edit button on step 4 of price list upload.
    Allow skip ahead on Step 3 if price list already uploaded (#1027)
    
    * also implement step_3_data interstitial page
    Refactor SubmittedPriceList "is_approved" to new "status" field (#951)
    Add Modal Dialog for Canceling (#918)
    
    * add modal dialogs with a11y-dialog library
    * use modal dialogs for all Cancel links in Price List Upload and Region 10 Bulk Upload flows
    * handle_cancel on step_3_errors view so modal can POST cancel
    Add current_selected_tab to contexts of some templates.
    Mark functions that modify database as atomic (#853)
    Embed upload form in /data-capture/step/3/errors.
    shut up flake8
    add contract data to validate page
    add separate step for displaying rows with errors (#792)
    
    * add separate step for displaying rows with errors
    * add periods to submit-label text for consistency
    * use mixin classes for handle_cancel and gleaned_data tests
    show vendor name and contract number in step 2
    Add schedule 70 upload example table. Fixes #727.
    Restrict R10 Bulk Upload views and Price List Upload views based on permissions (#738)
    
    * add add_bulkuploadcontractsource to Data Administrators
    * rm custom decorator, use permission_required instead
    * move staff_login_required and associated tests to hourglass
    * extract and reuse get_permissions_from_ns_codenames
    Allow schedules to provide upload examples and help text.
    Display preferred schedule during fallback.
    Pass schedule into price_list.Step3Form constructor.
    Add doctests for Steps/StepRenderer.
    Use get_nested_item to access gleaned data.
    Implement Contract Officers role and protect Price List Upload views (#694)
    
    closes #686
    
    * create reusable contract_officer_perms_required decorator
    * add CO perms to Data Admin role
    * use lists for roles instead of tuples
    * use set()s for roles definitions
    * update existing tests to setup user in Contract Officers group
    * Use namespaced permissions for initgroups cmd. (#726)
    Rename StepBuilder to Steps.
    Add StepRenderer, pass it into @steps.step views.
    Make 'steps.step' decorator, expose steps.urls.
    Add StepBuilder class.
    Pre-fill previously filled-out forms. Fixes #717.
    Accept only GET or POST on steps 1-3.
    Simplify step 5.
    Remove unused code.
    Fix #705, #711, simplify price list form logic.
    Revert "remove handle_cancel decorator since none of our cancel buttons are actual buttons yet"
    
    This reverts commit a5e931db97c7920c787da70ffff9a7b231d3fe43.
    remove handle_cancel decorator since none of our cancel buttons are actual buttons yet
    fix line length
    add prev button back to upload form and fix key error in step 2
    get rid of some debugging code/comments
    clean up step2 assignment
    add missing tests
    shut up pep8
    update data_capture key
    fix tests
    step 4 tests
    step 2 tests, redeux
    write dates to string when saved in session and convert back to datetime when saving model
    Canceling data_capture flows (#629)
    
    * add `handle_cancel` decorator for canceling data_capture flows via POST request
    * update formbuttonrow to work with buttons; replace button-cancel with button-secondary
    * handle_cancel on price_list_upload views; add tests
    * factor out ajax_redirect to a method in ajaxform (#641)
    rearrange steps so that model posting happens in step 4
    check to see if user exists before creating
    add redirect to step 1 if data_capture key isn't populated in step 3
    fix upload redirect
    valid data should post in step 4, not step 5, durr
    fix pep8 errors
    bring files in line with new structure
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    move or remove old steps; stub out new steps
    messing with forms
    move ajaxform, upload python files into frontend package.
    Factor out data_capture.ajaxform.
    Factor out ajaxform_redirect() and ajaxform_render().
    Add HIDE_DEBUG_UI setting. (#527)
    add messages to step_1_form when is_ajax
    use generic error message in step 1; friendlier language
    return special ajax version of step_1_form
    Revert "reload step 1 on form validation error"
    
    This reverts commit 7f9d2d4574e6f5eafc00bba40c2d35bf35f418a4.
    reload step 1 on form validation error
    first pass at adding errors via django messages
    Remove gleaned data from user session after submission.
    Add more tests.
    add a few basic tests.
    Implement step 3.
    Attempt to guess schedule of price list if initial load fails.
    Add step 2, 'Fake Schedule' implementation.
    Implement most of step 1.
    Add a basic outline of the 4 steps of data capture.
    Ran 'manage.py startapp data_capture'.
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    first pass at loader
    Rename 'hourglass' to 'calc'. Fixes #93.
    Add plaintext fallback for {% cta %}.
    Add an {% absolute_static %} template tag for emails.
    Add HTMLemail template, use premailer to inline CSS.
    Display datetimes in emails localized to US/Eastern time (#1217)
    
    * Display datetimes in emails localized to Eastern time using new `tz_timestamp` template filter
    first pass at loader
    more pep8 fixing
    reduce line length for pep8
    use format utils for tz_timestamp
    fix example
    adjust tz_timestamp format to be more humane
    Display datetimes in emails localized to US/Eastern time (#1217)
    
    * Display datetimes in emails localized to Eastern time using new `tz_timestamp` template filter
    Replaces upload prev btns with secondary style
    update styleguide and remove old comments
    update classes on a whole boatload of pages
    update buttons to use uswds
    add label styling for price list status
    some small tweaks to make table headers consistent
    Upload new price list for existing SubmittedPriceList (#1089)
    derp merg conflict
    Change "NEW" to "UNREVIEWED" and "UNAPPROVED" to "RETIRED" (#1083)
    
    closes #1082
    fix pages that didn't have card layouts
    Modify price list details (#1077)
    Validate duplicate contract number in Step 1 (#985)
    
    * start duplicate contract substep
    
    * start fleshing out duplicate contract page
    
    * add simple interstitial page when contract num already exists
    
    * add path to modify view
    
    * add overflow so dl has a height
    
    * start filling out modify page
    
    * extract fields to shared place, start ModifyForm
    
    * more cleaning logic in ModifyForm
    
    * render form in template
    
    * move form to partial for ajax; instantiate instance in form
    
    * make ajaxform
    
    * update modal content
    
    * pass kwargs to reverse
    
    * add styling for .message-info
    
    * stub out more tests; make file not required; process POST
    
    * extract pl rows table to partial; add display of pl rows to modify page
    
    * [WIP] allow skip ahead on step 3 if already uploaded
    
    * show table on step 3 if data in session; add tests
    
    * simplify to just one submit button Step 3; adjust tests
    
    * skip directly to 4 if already uploaded; add anchor and header
    
    * previous goes to step 2 from step 3 errors
    
    * implement step_3_data interstitial page
    
    * fix for eslint
    
    * finish up step/3/data, including tests
    
    * doc is_file_required
    
    * better test names
    
    * docstring for get_deserialized_gleaned_data
    
    * rm modify form/page stuff
    
    * start outlining modify stuff
    
    * upload flow changes to validate dupe contract number
    
    * rm stubbed method, will implement separately
    
    * rm fields.py; amend data capture integration test
    
    * test Step1 duplicate validation
    
    * return HttpResponseBadRequest instead of raising error
    
    * address code review items
    check price_list_rows instead of gleaned_data.valid_rows
    Use SubmittedPriceListRows for table; wrap error table in expandable-area (#996)
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    update classes on a whole boatload of pages
    use tz_timestamp for price list and account views (#1223)
    Change "NEW" to "UNREVIEWED" and "UNAPPROVED" to "RETIRED" (#1083)
    
    closes #1082
    fix pages that didn't have card layouts
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    use tz_timestamp for price list and account views (#1223)
    Modify price list details (#1077)
    fix typo, closes #992 (#994)
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    some small tweaks to make table headers consistent
    Validate duplicate contract number in Step 1 (#985)
    
    * start duplicate contract substep
    
    * start fleshing out duplicate contract page
    
    * add simple interstitial page when contract num already exists
    
    * add path to modify view
    
    * add overflow so dl has a height
    
    * start filling out modify page
    
    * extract fields to shared place, start ModifyForm
    
    * more cleaning logic in ModifyForm
    
    * render form in template
    
    * move form to partial for ajax; instantiate instance in form
    
    * make ajaxform
    
    * update modal content
    
    * pass kwargs to reverse
    
    * add styling for .message-info
    
    * stub out more tests; make file not required; process POST
    
    * extract pl rows table to partial; add display of pl rows to modify page
    
    * [WIP] allow skip ahead on step 3 if already uploaded
    
    * show table on step 3 if data in session; add tests
    
    * simplify to just one submit button Step 3; adjust tests
    
    * skip directly to 4 if already uploaded; add anchor and header
    
    * previous goes to step 2 from step 3 errors
    
    * implement step_3_data interstitial page
    
    * fix for eslint
    
    * finish up step/3/data, including tests
    
    * doc is_file_required
    
    * better test names
    
    * docstring for get_deserialized_gleaned_data
    
    * rm modify form/page stuff
    
    * start outlining modify stuff
    
    * upload flow changes to validate dupe contract number
    
    * rm stubbed method, will implement separately
    
    * rm fields.py; amend data capture integration test
    
    * test Step1 duplicate validation
    
    * return HttpResponseBadRequest instead of raising error
    
    * address code review items
    Enforce uniqueness of user email, simplify user add form.
    Add comment, use filesizeformat filter.
    mention count of valid/invalid rows in view attempted submission.
    Make it possible to replay attempted submissions.
    Change "NEW" to "UNREVIEWED" and "UNAPPROVED" to "RETIRED" (#1083)
    
    closes #1082
    Refactor SubmittedPriceList "is_approved" to new "status" field (#951)
    Added better instructions to admin list view pages.
    Add ability to Reject price lists (#953)
    
    * remove boolean `is_approved` field
    * add new `status` field
    * update language about status on admin page
    * add reject methods, rejection email, and tests
    * add reject to list of SubmittedPriceListAdmin actions
    * Price list admin status segmentation (#954)
    Added better instructions to admin list view pages.
    Add is_muted to SubmittedPriceListRow and admin views.
    PSHCDT-87: UAA logout update
    PSHCDT-87:CALC's Session Timeout with popup
    PSHCDT-87: UAA logout update
    PSHCDT-87:CALC's Session Timeout with popup
    Adding OG and other meta tags to head (#2033)
    
    * Added OG and other meta tags to head
    * Added "capture" tag
    * Added new "striptext" simple tag
    use webpack for all js bundles; rm browserify and pals
    don't disable critical JS in safe mode.
    Rename enable_js to safe_mode.
    Implement safe mode.
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    Nixes a the
    add alt tags
    Debugged woo
    don't blow away the files inherited from the head block
    base.html url path update
    Updates tutorial structure with new card classes
    Reduced triangle padding
    Copy edits, card chunking
    
    Rewrote some text so the instructions are more accurate to the
    experience for those viewing this page, and so that it reflects the new
    motif where “Add price data” is always visible. Also broke up the
    content into individual cards.
    Cleans up html
    add upload example to tutorial.html.
    Make it look more better.
    Triangle bg
    Header moved to top
    Add tutorial page.
    Stubs out add data "tutorial" based on announcement email
    Testing authentication code
    get the final structure of the card and its footer link sorted
    Validate duplicate contract number in Step 1 (#985)
    
    * start duplicate contract substep
    
    * start fleshing out duplicate contract page
    
    * add simple interstitial page when contract num already exists
    
    * add path to modify view
    
    * add overflow so dl has a height
    
    * start filling out modify page
    
    * extract fields to shared place, start ModifyForm
    
    * more cleaning logic in ModifyForm
    
    * render form in template
    
    * move form to partial for ajax; instantiate instance in form
    
    * make ajaxform
    
    * update modal content
    
    * pass kwargs to reverse
    
    * add styling for .message-info
    
    * stub out more tests; make file not required; process POST
    
    * extract pl rows table to partial; add display of pl rows to modify page
    
    * [WIP] allow skip ahead on step 3 if already uploaded
    
    * show table on step 3 if data in session; add tests
    
    * simplify to just one submit button Step 3; adjust tests
    
    * skip directly to 4 if already uploaded; add anchor and header
    
    * previous goes to step 2 from step 3 errors
    
    * implement step_3_data interstitial page
    
    * fix for eslint
    
    * finish up step/3/data, including tests
    
    * doc is_file_required
    
    * better test names
    
    * docstring for get_deserialized_gleaned_data
    
    * rm modify form/page stuff
    
    * start outlining modify stuff
    
    * upload flow changes to validate dupe contract number
    
    * rm stubbed method, will implement separately
    
    * rm fields.py; amend data capture integration test
    
    * test Step1 duplicate validation
    
    * return HttpResponseBadRequest instead of raising error
    
    * address code review items
    tabby things
    move hed below steps
    modify Step 1 intro text (#848)
    copy edits from data upload section of writing lab review
    Add {% fieldset %] template tag. Fixes #808.
     move header back to original position; add constraint on fieldset width
    fix typo and add max-width for ps
    move help text below contract number input field.
    display side-by-side contract start and end dates
    wip button restyling
    add help text back to contract number in step 1
    rearrange steps so that model posting happens in step 4
    use the web components widget
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    move or remove old steps; stub out new steps
    messing with forms
    Add HIDE_DEBUG_UI setting. (#527)
    Add step 2, 'Fake Schedule' implementation.
    Implement most of step 1.
    Add a basic outline of the 4 steps of data capture.
    Upload new price list for existing SubmittedPriceList (#1089)
    reformat duplicate price list upload message so we don't need funky logic
    Fixes an error-message text format
    
    Thanks @toolness!
    Demotes alert bold messages from h3 to h4
    remove message-* classes
     move header back to original position; add constraint on fieldset width
    Add <alerts-widget> and use it.
    include messages in ajax'd form partial
    Adding OG and other meta tags to head (#2033)
    
    * Added OG and other meta tags to head
    * Added "capture" tag
    * Added new "striptext" simple tag
    Demotes alert bold messages from h3 to h4
    Replaces upload prev btns with secondary style
    Adds `usa-button` to buttons i missed
    Applies `usa-button` class globally
    remove sr-only class in favor of WDS built-in class; update Jest snapshots
    update data capture to use new content width styles
    reporpoise body_class tag to actually be a body class
    update buttons to use uswds
    update alerts to refer to uswds
    Add 'exit this replay' button.
    show alert if user is in replay mode.
    Use StepWidget in PL upload, bulk upload.
    wip steps mods
    add wide and narrow card bodies
    get the final structure of the card and its footer link sorted
    restructure step 2 to be more like mocks
    Add Modal Dialog for Canceling (#918)
    
    * add modal dialogs with a11y-dialog library
    * use modal dialogs for all Cancel links in Price List Upload and Region 10 Bulk Upload flows
    * handle_cancel on step_3_errors view so modal can POST cancel
    tweak nav styles to allow for tab styles in the future
    move hed below steps
    add body class and update language
    R10 Upload changes/fixes (#850)
    
    * add page_heading block; minor R10 template rearrangements
    * add success heading to r10 step 3
    * add R10 spreadsheet example to step 1
    * add simple test for r10 example render method
    * rm outated dev note about djdt
    * modify R10 upload intro text
     move header back to original position; add constraint on fieldset width
    Add StepRenderer, pass it into @steps.step views.
    Add StepBuilder class.
    add block tags for steps, closes #715
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    move or remove old steps; stub out new steps
    move errorlist css to forms.scss
    better error styles
    move all hourglass_site/static into frontend
    include messages in ajax'd form partial
    Use slim header for data capture. Fix #383.
    minor formatting
    first pass at adding errors via django messages
    include data_capture.min.css
    Fix steps widget in data_capture to not use <svg>.
    consolidate .errorlist, .helptext temporary CSS.
    Add a basic outline of the 4 steps of data capture.
    Replaces upload prev btns with secondary style
    Applies `usa-button` class globally
    update buttons to use uswds
    no dangling divs
    step 3 meh
    Allow skip ahead on Step 3 if price list already uploaded (#1027)
    
    * also implement step_3_data interstitial page
    Add Modal Dialog for Canceling (#918)
    
    * add modal dialogs with a11y-dialog library
    * use modal dialogs for all Cancel links in Price List Upload and Region 10 Bulk Upload flows
    * handle_cancel on step_3_errors view so modal can POST cancel
    removing hyphen from double check in upload form
    add formnovalidate to cancel
    make cancel buttons into real buttons
    Add some TODOs.
    no cancel button 'cause errorz
    add prev button back to upload form and fix key error in step 2
    use the web components widget
    add class to form we're targeting for validation, and fix tests
    Adding OG and other meta tags to head (#2033)
    
    * Added OG and other meta tags to head
    * Added "capture" tag
    * Added new "striptext" simple tag
    Adds `usa-button` to buttons i missed
    rename block tag for accuracy and apply it + new class name to steps
    update data capture to use new content width styles
    reporpoise body_class tag to actually be a body class
    update buttons to use uswds
    Upload new price list for existing SubmittedPriceList (#1089)
    add csrf token
    Pre-fill step 3 w/ fake filename if gleaned data exists.
    post forms
    no dangling divs
    standardize sched name and fix cancel buttons
    add wide and narrow card bodies
    step 3 meh
    Allow skip ahead on Step 3 if price list already uploaded (#1027)
    
    * also implement step_3_data interstitial page
    add body class and update language
    heading normalization
    Allow schedules to provide upload examples and help text.
    Canceling data_capture flows (#629)
    
    * add `handle_cancel` decorator for canceling data_capture flows via POST request
    * update formbuttonrow to work with buttons; replace button-cancel with button-secondary
    * handle_cancel on price_list_upload views; add tests
    * factor out ajax_redirect to a method in ajaxform (#641)
    use the web components widget
    bring files in line with new structure
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    move or remove old steps; stub out new steps
    convert step 3 form to use split date widget.
    create layout and markup for form button row (#472)
    
    - add it to existing step pages
    - add form-button-row to styleguide
    consolidate .errorlist, .helptext temporary CSS.
    remove resolved todo.
    Implement step 3.
    Add a basic outline of the 4 steps of data capture.
    Adding OG and other meta tags to head (#2033)
    
    * Added OG and other meta tags to head
    * Added "capture" tag
    * Added new "striptext" simple tag
    Replaces upload prev btns with secondary style
    rename block tag for accuracy and apply it + new class name to steps
    update data capture to use new content width styles
    reporpoise body_class tag to actually be a body class
    update buttons to use uswds
    step 5 needs a subtitle too
    step 5
    add button-outline styles; tweaks to all step pages
    Spruce up Price List Upload success page (#965)
    
    closes #653
    replacing em dash numeric character reference with character entity reference
    changing em dash to HTML entity and removing spaces around it
    copy edits from data upload section of writing lab review
    Removes no-bg alert style
    Demotes alert bold messages from h3 to h4
    Replaces upload prev btns with secondary style
    Adds `usa-button` to buttons i missed
    Applies `usa-button` class globally
    replace instances of messages- classes with usa-alert
    rename block tag for accuracy and apply it + new class name to steps
    indentation
    remove unusued content--wide classes
    update data capture to use new content width styles
    reporpoise body_class tag to actually be a body class
    remove background from step 3 error alert
    update buttons to use uswds
    red p tags in error message; upload form in new card
    fix hover state on disabled button
    add csrf token
    nest the sass so the right padding is applied on card--wide
    Pre-fill step 3 w/ fake filename if gleaned data exists.
    post forms
    remove extraneous s from pluralize
    standardize sched name and fix cancel buttons
    fix card footer width on wide layout
    add wide and narrow card bodies
    add button-outline styles; tweaks to all step pages
    Allow skip ahead on Step 3 if price list already uploaded (#1027)
    
    * also implement step_3_data interstitial page
    Additional link to #upload.
    Add Modal Dialog for Canceling (#918)
    
    * add modal dialogs with a11y-dialog library
    * use modal dialogs for all Cancel links in Price List Upload and Region 10 Bulk Upload flows
    * handle_cancel on step_3_errors view so modal can POST cancel
    Hyperlink 'try it again' to upload form. Fixes #880.
    Embed upload form in /data-capture/step/3/errors.
    add body class and update language
    fixes to buttons; error message placement and wording
    better error page styling
    add separate step for displaying rows with errors (#792)
    
    * add separate step for displaying rows with errors
    * add periods to submit-label text for consistency
    * use mixin classes for handle_cancel and gleaned_data tests
    add class to form we're targeting for validation, and fix tests
    Adding OG and other meta tags to head (#2033)
    
    * Added OG and other meta tags to head
    * Added "capture" tag
    * Added new "striptext" simple tag
    Applies `usa-button` class globally
    update data capture to use new content width styles
    update buttons to use uswds
    Add tutorial page.
    Stubs out add data "tutorial" based on announcement email
    Testing authentication code
    get the final structure of the card and its footer link sorted
    Validate duplicate contract number in Step 1 (#985)
    
    * start duplicate contract substep
    
    * start fleshing out duplicate contract page
    
    * add simple interstitial page when contract num already exists
    
    * add path to modify view
    
    * add overflow so dl has a height
    
    * start filling out modify page
    
    * extract fields to shared place, start ModifyForm
    
    * more cleaning logic in ModifyForm
    
    * render form in template
    
    * move form to partial for ajax; instantiate instance in form
    
    * make ajaxform
    
    * update modal content
    
    * pass kwargs to reverse
    
    * add styling for .message-info
    
    * stub out more tests; make file not required; process POST
    
    * extract pl rows table to partial; add display of pl rows to modify page
    
    * [WIP] allow skip ahead on step 3 if already uploaded
    
    * show table on step 3 if data in session; add tests
    
    * simplify to just one submit button Step 3; adjust tests
    
    * skip directly to 4 if already uploaded; add anchor and header
    
    * previous goes to step 2 from step 3 errors
    
    * implement step_3_data interstitial page
    
    * fix for eslint
    
    * finish up step/3/data, including tests
    
    * doc is_file_required
    
    * better test names
    
    * docstring for get_deserialized_gleaned_data
    
    * rm modify form/page stuff
    
    * start outlining modify stuff
    
    * upload flow changes to validate dupe contract number
    
    * rm stubbed method, will implement separately
    
    * rm fields.py; amend data capture integration test
    
    * test Step1 duplicate validation
    
    * return HttpResponseBadRequest instead of raising error
    
    * address code review items
    tabby things
    move hed below steps
    modify Step 1 intro text (#848)
    copy edits from data upload section of writing lab review
    Add {% fieldset %] template tag. Fixes #808.
     move header back to original position; add constraint on fieldset width
    fix typo and add max-width for ps
    move help text below contract number input field.
    display side-by-side contract start and end dates
    wip button restyling
    add help text back to contract number in step 1
    rearrange steps so that model posting happens in step 4
    use the web components widget
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    move or remove old steps; stub out new steps
    messing with forms
    Add HIDE_DEBUG_UI setting. (#527)
    Add step 2, 'Fake Schedule' implementation.
    Implement most of step 1.
    Add a basic outline of the 4 steps of data capture.
    add class to form we're targeting for validation, and fix tests
    Adding OG and other meta tags to head (#2033)
    
    * Added OG and other meta tags to head
    * Added "capture" tag
    * Added new "striptext" simple tag
    Demotes alert bold messages from h3 to h4
    Fixes step 4 previous btn
    Replaces upload prev btns with secondary style
    Adds `usa-button` to buttons i missed
    rename block tag for accuracy and apply it + new class name to steps
    update data capture to use new content width styles
    reporpoise body_class tag to actually be a body class
    update buttons to use uswds
    update alerts to refer to uswds
    show alert if user is in replay mode.
    add space between edit button and verify data rows. Closes #837
    rm nonexistent js reference in step_4.html (#1135)
    add csrf token
    post forms
    standardize sched name and fix cancel buttons
    re-add step 4 subtitle so tests pass
    Modify price list details (#1077)
    step 4
    that one more button
    add button-outline styles; tweaks to all step pages
    Un-inline script in price list upload step 4.
    Pass along 'prev' querystring arg.
    Remove expired TODO.
    Add a Step4Form.
    Make field ordering of summary vs. edit form consistent.
    add save/discard changes button below edit form in step 4.
    Change text of submit button once edit mode is activated.
    Add edit button on step 4 of price list upload.
    Allow skip ahead on Step 3 if price list already uploaded (#1027)
    
    * also implement step_3_data interstitial page
    Use <dl> more properly on Step 4 (#961)
    
    * move schedule note outside of dl, into separate row
    * rm margin from dl.contract-details
    Add Modal Dialog for Canceling (#918)
    
    * add modal dialogs with a11y-dialog library
    * use modal dialogs for all Cancel links in Price List Upload and Region 10 Bulk Upload flows
    * handle_cancel on step_3_errors view so modal can POST cancel
    add body class and update language
    tweak submit language
    use dls and dds instead of uls and spans for accessibility
    add sortable styles to price list tables
    add contract data to validate page
    copy edits from data upload section of writing lab review
    add separate step for displaying rows with errors (#792)
    
    * add separate step for displaying rows with errors
    * add periods to submit-label text for consistency
    * use mixin classes for handle_cancel and gleaned_data tests
    fix step 4 form-button-row markup
    add formnovalidate to cancel
    Display preferred schedule during fallback.
    make cancel buttons into real buttons
    Fix #705, #711, simplify price list form logic.
    Price List table row templates and styling (#660)
    
    * add methods, styling, calls for rendering price list tables
    * add monotype font family variable
    rearrange steps so that model posting happens in step 4
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    move or remove old steps; stub out new steps
    Add a basic outline of the 4 steps of data capture.
    add class to form we're targeting for validation, and fix tests
    Adding OG and other meta tags to head (#2033)
    
    * Added OG and other meta tags to head
    * Added "capture" tag
    * Added new "striptext" simple tag
    Replaces upload prev btns with secondary style
    Adds `usa-button` to buttons i missed
    Applies `usa-button` class globally
    rename block tag for accuracy and apply it + new class name to steps
    update data capture to use new content width styles
    reporpoise body_class tag to actually be a body class
    update buttons to use uswds
    add csrf token
    post forms
    fix messaging
    standardize sched name and fix cancel buttons
    move schedule and contract number to body of step 2
    attempt to show schedule name
    add wide and narrow card bodies
    get the final structure of the card and its footer link sorted
    restructure step 2 to be more like mocks
    Validate duplicate contract number in Step 1 (#985)
    
    * start duplicate contract substep
    
    * start fleshing out duplicate contract page
    
    * add simple interstitial page when contract num already exists
    
    * add path to modify view
    
    * add overflow so dl has a height
    
    * start filling out modify page
    
    * extract fields to shared place, start ModifyForm
    
    * more cleaning logic in ModifyForm
    
    * render form in template
    
    * move form to partial for ajax; instantiate instance in form
    
    * make ajaxform
    
    * update modal content
    
    * pass kwargs to reverse
    
    * add styling for .message-info
    
    * stub out more tests; make file not required; process POST
    
    * extract pl rows table to partial; add display of pl rows to modify page
    
    * [WIP] allow skip ahead on step 3 if already uploaded
    
    * show table on step 3 if data in session; add tests
    
    * simplify to just one submit button Step 3; adjust tests
    
    * skip directly to 4 if already uploaded; add anchor and header
    
    * previous goes to step 2 from step 3 errors
    
    * implement step_3_data interstitial page
    
    * fix for eslint
    
    * finish up step/3/data, including tests
    
    * doc is_file_required
    
    * better test names
    
    * docstring for get_deserialized_gleaned_data
    
    * rm modify form/page stuff
    
    * start outlining modify stuff
    
    * upload flow changes to validate dupe contract number
    
    * rm stubbed method, will implement separately
    
    * rm fields.py; amend data capture integration test
    
    * test Step1 duplicate validation
    
    * return HttpResponseBadRequest instead of raising error
    
    * address code review items
    Add Modal Dialog for Canceling (#918)
    
    * add modal dialogs with a11y-dialog library
    * use modal dialogs for all Cancel links in Price List Upload and Region 10 Bulk Upload flows
    * handle_cancel on step_3_errors view so modal can POST cancel
    escalation rate tweaks (#908)
    tweak nav styles to allow for tab styles in the future
    add body class and update language
    add contract data to validate page
    Capture and use Escalation Rate for out-year pricing (#801)
    
    Closes #770
    Add {% fieldset %] template tag. Fixes #808.
    Make date range error CSS more modular.
     move header back to original position; add constraint on fieldset width
    remove contract_year from s70 data capture
    heading normalization
    show vendor name and contract number in step 2
    Add contract year field.
    Use UswdsRadioSelect for radio btn rendering.
    labels shouldn't be ridiculously huge
    display side-by-side contract start and end dates
    display contract start and end side-by-side
    use fieldsets and legends for uniform look and behavior
    hardcode the radio inputs for now
    add formnovalidate to cancel
    style small biz radio buttons
    fix button text sizing, change cancel to link
    wip button restyling
    Canceling data_capture flows (#629)
    
    * add `handle_cancel` decorator for canceling data_capture flows via POST request
    * update formbuttonrow to work with buttons; replace button-cancel with button-secondary
    * handle_cancel on price_list_upload views; add tests
    * factor out ajax_redirect to a method in ajaxform (#641)
    rearrange steps so that model posting happens in step 4
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    move or remove old steps; stub out new steps
    remove button for now
    add bg to errors, restyle errorlists in alert tables
    improve table markup, fixes #493
    create layout and markup for form button row (#472)
    
    - add it to existing step pages
    - add form-button-row to styleguide
    style price list alert according to styleguide
    consolidate .errorlist, .helptext temporary CSS.
    Attempt to guess schedule of price list if initial load fails.
    Add step 2, 'Fake Schedule' implementation.
    Add a basic outline of the 4 steps of data capture.
    allows for schedule 736 price list upload
    Revert "Revert "remove number class from table headers""
    
    This reverts commit 85fe13d2c950b25fceb12a814c7635d311ddbf3a.
    Revert "remove number class from table headers"
    
    This reverts commit ead39a2e9555881f1269f9265e21b9048cd7f4ae.
    remove number class from table headers
    remove sr-only class in favor of WDS built-in class; update Jest snapshots
    fix if logic and bump table text size 2px
    don't show dolla sign if no value
    remove duplicate col value
    right align only prices
    Tag and release v2.1.0 (#1303)
    Apply floatformat to price column (#1289)
    NEVER MIND
    add correct aria attributes to tables
    Generate <th> by iterating through form fields
    make error cells keyboard-focusable and show tooltips on focus
    more robust tooltip/bubble placement
    html change to prevent tooltip flicker
    style info badge and modify table designs
    get very basic CSS tooltips working
    refactor table templates to be easier to modify
    Validate Unit of Issue in S70 Price List uploads (#892)
    
    * add unit_of_issue and validator to Schedule70Row
    * only validate that necessary columns exist (#893)
    * coerce unit_of_issue to 'Hour'
    Fix price cell error styling, improve minimum price message (#870)
    add price list class to tables
    Price List table row templates and styling (#660)
    
    * add methods, styling, calls for rendering price list tables
    * add monotype font family variable
    Revert "Revert "remove number class from table headers""
    
    This reverts commit 85fe13d2c950b25fceb12a814c7635d311ddbf3a.
    Revert "remove number class from table headers"
    
    This reverts commit ead39a2e9555881f1269f9265e21b9048cd7f4ae.
    remove number class from table headers
    remove sr-only class in favor of WDS built-in class; update Jest snapshots
    fix if logic and bump table text size 2px
    don't show dolla sign if no value
    remove duplicate col value
    right align only prices
    Tag and release v2.1.0 (#1303)
    Apply floatformat to price column (#1289)
    NEVER MIND
    add correct aria attributes to tables
    Generate <th> by iterating through form fields
    make error cells keyboard-focusable and show tooltips on focus
    more robust tooltip/bubble placement
    html change to prevent tooltip flicker
    style info badge and modify table designs
    get very basic CSS tooltips working
    refactor table templates to be easier to modify
    Validate Unit of Issue in S70 Price List uploads (#892)
    
    * add unit_of_issue and validator to Schedule70Row
    * only validate that necessary columns exist (#893)
    * coerce unit_of_issue to 'Hour'
    Fix price cell error styling, improve minimum price message (#870)
    add price list class to tables
    Price List table row templates and styling (#660)
    
    * add methods, styling, calls for rendering price list tables
    * add monotype font family variable
    Added new_region MAS consolidated
    Added Region 3 files
    allows for upload of 03FAC price lists
    Revert "Revert "remove number class from table headers""
    
    This reverts commit 85fe13d2c950b25fceb12a814c7635d311ddbf3a.
    Revert "remove number class from table headers"
    
    This reverts commit ead39a2e9555881f1269f9265e21b9048cd7f4ae.
    remove number class from table headers
    remove sr-only class in favor of WDS built-in class; update Jest snapshots
    fix if logic and bump table text size 2px
    don't show dolla sign if no value
    remove duplicate col value
    right align only prices
    Tag and release v2.1.0 (#1303)
    Apply floatformat to price column (#1289)
    NEVER MIND
    add correct aria attributes to tables
    Generate <th> by iterating through form fields
    make error cells keyboard-focusable and show tooltips on focus
    more robust tooltip/bubble placement
    html change to prevent tooltip flicker
    style info badge and modify table designs
    get very basic CSS tooltips working
    refactor table templates to be easier to modify
    Validate Unit of Issue in S70 Price List uploads (#892)
    
    * add unit_of_issue and validator to Schedule70Row
    * only validate that necessary columns exist (#893)
    * coerce unit_of_issue to 'Hour'
    Fix price cell error styling, improve minimum price message (#870)
    add price list class to tables
    Price List table row templates and styling (#660)
    
    * add methods, styling, calls for rendering price list tables
    * add monotype font family variable
    Added Region 3 files
    Revert "Revert "remove number class from table headers""
    
    This reverts commit 85fe13d2c950b25fceb12a814c7635d311ddbf3a.
    Revert "remove number class from table headers"
    
    This reverts commit ead39a2e9555881f1269f9265e21b9048cd7f4ae.
    remove number class from table headers
    Add export links to download analysis.
    Remove 'Analysis' column from fake schedule, r10 tables
    CSV and XLSX export of R10 price list analysis results (#1310)
    make a {% analyze_r10_row %} assignment tag.
    Show analysis column for region 10
    fix up tests and implementation
    NEVER MIND
    add correct aria attributes to tables
    Generate <th> by iterating through form fields
    make error cells keyboard-focusable and show tooltips on focus
    more robust tooltip/bubble placement
    html change to prevent tooltip flicker
    style info badge and modify table designs
    get very basic CSS tooltips working
    refactor table templates to be easier to modify
    Validate Unit of Issue in S70 Price List uploads (#892)
    
    * add unit_of_issue and validator to Schedule70Row
    * only validate that necessary columns exist (#893)
    * coerce unit_of_issue to 'Hour'
    Fix price cell error styling, improve minimum price message (#870)
    add price list class to tables
    Price List table row templates and styling (#660)
    
    * add methods, styling, calls for rendering price list tables
    * add monotype font family variable
    Revert "Revert "remove number class from table headers""
    
    This reverts commit 85fe13d2c950b25fceb12a814c7635d311ddbf3a.
    Revert "remove number class from table headers"
    
    This reverts commit ead39a2e9555881f1269f9265e21b9048cd7f4ae.
    remove number class from table headers
    remove sr-only class in favor of WDS built-in class; update Jest snapshots
    fix if logic and bump table text size 2px
    Remove 'Analysis' column from fake schedule, r10 tables
    don't show dolla sign if no value
    remove duplicate col value
    tweaks to header formatting for schedules
    Tag and release v2.1.0 (#1303)
    Apply floatformat to price column (#1289)
    NEVER MIND
    add correct aria attributes to tables
    add error tables for fake schedule
    style info badge and modify table designs
    refactor table templates to be easier to modify
    Add experimental price list analysis for fake schedules.
    Fix price cell error styling, improve minimum price message (#870)
    add price list class to tables
    Price List table row templates and styling (#660)
    
    * add methods, styling, calls for rendering price list tables
    * add monotype font family variable
    fix up tests and implementation
    R10 Upload changes/fixes (#850)
    
    * add page_heading block; minor R10 template rearrangements
    * add success heading to r10 step 3
    * add R10 spreadsheet example to step 1
    * add simple test for r10 example render method
    * rm outated dev note about djdt
    * modify R10 upload intro text
    allows for schedule 736 price list upload
    Link to S70 PPL template. Fixes #753.
    tweak copy in s70 upload example.
    Add schedule 70 upload example table. Fixes #727.
    Link to S70 PPL template. Fixes #753.
    tweak copy in s70 upload example.
    Add schedule 70 upload example table. Fixes #727.
    modified template name
    Added new_region MAS consolidated
    Changed title to 71_IIK
    Added Region 3 headings
    Added Xslx Extension
    Region 3 Issue fixes
    Added Region 3 files
    fix up tests and implementation
    R10 Upload changes/fixes (#850)
    
    * add page_heading block; minor R10 template rearrangements
    * add success heading to r10 step 3
    * add R10 spreadsheet example to step 1
    * add simple test for r10 example render method
    * rm outated dev note about djdt
    * modify R10 upload intro text
    allows for upload of 03FAC price lists
    Link to S70 PPL template. Fixes #753.
    tweak copy in s70 upload example.
    Add schedule 70 upload example table. Fixes #727.
    Changes made on validation
    Changed title to 71_IIK
    Added Region 3 headings
    Added Xslx Extension
    Region 3 Issue fixes
    Added Region 3 files
    fix up tests and implementation
    R10 Upload changes/fixes (#850)
    
    * add page_heading block; minor R10 template rearrangements
    * add success heading to r10 step 3
    * add R10 spreadsheet example to step 1
    * add simple test for r10 example render method
    * rm outated dev note about djdt
    * modify R10 upload intro text
    fix up tests and implementation
    R10 Upload changes/fixes (#850)
    
    * add page_heading block; minor R10 template rearrangements
    * add success heading to r10 step 3
    * add R10 spreadsheet example to step 1
    * add simple test for r10 example render method
    * rm outated dev note about djdt
    * modify R10 upload intro text
    Allow schedules to provide upload examples and help text.
    tighten up cards to match existing data analysis workflow
    add back secondary button styles
    Add (incomplete) price list analysis flow.
    no dangling divs
    step 3 meh
    Allow skip ahead on Step 3 if price list already uploaded (#1027)
    
    * also implement step_3_data interstitial page
    Add Modal Dialog for Canceling (#918)
    
    * add modal dialogs with a11y-dialog library
    * use modal dialogs for all Cancel links in Price List Upload and Region 10 Bulk Upload flows
    * handle_cancel on step_3_errors view so modal can POST cancel
    removing hyphen from double check in upload form
    add formnovalidate to cancel
    make cancel buttons into real buttons
    Add some TODOs.
    no cancel button 'cause errorz
    add prev button back to upload form and fix key error in step 2
    use the web components widget
    tighten up cards to match existing data analysis workflow
    add back secondary button styles
    wip adding form to error page
    break errors out to separate page
    address potential accessibility concerns
    creates table gap and de-bolds search count
    Revert "Stubs in umbrella class on tr"
    
    This reverts commit 9ba1fbd77a1b04e9b84f88a95c6f3fd4d6bf94bf.
    Stubs in umbrella class on tr
    Intro text + feeble attempt to create stacked headers
    Spells out "deviation" in th
    Repositions # column, etc
    break errors out to separate page
    Minor table header text edits
    link labor category to CALC search
    Revert "remove extraneous plus sign from dollar and percentage change"
    
    This reverts commit 88ad11441768858f71f1b16f8c531466cf1ea912.
    remove extraneous plus sign from dollar and percentage change
    add number class to percentage from avg
    back out help text
    fix std dev and add percentage distance from avg
    add/show logic as per mocks
    Error message refining
    Message formatting
    Merges buttons into a single row
    Renames style to ghost-button
    Removes a <br>
    Creates ghost buttons for downloads
    Formats download buttons
    Changes a button to a button
    Half applies one button style
    Moves step 3 intro to upper card
    Kills the empty SIN data column
    Modifies table headers to match data capture
    Fix button styling on analyze step 3.
    Add export links to download analysis.
    Show PL analysis on step 3.
    Intro text + feeble attempt to create stacked headers
    add/show logic as per mocks
    Narrows cards on steps 1 and 2
    Add (incomplete) price list analysis flow.
    get the final structure of the card and its footer link sorted
    Validate duplicate contract number in Step 1 (#985)
    
    * start duplicate contract substep
    
    * start fleshing out duplicate contract page
    
    * add simple interstitial page when contract num already exists
    
    * add path to modify view
    
    * add overflow so dl has a height
    
    * start filling out modify page
    
    * extract fields to shared place, start ModifyForm
    
    * more cleaning logic in ModifyForm
    
    * render form in template
    
    * move form to partial for ajax; instantiate instance in form
    
    * make ajaxform
    
    * update modal content
    
    * pass kwargs to reverse
    
    * add styling for .message-info
    
    * stub out more tests; make file not required; process POST
    
    * extract pl rows table to partial; add display of pl rows to modify page
    
    * [WIP] allow skip ahead on step 3 if already uploaded
    
    * show table on step 3 if data in session; add tests
    
    * simplify to just one submit button Step 3; adjust tests
    
    * skip directly to 4 if already uploaded; add anchor and header
    
    * previous goes to step 2 from step 3 errors
    
    * implement step_3_data interstitial page
    
    * fix for eslint
    
    * finish up step/3/data, including tests
    
    * doc is_file_required
    
    * better test names
    
    * docstring for get_deserialized_gleaned_data
    
    * rm modify form/page stuff
    
    * start outlining modify stuff
    
    * upload flow changes to validate dupe contract number
    
    * rm stubbed method, will implement separately
    
    * rm fields.py; amend data capture integration test
    
    * test Step1 duplicate validation
    
    * return HttpResponseBadRequest instead of raising error
    
    * address code review items
    tabby things
    move hed below steps
    modify Step 1 intro text (#848)
    copy edits from data upload section of writing lab review
    Add {% fieldset %] template tag. Fixes #808.
     move header back to original position; add constraint on fieldset width
    fix typo and add max-width for ps
    move help text below contract number input field.
    display side-by-side contract start and end dates
    wip button restyling
    add help text back to contract number in step 1
    rearrange steps so that model posting happens in step 4
    use the web components widget
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    move or remove old steps; stub out new steps
    messing with forms
    Add HIDE_DEBUG_UI setting. (#527)
    Add step 2, 'Fake Schedule' implementation.
    Implement most of step 1.
    Add a basic outline of the 4 steps of data capture.
    tighten up cards to match existing data analysis workflow
    add/show logic as per mocks
    Narrows cards on steps 1 and 2
    Makes cancel button style match data capture
    Add (incomplete) price list analysis flow.
    Upload new price list for existing SubmittedPriceList (#1089)
    add csrf token
    Pre-fill step 3 w/ fake filename if gleaned data exists.
    post forms
    no dangling divs
    standardize sched name and fix cancel buttons
    add wide and narrow card bodies
    step 3 meh
    Allow skip ahead on Step 3 if price list already uploaded (#1027)
    
    * also implement step_3_data interstitial page
    add body class and update language
    heading normalization
    Allow schedules to provide upload examples and help text.
    Canceling data_capture flows (#629)
    
    * add `handle_cancel` decorator for canceling data_capture flows via POST request
    * update formbuttonrow to work with buttons; replace button-cancel with button-secondary
    * handle_cancel on price_list_upload views; add tests
    * factor out ajax_redirect to a method in ajaxform (#641)
    use the web components widget
    bring files in line with new structure
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    move or remove old steps; stub out new steps
    convert step 3 form to use split date widget.
    create layout and markup for form button row (#472)
    
    - add it to existing step pages
    - add form-button-row to styleguide
    consolidate .errorlist, .helptext temporary CSS.
    remove resolved todo.
    Implement step 3.
    Add a basic outline of the 4 steps of data capture.
    Add support for periodic tasks and send admin approval reminder email (#655)
    
    * install rq-scheduler
    * setup docker and CF apps for rqworker container
    * add email template and method for sending approval reminder
    * use custom AppConfig that adds scheduled admin reminder email job
    * send approval reminders to all superusers who have email addresses
    * add DefaultDataCaptureApp; load app based on IS_RQ_SCHEDULER
    * Add a ScheduledJobsPanel to DjDT.
    Add doctests for Steps/StepRenderer.
    Make email.send_mail() render the template.
    add back num_bad_rows paragraph
    Fix urls and make misc copy changes, modify python file
    Updated the text of six email templates
    
    To do:
    - [ ] Get @jseppi’s review
    - [ ] Add proper weblinks
    - [ ] If it’s easy to do, split up date and time references to make
    sentences flow better. (E.g. “The price list you submitted **at** 7:15
    (EST) **on** February 20, 2017 …”
    Apply HTML template to all emails.
    Tag and release v2.1.0 (#1303)
    Update emails with Writing Lab changes (#1291)
    Send html versions of admin emails and include relevant links (#1263)
    Fix urls and make misc copy changes, modify python file
    Updated the text of six email templates
    
    To do:
    - [ ] Get @jseppi’s review
    - [ ] Add proper weblinks
    - [ ] If it’s easy to do, split up date and time references to make
    sentences flow better. (E.g. “The price list you submitted **at** 7:15
    (EST) **on** February 20, 2017 …”
    Make email CSS match mockup.
    Apply HTML template to all emails.
    Tag and release v2.1.0 (#1303)
    Update emails with Writing Lab changes (#1291)
    Add HELP_EMAIL setting; Use it in reply-to for emails (#1264)
    Send HTML email notifications with link to Price List details page (#1255)
    Fix urls and make misc copy changes, modify python file
    Updated the text of six email templates
    
    To do:
    - [ ] Get @jseppi’s review
    - [ ] Add proper weblinks
    - [ ] If it’s easy to do, split up date and time references to make
    sentences flow better. (E.g. “The price list you submitted **at** 7:15
    (EST) **on** February 20, 2017 …”
    Apply HTML template to all emails.
    Make email look more like mockup.
    Add plaintext fallback for {% cta %}.
    Add HTMLemail template, use premailer to inline CSS.
    Tag and release v2.1.0 (#1303)
    Update emails with Writing Lab changes (#1291)
    Send html versions of admin emails and include relevant links (#1263)
    Fix urls and make misc copy changes, modify python file
    Updated the text of six email templates
    
    To do:
    - [ ] Get @jseppi’s review
    - [ ] Add proper weblinks
    - [ ] If it’s easy to do, split up date and time references to make
    sentences flow better. (E.g. “The price list you submitted **at** 7:15
    (EST) **on** February 20, 2017 …”
    Apply HTML template to all emails.
    Tag and release v2.1.0 (#1303)
    Update emails with Writing Lab changes (#1291)
    Add HELP_EMAIL setting; Use it in reply-to for emails (#1264)
    Send HTML email notifications with link to Price List details page (#1255)
    Fix urls and make misc copy changes, modify python file
    Updated the text of six email templates
    
    To do:
    - [ ] Get @jseppi’s review
    - [ ] Add proper weblinks
    - [ ] If it’s easy to do, split up date and time references to make
    sentences flow better. (E.g. “The price list you submitted **at** 7:15
    (EST) **on** February 20, 2017 …”
    Apply HTML template to all emails.
    Tag and release v2.1.0 (#1303)
    Update emails with Writing Lab changes (#1291)
    Add HELP_EMAIL setting; Use it in reply-to for emails (#1264)
    Send HTML email notifications with link to Price List details page (#1255)
    Adds traceback back in temporarily
    Fix urls and make misc copy changes, modify python file
    Updated the text of six email templates
    
    To do:
    - [ ] Get @jseppi’s review
    - [ ] Add proper weblinks
    - [ ] If it’s easy to do, split up date and time references to make
    sentences flow better. (E.g. “The price list you submitted **at** 7:15
    (EST) **on** February 20, 2017 …”
    Apply HTML template to all emails.
    Tag and release v2.1.0 (#1303)
    Update emails with Writing Lab changes (#1291)
    Send html versions of admin emails and include relevant links (#1263)
    add class to form we're targeting for validation, and fix tests
    Adds `usa-button` to buttons i missed
    Applies `usa-button` class globally
    update buttons to use uswds
    fix the bulk upload styles
    Add Modal Dialog for Canceling (#918)
    
    * add modal dialogs with a11y-dialog library
    * use modal dialogs for all Cancel links in Price List Upload and Region 10 Bulk Upload flows
    * handle_cancel on step_3_errors view so modal can POST cancel
    make bulk upload buttons match single PPL upload pattern
    Move final Bulk Upload POST and processing to step 2 view handler (#730)
    
    * move POST and processing to step 2
    visual tweakst to bulk upload
    rm TODO comment
    Canceling data_capture flows (#629)
    
    * add `handle_cancel` decorator for canceling data_capture flows via POST request
    * update formbuttonrow to work with buttons; replace button-cancel with button-secondary
    * handle_cancel on price_list_upload views; add tests
    * factor out ajax_redirect to a method in ajaxform (#641)
    R10 POST to Step 3 (#621)
    
    only allow POST to step 3 of R10 bulk upload
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    Upload new price list for existing SubmittedPriceList (#1089)
    R10 Upload changes/fixes (#850)
    
    * add page_heading block; minor R10 template rearrangements
    * add success heading to r10 step 3
    * add R10 spreadsheet example to step 1
    * add simple test for r10 example render method
    * rm outated dev note about djdt
    * modify R10 upload intro text
    visual tweakst to bulk upload
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    add class to form we're targeting for validation, and fix tests
    Applies `usa-button` class globally
    update buttons to use uswds
    add separate step for displaying rows with errors (#792)
    
    * add separate step for displaying rows with errors
    * add periods to submit-label text for consistency
    * use mixin classes for handle_cancel and gleaned_data tests
    make bulk upload buttons match single PPL upload pattern
    visual tweakst to bulk upload
    Convert data-ajaxform to is=ajax-form.
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    remove old title tags no longer used
    Use StepWidget in PL upload, bulk upload.
    fix the bulk upload styles
    R10 Upload changes/fixes (#850)
    
    * add page_heading block; minor R10 template rearrangements
    * add success heading to r10 step 3
    * add R10 spreadsheet example to step 1
    * add simple test for r10 example render method
    * rm outated dev note about djdt
    * modify R10 upload intro text
    Make region 10 bulk upload use Steps/StepRenderer.
    visual tweakst to bulk upload
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    R10 Upload changes/fixes (#850)
    
    * add page_heading block; minor R10 template rearrangements
    * add success heading to r10 step 3
    * add R10 spreadsheet example to step 1
    * add simple test for r10 example render method
    * rm outated dev note about djdt
    * modify R10 upload intro text
    Hide template content about emails when EMAIL_URL is dummy (#684)
    
    * add SEND_TRANSACTIONAL_EMAILS setting
    * use SEND_TRANSACTIONAL_EMAILS as flag to hide content about emails
    Process bulk uploads in a separate thread.
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    add class to form we're targeting for validation, and fix tests
    Applies `usa-button` class globally
    update buttons to use uswds
    Upload new price list for existing SubmittedPriceList (#1089)
    add separate step for displaying rows with errors (#792)
    
    * add separate step for displaying rows with errors
    * add periods to submit-label text for consistency
    * use mixin classes for handle_cancel and gleaned_data tests
    make bulk upload buttons match single PPL upload pattern
    visual tweakst to bulk upload
    Convert data-ajaxform to is=ajax-form.
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    Removes no-bg alert style
    Demotes alert bold messages from h3 to h4
    Adds `usa-button` to buttons i missed
    Applies `usa-button` class globally
    replace instances of messages- classes with usa-alert
    update buttons to use uswds
    Upload new price list for existing SubmittedPriceList (#1089)
    fix hover state on disabled button
    add csrf token
    nest the sass so the right padding is applied on card--wide
    Pre-fill step 3 w/ fake filename if gleaned data exists.
    post forms
    remove extraneous s from pluralize
    standardize sched name and fix cancel buttons
    fix card footer width on wide layout
    add wide and narrow card bodies
    add button-outline styles; tweaks to all step pages
    Allow skip ahead on Step 3 if price list already uploaded (#1027)
    
    * also implement step_3_data interstitial page
    Additional link to #upload.
    Add Modal Dialog for Canceling (#918)
    
    * add modal dialogs with a11y-dialog library
    * use modal dialogs for all Cancel links in Price List Upload and Region 10 Bulk Upload flows
    * handle_cancel on step_3_errors view so modal can POST cancel
    Hyperlink 'try it again' to upload form. Fixes #880.
    Embed upload form in /data-capture/step/3/errors.
    add body class and update language
    fixes to buttons; error message placement and wording
    better error page styling
    add separate step for displaying rows with errors (#792)
    
    * add separate step for displaying rows with errors
    * add periods to submit-label text for consistency
    * use mixin classes for handle_cancel and gleaned_data tests
    Upload new price list for existing SubmittedPriceList (#1089)
    add class to form we're targeting for validation, and fix tests
    Adds `usa-button` to buttons i missed
    update buttons to use uswds
    Upload new price list for existing SubmittedPriceList (#1089)
    remove old title tags no longer used
    get rid of card--half-padding; it's a title hack
    rename block tag for accuracy and apply it + new class name to steps
    reporpoise body_class tag to actually be a body class
    Upload new price list for existing SubmittedPriceList (#1089)
    Add plaintext fallback for {% cta %}.
    Add HTMLemail template, use premailer to inline CSS.
    Swaps in png logo for svg
    Specifies height for svg logo
    
    For better compatibility
    Adds black logo for email, etc
    Make email CSS match mockup.
    Resized logo and replaced png with sized version, for crispness
    Remove 'powered by HTMLemail'.
    Apply HTML template to all emails.
    Resize email CALC logo for retina displays.
    Add CALC logo to email, make cta wide.
    Make email look more like mockup.
    comment out default preheader text
    Add email.scss.
    Add HTMLemail template, use premailer to inline CSS.
    Replace sendtestemail cmd w/ send_test_html_email.
    Add 'manage.py initgroups' command.
    first pass at loader
    Process bulk uploads in batches of 5000 contracts. Possibly fixes #1712.
    Process bulk uploads in batches of 5000 contracts. Possibly fixes #1712.
    Rename 'hourglass' to 'calc'. Fixes #93.
    Replace sendtestemail cmd w/ send_test_html_email.
    Add 'manage.py initgroups' command.
    first pass at loader
    Fix urls and make misc copy changes, modify python file
    move example email metadata into emails.py
    Fix flake8 error
    Refactor send_example_emails.py to be more data-driven
    Make email.send_mail() render the template.
    Tag and release v2.1.0 (#1303)
    Update emails with Writing Lab changes (#1291)
    Send html versions of admin emails and include relevant links (#1263)
    version upgrade patch
    added error
    added error
    added exception
    removed blank lines
    removed blank lines
    added exception
    added exception for group
    added logging
    added logs
    Move “Analyze prices” functionality behind authorization.
    Allow Data Admins to edit ScheduleMetadatas.
    Rename 'hourglass' to 'calc'. Fixes #93.
    Add 'Technical Support Specialists' group.
    Change "NEW" to "UNREVIEWED" and "UNAPPROVED" to "RETIRED" (#1083)
    
    closes #1082
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    Add ability to Reject price lists (#953)
    
    * remove boolean `is_approved` field
    * add new `status` field
    * update language about status on admin page
    * add reject methods, rejection email, and tests
    * add reject to list of SubmittedPriceListAdmin actions
    * Price list admin status segmentation (#954)
    Mark functions that modify database as atomic (#853)
    Minor changes to the Authentication and Authorization section of the README (#856)
    
    * minor changes to the Authentication and Authorization section
    * add note to update readme when roles are modified
    Restrict R10 Bulk Upload views and Price List Upload views based on permissions (#738)
    
    * add add_bulkuploadcontractsource to Data Administrators
    * rm custom decorator, use permission_required instead
    * move staff_login_required and associated tests to hourglass
    * extract and reuse get_permissions_from_ns_codenames
    Implement Contract Officers role and protect Price List Upload views (#694)
    
    closes #686
    
    * create reusable contract_officer_perms_required decorator
    * add CO perms to Data Admin role
    * use lists for roles instead of tuples
    * use set()s for roles definitions
    * update existing tests to setup user in Contract Officers group
    * Use namespaced permissions for initgroups cmd. (#726)
    Add a test for initgroups command.
    Add 'manage.py initgroups' command.
    updated node version
    Updated Node Version
    upgraded gulp4 version
    Region 3 Implementation
    Add NLTK's Averaged Perceptron Tagger .pickle file to repository instead of downloading it on every build, and make changes to build files and to price analysis reflecting those changes.
    run yarn tests sequentially
    back out attempt to get around circle timeouts
    up no_output_timeout for circle
    remove front end cache from CircleCI config to prevent strange behavior; switch to frozen lockfile
    remove cache and freeze lockfile
    #2032: Updated gulp & minimatch to resolve Snyk warnings (#2044)
    
    * Updated gulpfile for Gulp 4.0
    
    * Changed circle config to use gulp4
    
    * Updated gulpfile to get js tasks to build
    
    * Post conflict cleanup
    On circle, install nltk data in user dir, not /usr/share.
    Rename 'hourglass' to 'calc'. Fixes #93.
    rm staging tier of deployments
    Log chrome and chromedriver versions.
    Obliterate all references to phantomjs.
    Once again attempt to run selenium tests. Sigh.
    Use chrome on circleci, maybe.
    omfg re-ignore selenium tests (see #330)
    use node >= 6.13
    Use `yarn` instead of `npm run` everywhere
    
    We switched to `yarn` a while back but didn't update various docs and tooling to use it in place of `npm` or `npm run`.
    
    Closes #1541.
    Maybe fix circle.
    Use TypeScript's checkJs functionality on whitelisted files.
    Attempt to run Selenium tests on CircleCI.
    Remove sauce references from .circleci/config.yml.
    run prod test job every night
    initial workflow setup
    combine jest and python coverage reporting
    
    - upgrade jest and snapshots
    - add coverage/ to ignore-dotfiles
    - add jest config to package.json
    upgrade to redis 3.2 service
    Add fallback ports for Django live test server.
    rm extraneous -- in yarn cmd
    use 3-branch deploy system
    fix prod deploy section in circle config
    
    - use double square brackets to enable use of =~ operator
    - use DEPLOY_ENV=prod for prod deploy
    migrate to CircleCI
    
    - raise real Exception in test_selenium
    - remove debug print statement in styleguide tests
    - comment out WebDriver/Sauce test stuff because no time to get it working right now
    - upgrade to python 3.6.2
    removed initgroups
    removed zero down time as it causes build failure
    reverting changes
    updated zero-down-time
    update circle script and deploy docs
    add missing echo
    only call `cf scale` when app exists
    remove -- from yarn command
    fix typo
    
    and hopefully kick stalled Circle build
    deploy worker and scheduler apps from CI
    migrate to CircleCI
    
    - raise real Exception in test_selenium
    - remove debug print statement in styleguide tests
    - comment out WebDriver/Sauce test stuff because no time to get it working right now
    - upgrade to python 3.6.2
    added just log files (*.log) to gitignore, and dummy file in logs dir so it gets created on a pull
    Add an --origin option to production_tests.
    Add an --origin option to production_tests.
    Rename cloudfront_tests to production_tests.
    Add test_oauth2_redirect_uri_has_correct_domain.
    Add cloudfront_tests package.
    rm API_HOST, WHITELISTED_IPS, and assoc code
    save api_url to reduce num of requests
    factor out get_api_url method
    add test to ensure accept header is passed
    Make test_static_files_have_long_expiry work w/ whitenoise 3.3.0.
    Document production_tests in deploy.md.
    Rename cloudfront_tests to production_tests.
    get rid of test_app_is_fronted_by_cloudfront.
    Add test_oauth2_redirect_uri_has_correct_domain.
    Add expiry, ajaxform tests to cloudfront_tests.
    Add cloudfront_tests package.
    Rename cloudfront_tests to production_tests.
    Add cloudfront_tests package.
    first pass at loader
    Rename 'hourglass' to 'calc'. Fixes #93.
    Ran 'autopep8 -i -r .' on code.
    
    These are only whitespace changes, and they don't even fix all the
    whitespace issues raised by flake8.
    Add ENABLE_SEO_INDEXING setting. Fixes #299.
    Updated version
    Updated version
    bump changelog for v3.2.2
    Release v3.2.1.
    Release v3.2.0.
    bump changelog version
    Release v3.0.1.
    Release v3.0.0.
    Release v2.10.0.
    Release v2.9.1.
    Release v2.9.0.
    Rename 'hourglass' to 'calc'. Fixes #93.
    Release v2.8.6.
    Release v2.8.5
    Release v2.8.4
    Release v2.8.3.
    Release v2.8.2.
    
    - update changelog and bump version to 2.8.2
    Release v2.8.1.
    Release v2.8.0
    Release v2.7.2.
    Release v2.7.1
    Release v2.7.0
    Release v2.7.0
    Release v2.6.0
    Release v2.5.1.
    normalize to postgres 9.4.7
    [WIP] adding postgres version to healthcheck
    Release v2.5.0
    Release v2.4.0
    Release v2.3.0.
    Release v2.2.0
    Tag and release v2.1.0 (#1303)
    Release v2.1.0.
    Release v2.0.0.
    Add hourglass.__version__ and tests for changelog.
    Rename 'hourglass' to 'calc'. Fixes #93.
    Add DEBUG_HTTPS setting.
    Add DEBUG_HTTPS setting.
    More mypy typings; make mypy defaults less strict.
    Add some mypy typings.
    Add canonical URL test to /healthcheck.
    Move absolute URL utils to hourglass.site_utils.
    Added new_region MAS consolidated
    added defualt schema
    PSHCDT-87: UAA logout update
    PSHCDT-87: UAA logout update
    PSHCDT-87:CALC's Session Timeout updated
    PSHCDT-87:CALC's Session Timeout updated
    PSHCDT-87:CALC's Session Timeout updated
    PSHCDT-87:CALC's Session Timeout update for account
    PSHCDT-87:CALC's Session Timeout update for account
    PSHCDT-87:CALC's Session Timeout update for account
    PSHCDT-87:CALC's Session Timeout with popup updated
    PSHCDT-87:CALC's Session Timeout with popup update
    PSHCDT-87:CALC's Session Timeout with popup update
    PSHCDT-87:CALC's Session Timeout with popup
    PSHCDT-87:CALC's Session Timeout
    PSHCDT-87:CALC's Session Timeout
    PSHCDT-87:CALC's Session Timeout
    PSHCDT-87: UAA logout update
    PSHCDT-87: UAA logout update
    PSHCDT-87:CALC's Session Timeout updated
    PSHCDT-87:CALC's Session Timeout updated
    PSHCDT-87:CALC's Session Timeout updated
    PSHCDT-87:CALC's Session Timeout update for account
    PSHCDT-87:CALC's Session Timeout update for account
    PSHCDT-87:CALC's Session Timeout update for account
    PSHCDT-87:CALC's Session Timeout with popup updated
    PSHCDT-87:CALC's Session Timeout with popup update
    PSHCDT-87:CALC's Session Timeout with popup update
    PSHCDT-87:CALC's Session Timeout with popup
    PSHCDT-87:CALC's Session Timeout
    PSHCDT-87:CALC's Session Timeout
    PSHCDT-87:CALC's Session Timeout
    Added Region 3 files
    Use correct filename for schedule.
    Remove price analysis line from Schedule 736 upload branch.
    allows for schedule 736 price list upload
    allows for upload of 03FAC price lists
    Adding OG and other meta tags to head (#2033)
    
    * Added OG and other meta tags to head
    * Added "capture" tag
    * Added new "striptext" simple tag
    Add ModelAdmin for ScheduleMetadata.
    Add sample users.
    missed a space
    fix line lengths
    Rename 'hourglass' to 'calc'. Fixes #93.
    add GITHUB_BASE_URL to settings.py and use it
    Disable DJDT for fullpage styleguide examples.
    rm API_HOST, WHITELISTED_IPS, and assoc code
    upgrade dj-email-url; rm EMAIL_USE_TLS setting
    
    The latest version (0.1.0) of dj-email-url will automatically set EMAIL_USE_TLS to True when the given EMAIL_URL starts with the "submission:" protocol (instead of "smtp:")
    add EMAIL_USE_TLS to settings
    Fix mypy errors.
    Update search index on model save.
    Mostly migrate off djorm_ext_pgfulltext.
    upgrade to redis 3.2 service
    Upgrade to Django 1.11, use uswds_forms.
    expire auth cookie on browser session end
    
    fixes #1584
    restrict CORS to /api/ routes
    
    and only allow read-only methods (GET and OPTIONS)
    Add UaaRefreshMiddleware.
    start adding additional logging
    
    - add logging in staff_login_required decorator
    - add log handling for uaa_client
    upgrade to postgres 9.5.4
    Add unit test for DEBUG_HTTPS.
    Add DEBUG_HTTPS setting.
    Add DEBUG_HTTPS setting.
    normalize to postgres 9.4.7
    Add Slack integration.
    List finders in settings.py. Fixes #1452.
    Enable django.contrib.admindocs in DEBUG mode.
    Show dev banner in DEBUG, link to styleguide/docs.
    Add private DEFAULT_DEBUG_EMAIL_URL env var.
    Allow NON_PROD_INSTANCE_NAME to contain HTML.
    Add <link rel='canonical'> to all pages.
    Use doggone sites framework when sending emails, yo.
    Auto-generate sphinx docs in gulp, mount at /docs/.
    remove ethnio stuff (#1316)
    Use cg-django-uaa for cloud.gov UAA auth.
    Add banner to show non-prod message (#1302)
    Tag and release v2.1.0 (#1303)
    Show analysis column for region 10
    Add HELP_EMAIL setting; Use it in reply-to for emails (#1264)
    Send 'Cache-Control: max-age=0' by default
    Re-add django.contrib.admin.
    
    This basically reverts 4ba0a978c8f46c6e19f45b766e14bebf86fa11cd. I thought
    I had done that before but apparently not.
    Add experimental mypy integration.
    use django's built-in settings for email from addresses (#1211)
    Use the X-Forwarded-Host header. (#1187)
    Add frontend/crotchety.py to simulate production static file storage.
    GovCloud deployment migration (#1091)
    
    * Migrate cloud.gov deployments to the GovCloud environment.
    * Setup a staging deployment (closes #950, closes #904)
    * Add CI deploys to calc-dev (closes #1037)
    make ethnio id configurable by env var (#1047)
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    remove grappelli
    set up admin basics for grappelli
    Init New Relic agent in wsgi.py (#906)
    
    * update newrelic
    * use new attributes.exclude instead of deprecated capture_params
    * init New Relic agent in wsgi.py instead of using run-command
    * default `load_cups_from_vcap_services` to `'calc-dev'`
    get GA_TRACKING_ID from env, add context_processor for it (#855)
    Rename enable_js to safe_mode.
    Use a separate redis DB for tests. (#709)
    Hide template content about emails when EMAIL_URL is dummy (#684)
    
    * add SEND_TRANSACTIONAL_EMAILS setting
    * use SEND_TRANSACTIONAL_EMAILS as flag to hide content about emails
    Add a Documentation DjDT panel.
    Disable DjDT profiling panel by default.
    Add support for periodic tasks and send admin approval reminder email (#655)
    
    * install rq-scheduler
    * setup docker and CF apps for rqworker container
    * add email template and method for sending approval reminder
    * use custom AppConfig that adds scheduled admin reminder email job
    * send approval reminders to all superusers who have email addresses
    * add DefaultDataCaptureApp; load app based on IS_RQ_SCHEDULER
    * Add a ScheduledJobsPanel to DjDT.
    Send email to submitter when Price List is un/approved by admin (#640)
    
    * create email template subdirectory
    * add email module for holding all email-sending logic; separate bulk upload emails
    * add EmailResult class
    * add SYSTEM_EMAIL_ADDRESS setting
    Implement safe mode.
    Raise exception if EMAIL_URL isn't defined in production.
    load REDIS_URL into env from VCAP_SERVICES (#613)
    Add logging config for rq.worker.
    Document REDIS_URL, set default in DEBUG mode.
    Use redis + rq/django-rq for jobs.
    Fix staging deploy (#598)
    
    * change the way we set email config vars to prevent KeyError
    * update runtime to latest 3.4.x on cloud.gov
    * auto-generated migration for date fields in SubmittedPriceList
    * add cf-ssh.yml to ignore files
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    Add dj-email-url, sendtestemail command.
    Use django.template.context_processors.
    
    Resolves the following warning:
    
      RemovedInDjango110Warning: django.core.context_processors is
      deprecated in favor of django.template.context_processors
    Define settings.TEMPLATES.
    move djdt middleware to end of stack (#559)
    explicitly set djdt panels and add profiling panel (#552)
    Add HIDE_DEBUG_UI setting. (#527)
    rename hourglass_site to data_explorer
    move all hourglass_site/static into frontend
    add messages to step_1_form when is_ajax
    Add support for django debug toolbar.
    July 2016 Hourly Prices Update (#444)
    
    * add hourly prices from July 2016 export
    * rm django admin, upgrade to latest 1.7 release
    * add overflow-wrap to filters spans
    add settings.DATA_CAPTURE_SCHEDULES.
    Add a basic outline of the 4 steps of data capture.
    start meta app and ultratest command
    set csrf cookie to have HttpOnly flag, fixes #384
    only add security-related headers to error responses (#375)
    
    * use a setting to enable security headers on error responses only
    * rm djangosecure from middleware and requirements.txt
    Add super simple styleguide at /styleguide/.
    js and sass/css pipeline with gulp (#367)
    
    * add gulp for building sass and js with sourcemaps
    * setup container for running gulp during development
    * rm built static files from the repo
    * update README with gulp information
    * modify travis to run gulp build
    * remove ruby sass stuff
    * specify and install node version in travis
    * add new static_source vendor paths to CodeClimate ignore list
    expect WHITELISTED_IPS to be a comma-separated string (#366)
    
    instead of a python-like list that gets eval'd. fixes #365.
    More compliant security (#360)
    
    * Add FORCE_DISABLE_SECURE_SSL_REDIRECT setting.
    * Use secure cookies when in production/https.
    * Enable SecurityMiddleware settings for nosniff, X-XSS-Protection.
    * Add compliance tests for 404s.
    Add FORCE_DISABLE_SECURE_SSL_REDIRECT setting.
    Add support for cloud.gov UAA authentication. (#317)
    
    * Add fake_uaa_provider app.
    * Add uaa_client app.
    * Add login link in footer, admin and logout links in header.
    * replace admin login w/ UAA login.
    * Document how to create staff users.
    Appease pep8/codeclimate.
    Only use whitenoise compressed stuff in production. Fixes #213.
    fix pep8/flake8 problems
    Use python-dotenv and .env file. Fixes #319.
    Add ENABLE_SEO_INDEXING setting. Fixes #299.
    Add support for cloudfoundry CUPS. Fixes #306.
    Don't use globals() when looking up SECRET_KEY.
    Take SECRET_KEY from environment. Fixes #280.
    Fix docker check in settings.py.
    Switch to py.test (#278)
    
    * use `py.test` for running tests
    * remove `nose` since it is no longer used
    Upgrade to whitenoise 3.2.
    Ignore local_settings.py when running in docker.
    Updated CF manifest, forcing https, deploy instructions
    use existing way of updating export link
    adding api host into export link
    default API_HOST = "/api/"
    set debug to false by default
    switch to api.data.gov
    cloudfoundry files and settings updates
    Fix model_mommy object generation, add Nose
    
    - Ensure tests are independent by generating a new recipe for each test
    - Add nose as django test runner to allow more fine-grained test runs
    Issue #27: Speed up load_data command
    
    - Configure logging in settings.py
    - Log DEBUG and higher to file
    - Log WARN and higher to console
    updated DRF to v3, fixes #13
    add hourglass_site, template dirs, static root
    added pagination and q search parameter
    added basic api endpoint, updated loader to work with new sheet from Kelly
    first pass at loader
    Rename 'hourglass' to 'calc'. Fixes #93.
    Tweak flake8 config. Fixes #1818.
    add GITHUB_BASE_URL to settings.py and use it
    link gh issues and prs to calc repo
    Run mypy on all files. Fixes #1803.
    unwhackify github release heading. fixes #1306.
    Make /updates/ friendlier to non-developers.
    Expose changelog view at /updates/.
    Document release process and add associated tooling (#1215)
    Rename 'hourglass' to 'calc'. Fixes #93.
    normalize to postgres 9.4.7
    [WIP] adding postgres version to healthcheck
    Add hourglass.__version__ and tests for changelog.
    first pass at loader
    Add test_sample_users.py.
    Add sample users.
    Rename 'hourglass' to 'calc'. Fixes #93.
    Run mypy on all files. Fixes #1803.
    Add docs/monitoring.md. Fixes #1518.
    Make /healthcheck/ always return 200. Fixes #1516.
    use dict-splatting syntax
    normalize to postgres 9.4.7
    [WIP] adding postgres version to healthcheck
    Add canonical URL test to /healthcheck.
    Report version number in /healthcheck.
    Fix flake8 error. (#634)
    Add /healthcheck endpoint.
    Rename 'hourglass' to 'calc'. Fixes #93.
    Factor out hourglass.wsgi_middleware, add tests.
    added exception for group
    changed logging
    added logging
    added logs
    reverted permissions
    indentation fix
    changed query
    Final view refactoring
    Use bleach for HTML sanitization.
    Show dupe examples.
    Document API 'sort' field better. Fixes #1889.
    Rename 'hourglass' to 'calc'. Fixes #93.
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    Rename 'hourglass' to 'calc'. Fixes #93.
    rm API_HOST, WHITELISTED_IPS, and assoc code
    pytest is also an alias for py.test
    use redis32 for vcap service name
    enable mypy disallow_untyped_calls, disallow_untyped_defs.
    Annotate return values.
    Add experimental mypy integration.
    GovCloud deployment migration (#1091)
    
    * Migrate cloud.gov deployments to the GovCloud environment.
    * Setup a staging deployment (closes #950, closes #904)
    * Add CI deploys to calc-dev (closes #1037)
    Init New Relic agent in wsgi.py (#906)
    
    * update newrelic
    * use new attributes.exclude instead of deprecated capture_params
    * init New Relic agent in wsgi.py instead of using run-command
    * default `load_cups_from_vcap_services` to `'calc-dev'`
    Use a separate redis DB for tests. (#709)
    load REDIS_URL into env from VCAP_SERVICES (#613)
    expect WHITELISTED_IPS to be a comma-separated string (#366)
    
    instead of a python-like list that gets eval'd. fixes #365.
    Fix pep8 issues.
    Add support for cloudfoundry CUPS. Fixes #306.
    Adding OG and other meta tags to head (#2033)
    
    * Added OG and other meta tags to head
    * Added "capture" tag
    * Added new "striptext" simple tag
    Add sample users.
    Rename 'hourglass' to 'calc'. Fixes #93.
    rm API_HOST, WHITELISTED_IPS, and assoc code
    Allow NON_PROD_INSTANCE_NAME to contain HTML.
    Add canonical URL test to /healthcheck.
    Add <link rel='canonical'> to all pages.
    remove ethnio stuff (#1316)
    Add banner to show non-prod message (#1302)
    Tag and release v2.1.0 (#1303)
    Add HELP_EMAIL setting; Use it in reply-to for emails (#1264)
    make ethnio id configurable by env var (#1047)
    get GA_TRACKING_ID from env, add context_processor for it (#855)
    Rename enable_js to safe_mode.
    Implement safe mode.
    Region 10 Bulk Upload (#555)
    
    Implements functionality for admin (`is_staff=True`) users to upload Region 10 data exports as Excel spreadsheets.
    
    * create base template for data_capture pages
    * make slim header the default, closes #557
    * add and enable context processor for show_debug_ui
    * make sub-folders for bulk_upload and price_list code
    * add BulkUploadContractSource for bulk data import provenance
    * refactor `load_data` code into `Region10Loader` class
    * adds tests for all the new R10 bulk upload functionality
    Ran 'autopep8 -i -r .' on code.
    
    These are only whitespace changes, and they don't even fix all the
    whitespace issues raised by flake8.
    switch to api.data.gov
    PSHCDT-87: UAA logout update
    PSHCDT-87:CALC's Session Timeout updated
    PSHCDT-87:CALC's Session Timeout with popup
    PSHCDT-87: UAA logout update
    PSHCDT-87:CALC's Session Timeout updated
    PSHCDT-87:CALC's Session Timeout with popup
    Add detail pages for data quality report metrics.
    Add /data-quality-report/ view.
    Add sample users.
    Rename 'hourglass' to 'calc'. Fixes #93.
    Upgrade to cg-django-uaa 1.3.0. Fixes #1648.
    Resolve RemovedInDjango110Warnings in hourglass.urls.
    Enable django.contrib.admindocs in DEBUG mode.
    Serve docs from /docs/ instead of /static/docs/.
    Auto-generate sphinx docs in gulp, mount at /docs/.
    Use cg-django-uaa for cloud.gov UAA auth.
    Tag and release v2.1.0 (#1303)
    add link to /updates/ in footer (#1271)
    Expose changelog view at /updates/.
    Add nonce-based CSP to index page only.
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    remove grappelli
    set up admin basics for grappelli
    Add current_selected_tab to contexts of some templates.
    Rename enable_js to safe_mode.
    Restrict R10 Bulk Upload views and Price List Upload views based on permissions (#738)
    
    * add add_bulkuploadcontractsource to Data Administrators
    * rm custom decorator, use permission_required instead
    * move staff_login_required and associated tests to hourglass
    * extract and reuse get_permissions_from_ns_codenames
    Add a Documentation DjDT panel.
    Never show django login (#674)
    
    * use staff_login_required decorator to protect admin login
    * add tests to make sure admin login is protected
    * ignore hourglass/tests.py in bandit
    Implement safe mode.
    Add /healthcheck endpoint.
    Always expose /styleguide/.
    Make qunit tests, styleguide visible on DEBUG only.
    Get rid of django.conf.urls.patterns().
    Add ajax form examples to styleguide.
    Add support for django debug toolbar.
    July 2016 Hourly Prices Update (#444)
    
    * add hourly prices from July 2016 export
    * rm django admin, upgrade to latest 1.7 release
    * add overflow-wrap to filters spans
    Add a basic outline of the 4 steps of data capture.
    PEP 8 line length fix to urls.py
    Add super simple styleguide at /styleguide/.
    Add support for cloud.gov UAA authentication. (#317)
    
    * Add fake_uaa_provider app.
    * Add uaa_client app.
    * Add login link in footer, admin and logout links in header.
    * replace admin login w/ UAA login.
    * Document how to create staff users.
    use preferred url import syntax, fixes #318; pep8 (#323)
    Add ENABLE_SEO_INDEXING setting. Fixes #299.
    dangling Hourglass refs, update manifest, README hourglass refs
    name the views, add about view
    add basic unit tests for hourglass.js
    add index.html -> /
    added basic api endpoint, updated loader to work with new sheet from Kelly
    first pass at loader
    PSHCDT-87:CALC's Session Timeout updated
    PSHCDT-87:CALC's Session Timeout updated
    PSHCDT-87:CALC's Session Timeout updated
    PSHCDT-87:CALC's Session Timeout update for account
    PSHCDT-87:CALC's Session Timeout update for account
    PSHCDT-87:CALC's Session Timeout update for account
    PSHCDT-87:CALC's Session Timeout update for account
    PSHCDT-87:CALC's Session Timeout update for account
    PSHCDT-87:CALC's Session Timeout update for account
    PSHCDT-87:CALC's Session Timeout update for account
    PSHCDT-87:CALC's Session Timeout updated
    PSHCDT-87:CALC's Session Timeout updated
    PSHCDT-87:CALC's Session Timeout updated
    PSHCDT-87:CALC's Session Timeout update for account
    PSHCDT-87:CALC's Session Timeout update for account
    PSHCDT-87:CALC's Session Timeout update for account
    PSHCDT-87:CALC's Session Timeout update for account
    PSHCDT-87:CALC's Session Timeout update for account
    PSHCDT-87:CALC's Session Timeout update for account
    PSHCDT-87:CALC's Session Timeout update for account
    Rename 'hourglass' to 'calc'. Fixes #93.
    Disable DJDT for fullpage styleguide examples.
    Add 'Cache-Control: no-cache' for /admin/ routes. Fixes #1590.
    Add HIDE_DEBUG_UI setting. (#527)
    Add support for django debug toolbar.
    Ran 'autopep8 -i -r .' on code.
    
    These are only whitespace changes, and they don't even fix all the
    whitespace issues raised by flake8.
    only add security-related headers to error responses (#375)
    
    * use a setting to enable security headers on error responses only
    * rm djangosecure from middleware and requirements.txt
    Removed new Relic From Application
    Removed new Relic From Application
    Rename 'hourglass' to 'calc'. Fixes #93.
    Factor out hourglass.wsgi_middleware, add tests.
    Serve docs from /docs/ instead of /static/docs/.
    Init New Relic agent in wsgi.py (#906)
    
    * update newrelic
    * use new attributes.exclude instead of deprecated capture_params
    * init New Relic agent in wsgi.py instead of using run-command
    * default `load_cups_from_vcap_services` to `'calc-dev'`
    js and sass/css pipeline with gulp (#367)
    
    * add gulp for building sass and js with sourcemaps
    * setup container for running gulp during development
    * rm built static files from the repo
    * update README with gulp information
    * modify travis to run gulp build
    * remove ruby sass stuff
    * specify and install node version in travis
    * add new static_source vendor paths to CodeClimate ignore list
    Upgrade to whitenoise 3.2.
    switch to api.data.gov
    cloudfoundry files and settings updates
    first pass at loader
    Rename 'hourglass' to 'calc'. Fixes #93.
    Account for Location header changes in Django 1.9.
    Include UaaBackend in tests.
    Modify price list details (#1077)
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    Rename 'hourglass' to 'calc'. Fixes #93.
    Customize DRF API HTML to link header to /api/docs/.
    rm API_HOST, WHITELISTED_IPS, and assoc code
    Upgrade to cg-django-uaa 1.3.0. Fixes #1648.
    use redis32 for vcap service name
    Add 'Cache-Control: no-cache' for /admin/ routes. Fixes #1590.
    Make /healthcheck/ always return 200. Fixes #1516.
    use dict-splatting syntax
    only test pg version down to minor number
    normalize to postgres 9.4.7
    [WIP] adding postgres version to healthcheck
    Account for Location header changes in Django 1.9.
    Add canonical URL test to /healthcheck.
    Eliminate spurious pytest warning. Fixes #1377.
    Upgrade python packages (#1324)
    remove ethnio stuff (#1316)
    Add banner to show non-prod message (#1302)
    Tag and release v2.1.0 (#1303)
    Add HELP_EMAIL setting; Use it in reply-to for emails (#1264)
    Send 'Cache-Control: max-age=0' by default
    Report version number in /healthcheck.
    GovCloud deployment migration (#1091)
    
    * Migrate cloud.gov deployments to the GovCloud environment.
    * Setup a staging deployment (closes #950, closes #904)
    * Add CI deploys to calc-dev (closes #1037)
    make ethnio id configurable by env var (#1047)
    Skip GA_TRACKING_ID test if defined in env.
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    get GA_TRACKING_ID from env, add context_processor for it (#855)
    Restrict R10 Bulk Upload views and Price List Upload views based on permissions (#738)
    
    * add add_bulkuploadcontractsource to Data Administrators
    * rm custom decorator, use permission_required instead
    * move staff_login_required and associated tests to hourglass
    * extract and reuse get_permissions_from_ns_codenames
    Use a separate redis DB for tests. (#709)
    Never show django login (#674)
    
    * use staff_login_required decorator to protect admin login
    * add tests to make sure admin login is protected
    * ignore hourglass/tests.py in bandit
    Add /healthcheck endpoint.
    load REDIS_URL into env from VCAP_SERVICES (#613)
    Ran 'autopep8 -i -r .' on code.
    
    These are only whitespace changes, and they don't even fix all the
    whitespace issues raised by flake8.
    only add security-related headers to error responses (#375)
    
    * use a setting to enable security headers on error responses only
    * rm djangosecure from middleware and requirements.txt
    expect WHITELISTED_IPS to be a comma-separated string (#366)
    
    instead of a python-like list that gets eval'd. fixes #365.
    More compliant security (#360)
    
    * Add FORCE_DISABLE_SECURE_SSL_REDIRECT setting.
    * Use secure cookies when in production/https.
    * Enable SecurityMiddleware settings for nosniff, X-XSS-Protection.
    * Add compliance tests for 404s.
    Add ENABLE_SEO_INDEXING setting. Fixes #299.
    Fix pep8 issues.
    Add support for cloudfoundry CUPS. Fixes #306.
    Rename 'hourglass' to 'calc'. Fixes #93.
    Factor out hourglass.wsgi_middleware, add tests.
    Rename 'hourglass' to 'calc'. Fixes #93.
    Add unit test for DEBUG_HTTPS.
    Move absolute URL utils to hourglass.site_utils.
    Add test_sample_users.py.
    Rename 'hourglass' to 'calc'. Fixes #93.
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    first pass at loader
    Corrected Test.
    Corrected Test.
    Rename 'hourglass' to 'calc'. Fixes #93.
    rm postgres and node docs test
    use docker-compose for all referenced commands
    Fix broken test.
    use node >= 6.13
    set python patch version in Dockerfile
    Specify Python at minor version instead of patch
    upgrade to python 3.6.4
    
    3.6.2 is no longer supported on cloud.gov
    migrate to CircleCI
    
    - raise real Exception in test_selenium
    - remove debug print statement in styleguide tests
    - comment out WebDriver/Sauce test stuff because no time to get it working right now
    - upgrade to python 3.6.2
    Mention postgres version in setup.md, test against it.
    normalize to postgres 9.4.7
    Add test to ensure python and node versions in docs match config.
    update version tests to check for 3.6.0
    Upgrade to Python 3.5.2.
    Use yaml.safe_load instead of yaml.load.
    Rename test_environment.py to test_configuration.py.
    Ensure all config files use same python version.
    Commented test
    formatting
    commented import
    Commented test
    Changed Test
    Rename 'hourglass' to 'calc'. Fixes #93.
    Tweak flake8 config. Fixes #1818.
    add GITHUB_BASE_URL to settings.py and use it
    link gh issues and prs to calc repo
    minor release.md tweeks and test fix
    
    - add more descriptive PR names for releases to staging and production
    - fix changelog release test to allow release dates that are also on the same
      day as the previous one
    unwhackify github release heading. fixes #1306.
    Make /updates/ friendlier to non-developers.
    Expose changelog view at /updates/.
    Document release process and add associated tooling (#1215)
    Use semantic_version instead of packaging.
    Add hourglass.__version__ and tests for changelog.
    Adding OG and other meta tags to head (#2033)
    
    * Added OG and other meta tags to head
    * Added "capture" tag
    * Added new "striptext" simple tag
    Rename 'hourglass' to 'calc'. Fixes #93.
    update classes on a whole boatload of pages
    copy change in changelog.html
    Make /updates/ friendlier to non-developers.
    Expose changelog view at /updates/.
    Rename 'hourglass' to 'calc'. Fixes #93.
    Customize DRF API HTML to link header to /api/docs/.
    PSHCDT-87: UAA logout update
    PSHCDT-87: UAA logout update
    PSHCDT-87:CALC's Session Timeout updated
    PSHCDT-87:CALC's Session Timeout update for account
    PSHCDT-87:CALC's Session Timeout update for account
    PSHCDT-87:CALC's Session Timeout with popup
    PSHCDT-87: UAA logout update
    PSHCDT-87: UAA logout update
    PSHCDT-87:CALC's Session Timeout updated
    PSHCDT-87:CALC's Session Timeout update for account
    PSHCDT-87:CALC's Session Timeout update for account
    PSHCDT-87:CALC's Session Timeout with popup
    PSHCDT-87:CALC's Session Timeout updated
    PSHCDT-87:CALC's Session Timeout updated
    Rename 'hourglass' to 'calc'. Fixes #93.
    update classes on a whole boatload of pages
    Use cg-django-uaa for cloud.gov UAA auth.
    cardify the oauth2_error template (#1185)
    Add support for cloud.gov UAA authentication. (#317)
    
    * Add fake_uaa_provider app.
    * Add uaa_client app.
    * Add login link in footer, admin and logout links in header.
    * replace admin login w/ UAA login.
    * Document how to create staff users.
    Rename 'hourglass' to 'calc'. Fixes #93.
    User Account and Submitted Price List Views (#927)
    
    * Adds `user_account` app and page.
    * Adds user `SubmittedPriceList` list view.
    * Adds detail view for `SubmittedPriceLists` objects.
    * Replaces `status` with `status_changed_by_email` in Admin site `SubmittedPriceList` lists, closes #984
    pacify james
    derp, make that license info
    add source reference to templates
    rename admin-overrides; style errors like error alerts
    style secondary nav
    custom admin base template
    add template overrides for admin base
    wrap Region 10 Upload link in perms check
    add R10 upload link to admin; change admin header title (#617)
    
    * add R10 upload link to admin; change admin header title
    * prefer user email over username in welcome msg
    Rename 'hourglass' to 'calc'. Fixes #93.
    Fix admin user search. Fixes #1726.
    fix inline forms in a few places
    pacify james
    derp, make that license info
    add source reference to templates
    add search bar template override
    colon
    language tweaks
    Rename 'hourglass' to 'calc'. Fixes #93.
    add alert box to explain sites module
    pacify james
    derp, make that license info
    add source reference to templates
    add new index template
    PSHCDT-87: UAA logout update
    PSHCDT-87:CALC's Session Timeout with popup
    PSHCDT-87: UAA logout update
    PSHCDT-87:CALC's Session Timeout with popup
    Moved main.css into head_meta so it's easier to remember to use it everywhere
    Adding OG and other meta tags to head (#2033)
    
    * Added OG and other meta tags to head
    * Added "capture" tag
    * Added new "striptext" simple tag
    Drops monospace font link into new _head.html
    Adds roboto mono embed link
    Rename 'hourglass' to 'calc'. Fixes #93.
    fix incorrectly applied card classes
    update classes on a whole boatload of pages
    Site admin nav style now matches other sections
    Roughs in nav that sticks to card edge
    Use absolute template paths in admin base template.
    use webpack for all js bundles; rm browserify and pals
    Remove reference to nonexistent ie.css in admin template.
    create new common js bundle and put usermenu there
    Show dev banner in DEBUG, link to styleguide/docs.
    use plain JS; make new admin bundle; include usermenu js
    Add banner to show non-prod message (#1302)
    add new font to admin base & adust nav padding
    update site admin and factor out footer
    include link to lato
    pacify james
    derp, make that license info
    add source reference to templates
    lost the min
    styling and markup to add sidebar with columns, rather than absolute positioning and bg images
    move admin css to sass source folder; update paths in templates
    rename admin-overrides; style errors like error alerts
    style secondary nav
    custom admin base template
    add template overrides for admin base
    Rename 'hourglass' to 'calc'. Fixes #93.
    fix inline forms in a few places
    pacify james
    derp, make that license info
    add source reference to templates
    styling and markup to add sidebar with columns, rather than absolute positioning and bg images
    move admin css to sass source folder; update paths in templates
    add new changelist template
    add simple static app for showing a maintenance page (#832)
    GovCloud deployment migration (#1091)
    
    * Migrate cloud.gov deployments to the GovCloud environment.
    * Setup a staging deployment (closes #950, closes #904)
    * Add CI deploys to calc-dev (closes #1037)
    add simple static app for showing a maintenance page (#832)
    add simple static app for showing a maintenance page (#832)
    add simple static app for showing a maintenance page (#832)
    first pass at loader
    Added tests for slackbot.bot.
    Add tests for sendtestslack command.
    Add Slack integration.
    Add Slack integration.
    Rename 'hourglass' to 'calc'. Fixes #93.
    More mypy typings; make mypy defaults less strict.
    Add Slack integration.
    Rename 'hourglass' to 'calc'. Fixes #93.
    Tweak flake8 config. Fixes #1818.
    Add some mypy typings.
    Added tests for slackbot.bot.
    Add Slack integration.
    Add Slack integration.
    first pass at loader
    Add Slack integration.
    first pass at loader
    Rename 'hourglass' to 'calc'. Fixes #93.
    More mypy typings; make mypy defaults less strict.
    Add Slack integration.
    Add Slack integration.
    first pass at loader
